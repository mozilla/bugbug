{"status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "blacklotus60@hotmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/jpeg", "id": 8662623}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-30T21:29:19Z", "type_id": 748, "creation_date": "2015-09-28T23:15:01Z", "id": 1261362, "setter": "jmuizelaar@mozilla.com"}], "content_type": "text/plain", "id": 8667005}, {"creator": "u285178@disabled.tld", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "application/pdf", "id": 8669414}, {"creator": "u285178@disabled.tld", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "application/pdf", "id": 8669416}, {"creator": "u285178@disabled.tld", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8669952}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8670416}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-10-13T22:11:20Z", "type_id": 748, "creation_date": "2015-10-08T17:59:34Z", "id": 1268515, "setter": "jmuizelaar@mozilla.com"}], "content_type": "text/plain", "id": 8671492}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-10-14T20:30:59Z", "type_id": 748, "creation_date": "2015-10-14T20:30:59Z", "id": 1272401, "setter": "lsalzman@mozilla.com"}], "content_type": "text/plain", "id": 8673870}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-10-20T19:21:53Z", "type_id": 748, "creation_date": "2015-10-20T19:21:53Z", "id": 1276116, "setter": "lsalzman@mozilla.com"}], "content_type": "text/plain", "id": 8676427}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-10-21T16:49:21Z", "type_id": 748, "creation_date": "2015-10-21T16:49:21Z", "id": 1276919, "setter": "lsalzman@mozilla.com"}, {"status": "+", "name": "checkin", "modification_date": "2015-10-21T16:54:50Z", "type_id": 41, "creation_date": "2015-10-21T16:49:49Z", "id": 1276921, "setter": "ryanvm@gmail.com"}], "content_type": "text/plain", "id": 8676952}, {"creator": "lsalzman@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-10-22T00:30:14Z", "type_id": 748, "creation_date": "2015-10-22T00:30:14Z", "id": 1277290, "setter": "lsalzman@mozilla.com"}], "content_type": "text/plain", "id": 8677170}], "classification": "Client Software", "creator": "blacklotus60@hotmail.com", "cc": ["bdahl@mozilla.com", "blacklotus60@hotmail.com", "cbook@mozilla.com", "epinal99-bugzilla2@yahoo.fr", "jmuizelaar@mozilla.com", "kwierso@gmail.com", "lsalzman@mozilla.com", "milan@mozilla.com", "u285178@disabled.tld"], "depends_on": [], "creation_time": "2015-09-17T21:10:46Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["regression"], "summary": "PDF.js doesn't print barcode labels in PDF", "cf_last_resolved": "2015-10-22T09:48:48Z", "assigned_to_detail": {"email": "lsalzman@mozilla.com", "id": 536714, "name": "lsalzman@mozilla.com", "real_name": "Lee Salzman [:lsalzman]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "lsalzman@mozilla.com", "comment_count": 56, "comments": [{"text": "Created attachment 8662623\nIMG_1479_edit.jpg\n\nUser Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0\nBuild ID: 20150826023504\n\nSteps to reproduce:\n\nI create a FedEx shipping label on eBay, open in in PDF.js and print it.\n\n\nActual results:\n\nThe label prints fine but the barcodes in the label do not print at all\n\n\nExpected results:\n\nThe barcaodes should print on the label fine", "author": "blacklotus60@hotmail.com", "id": 10744764, "time": "2015-09-17T21:10:46Z"}, {"text": "We need the PDF file, we can't fix without that.", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10747681, "time": "2015-09-18T14:13:22Z"}, {"text": "Sorry, was out of town and just returned.  Just a question, if I add it to attachments wont the public have access to it ?", "author": "blacklotus60@hotmail.com", "id": 10766842, "time": "2015-09-23T16:23:23Z"}, {"text": "Yes, it's public, but you can email the PDF to devs.", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10766869, "time": "2015-09-23T16:27:27Z"}, {"text": "okay, what address should I sent it to ?", "author": "blacklotus60@hotmail.com", "id": 10766874, "time": "2015-09-23T16:28:39Z"}, {"text": "You can send it to Brendan (above) and me (I'll search for a possible regression). Right click on names to have the email address.", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10766913, "time": "2015-09-23T16:38:07Z"}, {"text": "Just sent the email.", "author": "blacklotus60@hotmail.com", "id": 10766963, "time": "2015-09-23T16:44:27Z"}, {"text": "Indeed, the barcodes are missing on the print output (I tested with MS XPS Document Writer).", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10767014, "time": "2015-09-23T16:50:48Z"}, {"text": "I tried with several utilities, the only one that doesnt print the label is firefox", "author": "blacklotus60@hotmail.com", "id": 10767145, "time": "2015-09-23T17:20:21Z"}, {"text": "so are you saying the problem is with the PDF or something else like Fedex label generation ?", "author": "blacklotus60@hotmail.com", "id": 10767166, "time": "2015-09-23T17:24:36Z"}, {"text": "It regressed with bug 811002:\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=2f2a45f04e7c&tochange=ef3f5669b53e", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10767184, "time": "2015-09-23T17:27:11Z"}, {"text": "Is this specific to Windows 10?  Also, is there a publicly accessible PDF that shows this problem?", "author": "milan@mozilla.com", "id": 10767725, "time": "2015-09-23T19:14:03Z"}, {"text": "I tested on Win 7, so no. And AFAIK, bug 811002 was about Windows and Linux too.\nI forwarded you the PDF.", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10767739, "time": "2015-09-23T19:17:43Z"}, {"text": "So after spending a lot of time inspecting the PDF and the printing code, I discovered both the cause and the solution(s).\n\nThe PDF in question contains a rotation inside of it around the barcodes, and the Cairo Win32 printing backend we use seems broken in several places.\n\nI have proof of concept fixes I have been working on locally that make the PDF print fine. I will rework them into a more official fix over the next week.", "author": "lsalzman@mozilla.com", "id": 10779415, "time": "2015-09-26T03:30:46Z"}, {"text": "Great to hear!", "author": "blacklotus60@hotmail.com", "id": 10779422, "time": "2015-09-26T03:58:33Z"}, {"text": "(In reply to Lee Salzman [:eihrul] from comment #13)\n> The PDF in question contains a rotation inside of it around the barcodes,\n> and the Cairo Win32 printing backend we use seems broken in several places.\n\n\nIndeed, when I ran Mozregression, I printed the PDF with the virtual printer PDF Creator and for the 1st bad build (and currently FF41), it was printed in landscape (with the barcodes) instead of portrait like the original PDF.\nWith MS Document Writer, the portrait format is honored, but the barcodes are missing ont the print output.", "author": "epinal99-bugzilla2@yahoo.fr", "id": 10779618, "time": "2015-09-26T09:54:26Z"}, {"text": "Created attachment 8667005\nfix rotated strokes and images in Cairo Win32 printing surfaces\n\nThis patch fixes issues discovered with Win32 printing surfaces in Cairo if a rotation transform is used.\n\nFirstly, strokes were being double-transformed. Originally a GDI transform was used to transform the stroke, but later in an attempt to better preserve precision, Cairo changed to transform the path before it was supplied to GDI. At the same time, it neglected to fully revert the now unneeded GDI transform for strokes. So, this patch does that.\n\nSecond, regarding images not showing up when rotated - after some hunting, I found other reports that StretchDIBits may be buggy on many printing devices (such as even the Microsoft XPS writer) if you supply it with a rotation transform. However, StretchDIBits seems to perform fine with scaling or mirroring, which it supports explicitly via its interface even if no transform is used.\n\nPDF only allows rotations in 90 degree increments. So, I just attack 90 degree and 270 degree rotation transforms, and leave 180 degree transforms alone since those only mirror axes, but don't swap them. To correct for the axis swap, I just swap the X and Y axes of the image itself before rendering it out, so that the only thing that the underlying transform is doing anymore is scaling or mirroring the image. Thus, StretchDIBits becomes happy again because it is only performing operations it is advertised to support.\n\nWith these changes, the Microsoft XPS writer and Adobe PDF exporter are happy. We probably want to also check on a couple printers just to be sure, as each printer driver is a unique snowfloke.", "author": "lsalzman@mozilla.com", "id": 10786169, "time": "2015-09-28T23:15:01Z"}, {"text": "Some confirmation:\n\nTried printing on an HP Officejet 6812, and it was affected by the image rotation issue, but not the stroke rotation issue. The patch fixed the issue there.\n\nMicrosoft XPS writer was affected by both the stroke and image rotation issues, and the patch fixed both.\n\nAdobe PDF writer seemed unaffected by either issue, and the patch did not regress that behavior, so it continued to work.", "author": "lsalzman@mozilla.com", "id": 10786275, "time": "2015-09-28T23:47:44Z"}, {"text": "Try build: https://treeherder.mozilla.org/#/jobs?repo=try&revision=8e3820bcbe95", "author": "lsalzman@mozilla.com", "id": 10789212, "time": "2015-09-29T15:50:10Z"}, {"text": "(In reply to Lee Salzman [:eihrul] from comment #18)\n> Try build:\n> https://treeherder.mozilla.org/#/jobs?repo=try&revision=8e3820bcbe95\n\nOn my Windows 7 the barcode prints with this try run, both in XPS and on a \"random\" printer.", "author": "milan@mozilla.com", "id": 10789331, "time": "2015-09-29T16:11:26Z"}, {"text": "I filed an upstream bug report at freedesktop.org. Here's the link:\nhttps://bugs.freedesktop.org/show_bug.cgi?id=92202", "author": "lsalzman@mozilla.com", "id": 10795408, "time": "2015-09-30T17:31:29Z"}, {"text": "Comment on attachment 8667005\nfix rotated strokes and images in Cairo Win32 printing surfaces\n\nReview of attachment 8667005:\n-----------------------------------------------------------------\n\n::: gfx/cairo/cairo/src/cairo-win32-printing-surface.c\n@@ +670,5 @@\n> +    assert (status == CAIRO_STATUS_SUCCESS);\n> +    cairo_matrix_multiply (&m, &m, &surface->ctm);\n> +    cairo_matrix_multiply (&m, &m, &surface->gdi_ctm);\n> +    /* Check if matrix can't be represented as only scaling or mirroring.\n> +     * Some printing devices don't support rotation with StretchDIBits.\n\nIs there a citation for this?", "author": "jmuizelaar@mozilla.com", "id": 10796694, "time": "2015-09-30T21:29:19Z"}, {"text": "(In reply to Jeff Muizelaar [:jrmuizel] from comment #21)\n> Comment on attachment 8667005\n> fix rotated strokes and images in Cairo Win32 printing surfaces\n> \n> Review of attachment 8667005:\n> -----------------------------------------------------------------\n> \n> ::: gfx/cairo/cairo/src/cairo-win32-printing-surface.c\n> @@ +670,5 @@\n> > +    assert (status == CAIRO_STATUS_SUCCESS);\n> > +    cairo_matrix_multiply (&m, &m, &surface->ctm);\n> > +    cairo_matrix_multiply (&m, &m, &surface->gdi_ctm);\n> > +    /* Check if matrix can't be represented as only scaling or mirroring.\n> > +     * Some printing devices don't support rotation with StretchDIBits.\n> \n> Is there a citation for this?\n\nThe initial hint I got by looking at reduced versions of the test case I made and checking for differences - finding the PDF rotate command. So at least, that was what caused me to search for any known bugs regarding this in the first place.\n\nAfter searching, I found this forum post where a programmer had contacted Microsoft and verified there were bugs regarding blitting functions and rotation transforms: https://groups.google.com/forum/#!topic/microsoft.public.win32.programmer.gdi/QGwUXTd5sm4\n\nAnd of course, after sufficient testing, we have also our own evidence to support this conclusion and the the fix.", "author": "lsalzman@mozilla.com", "id": 10796741, "time": "2015-09-30T21:38:31Z"}, {"text": "Just a quick update, dunno if the fix was rolled out in the release of the new firefox but I tried another label today and it still has the same issue with the barcodes not printing.", "author": "blacklotus60@hotmail.com", "id": 10805113, "time": "2015-10-03T03:57:15Z"}, {"text": "(In reply to blacklotus60 from comment #23)\n> Just a quick update, dunno if the fix was rolled out in the release of the\n> new firefox but I tried another label today and it still has the same issue\n> with the barcodes not printing.\n\nThe fix wouldn't be in the release yet. It has to go through the release staging process - first aurora, then beta, then release. So, it can take a couple months in the worst case for it to get to the release. I only just flagged it for checkin, and it hasn't been checked in to the incoming source code tree yet... so this could take a while. So once it finally makes its way into aurora or beta builds, just using those if you find them stable enough may be a solution.", "author": "lsalzman@mozilla.com", "id": 10805336, "time": "2015-10-03T11:02:39Z"}, {"text": "> PDF only allows rotations in 90 degree increments.\n\nPDF allows any rotation. The cairo drawing model is based on the PDF drawing model. I'll attach a PDF of a 45 degree rotation that you can test with.\n\n> +    rotated = fabs (m.xx) < fabs (m.xy) || fabs (m.yy) < fabs (m.yx);\n\nWhich means this will have to be changed to:\n  rotated = fabs (m.xx) == 0 && fabs (m.yy) == 0 && (m.xy * m.yx < 0);\n\nI did some testing with the XPS writer and an image with different rotations. I can reproduce the problem. Your patch (with my correction) fixes this issue for multiples of 90 degrees but not for other rotations. I checked the XPS output when printing from Adobe Reader and they rotate the image before output to the XPS writer. For non 90 degree rotations the image is padded and clipped.\n\nI also checked the printing surface output (without your patch) with both a display DC and with a PostScript printer and it worked correctly. So there is unlikely to be anything wrong with the way cairo is using StretchDIBits. There is nothing in the StretchDIBits documentation that says it won't work with rotations. I mostly used the PostScipt output for testing when I wrote the cairo win printing surface. I don't think I ever tested with the XPS Writer. I didn't think anyone actually used it.\n\nThe XPS format allows the same image transformations as cairo. There is an example of rotated images on page 176 of ECMA-388. So this is clearly a bug in the XPS writer.\n\nI also noticed that StretchDIBits is returning an error status for rotated images on the XPS Writer. I plan to implement in cairo a more general version of this workaround for broken printer drivers that will check if StretchDIBits fails, transform the image (including handling non 90 degree rotations), and try again.", "author": "u285178@disabled.tld", "id": 10806142, "time": "2015-10-04T12:08:00Z"}, {"text": "Created attachment 8669414\nimage-rotate-45.pdf\n\nExample of 45 degree rotation in PDF.", "author": "u285178@disabled.tld", "id": 10806143, "time": "2015-10-04T12:09:18Z"}, {"text": "(In reply to Lee Salzman [:eihrul] from comment #16)\n> Firstly, strokes were being double-transformed. Originally a GDI transform\n> was used to transform the stroke, but later in an attempt to better preserve\n> precision, Cairo changed to transform the path before it was supplied to\n> GDI. At the same time, it neglected to fully revert the now unneeded GDI\n> transform for strokes. So, this patch does that.\n\nI didn't understand the issue you are having with strokes. Do you have a test case I can try?\n\nThe reason for transforming the GDI to user space (stroke_ctm) before stroking is because the stroking parameters (width, dash lengths) are in user space. If the user space transform is anything other than a uniform scale, just scaling the stroke parameters will not produce the correct result. I'll attach an PDF containing an example of stroking in a non uniform scale.\n\nYour patch breaks stroking for non uniform scales.", "author": "u285178@disabled.tld", "id": 10806147, "time": "2015-10-04T12:24:34Z"}, {"text": "Created attachment 8669416\nstroke.pdf\n\nExample of strokes in non uniform space.\n\nThe stroke on the left was created in cairo by first scaling user space by (1,2) then creating a circle path and stroking it. The circle has become an ellipse in the no uniform scale. The stroking pen has also be distorted into an ellipse resulting in a non uniform stoke width.\n\nThe stroke in the right was created in cairo by first scaling user space by (1,2) then creating a circle path. The scale was restored to identity before stroking it. As a result the circular path has become an ellipse while the circular pen has retained its shape.", "author": "u285178@disabled.tld", "id": 10806151, "time": "2015-10-04T12:29:23Z"}, {"text": "I tested the XPS writer with my stroke example. XPS Writer does not handle the stroke transform correctly. The first stroke always has a constant width. I tried both with your patch and without it. With your patch the stroke width is the same as the widest stroke in the correct output. Without your patch the stroke width is the same as the narrowest stroke in the correct output.\n\nThe XPS format can handle non uniform stroke transforms. I discovered this when I opened the XPS output of the stroke example in 7zip, opened the page description, and noticed a matrix called \"RenderTransform\" with the values 1,0,0,1,x,y. I changed it to 1,0,0,2,x,y, saved it, and opened it in the XPS viewer. A non uniform stroke width was displayed.", "author": "u285178@disabled.tld", "id": 10806156, "time": "2015-10-04T12:40:02Z"}, {"text": "(In reply to Adrian Johnson from comment #25)\n> > PDF only allows rotations in 90 degree increments.\n> \n> PDF allows any rotation. The cairo drawing model is based on the PDF drawing\n> model. I'll attach a PDF of a 45 degree rotation that you can test with.\n> \n> > +    rotated = fabs (m.xx) < fabs (m.xy) || fabs (m.yy) < fabs (m.yx);\n> \n> Which means this will have to be changed to:\n>   rotated = fabs (m.xx) == 0 && fabs (m.yy) == 0 && (m.xy * m.yx < 0);\n> \n> I did some testing with the XPS writer and an image with different\n> rotations. I can reproduce the problem. Your patch (with my correction)\n> fixes this issue for multiples of 90 degrees but not for other rotations. I\n> checked the XPS output when printing from Adobe Reader and they rotate the\n> image before output to the XPS writer. For non 90 degree rotations the image\n> is padded and clipped.\n> \n> I also checked the printing surface output (without your patch) with both a\n> display DC and with a PostScript printer and it worked correctly. So there\n> is unlikely to be anything wrong with the way cairo is using StretchDIBits.\n> There is nothing in the StretchDIBits documentation that says it won't work\n> with rotations. I mostly used the PostScipt output for testing when I wrote\n> the cairo win printing surface. I don't think I ever tested with the XPS\n> Writer. I didn't think anyone actually used it.\n> \n> The XPS format allows the same image transformations as cairo. There is an\n> example of rotated images on page 176 of ECMA-388. So this is clearly a bug\n> in the XPS writer.\n> \n> I also noticed that StretchDIBits is returning an error status for rotated\n> images on the XPS Writer. I plan to implement in cairo a more general\n> version of this workaround for broken printer drivers that will check if\n> StretchDIBits fails, transform the image (including handling non 90 degree\n> rotations), and try again.\n\nThe check suggest above will have problems with some transforms that are nearly-but-not-quite-zero due to slight epsilon errors in the transforms. So comparison against zero is not advised here and why I went with a more general check that will certainly catch those cases, even if it is only going to hit 90 degree cases. Since the 90 degree cases are what is vexing our users, that is what I am concerned with and trying to address.\n\nThe other cases are going to be broken on some printer drivers anyway, so not worth worrying about, but are nevertheless passed through in such a way that if the printer driver can handle these non-90 degree transforms if it is able to still produce the correct output we expect. But in the wild, 90 degree transforms are what we are seeing, here for business purposes, so it is important to us that these work, rather than get hung up too much on trying to get a perfect fix for this while users are being affected.\n\nAs far as the PDF spec stated when I verified, the Rotate command only works with 90 degree increments. \n\nAs far as StretchDIBits, regardless of what any documentation says, the implementation is variable and clearly buggy on many drivers, and has been independently reported by other people using it in other software, with even an admission from Microsoft they have bugs in their own software.\n\nI will look into addressing the non-uniformity issue, however, the stroke setup as it currently stands still is leading to issues and needs to be fixed, regardless.", "author": "lsalzman@mozilla.com", "id": 10806267, "time": "2015-10-04T16:13:24Z"}, {"text": "(In reply to Adrian Johnson from comment #27)\n> (In reply to Lee Salzman [:eihrul] from comment #16)\n> > Firstly, strokes were being double-transformed. Originally a GDI transform\n> > was used to transform the stroke, but later in an attempt to better preserve\n> > precision, Cairo changed to transform the path before it was supplied to\n> > GDI. At the same time, it neglected to fully revert the now unneeded GDI\n> > transform for strokes. So, this patch does that.\n> \n> I didn't understand the issue you are having with strokes. Do you have a\n> test case I can try?\n> \n> The reason for transforming the GDI to user space (stroke_ctm) before\n> stroking is because the stroking parameters (width, dash lengths) are in\n> user space. If the user space transform is anything other than a uniform\n> scale, just scaling the stroke parameters will not produce the correct\n> result. I'll attach an PDF containing an example of stroking in a non\n> uniform scale.\n> \n> Your patch breaks stroking for non uniform scales.\n\nThe test case here contains private details from the reporter, so I don't think you'd have to consult the bug reporter to get a copy of it.\n\nBut because the path was already transformed, the axis swaps/mirrors that are contained in the transform that is left by the time we get to StrokePath needs to be factored out as well, with what we want only being the transformed relative scales, I presume. Either way, XPS writer was choking on it. So the simplest test case to construct here would be to pass in a 90 degree rotation to stroke with a solid pattern. I think that would reproduce the issue. Either way, I'm working on writing up a fix for this.", "author": "lsalzman@mozilla.com", "id": 10809456, "time": "2015-10-05T18:33:19Z"}, {"text": "Created attachment 8669952\nstroke-fix.diff\n\nI can reproduce the problem with a 90 degree transformed stroke output to XPS. This patch should fix the issue.", "author": "u285178@disabled.tld", "id": 10810298, "time": "2015-10-05T21:29:35Z"}, {"text": "(In reply to Adrian Johnson from comment #32)\n> Created attachment 8669952\n> stroke-fix.diff\n> \n> I can reproduce the problem with a 90 degree transformed stroke output to\n> XPS. This patch should fix the issue.\n\nThis would still leave the problem that if you have a non-uniform scale, and a rotation, that the path is already transformed by CTM on its original inputting to Cairo, and again inside _cairo_win32_printing_surface_emit_path possibly. So, if you leave the rotation active in the matrix you're supplying to GDI to evaluate widths, it is going to evaluate the widths as if the path was not rotated.\n\nSo for something like a 90 degree transform with a (2, 1) scale, the widths on each axis would be incorrectly swapped, no?\n\nAnd then we have the other gremlin in the room that sometimes has_ctm may be false, but has_gdi_ctm may be true... in which case there's still a transform left active that the printer driver might fail to honor.\n\nHow to solve those issues?", "author": "lsalzman@mozilla.com", "id": 10810534, "time": "2015-10-05T22:28:08Z"}, {"text": "(In reply to Lee Salzman [:eihrul] from comment #33)\n> (In reply to Adrian Johnson from comment #32)\n> > Created attachment 8669952\n> > stroke-fix.diff\n> > \n> > I can reproduce the problem with a 90 degree transformed stroke output to\n> > XPS. This patch should fix the issue.\n> \n> This would still leave the problem that if you have a non-uniform scale, and\n> a rotation, that the path is already transformed by CTM on its original\n> inputting to Cairo,\n\ncairo does not transform paths supplied to backends. The paths are in (cairo) device space.\n\n> and again inside _cairo_win32_printing_surface_emit_path\n> possibly.\n\nYes, the win32 print surface transforms paths by ctm since the win32 print surface can keep track of a GDI device space that is different to the cairo device space. ctm is also used for replaying recording groups.\n\n> So, if you leave the rotation active in the matrix you're\n> supplying to GDI to evaluate widths, it is going to evaluate the widths as\n> if the path was not rotated.\n\nI didn't understand this. The path is transformed by ctm into GDI device space. The stroke width is factored out of the stroke transform into a scalar value. So the only purpose left for the ModifyWorldTransform is to change to shape of the stroke pen. The patch checks if the pen shape is not a circle before calling ModifyWorldTransform.\n\n> So for something like a 90 degree transform with a (2, 1) scale, the widths\n> on each axis would be incorrectly swapped, no?\n\nIt is not possible to make non uniform scaled strokes work with XPS. I tried moving the emit path to occur inside the transform (after adjusting the path) in case XPS did not like the stroke on a different transform to the path. That did not work. But these transforms are rare. Most documents are using uniform strokes so I optimized away the transform when not required.\n\n> And then we have the other gremlin in the room that sometimes has_ctm may be\n> false, but has_gdi_ctm may be true... in which case there's still a\n> transform left active that the printer driver might fail to honor.\n\nI'll look into that but it won't affect firefox. gdi_ctm is only used for ctms that scale down. The intended use case is creating EMF files where it can be used to create higher precision by scaling down GDI and applying the corresponding inverse in cairo. For printing the ctm always scales up since the GDI space for printers is the printer DPI.\n\n> How to solve those issues?\n\nI need to do more testing. I'm currently doing some major work on the win32 printing surface to fix these issues as well as other bit rot (this backend has been neglected for a few years).", "author": "u285178@disabled.tld", "id": 10810609, "time": "2015-10-05T22:53:16Z"}, {"text": "(In reply to Adrian Johnson from comment #34)\n> (In reply to Lee Salzman [:eihrul] from comment #33)\n> > (In reply to Adrian Johnson from comment #32)\n> > > Created attachment 8669952\n> > > stroke-fix.diff\n> > > \n> > > I can reproduce the problem with a 90 degree transformed stroke output to\n> > > XPS. This patch should fix the issue.\n> > \n> > This would still leave the problem that if you have a non-uniform scale, and\n> > a rotation, that the path is already transformed by CTM on its original\n> > inputting to Cairo,\n> \n> cairo does not transform paths supplied to backends. The paths are in\n> (cairo) device space.\n\nThat's the exact problem. You supply path's in user space. By the time they get to the printing backend, they are in device space. stroke_ctm that is passed in to this particular function is the same CTM that was used to transform from user space to device space. And you're applying it again during StrokePath to the pen.\n\nSo if the you have a path that was a vertical line in user space, with a 90 degree rotation that transformed it into a horizontal line in device space, what we're getting here is the horizontal line. If the normals from the horizontal line are used as input into the rotation transform to evaluate width, the result will be erroneous. You'll get the relative scaling for the opposite axis of the one you need.\n\n> > and again inside _cairo_win32_printing_surface_emit_path\n> > possibly.\n> \n> Yes, the win32 print surface transforms paths by ctm since the win32 print\n> surface can keep track of a GDI device space that is different to the cairo\n> device space. ctm is also used for replaying recording groups.\n> \n> > So, if you leave the rotation active in the matrix you're\n> > supplying to GDI to evaluate widths, it is going to evaluate the widths as\n> > if the path was not rotated.\n> \n> I didn't understand this. The path is transformed by ctm into GDI device\n> space. The stroke width is factored out of the stroke transform into a\n> scalar value. So the only purpose left for the ModifyWorldTransform is to\n> change to shape of the stroke pen. The patch checks if the pen shape is not\n> a circle before calling ModifyWorldTransform.\n\nYes, but the transform assumes an input in user space with scale partially factored out. Except the input is actually in device space, because that's what the path we're giving to GDI is in.\n\n> > So for something like a 90 degree transform with a (2, 1) scale, the widths\n> > on each axis would be incorrectly swapped, no?\n> \n> It is not possible to make non uniform scaled strokes work with XPS. I tried\n> moving the emit path to occur inside the transform (after adjusting the\n> path) in case XPS did not like the stroke on a different transform to the\n> path. That did not work. But these transforms are rare. Most documents are\n> using uniform strokes so I optimized away the transform when not required.\n\nExcept now for non-XPS outputs, you will still have the problem I outlined above which was pre-existing, but if we're going to solve it, we should solve it rather than leave that broken.\n\n> > And then we have the other gremlin in the room that sometimes has_ctm may be\n> > false, but has_gdi_ctm may be true... in which case there's still a\n> > transform left active that the printer driver might fail to honor.\n> \n> I'll look into that but it won't affect firefox. gdi_ctm is only used for\n> ctms that scale down. The intended use case is creating EMF files where it\n> can be used to create higher precision by scaling down GDI and applying the\n> corresponding inverse in cairo. For printing the ctm always scales up since\n> the GDI space for printers is the printer DPI.\n> \n> > How to solve those issues?\n> \n> I need to do more testing. I'm currently doing some major work on the win32\n> printing surface to fix these issues as well as other bit rot (this backend\n> has been neglected for a few years).", "author": "lsalzman@mozilla.com", "id": 10810676, "time": "2015-10-05T23:18:21Z"}, {"text": "Actually, wait, I may just be an idiot here. Is the way the GDI pen orientation independent of the path normal? If so, then the transform there is actually correct, and I was looking at it the wrong way...", "author": "lsalzman@mozilla.com", "id": 10810696, "time": "2015-10-05T23:26:23Z"}, {"text": "(In reply to Lee Salzman [:eihrul] from comment #36)\n> Actually, wait, I may just be an idiot here. Is the way the GDI pen\n> orientation independent of the path normal? If so, then the transform there\n> is actually correct, and I was looking at it the wrong way...\n\nIn cairo the stroking can be performed under a different transformation to the one in which the path was emitted. Once the path has been created it will not change when the transform is changed. But the stroke parameters will be in new transform. This is based on the PostScript model. Windows GDI also works the same way. There is an example here http://www.cairographics.org/tutorial/#L2linewidth\n\nPDF is a little different. The stroking is always in the same transformation as the path. But the same effect can be achieved by pre-transforming the path coordinates by the inverse stroke ctm within the application creating the PDF. The PDF file is created containing the operators for changing the ctm to the stroke space, constructing the path, then the stroke operator. When the stroke is rendered, the stroke pen will be in the stroke space and the path will transformed back to what it was before the pre-transform was applied. This is what we do in the cairo PDF backend. It is also what I tried in win32 printing to see if stroking in the same transform as the path was emitted would make XPS happy. It didn't.", "author": "u285178@disabled.tld", "id": 10811940, "time": "2015-10-06T11:04:18Z"}, {"text": "(In reply to Adrian Johnson from comment #37)\n> (In reply to Lee Salzman [:eihrul] from comment #36)\n> > Actually, wait, I may just be an idiot here. Is the way the GDI pen\n> > orientation independent of the path normal? If so, then the transform there\n> > is actually correct, and I was looking at it the wrong way...\n> \n> In cairo the stroking can be performed under a different transformation to\n> the one in which the path was emitted. Once the path has been created it\n> will not change when the transform is changed. But the stroke parameters\n> will be in new transform. This is based on the PostScript model. Windows GDI\n> also works the same way. There is an example here\n> http://www.cairographics.org/tutorial/#L2linewidth\n> \n> PDF is a little different. The stroking is always in the same transformation\n> as the path. But the same effect can be achieved by pre-transforming the\n> path coordinates by the inverse stroke ctm within the application creating\n> the PDF. The PDF file is created containing the operators for changing the\n> ctm to the stroke space, constructing the path, then the stroke operator.\n> When the stroke is rendered, the stroke pen will be in the stroke space and\n> the path will transformed back to what it was before the pre-transform was\n> applied. This is what we do in the cairo PDF backend. It is also what I\n> tried in win32 printing to see if stroking in the same transform as the path\n> was emitted would make XPS happy. It didn't.\n\nHere's a thought... If the pen on input is assumed to be symmetric, then couldn't we actually also just boil down the transform to just the resulting scaling effect, by removing rotation, so that ultimately even non-uniform scaling would be acceptable to the printer driver in these rotated? Presuming it is just some aspect of the rotation part of the matrix that is bugging out the printer driver, and not the scaling...", "author": "lsalzman@mozilla.com", "id": 10812544, "time": "2015-10-06T14:43:16Z"}, {"text": "Created attachment 8670416\nworkaround for Windows printer drivers that can't handle swapped X and Y axes\n\nOkay, how about this here patch?\n\nUpon experimentation, we found the root issue that was vexing the printer driver for both strokes and images was the fact that the X and Y axes were swapped, not the negative scaling or anything else. So presumably it's reading values in the diagonal of the matrix internally, and since these are (nearly-)zero, problems arise.\n\nAlso we found the transforms supplied from PDF.js were a combination of both mirroring and rotation, so a pure check for a rotation would not work, as we are supplying final transforms on our end that may look like { 0, 1, 1, 0 }, rather than a simple landscape transform like { 0, 1, -1, 0 }. So, this patch makes the check more specific by checking for nearly zero values in the diagonal, but still does not insist the the xy*yx be negative like with a pure rotation, since otherwise some matrices we are sending it would be overlooked.\n\nThus, this combines both your suggested fix to check the major/minor values of the SVD and see if the scale was uniform enough to just omit the transform entirely. If despite this the matrix has in part a simple axis-swap like might arise from our landscape transforms, we just undo the axis-swap since the pen is, at least on input, rotationally-invariant... Anything else, we are left to the mercy of the printer driver.", "author": "lsalzman@mozilla.com", "id": 10813586, "time": "2015-10-06T18:34:03Z"}, {"text": "The _cairo_win32_printing_surface_paint_image_pattern changes are mostly look ok. The only improvement I would suggest is\n\n+    axis_swap = fabs(m.xx) < 1e-6 && fabs(m.yy) < 1e-6;\n\nIn windows backends where 1 device unit == 1 pixel or printer dpi we can using the check:\n\n fabs(m.xx * image->width) < 1 && fabs(m.tt * image->height) < 1\n\nto check if the matrix components are too small to shift any part of the image by more than a pixel. This will make the code more tolerant of rounding errors in the matrix than a value like 1e-6.\n\nIn cairo I intend to implement a more general solution. I will start with the solution that generates the most optimal output and each time StretchDIBits returns a fail status I try the next fallback solution from the following list:\n - first try mime data (jpeg or png)\n - then try image data (flattening transparency if required)\n - then redraw image to remove rotation/shear from the matrix\n - then break the above image down to smaller pieces\n\n+\t/* Check if the matrix swaps the X and Y axes, which\n+\t * has been observed to cause problems with XPS export.\n+\t */\n+\tif (fabs(mat.xx) < 1e-6 && fabs(mat.yy) < 1e-6) {\n+\t    /* swap the X and Y axes to undo the axis swap in the matrix */\n+\t    cairo_matrix_t swap_xy = { 0, 1, 1, 0, 0, 0 };\n+\t    cairo_matrix_multiply (&mat, &swap_xy, &mat);\n+\t}\n\nI don't understand what value this code is adding. Do you have a test case that shows a difference in which case I am missing something?\n\nThe \"(fabs(scale * (major - minor) > 1))\" checks if the pen is not a circle in which case we need the stroke transform to get the elliptical pen shape. But for flips and 90 degree rotations the pen shape will always remain a circle in which case the above code will not be executed.", "author": "u285178@disabled.tld", "id": 10814404, "time": "2015-10-06T22:29:04Z"}, {"text": "(In reply to Adrian Johnson from comment #40) \n> +\t/* Check if the matrix swaps the X and Y axes, which\n> +\t * has been observed to cause problems with XPS export.\n> +\t */\n> +\tif (fabs(mat.xx) < 1e-6 && fabs(mat.yy) < 1e-6) {\n> +\t    /* swap the X and Y axes to undo the axis swap in the matrix */\n> +\t    cairo_matrix_t swap_xy = { 0, 1, 1, 0, 0, 0 };\n> +\t    cairo_matrix_multiply (&mat, &swap_xy, &mat);\n> +\t}\n> \n> I don't understand what value this code is adding. Do you have a test case\n> that shows a difference in which case I am missing something?\n> \n> The \"(fabs(scale * (major - minor) > 1))\" checks if the pen is not a circle\n> in which case we need the stroke transform to get the elliptical pen shape.\n> But for flips and 90 degree rotations the pen shape will always remain a\n> circle in which case the above code will not be executed.\n\nIf we're supplying a transform to GDI that happens to contain an axis swap, then that is going to cause the printer driver to bug out. So if we need the elliptical pen shape, that is the case where such a transform may be accidentally supplied.\n\nBut because the pen shape on input is a circle (= symmetric), we can thus tack on some arbitrary unit rotation to the front of the transform without disturbing the final result. By tacking on that X/Y swap matrix, we undo the axis swap in the matrix we're giving to GDI, but the final ellipse will still be what we want on output. GDI is happy, printer's happy, we're happy, everyone's happy. :)", "author": "lsalzman@mozilla.com", "id": 10821146, "time": "2015-10-08T16:32:10Z"}, {"text": "Created attachment 8671492\nworkaround for Windows printer drivers that can't handle swapped X and Y axes\n\nLatest version of printing patch that incorporates Adrian's fixes and feedback.", "author": "lsalzman@mozilla.com", "id": 10821550, "time": "2015-10-08T17:59:34Z"}, {"text": "Comment on attachment 8671492\nworkaround for Windows printer drivers that can't handle swapped X and Y axes\n\nReview of attachment 8671492:\n-----------------------------------------------------------------\n\n::: gfx/cairo/cairo/src/cairo-win32-printing-surface.c\n@@ +1261,5 @@\n> +/* from doc/tutorial/src/singular.c */\n> +static void\n> +get_singular_values (const cairo_matrix_t *matrix,\n> +\t\t     double *major,\n> +\t\t     double *minor)\n\nCouldn't this use _cairo_matrix_compute_basis_scale_factors?", "author": "jmuizelaar@mozilla.com", "id": 10835325, "time": "2015-10-13T22:11:20Z"}, {"text": "Created attachment 8673870\nworkaround for Windows printer drivers that can't handle swapped X and Y axes\n\nCleaned up the SVD code based on some suggestions from Jeff to reuse similar code already in Cairo, and also fixed a related bug that snuck into the patch.\n\nCarried r+ from Jeff.", "author": "lsalzman@mozilla.com", "id": 10839149, "time": "2015-10-14T20:30:59Z"}, {"text": "Created attachment 8676427\nadd Cairo patch for bug 1205854", "author": "lsalzman@mozilla.com", "id": 10856542, "time": "2015-10-20T19:21:53Z"}, {"text": "Try results: https://treeherder.mozilla.org/#/jobs?repo=try&revision=4befedbcb2c8", "author": "lsalzman@mozilla.com", "id": 10856544, "time": "2015-10-20T19:22:35Z"}, {"text": "lee, do you want both patches landed ?", "author": "cbook@mozilla.com", "id": 10858422, "time": "2015-10-21T07:58:51Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/cbd0b9619978", "author": "pulsebot@bots.tld", "id": 10860007, "time": "2015-10-21T16:24:13Z"}, {"text": "(In reply to Carsten Book [:Tomcat] from comment #47)\n> lee, do you want both patches landed ?\n\nYep, both. One to modify the sources and the other to have the patch around in case we need to reapply it.", "author": "lsalzman@mozilla.com", "id": 10860097, "time": "2015-10-21T16:42:45Z"}, {"text": "Created attachment 8676952\ninitialize variable in _cairo_matrix_transformed_circle_major_axis\n\nThis just initializes variable to quiet warning, but should make no actual difference in semantics of the code.", "author": "lsalzman@mozilla.com", "id": 10860137, "time": "2015-10-21T16:49:21Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/aa291bcfb0e8", "author": "pulsebot@bots.tld", "id": 10860168, "time": "2015-10-21T16:55:16Z"}, {"text": "These appear to have caused a bunch of reftest failures like https://treeherder.mozilla.org/logviewer.html#?job_id=16044497&repo=mozilla-inbound\n\nBoth backed out in https://hg.mozilla.org/integration/mozilla-inbound/rev/26c5929a5a7e", "author": "kwierso@gmail.com", "id": 10860595, "time": "2015-10-21T18:20:47Z"}, {"text": "Created attachment 8677170\nworkaround for Windows printer drivers that can't handle swapped X and Y axes\n\nFixes for reftest failures that arose from an ill-placed pure attribute on a function prototype.\n\nTry results to check that reftest failures were fixed: https://treeherder.mozilla.org/#/jobs?repo=try&revision=05f7155fa201", "author": "lsalzman@mozilla.com", "id": 10861877, "time": "2015-10-22T00:30:14Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/a8df1b37b075", "author": "pulsebot@bots.tld", "id": 10862086, "time": "2015-10-22T02:18:23Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/a8df1b37b075", "author": "cbook@mozilla.com", "id": 10862880, "time": "2015-10-22T09:48:48Z"}], "id": 1205854, "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-10-22T09:48:48Z", "cf_platform_rel": "---", "product": "Firefox", "cf_status_firefox_esr52": "---", "blocks": [811002], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "PDF Viewer", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "Firefox 44", "cf_status_firefox44": "fixed", "is_cc_accessible": true, "url": "", "creator_detail": {"email": "blacklotus60@hotmail.com", "id": 549974, "name": "blacklotus60@hotmail.com", "real_name": ""}, "whiteboard": "[pdfjs-f-needinfo][gfx-noted]", "mentors": [], "cc_detail": [{"email": "bdahl@mozilla.com", "id": 425126, "name": "bdahl@mozilla.com", "real_name": "Brendan Dahl [:bdahl]"}, {"email": "blacklotus60@hotmail.com", "id": 549974, "name": "blacklotus60@hotmail.com", "real_name": ""}, {"email": "cbook@mozilla.com", "id": 277293, "name": "cbook@mozilla.com", "real_name": "Carsten Book [:Tomcat]"}, {"email": "epinal99-bugzilla2@yahoo.fr", "id": 337567, "name": "epinal99-bugzilla2@yahoo.fr", "real_name": "Loic"}, {"email": "jmuizelaar@mozilla.com", "id": 309398, "name": "jmuizelaar@mozilla.com", "real_name": "Jeff Muizelaar [:jrmuizel]"}, {"email": "kwierso@gmail.com", "id": 308534, "name": "kwierso@gmail.com", "real_name": "Wes Kocher (:KWierso)"}, {"email": "lsalzman@mozilla.com", "id": 536714, "name": "lsalzman@mozilla.com", "real_name": "Lee Salzman [:lsalzman]"}, {"email": "milan@mozilla.com", "id": 456486, "name": "milan@mozilla.com", "real_name": "Milan Sreckovic [:milan]"}, {"email": "u285178@disabled.tld", "id": 285178, "name": "u285178@disabled.tld", "real_name": ""}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "resolution": "FIXED", "op_sys": "Windows", "cf_fx_points": "---", "history": [{"changes": [{"removed": "Untriaged", "field_name": "component", "added": "PDF Viewer"}, {"removed": "Unspecified", "field_name": "platform", "added": "x86_64"}, {"removed": "Unspecified", "field_name": "op_sys", "added": "Windows 10"}], "who": "blacklotus60@hotmail.com", "when": "2015-09-17T21:28:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "blacklotus60@hotmail.com, epinal99-bugzilla2@yahoo.fr"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(blacklotus60@hotmail.com)"}], "who": "epinal99-bugzilla2@yahoo.fr", "when": "2015-09-18T14:13:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bdahl@mozilla.com"}, {"removed": "", "field_name": "whiteboard", "added": "[pdfjs-f-needinfo]"}], "who": "bdahl@mozilla.com", "when": "2015-09-21T22:11:26Z"}, {"changes": [{"removed": "needinfo?(blacklotus60@hotmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "blacklotus60@hotmail.com", "when": "2015-09-23T16:23:23Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "UNCONFIRMED", "field_name": "status", "added": "NEW"}, {"removed": "40 Branch", "field_name": "version", "added": "27 Branch"}, {"removed": "", "field_name": "blocks", "added": "811002"}, {"removed": "PDF.js possible rendering? issue w/ ebay barcode labels", "field_name": "summary", "added": "PDF.js doesn't print barcode labels in PDF"}, {"removed": "0", "field_name": "is_confirmed", "added": "1"}], "who": "epinal99-bugzilla2@yahoo.fr", "when": "2015-09-23T17:27:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "milan@mozilla.com"}, {"removed": "[pdfjs-f-needinfo]", "field_name": "whiteboard", "added": "[pdfjs-f-needinfo][gfx-noted]"}], "who": "milan@mozilla.com", "when": "2015-09-23T19:14:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "lsalzman@mozilla.com"}], "who": "lsalzman@mozilla.com", "when": "2015-09-26T03:30:46Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "x86_64", "field_name": "platform", "added": "All"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "lsalzman@mozilla.com"}, {"removed": "Windows 10", "field_name": "op_sys", "added": "Windows"}], "who": "lsalzman@mozilla.com", "when": "2015-09-26T03:34:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jmuizelaar@mozilla.com"}, {"removed": "27 Branch", "field_name": "version", "added": "unspecified"}], "who": "lsalzman@mozilla.com", "when": "2015-09-26T03:37:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8667005, "added": "review?(jmuizelaar@mozilla.com)"}], "who": "lsalzman@mozilla.com", "when": "2015-09-28T23:15:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jmuizelaar@mozilla.com)", "attachment_id": 8667005, "added": "review+"}], "who": "jmuizelaar@mozilla.com", "when": "2015-09-30T21:29:19Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "lsalzman@mozilla.com", "when": "2015-10-01T19:10:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ajohnson@redneon.com"}], "who": "u285178@disabled.tld", "when": "2015-10-04T12:08:00Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "lsalzman@mozilla.com", "when": "2015-10-04T16:13:24Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8667005, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8669952, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8670416, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8671492, "added": "review?(jmuizelaar@mozilla.com)"}], "who": "lsalzman@mozilla.com", "when": "2015-10-08T17:59:34Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jmuizelaar@mozilla.com)", "attachment_id": 8671492, "added": "review+"}], "who": "jmuizelaar@mozilla.com", "when": "2015-10-13T22:11:20Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8671492, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8673870, "added": "review+"}], "who": "lsalzman@mozilla.com", "when": "2015-10-14T20:30:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8676427, "added": "review+"}], "who": "lsalzman@mozilla.com", "when": "2015-10-20T19:21:53Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "lsalzman@mozilla.com", "when": "2015-10-20T19:22:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cbook@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(lsalzman@mozilla.com)"}], "who": "cbook@mozilla.com", "when": "2015-10-21T07:58:51Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2015-10-21T16:24:13Z"}, {"changes": [{"removed": "needinfo?(lsalzman@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "lsalzman@mozilla.com", "when": "2015-10-21T16:42:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8676952, "added": "review+"}], "who": "lsalzman@mozilla.com", "when": "2015-10-21T16:49:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8676952, "added": "checkin?"}], "who": "lsalzman@mozilla.com", "when": "2015-10-21T16:49:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "checkin?", "attachment_id": 8676952, "added": "checkin+"}], "who": "ryanvm@gmail.com", "when": "2015-10-21T16:54:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wkocher@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(lsalzman@mozilla.com)"}], "who": "kwierso@gmail.com", "when": "2015-10-21T18:20:47Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8673870, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8676427, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8676952, "added": "1"}, {"removed": "needinfo?(lsalzman@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8677170, "added": "review+"}], "who": "lsalzman@mozilla.com", "when": "2015-10-22T00:30:14Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "lsalzman@mozilla.com", "when": "2015-10-22T00:30:44Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2015-10-22T02:18:23Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "Firefox 44"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-10-22 02:48:48"}, {"removed": "---", "field_name": "cf_status_firefox44", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-10-22T09:48:48Z"}]}