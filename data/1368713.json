{"cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "gfritzsche@mozilla.com", "mentors_detail": [{"email": "alessio.placitelli@gmail.com", "id": 248036, "name": "alessio.placitelli@gmail.com", "real_name": "Alessio Placitelli [:Dexter]"}], "depends_on": [1335343], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_status_firefox56": "fixed", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "cc_detail": [{"email": "alessio.placitelli@gmail.com", "id": 248036, "name": "alessio.placitelli@gmail.com", "real_name": "Alessio Placitelli [:Dexter]"}, {"email": "chutten@mozilla.com", "id": 553004, "name": "chutten@mozilla.com", "real_name": "Chris H-C :chutten"}, {"email": "raajit.raj@gmail.com", "id": 593789, "name": "raajit.raj@gmail.com", "real_name": "Raajit Raj(:raajitr)"}], "cf_last_resolved": "2017-07-18T00:01:55Z", "attachments": [{"creator": "raajit.raj@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-17T07:58:39Z", "type_id": 4, "creation_date": "2017-07-16T17:24:46Z", "id": 1612274, "setter": "alessio.placitelli@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8876795}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 39, "comments": [{"text": "Currently all testing for Histograms.json and the parsing (histogram_tools.py) is only focused on the client build.\nHowever, we also use the file on the server-side through python_moztelemetry.\n\nCurrently its easy to forget about not breaking the server-side, resulting in e.g. bug 1364556.\nIn the server use, a flag is set in histogram_tools.py: strict_type_checks\nhttps://dxr.mozilla.org/mozilla-central/search?q=strict_type_checks&redirect=false\n\nWe should add some basic coverage for that code path, against historic and current Histograms.json formats.\n\nWe should be careful to not impact build times too much though, maybe adding one test file with some variations of historic histogram definition formats is enough.", "author": "gfritzsche@mozilla.com", "id": 12357962, "time": "2017-05-30T14:53:59Z"}, {"text": "I am interested.\nBut can you give more information?\nWhat do you mean by 'historic and current Histograms'?", "author": "raajit.raj@gmail.com", "id": 12370616, "time": "2017-06-04T14:16:57Z"}, {"text": "Alessio, can you sketch this out?", "author": "gfritzsche@mozilla.com", "id": 12371692, "time": "2017-06-05T07:54:56Z"}, {"text": "I think we have a few options here, but first a few words on what 'historic and current histograms' means.\n\n== Background ==\nWe define [1] the histograms we collect in the Histograms.json file [2]. The format of this file evolved with time, for example we recently added new mandatory properties to the histogram definitions. On the client-side, changing the Histogram.json file in a non-conformat way breaks the Firefox compilation, as we call histogram_tools.py [3] to generate some intermediate build files. Calling the histogram_tools file during compilation implies using the \"strict_mode\": if the file contains something we don't expect, we fail hard.\n\nThe very same file is used on the server side to help with the incoming data. There we need to be more relaxed, as histograms may still come from older versions of Firefox that adhere to an older format. This is why, on the server side, we enable a \"relaxed\" mode by setting |strict_type_checks| to False. This code path is currently not tested on the client side so, if we introduce some new feature that correctly works in strict mode, we might end up breaking non strict mode on the server, resulting in painful down time :-(\n\n== What to test ==\nWith this bug we want to add some sort of test coverage for non strict mode. We might want to test at least that:\n\n- adding new fields doesn't break anything;\n- non-numeric expressions (e.g. \"JS::gcreason::NUM_TELEMETRY_REASONS\") for fields like \"low\", \"high\", \"n_values\", \"n_buckets\" don't break;\n- that the most recent Histogram.json data work well in non-strict mode;\n\nThat should give us greater confidence that running this on the server won't blow thing sup.\n\n== How to test ==\nAs I mentioned, we have a few options here.\n\n1) Add a python test suite to Telemetry, which can be run with \"./mach test\". This implies adding a PYTHON_UNITTEST_MANIFESTS entry to our moz.build and defining a series of unit tests to cover our needs. This solution doesn't impact build times at all, as tests are ran separately (as we do with xpcshell, mochitests, gtests, ...). It also allows us to get fancy with the tests without checking in new Histogram.json files. This would also allow us to easily extend the test coverage to scalars and events in the future.\n\n2) Add a new build step in moz.build (as GENERATED_FILES) that generates bogus output on each build and runs the 'gen-histogram-data.py' and 'gen-histogram-enum.py' on a set of old Histogram.json files that we'd have to check in. While I think this solution is easy to implement, it would clutter the moz.build file and impact build times a bit.\n\n3) Add a \"self-check\" set of tests at the end of histogram_tools.py. This is basically just adding unit tests at the end of the histogram_tools.py file.\n\nI would go for (1), as (2) and (3) don't feel like clean and flexible solutions in the long run.\n\n@Georg, what's your take on this?\n\n[1] - https://gecko.readthedocs.io/en/latest/toolkit/components/telemetry/telemetry/collection/histograms.html#declaring-a-histogram\n[2] - http://searchfox.org/mozilla-central/source/toolkit/components/telemetry/Histograms.json\n[3] - https://dxr.mozilla.org/mozilla-central/search?q=histogram_tools.py&redirect=false", "author": "alessio.placitelli@gmail.com", "id": 12374830, "time": "2017-06-06T08:42:40Z"}, {"text": "(1) sounds solid to me, lets go with that.", "author": "gfritzsche@mozilla.com", "id": 12374847, "time": "2017-06-06T08:53:58Z"}, {"text": "(In reply to Raajit Raj(:raajitr) from comment #1)\n> I am interested.\n> But can you give more information?\n> What do you mean by 'historic and current Histograms'?\n\nRaajit, thanks for being interested in this bug! I write about historic and current histogram, together with some background, in comment 3.\n\nTo implement the proposal (1) from comment 3, we can break the problem in two stages.\n\nPart 1 - Enable the python unit tests for Telemetry\n\n- Create a 'python' directory under toolkit/components/telemetry/tests/\n- Add a 'python.ini' file there. The file will contain the name of the test files that will be run by the 'mach test' command. These are simply filenames wrapped in square brackets, e.g. [test_histogramtools_non_strict.py]\n- Create the test file in the same directory, e.g. test_histogramtools_non_strict.py. The sample at [1] contains some of the boilerplate code needed to sketch out the test file.\n- Add the new test manifest to the Telemetry moz.build file near [2]. It should be something like:\n\nPYTHON_UNITTEST_MANIFESTS += [\n    'tests/python/python.ini',\n]\n\nThat should deal with the testing boilerplate. You should now be able to run './mach python-test toolkit/components/telemetry' and run the test code.\n\nPart 2 - Testing histogram_tools.py\n\n- We'd need to import histogram_tools in the test. The problem here is that the file lives in 'toolkit/components/telemetry' and not in the test directory. Let me know if you get stuck on this!\n- We should add a test case for each scenario described in comment 3.\n- Each scenario could, for example, provide a JSON blob containing the definition for a single histogram, parse the blob as done in [3] and check that the expected values are available.\n- The 'current histograms' scenario could be as simple as calling 'histogram_tools.from_files', feeding the path to the Histogram.json file, and checking the expected values for some testing histogram e.g. TELEMETRY_TEST_COUNT\n\nRaajit, please let me know if anything is unclear and do not hesitate to ask more questions if needed!\n\n[1] - http://searchfox.org/mozilla-central/source/xpcom/idl-parser/xpidl/runtests.py#114\n[2] - https://dxr.mozilla.org/mozilla-central/rev/cad53f061da634a16ea75887558301b77f65745d/toolkit/components/telemetry/moz.build#92\n[3] - http://searchfox.org/mozilla-central/rev/d441cb24482c2e5448accaf07379445059937080/toolkit/components/telemetry/histogram_tools.py#544-546", "author": "alessio.placitelli@gmail.com", "id": 12374983, "time": "2017-06-06T09:43:12Z"}, {"text": "Thanks Alessio for the brief description. \nI'm trying to implement proposal (1) and as expected I'm stuck at importing histogram_tools in the test file. Tried relative import but it isn't working, will have to dig little more.\nAlso, I'm unclear as to how to provide a JSON blob, should the JSON be in a seperate file or should I use something like this:\nFor e.g.:\n    json.dumps({\"jsonSyntax\": true})", "author": "raajit.raj@gmail.com", "id": 12375490, "time": "2017-06-06T13:28:34Z"}, {"text": "(In reply to Raajit Raj(:raajitr) from comment #6)\n> Thanks Alessio for the brief description. \n> I'm trying to implement proposal (1) and as expected I'm stuck at importing\n> histogram_tools in the test file. Tried relative import but it isn't\n> working, will have to dig little more.\n\nCool, let me know if you get stuck on that. You might try adding the path to sys.path before importing histogram_tools and see if that works.\n\n> Also, I'm unclear as to how to provide a JSON blob, should the JSON be in a\n> seperate file or should I use something like this:\n> For e.g.:\n>     json.dumps({\"jsonSyntax\": true})\n\nNo need for a separate file, you can do as you described within the test that requires it :)", "author": "alessio.placitelli@gmail.com", "id": 12375538, "time": "2017-06-06T13:43:38Z"}, {"text": "Created attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nReview commit: https://reviewboard.mozilla.org/r/148124/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/148124/", "author": "raajit.raj@gmail.com", "id": 12391376, "time": "2017-06-12T17:37:34Z"}, {"text": "Hi,\n\nI have uploaded a patch using the proposal (1) given by Alessio. It was an interesting bug to implement and will thank you both for helping me.\n\nThere are few issues where I think I need more input.\n\n1. For `test_current_histogram`, I am trying to check the value in `record_in_processes` field using `test_histogram.record_in_processes()` which is giving me an error `Histogram instance has no attribute 'definition'`.\n\n2. Am I implementing first two test cases correctly? Because my tests are passing even when I set `strict_type_check` to True in `histogram_tools.load_histograms_into_dict`.\n\nThanks again,", "author": "raajit.raj@gmail.com", "id": 12391413, "time": "2017-06-12T17:47:52Z"}, {"text": "(In reply to Raajit Raj(:raajitr) from comment #9)\n> Hi,\n> \n> I have uploaded a patch using the proposal (1) given by Alessio. It was an\n> interesting bug to implement and will thank you both for helping me.\n\nThank you for putting efforts in fixing this. It's a very important bug for us!\n\n> There are few issues where I think I need more input.\n> \n> 1. For `test_current_histogram`, I am trying to check the value in\n> `record_in_processes` field using `test_histogram.record_in_processes()`\n> which is giving me an error `Histogram instance has no attribute\n> 'definition'`.\n\nCongrats! You demonstrated why this bug is super important :) You stumbled upon a regression that was introduced in bug 1335343 (part 1) and that will be fixed in bug 1335343 (part 2). This is potentially landing today/tomorrow, so you should be set once that's fixed.\n\nWithout the test coverage you're adding we would have found about this problem too late: after breaking upstream :-)\n\n> 2. Am I implementing first two test cases correctly? Because my tests are\n> passing even when I set `strict_type_check` to True in\n> `histogram_tools.load_histograms_into_dict`.\n\nI'm leaving comments about this in the review.", "author": "alessio.placitelli@gmail.com", "id": 12393584, "time": "2017-06-13T09:43:59Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review152784\n\nThis looks really good as a start, thank you Rajiit! Would you kindly also add a new test case for checking that duplicate keys don't break parsing in non-strict mode? e.g. repeat a field twice in the histogram definition\n\nPlease make sure your code passes Python linting. You can run the following command: ./mach lint -l flake8 toolkit/components/telemetry\n\n::: commit-message-2a63a:1\n(Diff revision 1)\n> +Bug 1368713 - Test histogram_tools.py against historic Histograms.json formats for non strict mode\n\nCould you change this first line to something like: \n\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nThen you can leave a blank line and add a few lines below to describe what your patch does (adds python test coverage, non-strict, etc.)\n\n::: toolkit/components/telemetry/moz.build\n(Diff revision 1)\n>      'Telemetry.h',\n>      'ThreadHangStats.h',\n>  ]\n>  \n>  SOURCES += [\n> -    'CombinedStacks.cpp',\n\nThe removal of line 56,57 and 60 in moz.build should not be in this patch. Maybe you updated the tree and made a mistake while rebasing?\n\n::: toolkit/components/telemetry/moz.build:90\n(Diff revision 1)\n>      'ThirdPartyCookieProbe.jsm',\n>      'UITelemetry.jsm',\n>  ]\n>  \n>  TESTING_JS_MODULES += [\n>    'tests/unit/TelemetryArchiveTesting.jsm',\n\nnit: I know you didn't do this but, since we're here, would you kindly indent this line with 4 spaces instead of 2?\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:1\n(Diff revision 1)\n> +import json\n\nPlease add the Mozilla Public License header at the top of the file as done [here](http://searchfox.org/mozilla-central/rev/61054508641ee76f9c49bcf7303ef3cfb6b410d2/dom/bindings/mozwebidlcodegen/test/test_mozwebidlcodegen.py#1-3)\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:4\n(Diff revision 1)\n> +import json\n> +import sys\n> +from os import path\n> +telemetry = path.abspath(path.dirname(path.dirname(path.dirname(__file__))))\n\n```\nsys.path.append(TELEMETRY_ROOT_PATH)\n```\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:4\n(Diff revision 1)\n> +import json\n> +import sys\n> +from os import path\n> +telemetry = path.abspath(path.dirname(path.dirname(path.dirname(__file__))))\n\nLet's change this and the line below to explicitly tell what *dirname* is doing under the hood:\n\n```\n# Some comment describing why this is needed.\nTELEMETRY_ROOT_PATH = path.abspath(path.join(path.dirname(__file__), path.pardir, path.pardir))\n```\n\nThis path will be used as a constant, so let's keep its name uppercase and make it more descriptive\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:6\n(Diff revision 1)\n> +import unittest\n> +\n> +import mozunit\n\nMove all of the imports that don't need the path at the top of the file, sorted by the package name.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:12\n(Diff revision 1)\n> +\n> +import mozunit\n> +import histogram_tools\n> +\n> +class TestParser(unittest.TestCase):\n> +    def test_adding_new_fields(self):\n\nnit: maybe we could call this test test_unknown_field ?\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:13\n(Diff revision 1)\n> +import mozunit\n> +import histogram_tools\n> +\n> +class TestParser(unittest.TestCase):\n> +    def test_adding_new_fields(self):\n> +        new_fields_histogram = {\n\nnit: let's call it SAMPLE_HISTOGRAM (uppercase and more descriptive)\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:21\n(Diff revision 1)\n> +        def hook(ps):\n> +            return histogram_tools.load_histograms_into_dict(ps, strict_type_checks=False)\n> +        histograms = json.loads(json.dumps(new_fields_histogram), object_pairs_hook=hook)\n\nSince you'll be using this lines in the test below, what about factoring them out in a separate function outside of TestParser?\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:23\n(Diff revision 1)\n> +                \"description\": \"has accessibility support been instantiated\",\n> +                \"new_field\": \"Its a new field\"\n> +                }}\n> +        def hook(ps):\n> +            return histogram_tools.load_histograms_into_dict(ps, strict_type_checks=False)\n> +        histograms = json.loads(json.dumps(new_fields_histogram), object_pairs_hook=hook)\n\nThis will only give you an ordered dictionary, it will perform no real parsing other than loading the JSON into the dictionary.\n\nYou would still need to do something like:\n\n```\nhist = Histogram('A11Y_INSTANTIATED_FLAG', histograms['A11Y_INSTANTIATED_FLAG'], strict_type_checks=False)\n```\n\nAnd check the values returned by hist.kind(), etc. as you do in the last test.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:26\n(Diff revision 1)\n> +        def hook(ps):\n> +            return histogram_tools.load_histograms_into_dict(ps, strict_type_checks=False)\n> +        histograms = json.loads(json.dumps(new_fields_histogram), object_pairs_hook=hook)\n> +\n> +        self.assertIsNotNone(histograms['A11Y_INSTANTIATED_FLAG'].get('new_field'))\n> +        self.assertEqual(histograms, new_fields_histogram)\n\nSince we don't know how an unknown field will be handled, let's just test that it doesn't break parsing: please check that all the expected properties have the right values in the Histogram object.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:28\n(Diff revision 1)\n> +        histograms = json.loads(json.dumps(new_fields_histogram), object_pairs_hook=hook)\n> +\n> +        self.assertIsNotNone(histograms['A11Y_INSTANTIATED_FLAG'].get('new_field'))\n> +        self.assertEqual(histograms, new_fields_histogram)\n> +\n> +    def test_non_numeric_expression_for_n_fields(self):\n\nnit: test_non_numeric_expressions should be enough\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:29\n(Diff revision 1)\n> +\n> +        self.assertIsNotNone(histograms['A11Y_INSTANTIATED_FLAG'].get('new_field'))\n> +        self.assertEqual(histograms, new_fields_histogram)\n> +\n> +    def test_non_numeric_expression_for_n_fields(self):\n> +        non_numeric_fields_histogram = {\n\nnit: SAMPLE_HISTOGRAM?\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:32\n(Diff revision 1)\n> +\n> +    def test_non_numeric_expression_for_n_fields(self):\n> +        non_numeric_fields_histogram = {\n> +            \"A11Y_INSTANTIATED_FLAG\": {\n> +                \"n_buckets\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n> +                \"low\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n\nLet's also use `\"mozilla::StartupTimeline::MAX_EVENT_ID\"` for two fields.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:36\n(Diff revision 1)\n> +        def hook(ps):\n> +            return histogram_tools.load_histograms_into_dict(ps, strict_type_checks=False)\n> +        histograms = json.loads(json.dumps(non_numeric_fields_histogram), object_pairs_hook=hook)\n\nYou can use the re-factored function you defined for the previous test here.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:40\n(Diff revision 1)\n> +                }}\n> +        def hook(ps):\n> +            return histogram_tools.load_histograms_into_dict(ps, strict_type_checks=False)\n> +        histograms = json.loads(json.dumps(non_numeric_fields_histogram), object_pairs_hook=hook)\n> +\n> +        value = \"JS::gcreason::NUM_TELEMETRY_REASONS\"\n\nThe parser will convert the expressions to numbers. You will need to check that the proper number is reported for the related field by the Histogram object. Check [here](http://searchfox.org/mozilla-central/rev/d840ebd5858a61dbc1622487c1fab74ecf235e03/toolkit/components/telemetry/histogram_tools.py#407-408) for the expected values.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:48\n(Diff revision 1)\n> +        self.assertEqual(histograms['A11Y_INSTANTIATED_FLAG']['low'], value)\n> +        self.assertEqual(histograms['A11Y_INSTANTIATED_FLAG']['high'], value)\n> +        self.assertEqual(histograms['A11Y_INSTANTIATED_FLAG']['n_values'], value)\n> +\n> +    def test_current_histogram(self):\n> +        all_histograms = list(histogram_tools.from_files([path.join(telemetry,\n\nLet's define\n\n```\nHISTOGRAMS_PATH = path.join(telemetry, \"Histograms.json\")\n\n... histogram_tools.from_files([HISTOGRAMS_PATH], ...\n```\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:55\n(Diff revision 1)\n> +                                                         strict_type_checks=False))\n> +        test_histogram = [i for i in all_histograms if i.name() == 'TELEMETRY_TEST_FLAG'][0]\n> +\n> +        self.assertEqual(test_histogram.expiration(), 'never')\n> +        self.assertEqual(test_histogram.kind(), 'flag')\n> +        self.assertEqual(test_histogram.description(),\n\nLet's not check the description but rather the record_in_processes, keyed (which should be False if not specified) and dataset in addition to the other 2 properties. See [here](https://gecko.readthedocs.io/en/latest/toolkit/components/telemetry/telemetry/collection/histograms.html) for their meaning and values.", "author": "alessio.placitelli@gmail.com", "id": 12393700, "time": "2017-06-13T10:33:36Z"}, {"text": "(In reply to Alessio Placitelli [:Dexter] from comment #11)\n> Comment on attachment 8876795\n> Bug 1368713 - Test histogram_tools.py against historic Histograms.json\n> formats for non strict mode\n> \n> https://reviewboard.mozilla.org/r/148124/#review152784\n> \n> This looks really good as a start, thank you Rajiit!\n\nAlso, sorry, I just noticed I misspelled your name :-\\", "author": "alessio.placitelli@gmail.com", "id": 12393703, "time": "2017-06-13T10:35:00Z"}, {"text": "(In reply to Alessio Placitelli [:Dexter] from comment #10)\n> (In reply to Raajit Raj(:raajitr) from comment #9)\n> > Hi,\n> > \n> > I have uploaded a patch using the proposal (1) given by Alessio. It was an\n> > interesting bug to implement and will thank you both for helping me.\n> \n> Thank you for putting efforts in fixing this. It's a very important bug for\n> us!\n> \n> > There are few issues where I think I need more input.\n> > \n> > 1. For `test_current_histogram`, I am trying to check the value in\n> > `record_in_processes` field using `test_histogram.record_in_processes()`\n> > which is giving me an error `Histogram instance has no attribute\n> > 'definition'`.\n> \n> Congrats! You demonstrated why this bug is super important :) You stumbled\n> upon a regression that was introduced in bug 1335343 (part 1) and that will\n> be fixed in bug 1335343 (part 2). This is potentially landing\n> today/tomorrow, so you should be set once that's fixed.\n\nRaajit, the fix landed so you should be good to test record_in_processes now.", "author": "alessio.placitelli@gmail.com", "id": 12396637, "time": "2017-06-14T07:50:32Z"}, {"text": "\n> Congrats! You demonstrated why this bug is super important :) You stumbled\n> upon a regression that was introduced in bug 1335343 (part 1) and that will\n> be fixed in bug 1335343 (part 2). This is potentially landing\n> today/tomorrow, so you should be set once that's fixed.\n> \n> Without the test coverage you're adding we would have found about this\n> problem too late: after breaking upstream :-)\n \nI'm glad that my work paid off. Thanks again for your help. :)\n\nCurrently I am working on the fixes, and stuck at this point.\n> The parser will convert the expressions to numbers. You will need to check\n> that the proper number is reported for the related field by the Histogram\n> object. Check\n> [here](http://searchfox.org/mozilla-central/rev/\n> d840ebd5858a61dbc1622487c1fab74ecf235e03/toolkit/components/telemetry/\n> histogram_tools.py#407-408) for the expected values.\n\nParsed numbers that I'm getting for \"JS::gcreason::NUM_TELEMETRY_REASONS\" is 3 and for \"mozilla::StartupTimeline::MAX_EVENT_ID\" is 2. I'm not sure if I'm doing something wrong here. This is my JSON Blob:\n\n> SAMPLE_HISTOGRAM = {\n>            \"A11Y_INSTANTIATED_FLAG\": {\n>                \"kind\": \"flag\",\n>                \"description\": \"has accessibility support been instantiated\",\n>                \"n_buckets\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n>                \"low\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n>                \"high\": \"mozilla::StartupTimeline::MAX_EVENT_ID\",\n>                \"n_values\": \"mozilla::StartupTimeline::MAX_EVENT_ID\"\n>                }}\n\nAlso, its giving me an 'KeyError' on `Histogram('A11Y_INSTANTIATED_FLAG', histograms['A11Y_INSTANTIATED_FLAG'], strict_type_checks=False)` when I don't add both \"kind\" and \"description\" fields and I assume it should not break when using with type_checks = False. \nHere is the error trace if it helps: https://pastebin.mozilla.org/9025284", "author": "raajit.raj@gmail.com", "id": 12411423, "time": "2017-06-19T17:10:10Z"}, {"text": "Could you post your updated patch?", "author": "alessio.placitelli@gmail.com", "id": 12413435, "time": "2017-06-20T07:17:06Z"}, {"text": "Hi. If this bug is not yet fixed . I would like to work on this .", "author": "fossbalaji@gmail.com", "id": 12431585, "time": "2017-06-27T17:58:26Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/148124/diff/1-2/", "author": "raajit.raj@gmail.com", "id": 12431629, "time": "2017-06-27T18:06:16Z"}, {"text": "Have uploaded the patch please check. thanks", "author": "raajit.raj@gmail.com", "id": 12431781, "time": "2017-06-27T18:35:38Z"}, {"text": "(In reply to Balaji from comment #16)\n> Hi. If this bug is not yet fixed . I would like to work on this .\n\nBalaji, I'm sorry but Raajit is actively working on this bug already!", "author": "alessio.placitelli@gmail.com", "id": 12432673, "time": "2017-06-27T22:50:58Z"}, {"text": "(In reply to Raajit Raj(:raajitr) from comment #14)\n> Parsed numbers that I'm getting for \"JS::gcreason::NUM_TELEMETRY_REASONS\" is\n> 3 and for \"mozilla::StartupTimeline::MAX_EVENT_ID\" is 2. I'm not sure if I'm\n> doing something wrong here. This is my JSON Blob:\n\nThat's because the histogram is of type \"flag\", which implicitly has 3 buckets.\n\n> > SAMPLE_HISTOGRAM = {\n> >            \"A11Y_INSTANTIATED_FLAG\": {\n> >                \"kind\": \"flag\",\n> >                \"description\": \"has accessibility support been instantiated\",\n> >                \"n_buckets\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n> >                \"low\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n> >                \"high\": \"mozilla::StartupTimeline::MAX_EVENT_ID\",\n> >                \"n_values\": \"mozilla::StartupTimeline::MAX_EVENT_ID\"\n> >                }}\n> \n> Also, its giving me an 'KeyError' on `Histogram('A11Y_INSTANTIATED_FLAG',\n> histograms['A11Y_INSTANTIATED_FLAG'], strict_type_checks=False)` when I\n> don't add both \"kind\" and \"description\" fields and I assume it should not\n> break when using with type_checks = False. \n> Here is the error trace if it helps: https://pastebin.mozilla.org/9025284\n\nBoth \"kind\" and \"description\" are mandatory and should always be there regardless of the \"strict_mode\".\nIt's ok for you to add them into the SAMPLE definition!", "author": "alessio.placitelli@gmail.com", "id": 12434076, "time": "2017-06-28T16:48:21Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review158008\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:7\n(Diff revision 2)\n> +# License, v. 2.0. If a copy of the MPL was not distributed with this\n> +# file, You can obtain one at http://mozilla.org/MPL/2.0/.import json\n> +\n> +import json\n> +import mozunit\n> +from os import path\n\nCould you move this right after import unittest?\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:16\n(Diff revision 2)\n> +TELEMETRY_ROOT_PATH = path.abspath(path.join(path.dirname(__file__), path.pardir, path.pardir))\n> +sys.path.append(TELEMETRY_ROOT_PATH)\n> +import histogram_tools\n> +\n> +def load_histogram(histograms):\n> +    def hook(ps):\n\nWould you kidnly add documentation for this function? You can follow the style from [here](http://searchfox.org/mozilla-central/rev/fdb811340ac4e6b93703d72ee99217f3b1d250ac/toolkit/components/telemetry/parse_scalars.py#44)\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:41\n(Diff revision 2)\n> +        self.assertEqual(hist.kind(), 'flag')\n> +        self.assertEqual(hist.record_in_processes(), [\"main\", \"content\"])\n> +\n> +    def test_non_numeric_expressions(self):\n> +        SAMPLE_HISTOGRAM = {\n> +            \"A11Y_INSTANTIATED_FLAG\": {\n\nLet's change this to \n\n```\nSAMPLE_HISTOGRAM = {\n    \"TEST_NON_NUMERIC_HISTOGRAM\": {\n        \"kind\": \"linear\",\n        \"description\": \"sample\",\n        \"n_buckets\": \"JS::gcreason::NUM_TELEMETRY_REASONS\",\n        \"high\": \"mozilla::StartupTimeline::MAX_EVENT_ID\"\n        }}\n```\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:51\n(Diff revision 2)\n> +                \"high\": \"mozilla::StartupTimeline::MAX_EVENT_ID\",\n> +                \"n_values\": \"mozilla::StartupTimeline::MAX_EVENT_ID\"\n> +                }}\n> +\n> +        histograms = load_histogram(SAMPLE_HISTOGRAM)\n> +        hist = histogram_tools.Histogram('A11Y_INSTANTIATED_FLAG',\n\nAlso rename this to TEST_NON_NUMERIC_HISTOGRAM since we're not using A11Y anymore.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:55\n(Diff revision 2)\n> +        histograms = load_histogram(SAMPLE_HISTOGRAM)\n> +        hist = histogram_tools.Histogram('A11Y_INSTANTIATED_FLAG',\n> +                                         histograms['A11Y_INSTANTIATED_FLAG'],\n> +                                         strict_type_checks=False)\n> +\n> +        self.assertEqual(hist.n_buckets(), 101)\n\nnit: please add a comment mentioning that the expected values come off histogram_tools.py\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:56\n(Diff revision 2)\n> +        hist = histogram_tools.Histogram('A11Y_INSTANTIATED_FLAG',\n> +                                         histograms['A11Y_INSTANTIATED_FLAG'],\n> +                                         strict_type_checks=False)\n> +\n> +        self.assertEqual(hist.n_buckets(), 101)\n> +        self.assertEqual(hist.low(), 101)\n\nLet's drop this check.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:58\n(Diff revision 2)\n> +                                         strict_type_checks=False)\n> +\n> +        self.assertEqual(hist.n_buckets(), 101)\n> +        self.assertEqual(hist.low(), 101)\n> +        self.assertEqual(hist.high(), 12)\n> +        self.assertEqual(hist.n_values(), 12)\n\nLet's drop this check.", "author": "alessio.placitelli@gmail.com", "id": 12434231, "time": "2017-06-28T17:18:10Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review158032\n\nDoes this pass the ./mach lint -f flake8 toolkit/components/telemetry linting?", "author": "alessio.placitelli@gmail.com", "id": 12434238, "time": "2017-06-28T17:19:35Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/148124/diff/2-3/", "author": "raajit.raj@gmail.com", "id": 12441976, "time": "2017-07-02T07:13:29Z"}, {"text": "Hi Dexter, I have uploaded a patch and I think it will get r- for the docstring you requested. Can you please suggest me a better comment? I'm not good with these stuff. \n\nOne more thing, I tried running the lint command for which I'm getting an error. Is there something I need to install?\nhttps://pastebin.mozilla.org/9026185", "author": "raajit.raj@gmail.com", "id": 12441980, "time": "2017-07-02T07:19:58Z"}, {"text": "Hey Raajit, the pastebin looks empty. What's the error you're seeing? Make sure you pick a longer retention time on the pastebin (a month would do) so that we don't risk loosing the messages again :)", "author": "alessio.placitelli@gmail.com", "id": 12444089, "time": "2017-07-03T11:14:37Z"}, {"text": "Anyway, here's the output of the flake8 command on your latest patch:\n\n> $ ./mach lint -l flake8 toolkit/components/telemetry/\n> c:\\mozilla-central\\toolkit\\components\\telemetry\\tests\\python\\test_histogramtools_non_strict.py\n>   13:1  error  module level import not at top of file                              E402 (flake8)\n>   15:1  error  expected 2 blank lines, found 1                                     E302 (flake8)\n>   23:1  error  expected 2 blank lines, found 1                                     E302 (flake8)\n>   70:1  error  expected 2 blank lines after class or function definition, found 1  E305 (flake8)\n> \n> ? 4 problems (4 errors, 0 warnings)", "author": "alessio.placitelli@gmail.com", "id": 12444126, "time": "2017-07-03T12:08:39Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review159110\n\nThis looks like it's almost done, good job. Please make sure to also address the comments from the previous reviews, a few of them are still unaddressed.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:13\n(Diff revision 3)\n> +import unittest\n> +from os import path\n> +\n> +TELEMETRY_ROOT_PATH = path.abspath(path.join(path.dirname(__file__), path.pardir, path.pardir))\n> +sys.path.append(TELEMETRY_ROOT_PATH)\n> +import histogram_tools\n\nnit: flake8 mentions that 2 blanks are expected after this, only one is found. Please add an additional blank line.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:13\n(Diff revision 3)\n> +import unittest\n> +from os import path\n> +\n> +TELEMETRY_ROOT_PATH = path.abspath(path.join(path.dirname(__file__), path.pardir, path.pardir))\n> +sys.path.append(TELEMETRY_ROOT_PATH)\n> +import histogram_tools\n\nnit: please change this line to:\n\n```\nimport histogram_tools  # noqa: E402\n```\n\nThis will stop flake8 from complaining about including histogram_tools not at the top.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:21\n(Diff revision 3)\n> +    \"\"\"Parse the passed Histogram and return a dictionary mapping histogram\n> +    names to histogram parameters\n> +    \"\"\"\n> +    def hook(ps):\n> +        return histogram_tools.load_histograms_into_dict(ps, strict_type_checks=False)\n> +    return json.loads(json.dumps(histograms), object_pairs_hook=hook)\n\nnit: flake8 mentions that 2 blanks are expected after this, only one is found. Please add an additional blank line.\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:68\n(Diff revision 3)\n> +        test_histogram = [i for i in all_histograms if i.name() == 'TELEMETRY_TEST_FLAG'][0]\n> +\n> +        self.assertEqual(test_histogram.expiration(), 'never')\n> +        self.assertEqual(test_histogram.kind(), 'flag')\n> +        self.assertEqual(test_histogram.record_in_processes(), [\"main\", \"content\"])\n> +        self.assertEqual(test_histogram.keyed(), False)\n\nnit: flake8 mentions that 2 blanks are expected after this, only one is found. Please add an additional blank line.", "author": "alessio.placitelli@gmail.com", "id": 12444175, "time": "2017-07-03T12:54:47Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review159114\n\n::: toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py:16\n(Diff revision 3)\n> +TELEMETRY_ROOT_PATH = path.abspath(path.join(path.dirname(__file__), path.pardir, path.pardir))\n> +sys.path.append(TELEMETRY_ROOT_PATH)\n> +import histogram_tools\n> +\n> +def load_histogram(histograms):\n> +    \"\"\"Parse the passed Histogram and return a dictionary mapping histogram\n\nWhile the comment is clear, you should really be following the style from [here](http://searchfox.org/mozilla-central/rev/fdb811340ac4e6b93703d72ee99217f3b1d250ac/toolkit/components/telemetry/parse_scalars.py#44)", "author": "alessio.placitelli@gmail.com", "id": 12444177, "time": "2017-07-03T12:56:35Z"}, {"text": "Hey Raajit, are you stuck on something and need help?", "author": "alessio.placitelli@gmail.com", "id": 12466898, "time": "2017-07-12T13:35:35Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/148124/diff/3-4/", "author": "raajit.raj@gmail.com", "id": 12476180, "time": "2017-07-16T17:24:46Z"}, {"text": "Hi Dexter, I'm really sorry for the delay I was caught up with some work and my internet was also not working last week (not making excuses).\n\nI have uploaded the patch with changes, I hope everything will be fine now.\n\nThank you for your help. :)", "author": "raajit.raj@gmail.com", "id": 12476182, "time": "2017-07-16T17:29:37Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review162790\n\nThis looks good now, thanks.", "author": "alessio.placitelli@gmail.com", "id": 12478312, "time": "2017-07-17T07:58:39Z"}, {"text": "Comment on attachment 8876795\nBug 1368713 - Add test coverage for parsing historical Histograms.json formats\n\nhttps://reviewboard.mozilla.org/r/148124/#review152784\n\n> nit: I know you didn't do this but, since we're here, would you kindly indent this line with 4 spaces instead of 2?\n\nDid you miss this change?", "author": "alessio.placitelli@gmail.com", "id": 12478313, "time": "2017-07-17T07:59:47Z"}, {"text": "(In reply to Raajit Raj(:raajitr) from comment #31)\n> Hi Dexter, I'm really sorry for the delay I was caught up with some work and\n> my internet was also not working last week (not making excuses).\n> \n> I have uploaded the patch with changes, I hope everything will be fine now.\n> \n> Thank you for your help. :)\n\nNo problem and no pressure! I was just asking to make sure you were not stuck on something, you don't need to explain ;) Stuff happens!\n\nAlso, don't mind comment 33. I triggered a try push now, if no problem is reported, we'll be good to land :)", "author": "alessio.placitelli@gmail.com", "id": 12478314, "time": "2017-07-17T08:01:30Z"}, {"text": "The python tests are executed automatically as part of the build job \"B\". Everything seems to look ok, so let's land this \\o/\n\n> [task 2017-07-17T08:22:29.241321Z] 08:22:29     INFO - /home/worker/workspace/build/src/toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py\n> [task 2017-07-17T08:22:29.241554Z] 08:22:29     INFO - TEST-PASS | /home/worker/workspace/build/src/toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py | TestParser.test_current_histogram\n> [task 2017-07-17T08:22:29.241796Z] 08:22:29     INFO - TEST-PASS | /home/worker/workspace/build/src/toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py | TestParser.test_non_numeric_expressions\n> [task 2017-07-17T08:22:29.242111Z] 08:22:29     INFO - TEST-PASS | /home/worker/workspace/build/src/toolkit/components/telemetry/tests/python/test_histogramtools_non_strict.py | TestParser.test_unknown_field", "author": "alessio.placitelli@gmail.com", "id": 12478410, "time": "2017-07-17T08:55:44Z"}, {"text": "Pushed by alessio.placitelli@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/4da0146f568a\nAdd test coverage for parsing historical Histograms.json formats r=Dexter", "author": "pulsebot@bots.tld", "id": 12478413, "time": "2017-07-17T08:56:58Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/4da0146f568a", "author": "kwierso@gmail.com", "id": 12481279, "time": "2017-07-18T00:01:55Z"}, {"text": "*** Bug 1264984 has been marked as a duplicate of this bug. ***", "author": "alessio.placitelli@gmail.com", "id": 13254563, "time": "2018-05-04T13:22:07Z"}], "id": 1368713, "priority": "P3", "cc": ["alessio.placitelli@gmail.com", "chutten@mozilla.com", "raajit.raj@gmail.com"], "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "status": "RESOLVED", "product": "Toolkit", "cf_fx_iteration": "---", "blocks": [1383793], "qa_contact": "", "creation_time": "2017-05-30T14:53:59Z", "cf_status_firefox_esr52": "---", "component": "Telemetry", "assigned_to_detail": {"email": "raajit.raj@gmail.com", "id": 593789, "name": "raajit.raj@gmail.com", "real_name": "Raajit Raj(:raajitr)"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "mozilla56", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "gfritzsche@mozilla.com", "id": 439671, "name": "gfritzsche@mozilla.com", "real_name": "Georg Fritzsche [:gfritzsche]"}, "whiteboard": "[lang=python]", "mentors": ["alessio.placitelli@gmail.com"], "summary": "Test histogram_tools.py against historic Histograms.json formats", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-04T13:22:07Z", "assigned_to": "raajit.raj@gmail.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "raajit.raj@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(gfritzsche@mozilla.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-04T14:16:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "alessio.placitelli@gmail.com"}, {"removed": "needinfo?(gfritzsche@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(alessio.placitelli@gmail.com)"}], "who": "gfritzsche@mozilla.com", "when": "2017-06-05T07:54:56Z"}, {"changes": [{"removed": "needinfo?(alessio.placitelli@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(gfritzsche@mozilla.com)"}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-06T08:42:40Z"}, {"changes": [{"removed": "needinfo?(gfritzsche@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "gfritzsche@mozilla.com", "when": "2017-06-06T08:53:58Z"}, {"changes": [{"removed": "gfritzsche@mozilla.com", "field_name": "bug_mentor", "added": "alessio.placitelli@gmail.com"}], "who": "gfritzsche@mozilla.com", "when": "2017-06-06T09:02:31Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(raajit.raj@gmail.com)"}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-06T09:43:12Z"}, {"changes": [{"removed": "needinfo?(raajit.raj@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-06T13:28:34Z"}, {"changes": [{"removed": "needinfo?(alessio.placitelli@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-06T13:43:38Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "raajit.raj@gmail.com"}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-06T13:43:59Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-12T17:47:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8876795, "added": "review?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-12T17:50:24Z"}, {"changes": [{"removed": "needinfo?(alessio.placitelli@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-13T09:43:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(alessio.placitelli@gmail.com)", "attachment_id": 8876795, "added": ""}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-13T10:33:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "chutten@mozilla.com"}, {"removed": "", "field_name": "depends_on", "added": "1335343"}], "who": "chutten@mozilla.com", "when": "2017-06-13T14:35:13Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(raajit.raj@gmail.com)"}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-14T07:50:32Z"}, {"changes": [{"removed": "needinfo?(raajit.raj@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-19T17:10:10Z"}, {"changes": [{"removed": "needinfo?(alessio.placitelli@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(raajit.raj@gmail.com)"}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-20T07:17:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fossbalaji@gmail.com"}], "who": "fossbalaji@gmail.com", "when": "2017-06-27T17:58:26Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Bug 1368713 - Test histogram_tools.py against historic Histograms.json formats for non strict mode", "attachment_id": 8876795, "added": "Bug 1368713 - Add test coverage for parsing historical Histograms.json formats"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8876795, "added": "review?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-27T18:06:16Z"}, {"changes": [{"removed": "needinfo?(raajit.raj@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-06-27T18:35:38Z"}, {"changes": [{"removed": "needinfo?(alessio.placitelli@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-28T16:48:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(alessio.placitelli@gmail.com)", "attachment_id": 8876795, "added": ""}], "who": "alessio.placitelli@gmail.com", "when": "2017-06-28T17:18:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8876795, "added": "review?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-07-02T07:13:29Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-07-02T07:19:58Z"}, {"changes": [{"removed": "needinfo?(alessio.placitelli@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(raajit.raj@gmail.com)"}], "who": "alessio.placitelli@gmail.com", "when": "2017-07-03T11:14:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(alessio.placitelli@gmail.com)", "attachment_id": 8876795, "added": ""}], "who": "alessio.placitelli@gmail.com", "when": "2017-07-03T12:54:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8876795, "added": "review?(alessio.placitelli@gmail.com)"}], "who": "raajit.raj@gmail.com", "when": "2017-07-16T17:24:46Z"}, {"changes": [{"removed": "needinfo?(raajit.raj@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "raajit.raj@gmail.com", "when": "2017-07-16T17:29:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(alessio.placitelli@gmail.com)", "attachment_id": 8876795, "added": "review+"}], "who": "alessio.placitelli@gmail.com", "when": "2017-07-17T07:58:39Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla56"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2017-07-18 00:01:55"}, {"removed": "---", "field_name": "cf_status_firefox56", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2017-07-18T00:01:55Z"}, {"changes": [{"removed": "fossbalaji@gmail.com", "field_name": "cc", "added": ""}], "who": "fossbalaji@gmail.com", "when": "2017-07-18T04:51:26Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1383793"}], "who": "alessio.placitelli@gmail.com", "when": "2017-07-24T16:00:53Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}