{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "mats@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-12-16T20:58:41Z", "type_id": 4, "creation_date": "2015-12-11T17:12:00Z", "id": 1307247, "setter": "dholbert@mozilla.com"}], "content_type": "text/plain", "id": 8697609}, {"creator": "mats@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-12-16T21:12:01Z", "type_id": 4, "creation_date": "2015-12-11T17:14:12Z", "id": 1307253, "setter": "dholbert@mozilla.com"}], "content_type": "text/plain", "id": 8697615}, {"creator": "mats@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8697618}, {"creator": "mats@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8697619}, {"creator": "mats@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8697621}, {"creator": "mats@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-12-16T22:26:24Z", "type_id": 4, "creation_date": "2015-12-11T18:44:44Z", "id": 1307285, "setter": "dholbert@mozilla.com"}], "content_type": "text/plain", "id": 8697635}, {"creator": "mats@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-12-16T22:32:35Z", "type_id": 4, "creation_date": "2015-12-11T18:47:53Z", "id": 1307287, "setter": "dholbert@mozilla.com"}], "content_type": "text/plain", "id": 8697638}, {"creator": "mats@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8697639}], "classification": "Components", "creator": "mats@mozilla.com", "cc": ["dholbert@mozilla.com", "percyley@qq.com"], "depends_on": [1009214, 1151214], "creation_time": "2015-04-04T18:58:15Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "[css-grid] Implement Static Position of Grid Container Children", "id": 1151243, "assigned_to_detail": {"email": "mats@mozilla.com", "id": 5168, "name": "mats@mozilla.com", "real_name": "Mats Palmgren (:mats)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "mats@mozilla.com", "comment_count": 21, "comments": [{"text": "http://dev.w3.org/csswg/css-grid/#static-position", "author": "mats@mozilla.com", "id": 10119138, "time": "2015-04-04T18:58:15Z"}, {"text": "Additional resolutions from CSSWG meeting:\nhttps://lists.w3.org/Archives/Public/www-style/2015May/0280.html", "author": "mats@mozilla.com", "id": 10354271, "time": "2015-06-06T23:19:55Z"}, {"text": "(I'm planning to start on this pretty soon, BTW.)", "author": "dholbert@mozilla.com", "id": 10949382, "time": "2015-11-19T23:44:29Z"}, {"text": "(Actually, per mats' suggestion, I'm going to look at bug 1151243 first.)", "author": "dholbert@mozilla.com", "id": 10952274, "time": "2015-11-20T19:38:02Z"}, {"text": "(bug 1151204, that is.)", "author": "dholbert@mozilla.com", "id": 10952275, "time": "2015-11-20T19:38:17Z"}, {"text": "Taking this, patch coming up...", "author": "mats@mozilla.com", "id": 10998185, "time": "2015-12-10T02:20:55Z"}, {"text": "Created attachment 8697609\npart 1 - Replace three bool params for nsAbsoluteContainingBlock::Reflow with a flag param (idempotent patch).", "author": "mats@mozilla.com", "id": 11001309, "time": "2015-12-11T17:12:00Z"}, {"text": "Created attachment 8697615\npart 2 - [css-grid] Add a eIsGridContainerCB flag for nsAbsoluteContainingBlock::Reflow to trigger Grid specific code (rather than checking GetType()).\n\n(also idempotent patch)", "author": "mats@mozilla.com", "id": 11001318, "time": "2015-12-11T17:14:12Z"}, {"text": "Created attachment 8697618\npart 3 - [css-grid] Add a generic nsHTMLReflowState::STATIC_POS_IS_CB_ORIGIN flag to place the static-position at the CB origin, and make nsAbsoluteContainingBlock use it in Grid containers", "author": "mats@mozilla.com", "id": 11001324, "time": "2015-12-11T17:16:36Z"}, {"text": "Created attachment 8697619\npart 4 - Some code cleanup in nsHTMLReflowState::CalculateHypotheticalPosition, and make a few methods 'const' (idempotent patch).", "author": "mats@mozilla.com", "id": 11001327, "time": "2015-12-11T17:17:33Z"}, {"text": "Created attachment 8697621\npart 5 - [css-grid] Reftests for abs. pos. static-position.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=cb048e39dff6", "author": "mats@mozilla.com", "id": 11001333, "time": "2015-12-11T17:18:11Z"}, {"text": "Comment on attachment 8697618\npart 3 - [css-grid] Add a generic nsHTMLReflowState::STATIC_POS_IS_CB_ORIGIN flag to place the static-position at the CB origin, and make nsAbsoluteContainingBlock use it in Grid containers\n\nBTW, this part does not add any code for child placeholders when the grid\ncontainer isn't the abs.pos. CB for them.  For that case, 10.2 says:\n\"The static position [CSS21] of an absolutely-positioned child of a grid container is determined as if it were the sole grid item in a grid area whose edges coincide with the padding edges of the grid container.\"\n\nThis seems a bit odd to me, and Chrome doesn't do that either so I'm\ncontemplating raising a spec issue.  We currently use the content edge\n(same as Chrome) which seems more natural as a static-position (in the\n\"that's where it would be if it were in-flow\" sense).  But then again,\nits position isn't influenced by distribution so that might be odd too.\n\nAnyway, there might come a follow-up patch here for that case...", "author": "mats@mozilla.com", "id": 11001359, "time": "2015-12-11T17:33:55Z"}, {"text": "Created attachment 8697635\npart 3 - [css-grid] Add a generic nsHTMLReflowState::STATIC_POS_IS_CB_ORIGIN flag to place the static-position at the CB origin, and make nsAbsoluteContainingBlock use it in Grid containers\n\nAdded a one-liner to put placeholders at the padding edge,\nso we do what the spec says for now.", "author": "mats@mozilla.com", "id": 11001467, "time": "2015-12-11T18:44:44Z"}, {"text": "Created attachment 8697638\npart 4 - Some code cleanup in nsHTMLReflowState::CalculateHypotheticalPosition, and make a few methods 'const' (idempotent patch).\n\nMoved a code change here that was mistakenly included in the reftest patch.", "author": "mats@mozilla.com", "id": 11001482, "time": "2015-12-11T18:47:53Z"}, {"text": "Created attachment 8697639\npart 5 - [css-grid] Reftests for abs. pos. static-position.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=91a9978eb8e8", "author": "mats@mozilla.com", "id": 11001487, "time": "2015-12-11T18:48:55Z"}, {"text": "Comment on attachment 8697609\npart 1 - Replace three bool params for nsAbsoluteContainingBlock::Reflow with a flag param (idempotent patch).\n\nReview of attachment 8697609:\n-----------------------------------------------------------------\n\n::: layout/generic/nsAbsoluteContainingBlock.h\n@@ +68,5 @@\n>    void RemoveFrame(nsIFrame*      aDelegatingFrame,\n>                     ChildListID    aListID,\n>                     nsIFrame*      aOldFrame);\n>  \n> +  enum AbsPosReflowFlags {\n\nI think this should be \"enum class\" (not just \"enum\"), because:\n (1) It's more type-safe and hence foolproof.\n (2) You're using MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS, which I think only makes sense with an enum class.  (With a traditional enum, it's just a glorified \"int\" or \"uint\", so bitwise operators Just Work -- no need for the macro.)\n\n(The downside of \"enum class\" is that the enum-names get a bit more verbose -- they might end up being something like \"nsAbsoluteContainingBlock::AbsPosReflowFlags::eConstrainHeight\".  To avoid that, you could either move this enum outside of the nsAbsoluteContainingBlock {...} class-scope, or -- probably better -- you could add a local typedef in each .cpp file that uses these values (something like \"typedef nsAbsoluteContainingBlock::AbsPosReflowFlags AbsPosReflowFlags\").\n\n@@ +69,5 @@\n>                     ChildListID    aListID,\n>                     nsIFrame*      aOldFrame);\n>  \n> +  enum AbsPosReflowFlags {\n> +    eConstrainHeight = 0x1, \n\nFix trailing whitespace here.\n\n@@ +96,5 @@\n>                nsPresContext*           aPresContext,\n>                const nsHTMLReflowState& aReflowState,\n>                nsReflowStatus&          aReflowStatus,\n>                const nsRect&            aContainingBlock,\n> +              AbsPosReflowFlags              aFlags,\n\nFix odd indentation here.", "author": "dholbert@mozilla.com", "id": 11011865, "time": "2015-12-16T20:58:41Z"}, {"text": "Comment on attachment 8697615\npart 2 - [css-grid] Add a eIsGridContainerCB flag for nsAbsoluteContainingBlock::Reflow to trigger Grid specific code (rather than checking GetType()).\n\nReview of attachment 8697615:\n-----------------------------------------------------------------\n\nr=me, nits below:\n\n::: layout/generic/nsAbsoluteContainingBlock.cpp\n@@ +123,5 @@\n>    // The 'width' check below is an optimization to avoid the virtual GetType()\n>    // call in most cases.  'aContainingBlock' isn't used for grid items,\n>    // each item has its own CB on a frame property instead.\n>    // @see nsGridContainerFrame::ReflowChildren\n> +  const bool isGrid = aFlags & eIsGridContainerCB;\n\nThe comment before this line needs removing/adjusting. (It's about the VERY_LIKELY_A_GRID_CONTAINER width-check, which you've now removed.)\n\n::: layout/generic/nsGridContainerFrame.cpp\n@@ +3241,5 @@\n>          *cb = itemCB.GetPhysicalRect(wm, gridCBPhysicalSize);\n>        }\n> +      // We pass a dummy rect as CB because each child has its own CB rect.\n> +      // The eIsGridContainerCB flag tells nsAbsoluteContainingBlock::Reflow to\n> +      // use those instead.\n\nConsider mentioning the grid area (which is the CB you're hinting at) in the first sentence here -- e.g. add \"(from its grid area)\" at the end of that sentence.", "author": "dholbert@mozilla.com", "id": 11011920, "time": "2015-12-16T21:12:01Z"}, {"text": "Comment on attachment 8697635\npart 3 - [css-grid] Add a generic nsHTMLReflowState::STATIC_POS_IS_CB_ORIGIN flag to place the static-position at the CB origin, and make nsAbsoluteContainingBlock use it in Grid containers\n\nReview of attachment 8697635:\n-----------------------------------------------------------------\n\nr=me, nits below:\n\n::: layout/generic/nsAbsoluteContainingBlock.cpp\n@@ +388,5 @@\n>        aReflowState.ComputedSizeWithPadding(wm).ISize(wm);\n>    }\n>  \n> +  uint32_t flags = 0;\n> +  if (aFlags & eIsGridContainerCB) {\n\nMaybe rename \"flags\" to \"rsFlags\" (rs for reflow state), to make them more clearly-distinct from \"aFlags\"?\n\nTo avoid confusion, I'd like to avoid having \"foo\" and \"aFoo\" variables in-scope simultaneously, particularly if they represent different things (as is the case here).\n\n@@ +391,5 @@\n> +  uint32_t flags = 0;\n> +  if (aFlags & eIsGridContainerCB) {\n> +    // For a grid container child that has its parent as the abs.pos. CB\n> +    // the static-position is the CB origin.\n> +    // https://drafts.csswg.org/css-grid/#static-position\n\nThe phrase \"its parent as the abs.pos. CB\" is misleading/incorrect here, I think.\n\nIf we get to this code, IIUC, it means we have an abspos element that's being positioned with its *grid area* being the abspos CB -- right? (not its parent) The spec distinguishes this in 10.1 by saying the grid *generates* the abspos CB, rather than the grid *being* the abspos CB.\n\n[Separately: there are also cases where we have e.g.\n <positioned block>\n   <grid>\n     <abspos child, positioned w.r.t. grandparent>\n...and we need to find the static position of the abspos thing, which happens to be a child of a grid.  I think that's the case that the #static-position section (10.2) initially focuses on, RE using the actual grid container's padding-box origin. But I don't think that scenario ends up in this code, does it?  I'd expect we address that scenario by putting the placeholder (a child frame of the grid) at position 0,0 in our padding box. It looks like you're adding code to handle that in nsGridContainerFrame; cool.]\n\nIN ANY CASE: please clarify this code-comment to make it clearer what containing-block you're talking about & whether you actually mean the grid itself (I don't think you do) vs. a grid area, i.e. a CB that's \"generated by the grid\".\n\n@@ +489,1 @@\n>        r.x += aContainingBlock.x;\n\nPlease update the comment above this block.  Right now, the comment declares that we don't need to add an offset if the frame has \"auto\" on both sides -- but you're adding an exception to that rule.\n\n::: layout/generic/nsGridContainerFrame.cpp\n@@ +3206,5 @@\n>                      LogicalPoint(childWM), dummyContainerSize, 0, childStatus);\n>        }\n> +    } else {\n> +      // Put a placeholder at the padding edge, in case we're not its CB.\n> +      childPos -= padStart;\n\nSimilar to my comment above for nsAbsoluteContainingBlock.cpp, \"in case we're not its CB\" is misleading here -- \"we\" (the grid) are generally *never* the CB, even when we're positioned.  It'd be some grid area that would be the CB in that case.\n\nMaybe adjust to say \"in case we aren't the frame that generates its CB\"?\n\n::: layout/generic/nsHTMLReflowState.h\n@@ +682,5 @@\n>      COMPUTE_SIZE_SHRINK_WRAP = (1<<2),\n> +\n> +    // The caller wants the abs.pos. static-position resolved at the origin\n> +    // of the containing block, i.e. at LogicalPoint(0, 0).\n> +    STATIC_POS_IS_CB_ORIGIN = (1<<4),\n\nI think this should be 1<<3, right? That's the next unused bit here.\n\n(We have 1<<0, 1<<1, 1<<2, and the next bit would be 1<<3. I suspect you're thinking in terms of 0xWhatever instead of 1<<Whatever; the 2 to 4 jump is an easy mistake to make, from that mindset.)", "author": "dholbert@mozilla.com", "id": 11012206, "time": "2015-12-16T22:26:24Z"}, {"text": "Comment on attachment 8697638\npart 4 - Some code cleanup in nsHTMLReflowState::CalculateHypotheticalPosition, and make a few methods 'const' (idempotent patch).\n\nReview of attachment 8697638:\n-----------------------------------------------------------------\n\nThis cleanup looks nice -- thanks! r=me", "author": "dholbert@mozilla.com", "id": 11012218, "time": "2015-12-16T22:32:35Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/0937bbc778f3\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/a296d149c69e\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0f8a939a1213\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/4cf8b95e28d0\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/1849d8dd6361", "author": "pulsebot@bots.tld", "id": 11026268, "time": "2015-12-22T22:04:40Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/0937bbc778f3\nhttps://hg.mozilla.org/mozilla-central/rev/a296d149c69e\nhttps://hg.mozilla.org/mozilla-central/rev/0f8a939a1213\nhttps://hg.mozilla.org/mozilla-central/rev/4cf8b95e28d0\nhttps://hg.mozilla.org/mozilla-central/rev/1849d8dd6361", "author": "cbook@mozilla.com", "id": 11027508, "time": "2015-12-23T11:03:26Z"}], "cf_last_resolved": "2015-12-23T11:03:26Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-12-23T12:48:24Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [616605, 874718, 1217086], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Layout", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox40": "affected", "target_milestone": "mozilla46", "is_cc_accessible": true, "cf_status_firefox46": "fixed", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "mats@mozilla.com", "id": 5168, "name": "mats@mozilla.com", "real_name": "Mats Palmgren (:mats)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, {"email": "percyley@qq.com", "id": 543470, "name": "percyley@qq.com", "real_name": ""}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"status": "+", "name": "in-testsuite", "modification_date": "2015-12-23T12:48:24Z", "type_id": 37, "creation_date": "2015-12-23T12:48:24Z", "id": 1312916, "setter": "mats@mozilla.com"}], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "dholbert@mozilla.com"}], "who": "dholbert@mozilla.com", "when": "2015-10-13T20:30:34Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "dholbert@mozilla.com"}], "who": "dholbert@mozilla.com", "when": "2015-10-29T16:17:23Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1217086"}], "who": "mats@mozilla.com", "when": "2015-11-04T19:55:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "percyley@qq.com"}], "who": "percyley@qq.com", "when": "2015-11-25T02:23:14Z"}, {"changes": [{"removed": "dholbert@mozilla.com", "field_name": "assigned_to", "added": "mats@mozilla.com"}], "who": "mats@mozilla.com", "when": "2015-12-10T02:20:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8697609, "added": "review?(dholbert@mozilla.com)"}], "who": "mats@mozilla.com", "when": "2015-12-11T17:12:00Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8697615, "added": "review?(dholbert@mozilla.com)"}], "who": "mats@mozilla.com", "when": "2015-12-11T17:14:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8697618, "added": "review?(dholbert@mozilla.com)"}], "who": "mats@mozilla.com", "when": "2015-12-11T17:16:36Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8697619, "added": "review?(dholbert@mozilla.com)"}], "who": "mats@mozilla.com", "when": "2015-12-11T17:17:33Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8697618, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8697618, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8697635, "added": "review?(dholbert@mozilla.com)"}], "who": "mats@mozilla.com", "when": "2015-12-11T18:44:44Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8697619, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8697619, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8697638, "added": "review?(dholbert@mozilla.com)"}], "who": "mats@mozilla.com", "when": "2015-12-11T18:47:53Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8697621, "added": "1"}], "who": "mats@mozilla.com", "when": "2015-12-11T18:48:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8697609, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2015-12-16T20:58:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8697615, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2015-12-16T21:12:01Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "874718"}], "who": "dholbert@mozilla.com", "when": "2015-12-16T21:18:38Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8697635, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2015-12-16T22:26:24Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8697638, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2015-12-16T22:32:35Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla46"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-12-23 03:03:26"}, {"removed": "---", "field_name": "cf_status_firefox46", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-12-23T11:03:26Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "in-testsuite+"}], "who": "mats@mozilla.com", "when": "2015-12-23T12:48:24Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}