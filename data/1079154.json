{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8510587}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8510589}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-18T21:19:51Z", "type_id": 4, "creation_date": "2014-12-18T18:45:09Z", "id": 1057648, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8538625}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8538626}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8538627}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8538628}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8538629}, {"creator": "jfkthame@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-22T22:03:18Z", "type_id": 4, "creation_date": "2014-12-19T13:47:45Z", "id": 1058560, "setter": "smontagu@smontagu.org"}], "content_type": "text/plain", "id": 8539250}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-22T21:36:44Z", "type_id": 4, "creation_date": "2014-12-22T21:36:44Z", "id": 1060451, "setter": "smontagu@smontagu.org"}], "content_type": "text/plain", "id": 8540349}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T13:08:06Z", "type_id": 4, "creation_date": "2014-12-22T21:45:51Z", "id": 1060459, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540352}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T13:09:00Z", "type_id": 4, "creation_date": "2014-12-22T21:47:37Z", "id": 1060461, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540354}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T13:12:21Z", "type_id": 4, "creation_date": "2014-12-22T21:50:42Z", "id": 1060466, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540361}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T21:07:20Z", "type_id": 4, "creation_date": "2014-12-22T21:57:01Z", "id": 1060476, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540365}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T18:42:16Z", "type_id": 4, "creation_date": "2014-12-22T22:00:55Z", "id": 1060477, "setter": "dholbert@mozilla.com"}], "content_type": "text/plain", "id": 8540367}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T17:18:57Z", "type_id": 4, "creation_date": "2014-12-22T22:02:33Z", "id": 1060479, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540371}, {"creator": "smontagu@smontagu.org", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-23T13:14:02Z", "type_id": 4, "creation_date": "2014-12-22T22:09:53Z", "id": 1060489, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540374}, {"creator": "smontagu@smontagu.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-24T09:55:30Z", "type_id": 4, "creation_date": "2014-12-23T23:23:48Z", "id": 1061550, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8540977}], "classification": "Components", "creator": "smontagu@smontagu.org", "cc": ["dholbert@mozilla.com", "fabien@cazenave.cc", "jfkthame@gmail.com", "martijn.martijn@gmail.com", "siqinbilige@gmail.com", "smontagu@smontagu.org", "stmit11@gmail.com"], "depends_on": [1121748, 1125808, 1133935, 1186147, 1200137], "creation_time": "2014-10-07T09:26:46Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Logical coordinate support for relative positioning", "id": 1079154, "assigned_to_detail": {"email": "smontagu@smontagu.org", "id": 11171, "name": "smontagu@smontagu.org", "real_name": "Simon Montagu :smontagu"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "smontagu@smontagu.org", "comment_count": 47, "comments": [{"text": "Part of support for vertical text", "author": "smontagu@smontagu.org", "id": 9412059, "time": "2014-10-07T09:26:46Z"}, {"text": "I'm not clear what the desirable and/or specified behaviour is here.  http://dev.w3.org/csswg/css-writing-modes/#vertical-layout includes \"positioning offsets\" among the properties that use flow-relative directions, but on the other hand \"the side of the box these properties apply to doesn\u2019t change: only which values are inputs to which layout calculations changes\".\n\nI don't know where that leaves us here, nor what code needs to change how.", "author": "smontagu@smontagu.org", "id": 9437842, "time": "2014-10-13T10:08:01Z"}, {"text": "Created attachment 8510587\nw-i-p patch 1 - ApplyRelativePositioning\n\nAttaching this w-i-p before I go on vacation. Other callsites also need to be fixed.", "author": "smontagu@smontagu.org", "id": 9493410, "time": "2014-10-23T20:54:40Z"}, {"text": "Created attachment 8510589\nw-i-p patch 2 - ReflowChild\n\nAnother w-i-p patch, again without all callsites patched.", "author": "smontagu@smontagu.org", "id": 9493416, "time": "2014-10-23T20:55:39Z"}, {"text": "Created attachment 8538625\npatch 1: add a != operator to LogicalPoint and sprinkle some const dust in WritingModes.h", "author": "smontagu@smontagu.org", "id": 9710678, "time": "2014-12-18T18:45:09Z"}, {"text": "Created attachment 8538626\npatch 2: add SetPhysicalPosition to LogicalRect and SetPosition with a LogicalPoint to nsIFrame", "author": "smontagu@smontagu.org", "id": 9710679, "time": "2014-12-18T18:45:51Z"}, {"text": "Created attachment 8538627\npatch 3: logical versions of ApplyRelativePositioning", "author": "smontagu@smontagu.org", "id": 9710683, "time": "2014-12-18T18:47:33Z"}, {"text": "Created attachment 8538628\npatch 4: Logical versions of ReflowChild and FinishReflowChild", "author": "smontagu@smontagu.org", "id": 9710688, "time": "2014-12-18T18:48:33Z"}, {"text": "Created attachment 8538629\npatch 5: convert callers of ApplyRelativePosition, ReflowChild and FinishReflowChild in layout/generic to the logical versions", "author": "smontagu@smontagu.org", "id": 9710694, "time": "2014-12-18T18:49:20Z"}, {"text": "Comment on attachment 8538625\npatch 1: add a != operator to LogicalPoint and sprinkle some const dust in WritingModes.h\n\nReview of attachment 8538625:\n-----------------------------------------------------------------\n\n::: layout/generic/WritingModes.h\n@@ +561,5 @@\n>                             GetPhysicalPoint(aFromMode, aContainerWidth),\n>                             aContainerWidth);\n>    }\n>  \n> +  bool operator==(const LogicalPoint aOther) const\n\nI've been wondering - should we pass LogicalPoints by const reference, like we typically do for larger structs? Especially for 32-bit processors (low-end mobile systems?), it might be preferable. WDYT?\n\nAs long as we're passing by value, the param doesn't really need to be constified here, though I suppose it doesn't hurt.", "author": "jfkthame@gmail.com", "id": 9711476, "time": "2014-12-18T21:19:51Z"}, {"text": "Comment on attachment 8538626\npatch 2: add SetPhysicalPosition to LogicalRect and SetPosition with a LogicalPoint to nsIFrame\n\nReview of attachment 8538626:\n-----------------------------------------------------------------\n\nI have an experimental patch that switches the actual storage of nsIFrame::mRect from physical to logical; I wonder whether that would be beneficial, on balance. But we can think about that in due course.... this looks OK for now.", "author": "jfkthame@gmail.com", "id": 9711538, "time": "2014-12-18T21:33:41Z"}, {"text": "Try push for this patch set (including reftest for bug 1102175) https://treeherder.mozilla.org/#/jobs?repo=try&revision=c3559fef6127", "author": "smontagu@smontagu.org", "id": 9714417, "time": "2014-12-19T10:51:01Z"}, {"text": "Comment on attachment 8538627\npatch 3: logical versions of ApplyRelativePositioning\n\nReview of attachment 8538627:\n-----------------------------------------------------------------\n\nClearing r? on this version of the patch: I think this can be simplified as discussed below. (And if so, the preceding patch can be updated similarly.)\n\n::: layout/generic/nsHTMLReflowState.h\n@@ +825,5 @@\n> +                           mozilla::LogicalPoint* aPosition,\n> +                           nscoord aContainerWidth) {\n> +    mozilla::LogicalRect rect(aWritingMode, *aPosition,\n> +                              aFrame->GetLogicalSize(aWritingMode));\n> +    nsPoint pos = rect.GetPhysicalPosition(aWritingMode, aContainerWidth);\n\nThe same idiom of converting a position for a rect from physical to logical via a temporary LogicalRect, occurred in the previous patch, too; should we have a convenience method for this? I'm not sure what to call it, though...\n\nMaybe a new method on LogicalPoint, like GetPhysicalPoint but with an additional param for the rect width:\n\n  nsPoint GetPhysicalPositionForRectWidth(nscoord aRectWidth,\n                                          WritingMode aWritingMode,\n                                          nscoord aContainerWidth);\n\nThis calls out the fact that it's the width of the rect that makes this potentially different from a simple GetPhysicalPoint conversion of the given position. That wouldn't be valid because RTL rects (either horizontal-rtl or vertical-rl) have their origin at the top right instead of the top left.\n\nIn fact (thinking as I write, here...), can't we do this more cleanly by simply subtracting the width of the rect from the container-width that we pass to GetPhysicalPoint()? I.e., I think these two lines can be replaced by\n\n  nscoord frameWidth = aFrame->GetSize().width;\n  nsPoint pos = aPosition->GetPhysicalPoint(aWritingMode,\n                                            aContainerWidth - frameWidth);\n\nI think this makes sense: we're just doing a standard logical/physical point conversion, with the added twist that if we're doing a horizontal \"reflection\" within a container width, we need to adjust this by the width of the target frame to account for the origin switching sides. Does this work?\n\n@@ +830,5 @@\n> +    ApplyRelativePositioning(aFrame,\n> +                             aComputedOffsets.GetPhysicalMargin(aWritingMode),\n> +                             &pos);\n> +    rect.SetPhysicalPosition(aWritingMode, pos, aContainerWidth);\n> +    *aPosition = rect.Origin(aWritingMode);\n\nAnd in view of the comment above, I think we can replace this with\n\n  *aPosition = mozilla::LogicalPoint(aWritingMode, pos,\n                                     aContainerWidth - frameWidth);", "author": "jfkthame@gmail.com", "id": 9714519, "time": "2014-12-19T11:16:12Z"}, {"text": "Comment on attachment 8538626\npatch 2: add SetPhysicalPosition to LogicalRect and SetPosition with a LogicalPoint to nsIFrame\n\nReview of attachment 8538626:\n-----------------------------------------------------------------\n\nI have an experimental patch that switches the actual storage of nsIFrame::mRect from physical to logical; I wonder whether that would be beneficial, on balance. But we can think about that in due course.... this looks OK for now.\n\n::: layout/generic/nsIFrame.h\n@@ +737,5 @@\n> +  void SetPosition(mozilla::WritingMode aWritingMode,\n> +                   mozilla::LogicalPoint aPt,\n> +                   nscoord aContainerWidth) {\n> +    mozilla::LogicalRect rect(aWritingMode, aPt, GetLogicalSize(aWritingMode));\n> +    mRect.MoveTo(rect.GetPhysicalPosition(aWritingMode, aContainerWidth));\n\nAfter thinking about patch 3, I propose\n\n  // We subtract mRect.width from the container width to account for the\n  // fact that logical origins in RTL coordinate systems are at the top right\n  // of the frame instead of the top left.\n  mRect.MoveTo(aPt.GetPhysicalPoint(aWritingMode, aContainerWidth - mRect.width));\n\nClearing review flag pending consideration of this option.", "author": "jfkthame@gmail.com", "id": 9714553, "time": "2014-12-19T11:25:44Z"}, {"text": "(In reply to Jonathan Kew (:jfkthame) from comment #9)\n> I've been wondering - should we pass LogicalPoints by const reference, like\n> we typically do for larger structs? Especially for 32-bit processors\n> (low-end mobile systems?), it might be preferable. WDYT?\n\nAs far as I can see we already do pass them by const reference everywhere in WritingMode.h except for operator==. I'll change == and != to do the same in this patch before checking in.", "author": "smontagu@smontagu.org", "id": 9714661, "time": "2014-12-19T11:55:55Z"}, {"text": "Comment on attachment 8538629\npatch 5: convert callers of ApplyRelativePosition, ReflowChild and FinishReflowChild in layout/generic to the logical versions\n\nReview of attachment 8538629:\n-----------------------------------------------------------------\n\n::: layout/generic/nsBlockReflowContext.cpp\n@@ +429,5 @@\n> +    LogicalRect(mWritingMode, mICoord, mBCoord,\n> +                mMetrics.ISize(mWritingMode),\n> +                mMetrics.BSize(mWritingMode)).ConvertTo(frameWM, mWritingMode,\n> +                                                        mContainerWidth);\n> +  LogicalPoint logPos = frameRect.Origin(frameWM);\n\nI think this should work (untested, by analogy with comments on earlier patches):\n\n  LogicalPoint logPos =\n    LogicalPoint(mWritingMode, mICoord, mBCoord).\n      ConvertTo(frameWM, mWritingMode, mContainerWidth - mMetrics.Width());\n\n::: layout/generic/nsColumnSetFrame.cpp\n@@ +484,5 @@\n>  \n>    nsIFrame* child = mFrames.FirstChild();\n> +  LogicalPoint childOrigin(wm, borderPadding.IStart(wm),\n> +                           borderPadding.BStart(wm));\n> +  nscoord containerWidth = aReflowState.ComputedWidth();\n\nIn the vertical-rl case, this is likely to be UNCONSTRAINED at this point; so then using this value in the MoveChildTo call below will throw the columns out of view to the right. :(\n\nThis feels rather like the problem we had with block elements within a vertical-rl div (bug 1088025). Until we've reflowed the children, we don't know the final block-size of their parent; but that's what we need as their container width.\n\n(Sorry, I haven't put together a vertical-rl columns reftest to automatically catch this yet. But it definitely breaks.)\n\nThere's already a fragment of code that adjusts the positions of child frames in the vertical-rl case after we've reflowed them all. Maybe this can be updated to handle this?", "author": "jfkthame@gmail.com", "id": 9714782, "time": "2014-12-19T12:53:32Z"}, {"text": "Comment on attachment 8538628\npatch 4: Logical versions of ReflowChild and FinishReflowChild\n\nReview of attachment 8538628:\n-----------------------------------------------------------------\n\n::: layout/generic/nsContainerFrame.cpp\n@@ +927,5 @@\n> +                              uint32_t                 aFlags,\n> +                              nsReflowStatus&          aStatus,\n> +                              nsOverflowContinuationTracker* aTracker)\n> +{\n> +  NS_PRECONDITION(aReflowState.frame == aKidFrame, \"bad reflow state\");\n\nCan we assert that aContainerWidth is not UNCONSTRAINED here, and similarly in FinishReflowChild? That might help us catch misuse of these methods.\n\n@@ +1089,5 @@\n> +  }\n> +\n> +  nsPoint newOrigin = aKidFrame->GetPosition();\n> +  if (!(aFlags & NS_FRAME_NO_MOVE_VIEW) &&\n> +      (curOrigin.x != newOrigin.x || curOrigin.y != newOrigin.y)) {\n\nCan't we just say (curOrigin != newOrigin) here?", "author": "jfkthame@gmail.com", "id": 9714787, "time": "2014-12-19T12:58:40Z"}, {"text": "Created attachment 8539250\nReftest for column child-frame positioning in vertical-rl mode\n\nHere's a reftest that demonstrates the problem with positioning the child frames of a column set. This passes with current trunk, but will fail with the current version of patch 5 here.", "author": "jfkthame@gmail.com", "id": 9714901, "time": "2014-12-19T13:47:45Z"}, {"text": "(In reply to Jonathan Kew (:jfkthame) from comment #16)\n> Comment on attachment 8538628\n> patch 4: Logical versions of ReflowChild and FinishReflowChild\n> \n> Can we assert that aContainerWidth is not UNCONSTRAINED here, and similarly\n> in FinishReflowChild? That might help us catch misuse of these methods.\n\nWe can, but the assertion will fire in some stress-testy crashtests that deliberately set huge widths -- see https://treeherder.mozilla.org/#/jobs?repo=try&revision=2dfc944ba087. We will have to either annotate the extra assertions or make it a warning instead.", "author": "smontagu@smontagu.org", "id": 9724425, "time": "2014-12-22T21:32:17Z"}, {"text": "Created attachment 8540349\npatch 1 v.2: add a != operator to LogicalPoint and sprinkle some const dust in WritingModes.h\n\nChanged to pass LogicalPoints by const ref per comment 9\n\nTransferring r=jfkthame", "author": "smontagu@smontagu.org", "id": 9724439, "time": "2014-12-22T21:36:44Z"}, {"text": "(In reply to Simon Montagu :smontagu from comment #18)\n> (In reply to Jonathan Kew (:jfkthame) from comment #16)\n> > Comment on attachment 8538628\n> > patch 4: Logical versions of ReflowChild and FinishReflowChild\n> > \n> > Can we assert that aContainerWidth is not UNCONSTRAINED here, and similarly\n> > in FinishReflowChild? That might help us catch misuse of these methods.\n> \n> We can, but the assertion will fire in some stress-testy crashtests that\n> deliberately set huge widths -- see\n> https://treeherder.mozilla.org/#/jobs?repo=try&revision=2dfc944ba087. We\n> will have to either annotate the extra assertions or make it a warning\n> instead.\n\nLooks like only a couple of crashtests are affected; given that, I think it'd be worth having the assertion here and annotating the tests that expect it. Debug builds are often so console-spammy from a variety of sources that a warning here may be too easy to overlook. :(", "author": "jfkthame@gmail.com", "id": 9724462, "time": "2014-12-22T21:41:06Z"}, {"text": "Created attachment 8540352\npatch 2 v.2: add SetPosition with a LogicalPoint to nsIFrame\n\nI like the suggestion in comments 12 and 13 a lot: it makes everything simpler and it means not only don't we need SetPhysicalPosition any more, we will also be able to get rid of GetPhysicalPosition in a follow-up patch. (You will have noticed that I incorporated this pattern into the fix for bug 1113526 too!)\n\n(In reply to Jonathan Kew (:jfkthame) from comment #10)\n\n> I have an experimental patch that switches the actual storage of\n> nsIFrame::mRect from physical to logical; I wonder whether that would be\n> beneficial, on balance.\n\nMy gut feeling is that we would still end up doing more conversions that way than if the storage is physical, but I'm more than open to benchmarking it and making the change if it's a win.", "author": "smontagu@smontagu.org", "id": 9724486, "time": "2014-12-22T21:45:51Z"}, {"text": "Created attachment 8540354\npatch 3: logical versions of ApplyRelativePositioning\n\nAgain, adopting the suggestion from comment 12", "author": "smontagu@smontagu.org", "id": 9724490, "time": "2014-12-22T21:47:37Z"}, {"text": "Created attachment 8540361\npatch 4 v.2: Logical versions of ReflowChild and FinishReflowChild\n\n(In reply to Jonathan Kew (:jfkthame) from comment #16)\n> > +      (curOrigin.x != newOrigin.x || curOrigin.y != newOrigin.y)) {\n> \n> Can't we just say (curOrigin != newOrigin) here?\n\nUm, good point. (I'll do the assertion or warning, whichever we decide on, in a separate patch)", "author": "smontagu@smontagu.org", "id": 9724506, "time": "2014-12-22T21:50:42Z"}, {"text": "Created attachment 8540365\npatch 5 v.2: convert callers of ApplyRelativePosition, ReflowChild and FinishReflowChild in layout/generic to the logical versions\n\nUpdated to comment 15. The original code for adjusting columns in vertical-rl mode is no longer necessary now that we're using logical coordinates in the main loop, so it's just replaced in this version with a new loop that does a different calculation with the post-reflow container width.", "author": "smontagu@smontagu.org", "id": 9724534, "time": "2014-12-22T21:57:01Z"}, {"text": "Created attachment 8540367\nPatch 6: convert ApplyRelativePosition, ReflowChild and FinishReflowChild in nsFlexContainerFrame to the logical versions\n\nThis is a bit clunky but is probably the best we can do until flexboxes are updated to use writing-mode throughout -- maybe it can wait for the time being - WDYT?", "author": "smontagu@smontagu.org", "id": 9724555, "time": "2014-12-22T22:00:55Z"}, {"text": "Created attachment 8540371\nPatch 7: remove obsoleted LogicalRect::GetPhysicalPosition\n\nAs I said above, this is no longer needed.", "author": "smontagu@smontagu.org", "id": 9724564, "time": "2014-12-22T22:02:33Z"}, {"text": "Created attachment 8540374\nPatch 4a: add assertions for UNCONSTRAINED width to ReflowChild and FinishReflowChild and annotate crashtests as necessary", "author": "smontagu@smontagu.org", "id": 9724604, "time": "2014-12-22T22:09:53Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=8884f915af0f", "author": "smontagu@smontagu.org", "id": 9724637, "time": "2014-12-22T22:17:04Z"}, {"text": "Comment on attachment 8540352\npatch 2 v.2: add SetPosition with a LogicalPoint to nsIFrame\n\nReview of attachment 8540352:\n-----------------------------------------------------------------\n\n::: layout/generic/nsIFrame.h\n@@ +726,5 @@\n>      SetRect(nsRect(mRect.TopLeft(), aSize));\n>    }\n>    void SetPosition(const nsPoint& aPt) { mRect.MoveTo(aPt); }\n> +  void SetPosition(mozilla::WritingMode aWritingMode,\n> +                   mozilla::LogicalPoint aPt,\n\npass aPt as const reference", "author": "jfkthame@gmail.com", "id": 9727173, "time": "2014-12-23T13:08:06Z"}, {"text": "Comment on attachment 8540361\npatch 4 v.2: Logical versions of ReflowChild and FinishReflowChild\n\nReview of attachment 8540361:\n-----------------------------------------------------------------\n\n::: layout/generic/nsContainerFrame.cpp\n@@ +921,5 @@\n>                                nsPresContext*           aPresContext,\n>                                nsHTMLReflowMetrics&     aDesiredSize,\n>                                const nsHTMLReflowState& aReflowState,\n> +                              WritingMode              aWM,\n> +                              LogicalPoint             aPos,\n\nconst reference\n\n@@ +1063,5 @@\n>                                      nsPresContext*             aPresContext,\n>                                      const nsHTMLReflowMetrics& aDesiredSize,\n>                                      const nsHTMLReflowState*   aReflowState,\n> +                                    WritingMode                aWM,\n> +                                    LogicalPoint               aPos,\n\nconst reference\n\n::: layout/generic/nsContainerFrame.h\n@@ +245,5 @@\n>                     nsPresContext*                 aPresContext,\n>                     nsHTMLReflowMetrics&           aDesiredSize,\n>                     const nsHTMLReflowState&       aReflowState,\n> +                   mozilla::WritingMode           aWM,\n> +                   mozilla::LogicalPoint          aPos,\n\nconst reference\n\n@@ +273,5 @@\n>                                  nsPresContext*             aPresContext,\n>                                  const nsHTMLReflowMetrics& aDesiredSize,\n>                                  const nsHTMLReflowState*   aReflowState,\n> +                                mozilla::WritingMode       aWM,\n> +                                mozilla::LogicalPoint      aPos,\n\nconst reference", "author": "jfkthame@gmail.com", "id": 9727189, "time": "2014-12-23T13:12:21Z"}, {"text": "Comment on attachment 8540374\nPatch 4a: add assertions for UNCONSTRAINED width to ReflowChild and FinishReflowChild and annotate crashtests as necessary\n\nReview of attachment 8540374:\n-----------------------------------------------------------------\n\n::: layout/generic/nsContainerFrame.cpp\n@@ +929,5 @@\n>                                nsOverflowContinuationTracker* aTracker)\n>  {\n>    NS_PRECONDITION(aReflowState.frame == aKidFrame, \"bad reflow state\");\n> +  NS_ASSERTION(aContainerWidth != NS_UNCONSTRAINEDSIZE,\n> +               \"ReflowChild with unconstrained width!\");\n\nmake this \"...unconstrained container-width\", please\n\n@@ +1070,5 @@\n>                                      nscoord                    aContainerWidth,\n>                                      uint32_t                   aFlags)\n>  {\n> +  NS_ASSERTION(aContainerWidth != NS_UNCONSTRAINEDSIZE,\n> +               \"FinishReflowChild with unconstrained width!\");\n\nditto", "author": "jfkthame@gmail.com", "id": 9727191, "time": "2014-12-23T13:14:02Z"}, {"text": "(In reply to Simon Montagu :smontagu from comment #28)\n> https://treeherder.mozilla.org/#/jobs?repo=try&revision=8884f915af0f\n\nHmm, tryserver says some adjustment is needed to those annotations.... but more worryingly, that layout/generic/crashtests/421671.html is having a really bad time on android. :( Maybe we need to hold off on adding that assertion.", "author": "jfkthame@gmail.com", "id": 9727936, "time": "2014-12-23T17:17:28Z"}, {"text": "(In reply to Jonathan Kew (:jfkthame) from comment #32)\n\n> Hmm, tryserver says some adjustment is needed to those annotations.... but\n> more worryingly, that layout/generic/crashtests/421671.html is having a\n> really bad time on android. :( Maybe we need to hold off on adding that\n> assertion.\n\nYes, I've made the necessary adjustments, but I'm not sure what to do about those 6460 assertions on 421671.html on Android! I rather doubt if it's even a constant number, what with the <marquee> in the test and all. Cutting the Gordian know with \"skip-if(Android)\" is tempting...", "author": "smontagu@smontagu.org", "id": 9728117, "time": "2014-12-23T18:02:38Z"}, {"text": "This might require a little bit of merging with bug 35168.", "author": "dbaron@dbaron.org", "id": 9728123, "time": "2014-12-23T18:05:22Z"}, {"text": "On reflection I think we do need to hold off on the assertion, or at least limit it a bit: as it is it fires in vertical-lr mode as well, where the aContainerWidth (coming from aReflowState.ComputedWidth()) is indeed NS_UNCONSTRAINEDSIZE, but who cares because we never use it in vertical-lr mode anyway. I'll see how limiting it to right-to-left modes affects tryserver.", "author": "smontagu@smontagu.org", "id": 9728315, "time": "2014-12-23T18:38:15Z"}, {"text": "Comment on attachment 8540367\nPatch 6: convert ApplyRelativePosition, ReflowChild and FinishReflowChild in nsFlexContainerFrame to the logical versions\n\n\n>+++ b/layout/generic/nsFlexContainerFrame.cpp\n>@@ -3603,31 +3603,38 @@ nsFlexContainerFrame::DoFlexLayout(nsPre\n>+  WritingMode outerWM = aReflowState.GetWritingMode();\n>+  nscoord containerWidth = aReflowState.ComputedWidth();\n\nWe probably shouldn't be re-getting aReflowState.ComputedWidth() here. The container's dimensions are aContentBoxMainSize & contentBoxCrossSize (the sizes we pass to \"PhysicalPointFromLogicalPoint\")  (btw, as you probably noticed, that's \"logical point\" in flex space, not a real LogicalPoint... I need to rename those methods now I guess).\n\nIn practice, I think the widthy dimension does *turn out* to be aReflowState.ComputedWidth(), but I'd rather not rely on that.\n\nSo -- I'd prefer:\n   nscoord containerWidth = IsAxisHorizontal(mMainAxis) ?\n     aContentBoxMainSize : contentBoxCrossSize;\n\nThis will hopefully be cleaner once we resolve your XXX comment and resolve the double-conversion.\n\nr=me with that", "author": "dholbert@mozilla.com", "id": 9728331, "time": "2014-12-23T18:42:16Z"}, {"text": "Comment on attachment 8540365\npatch 5 v.2: convert callers of ApplyRelativePosition, ReflowChild and FinishReflowChild in layout/generic to the logical versions\n\nReview of attachment 8540365:\n-----------------------------------------------------------------\n\nSorry, I thought I'd posted this, but I don't see it on the bug..... stuck as a Draft, apparently. :(\n\n::: layout/generic/nsColumnSetFrame.cpp\n@@ +490,5 @@\n> +                           borderPadding.BStart(wm));\n> +  // In vertical-rl mode we can't use the computed width as the\n> +  // container width because it may be NS_UNCONSTRAINEDSIZE, so we use 0\n> +  // for now and reposition the columns after reflowing them all.\n> +  nscoord containerWidth = wm.IsVerticalRL() ? 0 : aReflowState.ComputedWidth();\n\nRegardless of the writing mode, an unconstrained container-width can't be useful, can it? I don't think there's any obvious way to end up with NS_UNCONSTRAINEDSIZE in the horizontal case here (which might mess up RTL), but I'm not really confident of that.\n\nMaybe it'd be worth adding an assertion here that containerWidth != NS_UNCONSTRAINEDSIZE, just in case?\n\n::: layout/generic/nsGfxScrollFrame.cpp\n@@ +503,5 @@\n>    mHelper.mHasVerticalScrollbar = aAssumeVScroll;\n>  \n>    nsReflowStatus status;\n>    ReflowChild(mHelper.mScrolledFrame, presContext, *aMetrics,\n> +              kidReflowState, wm, LogicalPoint(wm), 0,\n\nWhat makes it OK to pass zero as container-width here? Assuming this is legitimate, it might be worth an explanatory comment.\n\n@@ +515,5 @@\n>    // resize here would size it to the natural height of the frame,\n>    // which will usually be different from the scrollport height;\n>    // invalidating the difference will cause unnecessary repainting.\n>    FinishReflowChild(mHelper.mScrolledFrame, presContext,\n> +                    *aMetrics, &kidReflowState, wm, LogicalPoint(wm), 0,\n\nAnd here?", "author": "jfkthame@gmail.com", "id": 9728879, "time": "2014-12-23T21:07:20Z"}, {"text": "(In reply to Jonathan Kew (:jfkthame) from comment #37)\n> Maybe it'd be worth adding an assertion here that containerWidth !=\n> NS_UNCONSTRAINEDSIZE, just in case?\n\nWas this on the assumption that we wouldn't add the assertion to ReflowChild/FinishReflowChild? I don't think we need both. Also, asserting here would have the same problem that I mention in comment 35, that it would fire unnecessarily in vertical-lr.\n\n> \n> ::: layout/generic/nsGfxScrollFrame.cpp\n> @@ +503,5 @@\n> >    mHelper.mHasVerticalScrollbar = aAssumeVScroll;\n> >  \n> >    nsReflowStatus status;\n> >    ReflowChild(mHelper.mScrolledFrame, presContext, *aMetrics,\n> > +              kidReflowState, wm, LogicalPoint(wm), 0,\n> \n> What makes it OK to pass zero as container-width here? Assuming this is\n> legitimate, it might be worth an explanatory comment.\n\nI've added a comment:\n\n  // No need to pass a container-width to ReflowChild or\n  // FinishReflowChild, because it's only used there when positioning\n  // the frame (i.e. if NS_FRAME_NO_MOVE_FRAME isn't set)", "author": "smontagu@smontagu.org", "id": 9729329, "time": "2014-12-23T23:19:00Z"}, {"text": "Created attachment 8540977\nPatch 4a v.2: add assertions for UNCONSTRAINED width to ReflowChild and FinishReflowChild, but only for right-to-left writing mode\n\nWith this version the extra annotations aren't needed. I'd still like to add these assertions: they have already helped me find errors in patches I've been working on for callers of (Finish)ReflowChild elsewhere in the tree.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=da57b1d00f3e", "author": "smontagu@smontagu.org", "id": 9729336, "time": "2014-12-23T23:23:48Z"}, {"text": "(In reply to Daniel Holbert [:dholbert] from comment #36)\n> In practice, I think the widthy dimension does *turn out* to be\n> aReflowState.ComputedWidth(), but I'd rather not rely on that.\n> \n> So -- I'd prefer:\n>    nscoord containerWidth = IsAxisHorizontal(mMainAxis) ?\n>      aContentBoxMainSize : contentBoxCrossSize;\n\nHmm, I thought I'd done it this way originally and it caused regressions, but apparently not (or rather, they must have been caused by some other issue that I've fixed since).", "author": "smontagu@smontagu.org", "id": 9729442, "time": "2014-12-23T23:53:40Z"}, {"text": "(In reply to Simon Montagu :smontagu from comment #38)\n> (In reply to Jonathan Kew (:jfkthame) from comment #37)\n> > Maybe it'd be worth adding an assertion here that containerWidth !=\n> > NS_UNCONSTRAINEDSIZE, just in case?\n> \n> Was this on the assumption that we wouldn't add the assertion to\n> ReflowChild/FinishReflowChild? I don't think we need both. Also, asserting\n> here would have the same problem that I mention in comment 35, that it would\n> fire unnecessarily in vertical-lr.\n\nOK, no need for it here then.\n\n\n> I've added a comment:\n> \n>   // No need to pass a container-width to ReflowChild or\n>   // FinishReflowChild, because it's only used there when positioning\n>   // the frame (i.e. if NS_FRAME_NO_MOVE_FRAME isn't set)\n\nMakes sense, thanks.", "author": "jfkthame@gmail.com", "id": 9730681, "time": "2014-12-24T09:57:27Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/bdb4df421364\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/537a87e2a74e\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/679016653e34\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/1fa61a0310e7\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c16d59bb79d1\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0b2d6f002fee\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d2a2cdfc45ec\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/547a2d626a62", "author": "smontagu@smontagu.org", "id": 9761825, "time": "2015-01-07T07:14:15Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/bdb4df421364\nhttps://hg.mozilla.org/mozilla-central/rev/537a87e2a74e\nhttps://hg.mozilla.org/mozilla-central/rev/679016653e34\nhttps://hg.mozilla.org/mozilla-central/rev/1fa61a0310e7\nhttps://hg.mozilla.org/mozilla-central/rev/c16d59bb79d1\nhttps://hg.mozilla.org/mozilla-central/rev/0b2d6f002fee\nhttps://hg.mozilla.org/mozilla-central/rev/d2a2cdfc45ec\nhttps://hg.mozilla.org/mozilla-central/rev/547a2d626a62", "author": "cbook@mozilla.com", "id": 9762890, "time": "2015-01-07T13:16:01Z"}, {"text": "This patch causes a regression (in particular for RTL content), see bug 1121748.", "author": "fabien@cazenave.cc", "id": 9800925, "time": "2015-01-15T20:05:16Z"}, {"text": "Simon, can we close this now, given that bug 1121748 seems to be safely resolved, and file separate followups as required for any further work?", "author": "jfkthame@gmail.com", "id": 9886634, "time": "2015-02-05T19:33:26Z"}, {"text": "Yes, let's do that", "author": "smontagu@smontagu.org", "id": 9887306, "time": "2015-02-05T21:35:48Z"}], "cf_last_resolved": "2015-02-05T21:35:48Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-09-15T22:59:49Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1079125, 1102175], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Layout: Text", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "---", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "smontagu@smontagu.org", "id": 11171, "name": "smontagu@smontagu.org", "real_name": "Simon Montagu :smontagu"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, {"email": "fabien@cazenave.cc", "id": 259000, "name": "fabien@cazenave.cc", "real_name": "Fabien Cazenave [:kaze]"}, {"email": "jfkthame@gmail.com", "id": 329583, "name": "jfkthame@gmail.com", "real_name": "Jonathan Kew (:jfkthame) [PTO, 5-16 Mar]"}, {"email": "martijn.martijn@gmail.com", "id": 55600, "name": "martijn.martijn@gmail.com", "real_name": "Martijn Wargers (zombie)"}, {"email": "siqinbilige@gmail.com", "id": 512533, "name": "siqinbilige@gmail.com", "real_name": ""}, {"email": "smontagu@smontagu.org", "id": 11171, "name": "smontagu@smontagu.org", "real_name": "Simon Montagu :smontagu"}, {"email": "stmit11@gmail.com", "id": 515115, "name": "stmit11@gmail.com", "real_name": ""}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "siqinbilige@gmail.com"}], "who": "siqinbilige@gmail.com", "when": "2014-10-07T09:35:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "stmit11@gmail.com"}], "who": "stmit11@gmail.com", "when": "2014-11-26T08:00:02Z"}, {"changes": [{"removed": "stmit11@gmail.com", "field_name": "cc", "added": ""}], "who": "stmit11@gmail.com", "when": "2014-11-26T08:00:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "stmit11@gmail.com"}], "who": "stmit11@gmail.com", "when": "2014-11-26T08:09:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jfkthame@gmail.com"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "smontagu@smontagu.org"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8538625, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-18T18:45:09Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8538626, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-18T18:45:51Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8510587, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8538627, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-18T18:47:33Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8510589, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8538628, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-18T18:48:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8538629, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-18T18:49:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8538625, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-18T21:19:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8538626, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-18T21:33:41Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1102175"}], "who": "smontagu@smontagu.org", "when": "2014-12-19T10:51:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8538627, "added": ""}], "who": "jfkthame@gmail.com", "when": "2014-12-19T11:16:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8538626, "added": ""}], "who": "jfkthame@gmail.com", "when": "2014-12-19T11:25:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "smontagu@smontagu.org"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8539250, "added": "review?(smontagu@smontagu.org)"}], "who": "jfkthame@gmail.com", "when": "2014-12-19T13:47:45Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8538625, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540349, "added": "review+"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T21:36:44Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8538626, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540352, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T21:45:51Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8538627, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540354, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T21:47:37Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8538628, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8538628, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540361, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T21:50:42Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8538629, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8538629, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540365, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T21:57:01Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dholbert@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540367, "added": "review?(dholbert@mozilla.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T22:00:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540371, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T22:02:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(smontagu@smontagu.org)", "attachment_id": 8539250, "added": "review+"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T22:03:18Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540374, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-22T22:09:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540352, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-23T13:08:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540354, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-23T13:09:00Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540361, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-23T13:12:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540374, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-23T13:14:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540371, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-23T17:18:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8540367, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2014-12-23T18:42:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540365, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-23T21:07:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8540977, "added": "review?(jfkthame@gmail.com)"}], "who": "smontagu@smontagu.org", "when": "2014-12-23T23:23:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8540977, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2014-12-24T09:55:30Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8540374, "added": "1"}], "who": "smontagu@smontagu.org", "when": "2015-01-06T12:43:08Z"}, {"changes": [{"removed": "", "field_name": "whiteboard", "added": "[leave open]"}], "who": "smontagu@smontagu.org", "when": "2015-01-07T07:14:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fabien@phoxygen.com"}], "who": "fabien@cazenave.cc", "when": "2015-01-15T20:05:16Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1121748"}], "who": "jfkthame@gmail.com", "when": "2015-01-15T20:11:05Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1125808"}], "who": "alice0775@yahoo.co.jp", "when": "2015-01-26T17:40:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "martijn.martijn@gmail.com"}], "who": "martijn.martijn@gmail.com", "when": "2015-02-05T02:22:23Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(smontagu@smontagu.org)"}], "who": "jfkthame@gmail.com", "when": "2015-02-05T19:33:26Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "[leave open]", "field_name": "whiteboard", "added": ""}, {"removed": "needinfo?(smontagu@smontagu.org)", "field_name": "flagtypes.name", "added": ""}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-02-05 13:35:48"}], "who": "smontagu@smontagu.org", "when": "2015-02-05T21:35:48Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1133935"}], "who": "jruderman@gmail.com", "when": "2015-02-17T20:45:29Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1186147"}], "who": "jruderman@gmail.com", "when": "2015-07-21T19:50:13Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1200137"}], "who": "alice0775@yahoo.co.jp", "when": "2015-09-15T22:59:49Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}