{"cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Components", "creator": "jjelen@redhat.com", "cc": ["bertrand.perret@ilex-international.com", "dueno@redhat.com", "gbillios@gmail.com", "kaie@kuix.de", "markus.kullerkup@ria.ee", "mcastelluccio@mozilla.com", "rrelyea@redhat.com"], "depends_on": [], "creation_time": "2018-03-21T12:46:21Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["regression"], "summary": "Firefox freezes since 2018-01-23 Nightly, after loading PKCS#11 module", "cf_last_resolved": "2018-03-26T16:43:56Z", "attachments": [{"creator": "dueno@redhat.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8961418}, {"creator": "dueno@redhat.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-23T16:16:57Z", "type_id": 4, "creation_date": "2018-03-23T12:10:31Z", "id": 1733897, "setter": "rrelyea@redhat.com"}], "content_type": "text/plain", "id": 8961713}], "assigned_to_detail": {"email": "dueno@redhat.com", "id": 565522, "name": "dueno@redhat.com", "real_name": "Daiki Ueno [:ueno]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_crash_signature": "", "comments": [{"text": "User Agent: Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0\nBuild ID: 20180317143930\n\nSteps to reproduce:\n\nThe reproducer:\n * Remove smart card from card reader\n * Start a Firefox Nightly\n * Go to Preferences -> Privacy & Security -> Security Devices\n * Click Load, add a OpenSC PKCS#11 module (/usr/lib64/pkcs11/opensc-pkcs11.so)\n * Click OK, close the \"Security Devices\" dialog\n * Insert a card in reader, wait few seconds\n * Click \"View Certificates\"\n * Wait for PIN prompt\n\n\n\nActual results:\n\nFirefox after merging NSS 3.36 [1] freezes.\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/348b36156a84\n\nI got to this single commit using mozregression, but I am not able to bisect further (it is a single commit with single build).\n\n\nExpected results:\n\nThe PIN prompt should appear, Firefox should not freeze.", "author": "jjelen@redhat.com", "id": 13145251, "time": "2018-03-21T12:46:21Z"}, {"text": "Feel free to reassing to NSS. I filled a Firefox bug, since this is where I have a reproducer. I was not able to isolate this issue to NSS itself yet.", "author": "jjelen@redhat.com", "id": 13145252, "time": "2018-03-21T12:47:53Z"}, {"text": "If it's related to pkcs#11, let's start by assuming the issue is with NSS.\n\nReproducing this bug apparently depends on owning specific smartcard hardware, so we need to find someone with access to such hard, who is able to debug where it is freezing.\n\nJakub, have you tried to debug NSS?\n\nCould you install debuginfo, and attach using gdb to the running firefox process after it's stuck, and create a full stack track for all threads? \n-> thread apply all bt full\n\nCould you save the resulting output to a text file, and attach it to this bug?", "author": "kaie@kuix.de", "id": 13145304, "time": "2018-03-21T13:13:56Z"}, {"text": "On Jan 23, Firefox was upgraded to this new NSS snapshot:\n  https://hg.mozilla.org/integration/mozilla-inbound/rev/348b36156a84\n\nThe bug must have been caused by the changes in that commit.", "author": "kaie@kuix.de", "id": 13145314, "time": "2018-03-21T13:17:27Z"}, {"text": "This is the NSS changeset that Firefox was upgraded to:\n  https://hg.mozilla.org/projects/nss/graph/10f7e0179b18\n\nThe page shows the changes that had been made after the branching point to the NSS 3.35 release branch.", "author": "kaie@kuix.de", "id": 13145319, "time": "2018-03-21T13:21:12Z"}, {"text": "Bug 1054373 appears to be the most likely candidate for having caused this new bug.\n  https://hg.mozilla.org/projects/nss/rev/6242acf9c02f", "author": "kaie@kuix.de", "id": 13145338, "time": "2018-03-21T13:24:44Z"}, {"text": "Kai, thank you for the prompt reply and fast analysis.\nI was using standard PIV Test cards in OMNIKEY AG CardMan 3121, but it should be reproducible with any other hardware supported by OpenSC or with other PKCS#11 module. We reproduced it also with coolkey, but I was not successful with soft token (it probably needs the dynamic insertion event).\n\nHere is a backtrace from the following processes in the first bad build:\n\n$ mozregression --launch 1c8bbd57b772157a6119f7773cc4ec8f4b7c1539\n\nWe have three processes.\n\nThe first one with PID 9367 waits here:\n\n#0  0x00007f3f85a17be6 in pthread_cond_timedwait@@GLIBC_2.3.2 () at /lib64/libpthread.so.0\n#1  0x00007f3f844eb550 in pt_TimedWait () at /tmp/tmp7Mx3wM/firefox/libnspr4.so\n#2  0x00007f3f844eba47 in PR_WaitCondVar () at /tmp/tmp7Mx3wM/firefox/libnspr4.so\n#3  0x00007f3f83778ece in nssSlot_IsTokenPresent () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#4  0x00007f3f8377b5e7 in token_is_present.isra () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#5  0x00007f3f8377bbee in nssTokenObjectCache_FindObjectsByTemplate () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#6  0x00007f3f837799f1 in nssToken_FindObjectsByTemplate () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#7  0x00007f3f83779f9d in nssToken_FindCertificateByIssuerAndSerialNumber () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#8  0x00007f3f83782efe in nssTrustDomain_UpdateCachedTokenCerts () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#9  0x00007f3f8378412a in nssSlot_Refresh () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#10 0x00007f3f8377905d in nssSlot_IsTokenPresent () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#11 0x00007f3f837ae597 in pk11_IsPresentCertLoad () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n#12 0x00007f3f7763ddac in nsNSSComponent::CheckForSmartCardChanges() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#13 0x00007f3f776176d6 in nsNSSCertificateDB::GetCerts(nsIX509CertList**) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#14 0x00007f3f74584a36 in NS_InvokeByIndex () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#15 0x00007f3f74df2b30 in XPCWrappedNative::CallMethod(XPCCallContext&, XPCWrappedNative::CallMode) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#16 0x00007f3f74dfb1aa in XPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#17 0x00007f3f778c4512 in js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&, js::MaybeConstruct) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#18 0x00007f3f778bf94f in Interpret(JSContext*, js::RunState&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#19 0x00007f3f778c4163 in js::RunScript(JSContext*, js::RunState&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#20 0x00007f3f778c47ab in js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&, js::MaybeConstruct) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#21 0x00007f3f778c54ab in js::Call(JSContext*, JS::Handle<JS::Value>, JS::Handle<JS::Value>, js::AnyInvokeArgs const&, JS::MutableHandle<JS::Value>) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#22 0x00007f3f77ba41b5 in JS::Call(JSContext*, JS::Handle<JS::Value>, JS::Handle<JS::Value>, JS::HandleValueArray const&, JS::MutableHandle<JS::Value>) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#23 0x00007f3f75ac05f8 in mozilla::dom::EventHandlerNonNull::Call(JSContext*, JS::Handle<JS::Value>, mozilla::dom::Event&, JS::MutableHandle<JS::Value>, mozilla::ErrorResult&) ()\n    at /tmp/tmp7Mx3wM/firefox/libxul.so\n#24 0x00007f3f75dab3b7 in mozilla::JSEventHandler::HandleEvent(nsIDOMEvent*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#25 0x00007f3f75dadbab in mozilla::EventListenerManager::HandleEventSubType(mozilla::EventListenerManager::Listener*, nsIDOMEvent*, mozilla::dom::EventTarget*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#26 0x00007f3f75db9445 in mozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, nsIDOMEvent**, mozilla::dom::EventTarget*, nsEventStatus*) ()\n    at /tmp/tmp7Mx3wM/firefox/libxul.so\n#27 0x00007f3f75dba13b in mozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray<mozilla::EventTargetChainItem>&, mozilla::EventChainPostVisitor&, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#28 0x00007f3f75dbaf23 in mozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, nsIDOMEvent*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray<mozilla::dom::EventTarget*>*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#29 0x00007f3f7682edf2 in nsDocumentViewer::LoadComplete(nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#30 0x00007f3f774e02f9 in nsDocShell::EndPageLoad(nsIWebProgress*, nsIChannel*, nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#31 0x00007f3f774e18e9 in nsDocShell::OnStateChange(nsIWebProgress*, nsIRequest*, unsigned int, nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#32 0x00007f3f74f4ba92 in nsDocLoader::DoFireOnStateChange(nsIWebProgress*, nsIRequest*, int&, nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#33 0x00007f3f74f4bbd2 in nsDocLoader::doStopDocumentLoad(nsIRequest*, nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#34 0x00007f3f74f4be36 in nsDocLoader::DocLoaderIsEmpty(bool) [clone .part.75] () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#35 0x00007f3f74f4ca96 in nsDocLoader::OnStopRequest(nsIRequest*, nsISupports*, nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#36 0x00007f3f745f76f4 in mozilla::net::nsLoadGroup::RemoveRequest(nsIRequest*, nsISupports*, nsresult) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#37 0x00007f3f752fa1f7 in imgRequestProxy::RemoveFromLoadGroup() [clone .part.329] () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#38 0x00007f3f752fa95b in imgRequestProxy::OnLoadComplete(bool) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#39 0x00007f3f752fe562 in void mozilla::image::SyncNotifyInternal<mozilla::image::ObserverTable const*>(mozilla::image::ObserverTable const* const&, bool, unsigned int, mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits> const&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#40 0x00007f3f752fe894 in mozilla::image::ProgressTracker::SyncNotifyProgress(unsigned int, mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits> const&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#41 0x00007f3f7530a920 in mozilla::image::RasterImage::NotifyProgress(unsigned int, mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits> const&, mozilla::Maybe<unsigned int> const&, mozilla::image::DecoderFlags, mozilla::image::SurfaceFlags) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#42 0x00007f3f7530ac37 in mozilla::image::RasterImage::NotifyForLoadEvent(unsigned int) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#43 0x00007f3f753111c6 in mozilla::image::RasterImage::NotifyDecodeComplete(mozilla::image::DecoderFinalStatus const&, mozilla::image::ImageMetadata const&, mozilla::image::DecoderTelemetry const&, unsigned int, mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits> const&, mozilla::Maybe<unsigned int> const&, mozilla::image::DecoderFlags, mozilla::image::SurfaceFlags) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#44 0x00007f3f752d940e in mozilla::detail::RunnableFunction<mozilla::image::IDecodingTask::NotifyDecodeComplete(mozilla::NotNull<mozilla::image::RasterImage*>, mozilla::NotNull<mozilla::image::Decoder*>)::{lambda()#1}>::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#45 0x00007f3f7457dd06 in nsThread::ProcessNextEvent(bool, bool*) [clone .part.242] () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#46 0x00007f3f7457f4eb in NS_ProcessNextEvent(nsIThread*, bool) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#47 0x00007f3f749a25b2 in mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#48 0x00007f3f749788e2 in MessageLoop::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#49 0x00007f3f76575729 in nsBaseAppShell::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#50 0x00007f3f77733726 in nsAppStartup::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#51 0x00007f3f777e12ec in XREMain::XRE_mainRun() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#52 0x00007f3f777e1fbb in XREMain::XRE_main(int, char**, mozilla::BootstrapConfig const&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#53 0x00007f3f777e23e4 in XRE_main(int, char**, mozilla::BootstrapConfig const&) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#54 0x00000000004066f9 in do_main(int, char**, char**) ()\n#55 0x0000000000405f0b in main ()\n\nThe others (9422, 9477) wait in firefox code:\n\n#0  0x00007f77379a2c6b in poll () at /lib64/libc.so.6\n#1  0x00007f772971941f in PollWrapper(_GPollFD*, unsigned int, int) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#2  0x00007f7732a07e99 in g_main_context_iterate.isra () at /lib64/libglib-2.0.so.0\n#3  0x00007f7732a07fac in g_main_context_iteration () at /lib64/libglib-2.0.so.0\n#4  0x00007f772971946f in nsAppShell::ProcessNextNativeEvent(bool) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#5  0x00007f77296e316c in nsBaseAppShell::DoProcessNextNativeEvent(bool) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#6  0x00007f77296e3320 in nsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#7  0x00007f77276e6b31 in nsThread::ProcessNextEvent(bool, bool*) [clone .part.242] () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#8  0x00007f77276e84eb in NS_ProcessNextEvent(nsIThread*, bool) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#9  0x00007f7727b0b691 in mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#10 0x00007f7727ae18e2 in MessageLoop::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#11 0x00007f77296de729 in nsBaseAppShell::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#12 0x00007f772a94baec in XRE_RunAppShell() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#13 0x00007f7727ae18e2 in MessageLoop::Run() () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#14 0x00007f772a94be20 in XRE_InitChildProcess(int, char**, XREChildData const*) () at /tmp/tmp7Mx3wM/firefox/libxul.so\n#15 0x0000000000406407 in content_process_main(mozilla::Bootstrap*, int, char**) [clone .part.2] ()\n#16 0x0000000000405f70 in main ()", "author": "jjelen@redhat.com", "id": 13145352, "time": "2018-03-21T13:30:38Z"}, {"text": "> #2  0x00007f3f844eba47 in PR_WaitCondVar () at /tmp/tmp7Mx3wM/firefox/libnspr4.so\n> #3  0x00007f3f83778ece in nssSlot_IsTokenPresent () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n\nHere it's waiting on the condition slot->inIsPresent == PR_TRUE:\nhttps://hg.mozilla.org/projects/nss/file/tip/lib/dev/devslot.c#l149\nwhich is set to PR_TRUE a few lines below (in the same function):\nhttps://hg.mozilla.org/projects/nss/file/tip/lib/dev/devslot.c#l162\n\n> #4  0x00007f3f8377b5e7 in token_is_present.isra () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n> #5  0x00007f3f8377bbee in nssTokenObjectCache_FindObjectsByTemplate () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n> #6  0x00007f3f837799f1 in nssToken_FindObjectsByTemplate () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n> #7  0x00007f3f83779f9d in nssToken_FindCertificateByIssuerAndSerialNumber () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n> #8  0x00007f3f83782efe in nssTrustDomain_UpdateCachedTokenCerts () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n> #9  0x00007f3f8378412a in nssSlot_Refresh () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n> #10 0x00007f3f8377905d in nssSlot_IsTokenPresent () at /tmp/tmp7Mx3wM/firefox/libnss3.so\n\nHere, nssSlot_Refresh() called from nssSlot_IsTokenPresent():\nhttps://hg.mozilla.org/projects/nss/file/tip/lib/dev/devslot.c#l237\nends up with recursively calling nssSlot_IsTokenPresent().\n\nSo I suspect slot->isInPresent should be cleared before calling nssSlot_Refresh()?", "author": "dueno@redhat.com", "id": 13146153, "time": "2018-03-21T17:30:55Z"}, {"text": "Created attachment 8961418\ndevslot-reinsert.patch\n\nI'm attaching a patch that could bypass the slot->inIsPresent check when nssSlot_IsTokenPresent() is called from itself.  It's a bit tricky as it reuses the logic avoiding repeated calls to nssSlot_IsTokenPresent().\n\nWithout the patch, I could reproduce the problem with:\nnss-3.36.0-1.0.fc27.x86_64\nfirefox-59.0.1-1.fc27.x86_64\nwhile it no longer occurs if I apply the patch.", "author": "dueno@redhat.com", "id": 13148613, "time": "2018-03-22T15:19:12Z"}, {"text": "Below is a review from Bob (as he is having trouble with bugzilla login now):\n\nHere's my review: r-\n\nThere are two things wrong with this patch: 1) you need to get a lock\nbefore you check and modify the state variables, and 2) even with the\nlock, you have a race with reset, which if you lose, you will randomly\nfind yourself back in this lock state.\n\nI thought about moving the Refresh out of the block, but most of the\nstuff happening in Refresh are the things we are trying to avoid\nmultiple threads from doing at the same time anyway, so your basic\nidea is the right one (detect this case and bypass isPresent). I\nsuggest renaming the isInPresent to tidInIsPresent* and setting that\nvalue to the current thread id. At the top of is present add a ||\nclause to the 'in delay' if statement which activates is you are in\nthe same thread.\n\n* you may pick your own better name. The variable holds the thread id\nof the process that is in the body of isPresent. zero means no process\nis in the body. (Need to verify that zero is an not a valid thread id\nin NSPR).", "author": "dueno@redhat.com", "id": 13151167, "time": "2018-03-23T12:03:00Z"}, {"text": "Created attachment 8961713\ndevslot-reinsert.patch\n\n(In reply to Daiki Ueno [:ueno] from comment #9)\n\n> There are two things wrong with this patch: 1) you need to get a lock\n> before you check and modify the state variables, and 2) even with the\n> lock, you have a race with reset, which if you lose, you will randomly\n> find yourself back in this lock state.\n\nI thought that locking was unnecessary there because it is assured that only one thread can reach the nssSlot_Refresh() call, as the surrounding code is protected by a conditional variable:\n\n    PZ_Lock(slot->isPresentLock);\n    while (slot->inIsPresent) {\n        PR_WaitCondVar(slot->isPresentCondition, 0);\n    }\n    PZ_Unlock(slot->isPresentLock);\n    ...\n    nssrv = nssSlot_Refresh(slot);\n    ...\n    PZ_Lock(slot->isPresentLock);\n    PR_NotifyAllCondVar(slot->isPresentCondition);\n    PZ_Unlock(slot->isPresentLock);\n\nHowever, nevertheless, if nssSlot_Refresh() takes time (i.e., because of slow smart card access), within_token_delay_period() at the beginning could return false and there would be a race in that case.\n\n> I thought about moving the Refresh out of the block, but most of the\n> stuff happening in Refresh are the things we are trying to avoid\n> multiple threads from doing at the same time anyway, so your basic\n> idea is the right one (detect this case and bypass isPresent). I\n> suggest renaming the isInPresent to tidInIsPresent* and setting that\n> value to the current thread id. At the top of is present add a ||\n> clause to the 'in delay' if statement which activates is you are in\n> the same thread.\n\nIndeed, that sounds like a clearer approach.  I am attaching a patch along these lines, with a few modifications:\n- I used PRThread* instead of a thread ID, because PR_GetThreadID() is a private API hidden in prpriv.h\n- I merged the delay check and the \"running in the same thread\" check into a single function (token_status_checked)", "author": "dueno@redhat.com", "id": 13151175, "time": "2018-03-23T12:10:31Z"}, {"text": "Comment on attachment 8961713\ndevslot-reinsert.patch\n\nReview of attachment 8961713:\n-----------------------------------------------------------------\n\nr+ better than what I had in mind.\n\n::: lib/dev/devslot.c\n@@ +136,4 @@\n>  \n>      /* avoid repeated calls to check token status within set interval */\n>      PZ_Lock(slot->isPresentLock);\n> +    if (token_status_checked(slot)) {\n\nOK I was thinking just adding the test on this if, but your solution is fine.\n\n@@ +156,5 @@\n>          PR_WaitCondVar(slot->isPresentCondition, 0);\n>      }\n>      /* if we were one of multiple threads here, the first thread will have\n>       * given us the answer, no need to make more queries of the token. */\n> +    if (token_status_checked(slot)) {\n\nIn this case the test for slot->isPresentThread == PR_GetCurrentThread() is fine because it is known to always fail ( if you are waiting on the isPresentCondition you better not be the thread in isPresent.", "author": "rrelyea@redhat.com", "id": 13151835, "time": "2018-03-23T16:16:57Z"}, {"text": "Daiki, thank you for creating the fix for this bug!\nIs this ready for checkin?", "author": "kaie@kuix.de", "id": 13155800, "time": "2018-03-26T14:21:59Z"}, {"text": "I tried nss-try build with the patch, and got a leak report from address sanitizer:\nhttps://treeherder.mozilla.org/#/jobs?repo=nss-try&revision=d9baf7f3ee48141680f9de9b49161205d9c0b866\nthough it's unlikely to be related to this change.  Let me try it locally before checkin.", "author": "dueno@redhat.com", "id": 13155858, "time": "2018-03-26T14:41:00Z"}, {"text": "Landed as: https://hg.mozilla.org/projects/nss/rev/6ae3ab8a1e7b", "author": "dueno@redhat.com", "id": 13156231, "time": "2018-03-26T16:43:56Z"}, {"text": "Uplifted to the 3.36 branch for 3.36.1\nhttps://hg.mozilla.org/projects/nss/rev/fa159fd618ea", "author": "kaie@kuix.de", "id": 13158016, "time": "2018-03-27T08:01:00Z"}, {"text": "*** Bug 1448753 has been marked as a duplicate of this bug. ***", "author": "franziskuskiefer@gmail.com", "id": 13178876, "time": "2018-04-04T09:33:33Z"}, {"text": "*** Bug 1450962 has been marked as a duplicate of this bug. ***", "author": "bertrand.perret@ilex-international.com", "id": 13200278, "time": "2018-04-12T09:04:54Z"}, {"text": "*** Bug 1466766 has been marked as a duplicate of this bug. ***", "author": "bugzilla@mversen.de", "id": 13389366, "time": "2018-06-05T21:46:12Z"}], "id": 1447628, "priority": "--", "mentors_detail": [], "comment_count": 19, "version": "other", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox62": "---", "status": "RESOLVED", "product": "NSS", "cf_fx_iteration": "---", "blocks": [1448404, 1461731], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1448753"], "cf_status_firefox_esr52": "---", "component": "Libraries", "votes": 0, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "3.36.1", "is_cc_accessible": true, "groups": [], "url": "", "creator_detail": {"email": "jjelen@redhat.com", "id": 587670, "name": "jjelen@redhat.com", "real_name": "Jakub Jelen"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "bertrand.perret@ilex-international.com", "id": 602252, "name": "bertrand.perret@ilex-international.com", "real_name": "BPER_ILEX"}, {"email": "dueno@redhat.com", "id": 565522, "name": "dueno@redhat.com", "real_name": "Daiki Ueno [:ueno]"}, {"email": "gbillios@gmail.com", "id": 303045, "name": "gbillios@gmail.com", "real_name": "George Billios"}, {"email": "kaie@kuix.de", "id": 36541, "name": "kaie@kuix.de", "real_name": "Kai Engert (:kaie:)"}, {"email": "markus.kullerkup@ria.ee", "id": 618839, "name": "markus.kullerkup@ria.ee", "real_name": ""}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "rrelyea@redhat.com", "id": 11099, "name": "rrelyea@redhat.com", "real_name": "Robert Relyea"}], "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-07T14:18:30Z", "cf_status_firefox_esr60": "---", "assigned_to": "dueno@redhat.com", "is_open": false, "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "history": [{"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "NEW"}, {"removed": "", "field_name": "cc", "added": "kaie@kuix.de"}, {"removed": "Untriaged", "field_name": "component", "added": "Libraries"}, {"removed": "60 Branch", "field_name": "version", "added": "other"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "nobody@nss.bugs"}, {"removed": "Firefox", "field_name": "product", "added": "NSS"}, {"removed": "0", "field_name": "is_confirmed", "added": "1"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jjelen@redhat.com)"}], "who": "kaie@kuix.de", "when": "2018-03-21T13:13:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dueno@redhat.com, rrelyea@redhat.com"}], "who": "kaie@kuix.de", "when": "2018-03-21T13:14:29Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(rrelyea@redhat.com)"}], "who": "kaie@kuix.de", "when": "2018-03-21T13:26:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8961418, "added": "review?(rrelyea@redhat.com)"}], "who": "dueno@redhat.com", "when": "2018-03-22T15:19:12Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8961418, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(rrelyea@redhat.com)", "attachment_id": 8961418, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8961713, "added": "review?(rrelyea@redhat.com)"}], "who": "dueno@redhat.com", "when": "2018-03-23T12:10:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(rrelyea@redhat.com)", "attachment_id": 8961713, "added": "review+"}], "who": "rrelyea@redhat.com", "when": "2018-03-23T16:16:57Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1448404"}], "who": "kaie@kuix.de", "when": "2018-03-23T17:11:41Z"}, {"changes": [{"removed": "needinfo?(jjelen@redhat.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jjelen@redhat.com", "when": "2018-03-26T11:54:49Z"}, {"changes": [{"removed": "nobody@nss.bugs", "field_name": "assigned_to", "added": "dueno@redhat.com"}, {"removed": "needinfo?(rrelyea@redhat.com)", "field_name": "flagtypes.name", "added": "needinfo?(dueno@redhat.com)"}], "who": "kaie@kuix.de", "when": "2018-03-26T14:21:59Z"}, {"changes": [{"removed": "needinfo?(dueno@redhat.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dueno@redhat.com", "when": "2018-03-26T14:41:00Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "3.37"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-03-26 16:43:56"}], "who": "dueno@redhat.com", "when": "2018-03-26T16:43:56Z"}, {"changes": [{"removed": "3.37", "field_name": "target_milestone", "added": "3.36.1"}], "who": "kaie@kuix.de", "when": "2018-03-27T08:01:00Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1448753"}], "who": "franziskuskiefer@gmail.com", "when": "2018-04-04T07:36:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gbillios@gmail.com"}], "who": "franziskuskiefer@gmail.com", "when": "2018-04-04T09:33:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bertrand.perret@ilex-international.com"}], "who": "bertrand.perret@ilex-international.com", "when": "2018-04-12T09:04:54Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1461731"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-05-27T01:59:55Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "markus.kullerkup@ria.ee"}], "who": "bugzilla@mversen.de", "when": "2018-06-05T21:46:12Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-06-07T14:18:30Z"}]}