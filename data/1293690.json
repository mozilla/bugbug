{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T14:45:27Z", "type_id": 4, "creation_date": "2016-08-10T03:19:19Z", "id": 1436617, "setter": "amarchesini@mozilla.com"}], "content_type": "text/plain", "id": 8779472}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T14:57:52Z", "type_id": 4, "creation_date": "2016-08-10T03:21:07Z", "id": 1436618, "setter": "amarchesini@mozilla.com"}], "content_type": "text/plain", "id": 8779473}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T14:58:10Z", "type_id": 4, "creation_date": "2016-08-10T03:22:15Z", "id": 1436619, "setter": "amarchesini@mozilla.com"}], "content_type": "text/plain", "id": 8779474}], "classification": "Components", "creator": "bkelly@mozilla.com", "cc": ["amarchesini@mozilla.com", "philringnalda@gmail.com"], "depends_on": [], "creation_time": "2016-08-09T16:36:10Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "many WorkerHolder classes expect to get Terminated status, but HoldWorker() does not fail if worker is already Terminated", "id": 1293690, "cf_status_firefox51": "fixed", "assigned_to_detail": {"email": "bkelly@mozilla.com", "id": 465500, "name": "bkelly@mozilla.com", "real_name": "Ben Kelly [PTO, back late March][:bkelly]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "bkelly@mozilla.com", "comment_count": 12, "comments": [{"text": "While investigating an intermittent failure in bug 1290116 I discovered that we have a fairly prevalent race in a lot of code using WorkerHolder.\n\nCurrent WorkerHolder::HoldWorker() will only fail if the worker has a status of Canceling or greater:\n\nhttps://dxr.mozilla.org/mozilla-central/source/dom/workers/WorkerPrivate.cpp#5266\n\nWe have a lot of code now that wants to hold a worker alive until Terminating instead.  Pretty much all our service worker code does this.\n\nThis is a problem because these Terminating WorkerHolder instances will never clean up if they are added to a WorkerPrivate that is already Terminated.\n\nThere are two possible solutions here:\n\n1) Allow WorkerHolder classes to specify what status level they care about in HoldWorker().\n2) Just call Notify on WorkerHolder objects immediately if they are added to a Worker that is not in the Running state.", "author": "bkelly@mozilla.com", "id": 11611276, "time": "2016-08-09T16:36:10Z"}, {"text": "I think we have to do option (1) since there is no clean way to do (2) without dispatching a runnable back to the current thread.  I don't think we want to do any runnable dispatch because then we could potentially race with another Notify() that happens for a greater status value.", "author": "bkelly@mozilla.com", "id": 11611302, "time": "2016-08-09T16:45:52Z"}, {"text": "Created attachment 8779472\nP1 Allow WorkerHolder::HoldWorker() callers to specify the status value they consider to be a failure. r=baku", "author": "bkelly@mozilla.com", "id": 11611831, "time": "2016-08-09T19:09:59Z"}, {"text": "Created attachment 8779473\nP2 Set explicit status levels to fail at when calling WorkerHolder::HoldWorker. r=baku", "author": "bkelly@mozilla.com", "id": 11611833, "time": "2016-08-09T19:10:18Z"}, {"text": "Created attachment 8779474\nP3 Force all callers of HoldWorker to provide an explicit status code that triggers failure. r=baku\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=07e30db63ada", "author": "bkelly@mozilla.com", "id": 11611835, "time": "2016-08-09T19:10:40Z"}, {"text": "Comment on attachment 8779472\nP1 Allow WorkerHolder::HoldWorker() callers to specify the status value they consider to be a failure. r=baku\n\nThis patch adds an additional argument to WorkerHolder::HoldWorker() that lets the caller indicate what worker Status level they consider \"non-operational\".  For now I default it to the previous hard coded value of Canceling.  A later patch will remove the default.", "author": "bkelly@mozilla.com", "id": 11613084, "time": "2016-08-10T03:19:19Z"}, {"text": "Comment on attachment 8779473\nP2 Set explicit status levels to fail at when calling WorkerHolder::HoldWorker. r=baku\n\nThis patch updates each use of WorkerHolder::HoldWorker() to specify an exact failure Status level.  Most of these were obvious due to when the WorkerHolder implementation shut things down in its Notify() method.  For the cases where Notify() never shuts down or if it was otherwise ambiguous I simply specified Canceling to maintain current behavior.", "author": "bkelly@mozilla.com", "id": 11613088, "time": "2016-08-10T03:21:07Z"}, {"text": "Comment on attachment 8779474\nP3 Force all callers of HoldWorker to provide an explicit status code that triggers failure. r=baku\n\nRemove the default Status value from WorkerHolder::HoldWorker().  Authors need to think about what value they want there when they write new code.  We should not provide a default as it would lead to more instances of this bug.", "author": "bkelly@mozilla.com", "id": 11613089, "time": "2016-08-10T03:22:15Z"}, {"text": "Pushed by bkelly@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/f9f62ade9508\nP1 Allow WorkerHolder::HoldWorker() callers to specify the status value they consider to be a failure. r=baku\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d84b0768f0ce\nP2 Set explicit status levels to fail at when calling WorkerHolder::HoldWorker. r=baku\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0342d98afa10\nP3 Force all callers of HoldWorker to provide an explicit status code that triggers failure. r=baku", "author": "pulsebot@bots.tld", "id": 11634770, "time": "2016-08-18T03:01:53Z"}, {"text": "Backed out in https://hg.mozilla.org/integration/mozilla-inbound/rev/252ff19cd746 for https://treeherder.mozilla.org/logviewer.html#?job_id=34070669&repo=mozilla-inbound", "author": "philringnalda@gmail.com", "id": 11634876, "time": "2016-08-18T04:17:37Z"}, {"text": "Pushed by bkelly@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/f60ef91bdbde\nP1 Allow WorkerHolder::HoldWorker() callers to specify the status value they consider to be a failure. r=baku\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/37b2a40ca3f7\nP2 Set explicit status levels to fail at when calling WorkerHolder::HoldWorker. r=baku\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/493fdcb41ed5\nP3 Force all callers of HoldWorker to provide an explicit status code that triggers failure. r=baku", "author": "pulsebot@bots.tld", "id": 11636023, "time": "2016-08-18T14:11:21Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/f60ef91bdbde\nhttps://hg.mozilla.org/mozilla-central/rev/37b2a40ca3f7\nhttps://hg.mozilla.org/mozilla-central/rev/493fdcb41ed5", "author": "ryanvm@gmail.com", "id": 11639469, "time": "2016-08-19T14:00:57Z"}], "cf_last_resolved": "2016-08-19T14:00:57Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-08-19T14:00:57Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1290116], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "DOM: Workers", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla51", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "bkelly@mozilla.com", "id": 465500, "name": "bkelly@mozilla.com", "real_name": "Ben Kelly [PTO, back late March][:bkelly]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "amarchesini@mozilla.com", "id": 446257, "name": "amarchesini@mozilla.com", "real_name": "Andrea Marchesini [:baku]"}, {"email": "philringnalda@gmail.com", "id": 135518, "name": "philringnalda@gmail.com", "real_name": "Phil Ringnalda (:philor)"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "amarchesini@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8779472, "added": "review?(amarchesini@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-08-10T03:19:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8779473, "added": "review?(amarchesini@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-08-10T03:21:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8779474, "added": "review?(amarchesini@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-08-10T03:22:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(amarchesini@mozilla.com)", "attachment_id": 8779472, "added": "review+"}], "who": "amarchesini@mozilla.com", "when": "2016-08-17T14:45:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(amarchesini@mozilla.com)", "attachment_id": 8779473, "added": "review+"}], "who": "amarchesini@mozilla.com", "when": "2016-08-17T14:57:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(amarchesini@mozilla.com)", "attachment_id": 8779474, "added": "review+"}], "who": "amarchesini@mozilla.com", "when": "2016-08-17T14:58:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "philringnalda@gmail.com"}], "who": "philringnalda@gmail.com", "when": "2016-08-18T04:17:37Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla51"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-08-19 14:00:57"}, {"removed": "---", "field_name": "cf_status_firefox51", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2016-08-19T14:00:57Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}