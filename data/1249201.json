{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bugmail@mozilla.staktrace.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8722537}, {"creator": "aethanyc@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-04-20T22:00:51Z", "type_id": 4, "creation_date": "2016-04-20T15:30:11Z", "id": 1380002, "setter": "mats@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2016-04-22T08:32:18Z", "type_id": 4, "creation_date": "2016-04-21T09:13:36Z", "id": 1380588, "setter": "s.kaspari@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8741379}, {"creator": "aethanyc@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-04-20T21:04:12Z", "type_id": 4, "creation_date": "2016-04-20T15:30:11Z", "id": 1380001, "setter": "bugs@pettay.fi"}], "content_type": "text/x-review-board-request", "id": 8743305}], "classification": "Components", "creator": "aethanyc@gmail.com", "cc": ["aethanyc@gmail.com", "alam@mozilla.com", "bmo@upshifts.org", "bugmail@mozilla.staktrace.com", "bugs@pettay.fi", "hhsu@mozilla.com", "jh+bugzilla@buttercookie.de", "margaret.leibovic@gmail.com", "markcapella@twcny.rr.com", "mats@mozilla.com", "mephisto41@gmail.com", "s.kaspari@gmail.com", "snorp@snorp.net", "tchen@mozilla.com", "xidorn+moz@upsuper.org"], "depends_on": [1168113], "creation_time": "2016-02-18T04:02:06Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Continue showing AccessibleCaret when scrolling or panning the page", "id": 1249201, "assigned_to_detail": {"email": "aethanyc@gmail.com", "id": 503090, "name": "aethanyc@gmail.com", "real_name": "Ting-Yu Lin [:TYLin] (UTC+8) (Away, needinfo me if you need anything)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "aethanyc@gmail.com", "comment_count": 47, "comments": [{"text": "Currently, when the user is scrolling a page or panning a page, AccessibleCaret will be hidden, and show again until the user action stops. It creates issues like bug 1236434. \n\nOn B2G, the spec requires the current behavior, so it's fine. However, it would be nice if we could keep the carets shows when scrolling the page on Fennec as Google Chrome does. I was wondering if we can do this easily by stopping the normal carets updating process, and asking APZ to pan the carets with the rest of the content.", "author": "aethanyc@gmail.com", "id": 11174590, "time": "2016-02-18T04:02:06Z"}, {"text": "Well if the carets are position:absolute then they should always be positioned relative to the document and will move with APZ scrolling. I believe they are currently position:fixed which is why APZ doesn't pan them (i.e. they currently use non-normal behaviour, and what you're asking for is the normal behaviour).\n\nThat being said, the problem with keep them visible during APZ transformations is that if the user zooms the carets will zoom as well. We could add something that allowed the carets to not zoom although it might be tricky to make the positioning work properly.", "author": "bugmail@mozilla.staktrace.com", "id": 11175996, "time": "2016-02-18T16:16:48Z"}, {"text": "AccessibleCaret divs are already position:absolute in [1], but they're children of the custom content container under canvas frame, which are position:fixed and possibly in its own layer due to -moz-top-layer: top? I guess that's why the carets get the non-normal behavior.\n\nkats, do you feel it's possible that if AccessibleCaret divs are generated directly in nsCanvasFrame::CreateAnonymousContent() with position:absolute, they can be on the same layer with the content so that APZ can transform them together?\n\n[1] https://dxr.mozilla.org/mozilla-central/rev/d5daf10d3b74b04e8fa63c4e5429de8a0adf79f8/layout/style/ua.css#343,346\n[2] https://dxr.mozilla.org/mozilla-central/rev/d5daf10d3b74b04e8fa63c4e5429de8a0adf79f8/layout/style/ua.css#434,436-437", "author": "aethanyc@gmail.com", "id": 11178682, "time": "2016-02-19T10:00:21Z"}, {"text": "If using position: absolute is necessary, we can make top layer support that. We need this for <dialog> anyway.", "author": "xidorn+moz@upsuper.org", "id": 11178730, "time": "2016-02-19T10:30:38Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #2)\n> kats, do you feel it's possible that if AccessibleCaret divs are generated\n> directly in nsCanvasFrame::CreateAnonymousContent() with position:absolute,\n> they can be on the same layer with the content so that APZ can transform\n> them together?\n\nI would guess yes, but I'm not really sure how that works so I can't say for sure. I don't know what to do about the zooming though, we should figure out how to tackle that before starting implementation work.", "author": "bugmail@mozilla.staktrace.com", "id": 11179210, "time": "2016-02-19T14:12:50Z"}, {"text": "I hack a prototype [1] to prove that my guess in comment #2 is correct, i.e. carets can use position:absolute so that APZ can transform them together, and carets are continue showing when panning or zooming the page. \n\nHowever, like kats said in comment #1, when the user zooms the carets will zoom as well. The size of carets won't be updated to its normal size unless the user lifts his fingers off the screen. \n\nI cannot tell whether this is already better than the current behavior that carets are hidden during panning or zooming, and can be tackled as a follow-up. Otherwise this is the best I can do on caret code without other modification on APZ.\n\nAnthony, what do you think? If you have time to test this, the build is in [2].\n\n[1] https://treeherder.mozilla.org/#/jobs?repo=try&revision=e73b83853755\n[2] http://archive.mozilla.org/pub/mobile/try-builds/tlin@mozilla.com-e73b838537554da7a407cb6b8d9b6cffc5075f09/try-android-api-15/fennec-47.0a1.en-US.android-arm.apk", "author": "aethanyc@gmail.com", "id": 11181702, "time": "2016-02-20T16:24:49Z"}, {"text": "kats, I found nsIScrollObserver::ScrollPositionChanged() is called only when panning (scolling), not when zooming. Do we have a similar callback when zooming?\n\nIf we do have a callback during pinch-zooming for updating the carets, I could update only the caret's size since the absolute position of the caret is not changed during pinch-zooming from layout's perspective. Of course the size update of the carets will be lagged since it's updated on content side. But I feel it might be OK.", "author": "aethanyc@gmail.com", "id": 11181710, "time": "2016-02-20T16:33:27Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #6)\n> kats, I found nsIScrollObserver::ScrollPositionChanged() is called only when\n> panning (scolling), not when zooming. Do we have a similar callback when\n> zooming?\n> \n\nWe don't at the moment, but it would be easy to add one. Like you said it would be a bit lagged but it might still be ok. We'd have to try it to see. If you'd like me to write a patch to expose the zoom start/end let me know.", "author": "bugmail@mozilla.staktrace.com", "id": 11182722, "time": "2016-02-21T19:19:14Z"}, {"text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #7)\n> We don't at the moment, but it would be easy to add one. Like you said it\n> would be a bit lagged but it might still be ok. We'd have to try it to see.\n> If you'd like me to write a patch to expose the zoom start/end let me know.\n\nYes! I'd love to try this if you could help provide such a patch. \n\nWe do already have AsyncPanZoomStarted() and AsyncPanZoomStopped() to notify the APZ transforms for both panning and zooming. Although panning and zooming are not distinguishable from the two callbacks, but this might not be critical for now. What I need is a callback like ZoomLevelChanged() to call repeatedly during zooming, and I'll use [1] to get the current zoom level to scale the caret size.\n\nCurrently, in a complete scrolling process, I get:\nAsyncPanZoomStarted()\nScrollPositionChanged()\nScrollPositionChanged()\n...\nAsyncPanZoomStopped()\n\n\nSo I'd imagine in a complete zooming process, I'll get something like\nAsyncPanZoomStarted()\nZoomLevelChanged()\nZoomLevelChanged()\n...\nAsyncPanZoomStopped()\n\n[1] https://dxr.mozilla.org/mozilla-central/rev/af6356a3e8c56036b74ba097395356d9c6e6c5a3/layout/base/AccessibleCaret.cpp#337-345", "author": "aethanyc@gmail.com", "id": 11183014, "time": "2016-02-22T02:57:23Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #8)\n> So I'd imagine in a complete zooming process, I'll get something like\n> AsyncPanZoomStarted()\n> ZoomLevelChanged()\n> ZoomLevelChanged()\n> ...\n> AsyncPanZoomStopped()\n\nSo yes, it would look something like this\n\n> [1]\n> https://dxr.mozilla.org/mozilla-central/rev/\n> af6356a3e8c56036b74ba097395356d9c6e6c5a3/layout/base/AccessibleCaret.cpp#337-\n> 345\n\nHowever, you would NOT be able to get an up-to-date zoom using GetCumulativeResolution, as that is only updated at the end of the animation. It is expensive to change the resolution in layout, because it causes a repaint of everything, so we avoid updating that resolution until the user is done pinching. I could send over a zoom level as part of the ZoomLevelChanged notification though, which would be coming from APZ. It would be about as laggy as the AsyncPanZoomStarted/AsyncPanZoomStopped notifications, but it might be more noticeable because the size of the carets would visibly jitter. I think it might be better to hide the carets during zoom instead?", "author": "bugmail@mozilla.staktrace.com", "id": 11184230, "time": "2016-02-22T15:16:25Z"}, {"text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #9)\n\nOn second thought, changing the size of the carets during zooming might cause layout reflow, which might not be good.\n\n> I think it might be better to hide the carets during zoom instead?\nYes. I'm consider the same. At least we could show carets during panning or scrolling, which already improves the current behavior. Could we have an argument to AsyncPanZoomStarted() to distinguish between zooming and panning (scrolling)? Or is there already have a function to query the state of the APZ?", "author": "aethanyc@gmail.com", "id": 11186659, "time": "2016-02-23T03:42:56Z"}, {"text": "Created attachment 8722537\nWIP to expose zoom begin/end\n\nUnfortunately I don't have a lot of time to spend on this at the moment, but I'm attaching a patch which exposes the relevant information from the APZ side of things. There's some commented-out code where it plumbs into the docshell, feel free to uncomment that and modify it as needed to hook it up however you feel is appropriate. I haven't had a chance to test this but it's fairly straightforward from the APZ side so I'm confident it should work. Hopefully you can pick it up from here - let me know if you have questions or need further assistance with this!", "author": "bugmail@mozilla.staktrace.com", "id": 11188111, "time": "2016-02-23T16:39:35Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #5)\n> I hack a prototype [1] to prove that my guess in comment #2 is correct, i.e.\n> carets can use position:absolute so that APZ can transform them together,\n> and carets are continue showing when panning or zooming the page. \n> \n> However, like kats said in comment #1, when the user zooms the carets will\n> zoom as well. The size of carets won't be updated to its normal size unless\n> the user lifts his fingers off the screen. \n> \n> I cannot tell whether this is already better than the current behavior that\n> carets are hidden during panning or zooming, and can be tackled as a\n> follow-up. Otherwise this is the best I can do on caret code without other\n> modification on APZ.\n> \n> Anthony, what do you think? If you have time to test this, the build is in\n> [2].\n\nTested on my N7. I think this is fine for now. Updating this carets as the user zooms is nice but having it resize after isn't necessarily bad either.\n\n:TYLin, after the user lifts his/her fingers off the screen, is it hard to add a 250ms resizing transition? it just seems a bit abrupt right now.\n\nThanks!\n\n> [1] https://treeherder.mozilla.org/#/jobs?repo=try&revision=e73b83853755\n> [2]\n> http://archive.mozilla.org/pub/mobile/try-builds/tlin@mozilla.com-\n> e73b838537554da7a407cb6b8d9b6cffc5075f09/try-android-api-15/fennec-47.0a1.en-\n> US.android-arm.apk", "author": "alam@mozilla.com", "id": 11188429, "time": "2016-02-23T18:02:59Z"}, {"text": ":kats, thank you for the patch in comment #11. Based on Anthony's comment #12, I feel we might not need to pursue for hiding carets while zooming.\n\nRe comment #12:\n> Tested on my N7. I think this is fine for now. Updating this carets as the\n> user zooms is nice but having it resize after isn't necessarily bad either.\n\nIt's good to hear this feedback. Based on the previous discussion between :kats, updating the carets size as the user zooms never going to have good visual effect.\n\n> :TYLin, after the user lifts his/her fingers off the screen, is it hard to\n> add a 250ms resizing transition? it just seems a bit abrupt right now.\nIt might not be too hard, but I'll need to redesign the carets styling. Will the 250ms transition effect block shipping this bug?", "author": "aethanyc@gmail.com", "id": 11190566, "time": "2016-02-24T08:08:55Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #13)\n> :kats, thank you for the patch in comment #11. Based on Anthony's comment\n> #12, I feel we might not need to pursue for hiding carets while zooming.\n> \n> Re comment #12:\n> > Tested on my N7. I think this is fine for now. Updating this carets as the\n> > user zooms is nice but having it resize after isn't necessarily bad either.\n> \n> It's good to hear this feedback. Based on the previous discussion between\n> :kats, updating the carets size as the user zooms never going to have good\n> visual effect.\n\nCan you explain what you mean by this? In Chrome, the carets stay the same \"size\" as everything else around it is zooming and I think that's a \"good visual effect\".\n\nFor us, we don't keep the carets the same size, but we do it _after_ the user \"let's go\" (stops zooming) so the abrupt change is what's bad UX behaviour here.\n\n> > :TYLin, after the user lifts his/her fingers off the screen, is it hard to\n> > add a 250ms resizing transition? it just seems a bit abrupt right now.\n> It might not be too hard, but I'll need to redesign the carets styling. Will\n> the 250ms transition effect block shipping this bug?\n\nAs above, this lack of a \"transition\" is quite jarring. Since text-selection is a common interaction, I'd like to get this in if its not too hard. A simple linear transition will work.", "author": "alam@mozilla.com", "id": 11192072, "time": "2016-02-24T18:03:39Z"}, {"text": "(In reply to Anthony Lam (:antlam) from comment #14)\n> Can you explain what you mean by this? In Chrome, the carets stay the same\n> \"size\" as everything else around it is zooming and I think that's a \"good\n> visual effect\".\n\nChrome keeps the carets the same size during zooming, which is a good visual effect. However, our implementation is very difficult to do so. If we implement it in an easy way, the visual effect in Firefox will be just bad.\n\n> For us, we don't keep the carets the same size, but we do it _after_ the\n> user \"let's go\" (stops zooming) so the abrupt change is what's bad UX\n> behaviour here.\n\nYes. That's what my prototype does, and I agree the abrupt change is bad.\n\n> As above, this lack of a \"transition\" is quite jarring. Since text-selection\n> is a common interaction, I'd like to get this in if its not too hard. A\n> simple linear transition will work.\n\nI'll try to implement this as part of this bug.\n\nThanks!", "author": "aethanyc@gmail.com", "id": 11193624, "time": "2016-02-25T02:11:09Z"}, {"text": "Anthony,\n\nOn second thought, I would like to give the alternative approach :kats mentions in comment #9 a chance for discussion. That is, we continue show the carets while scrolling or panning. But we hide the carets while zooming and show carets again once the user lifts the finger like our current implementation did.\n\nOne of my colleagues love this behavior instead, so I'd also like to hear your feedback about this approach.", "author": "aethanyc@gmail.com", "id": 11193853, "time": "2016-02-25T04:53:53Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #16)\n> Anthony,\n> \n> On second thought, I would like to give the alternative approach :kats\n> mentions in comment #9 a chance for discussion. That is, we continue show\n> the carets while scrolling or panning. But we hide the carets while zooming\n> and show carets again once the user lifts the finger like our current\n> implementation did.\n> \n> One of my colleagues love this behavior instead, so I'd also like to hear\n> your feedback about this approach.\n\nI understand the cost of re-painting but most users don't really think that way and justify their expectations in that manner.\n\nAs a user, when I \"create\" these text handles, they stay put until I do something to them. This includes moving them, dismissing them, etc. And, when I pinch-to-zoom, I expect things to \"zoom\" and change size with my gesture. \n\nMixing or breaking either of these expectations isn't great UX. So I want to avoid it and provide a consistent experience that the user would likely expect. We could revisit this later too, but for the first update, I'd like to keep the carets around and not have them disappear and reappear, repeatedly. \n\nhope that helps!", "author": "alam@mozilla.com", "id": 11195566, "time": "2016-02-25T17:46:29Z"}, {"text": ":TYLin, just NI-ing in case you missed my comments ^ :)", "author": "alam@mozilla.com", "id": 11215835, "time": "2016-03-03T18:29:45Z"}, {"text": "Anthony, thank you for explaining comment #17.", "author": "aethanyc@gmail.com", "id": 11217477, "time": "2016-03-04T02:59:27Z"}, {"text": "(In reply to Xidorn Quan [:xidorn] (UTC+8) from comment #3)\n> If using position: absolute is necessary, we can make top layer support\n> that. We need this for <dialog> anyway.\n\nXidorn, have you filed bug or any plan to support a custom content container for anonymous elements in nsCanvasFrame which as position:absolute?", "author": "aethanyc@gmail.com", "id": 11241201, "time": "2016-03-12T03:01:28Z"}, {"text": "It's bug 1236828.", "author": "xidorn+moz@upsuper.org", "id": 11241208, "time": "2016-03-12T03:06:09Z"}, {"text": "Even if bug 1168113 is fixed, as long as the AccessibleCaret divs is under the custom content container, they won't continue showing when scrolling or panning the page with APZ since a container with \"-moz-top-layer: top;\" will force the carets to be on their own layer.\n\nIf we move AccessibleCaret divs out of the custom content container, and let them to be the direct children of the nsCanvasFrame, the caret will continue to show when scrolling or panning the page with APZ, but they won't show on the element in fullscreen mode since the carets will be beneath the fullscreen element.\n\nI would suggest we ship gecko carets on Fennec without fixing this bug.", "author": "aethanyc@gmail.com", "id": 11298499, "time": "2016-04-04T14:21:10Z"}, {"text": "Created attachment 8741379\nMozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming.\n\nThe pref \"layout.accessiblecaret.extendedvisibility\" is added for Fennec\nto keep ActionBar open when carets temporarily hiding during panning or\nzooming. Now we make carets always show by default, so the pref can be\nremoved.\n\nDue to carets are not hiding when OnScrollStart(), many EXPECT_CALL for\n|CaretChangedReason::Visibilitychange| are removed from gtest.\n\nReview commit: https://reviewboard.mozilla.org/r/46443/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/46443/", "author": "aethanyc@gmail.com", "id": 11326551, "time": "2016-04-14T15:22:03Z"}, {"text": "I might be too pessimistic in comment 22. If bug 1168113 is fixed, with my patch in comment 23, we can fix this bug. The carets might not work on fullscreen element, but I am not worry about the issue for now.", "author": "aethanyc@gmail.com", "id": 11326576, "time": "2016-04-14T15:27:29Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #23)\n> Due to carets are not hiding when OnScrollStart(), many EXPECT_CALL for\n> |CaretChangedReason::Visibilitychange| are removed from gtest.\n\nThis might break the floating text selection. I'm listening to the visibilitychange event in order to hide the toolbar while scrolling the page:\nhttps://dxr.mozilla.org/mozilla-central/source/mobile/android/chrome/content/ActionBarHandler.js#68-70\n\nIs there an other event I could listen to in order to achieve this?", "author": "s.kaspari@gmail.com", "id": 11327149, "time": "2016-04-14T17:45:01Z"}, {"text": "Re comment 25: \n\nFrom the ActionBarHandler.js, it looks like you unconditionally hide the floating text selection whenever receiving the \"visibilitychange\" event regardless of the other data in the event. If it's correct, I think we can still dispatch the event in [1] without hiding the carets. Or we could invent a new event to indicate that the carets are scrolling.\n\n[1] https://dxr.mozilla.org/mozilla-central/rev/21bf1af375c1fa8565ae3bb2e89bd1a0809363d4/layout/base/AccessibleCaretManager.cpp#197", "author": "aethanyc@gmail.com", "id": 11329467, "time": "2016-04-15T11:16:26Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #26)\n> From the ActionBarHandler.js, it looks like you unconditionally hide the\n> floating text selection whenever receiving the \"visibilitychange\" event\n> regardless of the other data in the event. If it's correct, I think we can\n> still dispatch the event in [1] without hiding the carets. Or we could\n> invent a new event to indicate that the carets are scrolling.\n\nThat's correct. We hide the floating toolbar while scrolling the page. I guess a new event is cleaner assuming that \"visibilitychange\" refers to the visibility of the carets.", "author": "s.kaspari@gmail.com", "id": 11333316, "time": "2016-04-18T08:41:14Z"}, {"text": "Created attachment 8743305\nMozReview Request: Bug 1249201 Part 1 - Add \"scroll\" reason to CaretStateChangedEvent.\n\nWhen the carets are scrolled by APZ, they will hide and dispatch a\n\"visibilitychange\" reason. The floating toolbar (ActionBarHandler.js) on\nAndroid listens to the event to update its visibility.\n\nNow we want to show carets continuously when scrolling the page, so it\nmake no sense to dispatch a \"visibilitychange\" reason. However we still\nneed to notify the toolbar that the carets are scrolling by apz.\nTherefore, we need a this new \"scrollbyapz\" reason. It will be dispatch\nin AccessibleCaretManager::OnScrollStart() in Part 2.\n\nReview commit: https://reviewboard.mozilla.org/r/47707/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/47707/", "author": "aethanyc@gmail.com", "id": 11341333, "time": "2016-04-20T15:30:11Z"}, {"text": "Comment on attachment 8741379\nMozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/46443/diff/1-2/", "author": "aethanyc@gmail.com", "id": 11341334, "time": "2016-04-20T15:30:11Z"}, {"text": "Comment on attachment 8743305\nMozReview Request: Bug 1249201 Part 1 - Add \"scroll\" reason to CaretStateChangedEvent.\n\nhttps://reviewboard.mozilla.org/r/47707/#review44577\n\n::: dom/webidl/CaretStateChangedEvent.webidl:14\n(Diff revision 1)\n>    \"updateposition\",\n>    \"longpressonemptycontent\",\n>    \"taponcaret\",\n>    \"presscaret\",\n> -  \"releasecaret\"\n> +  \"releasecaret\",\n> +  \"scrollbyapz\"\n\napz is rather mysterious term for anyone not familiar with browser internals. Why not just \"scroll\". With that, r+", "author": "bugs@pettay.fi", "id": 11342549, "time": "2016-04-20T21:04:12Z"}, {"text": "Comment on attachment 8741379\nMozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming.\n\nhttps://reviewboard.mozilla.org/r/46443/#review44595\n\nFwiw, I agree with Olli that \"scroll\" is a better name.\n\n::: layout/base/AccessibleCaretManager.cpp:618\n(Diff revision 2)\n>  AccessibleCaretManager::OnScrollStart()\n>  {\n>    AC_LOG(\"%s\", __FUNCTION__);\n>  \n> +  if (!sCaretsAlwaysShowWhenScrolling) {\n> +    // Backup the appearance so that we can restore them after the scrolling is\n\nnit: replace \"is ended\" with \"ends\"", "author": "mats@mozilla.com", "id": 11342761, "time": "2016-04-20T22:00:51Z"}, {"text": "https://reviewboard.mozilla.org/r/47707/#review44577\n\n> apz is rather mysterious term for anyone not familiar with browser internals. Why not just \"scroll\". With that, r+\n\nAgree. \"scroll\" is shorter and cleaner.", "author": "aethanyc@gmail.com", "id": 11343914, "time": "2016-04-21T08:49:27Z"}, {"text": "Comment on attachment 8743305\nMozReview Request: Bug 1249201 Part 1 - Add \"scroll\" reason to CaretStateChangedEvent.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/47707/diff/1-2/", "author": "aethanyc@gmail.com", "id": 11343916, "time": "2016-04-21T08:50:02Z"}, {"text": "Comment on attachment 8741379\nMozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/46443/diff/2-3/", "author": "aethanyc@gmail.com", "id": 11343917, "time": "2016-04-21T08:50:02Z"}, {"text": "Comment on attachment 8741379\nMozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/46443/diff/3-4/", "author": "aethanyc@gmail.com", "id": 11343934, "time": "2016-04-21T08:55:47Z"}, {"text": "https://reviewboard.mozilla.org/r/46441/#review44795\n\nSebastian, need your confirmation that my part 2 won't break floating toolbar.", "author": "aethanyc@gmail.com", "id": 11343968, "time": "2016-04-21T09:13:50Z"}, {"text": "Anthony,\n\nThis is the build with the 250ms resizing transition effect per request in comment 12. Please help test whether the effect is good. Thank you.\n\nhttp://archive.mozilla.org/pub/mobile/try-builds/tlin@mozilla.com-5afcb10aeca4cd2ef5cc2b94e4805265e2e77fce/try-android-api-15/fennec-48.0a1.en-US.android-arm.apk", "author": "aethanyc@gmail.com", "id": 11344594, "time": "2016-04-21T13:39:04Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #37)\n> Anthony,\n> \n> This is the build with the 250ms resizing transition effect per request in\n> comment 12. Please help test whether the effect is good. Thank you.\n> \n> http://archive.mozilla.org/pub/mobile/try-builds/tlin@mozilla.com-\n> 5afcb10aeca4cd2ef5cc2b94e4805265e2e77fce/try-android-api-15/fennec-48.0a1.en-\n> US.android-arm.apk\n\nLooks good Ting! thanks!", "author": "alam@mozilla.com", "id": 11346366, "time": "2016-04-21T21:41:15Z"}, {"text": "Comment on attachment 8741379\nMozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming.\n\nhttps://reviewboard.mozilla.org/r/46443/#review44797\n\nWorks great!\n\n::: mobile/android/chrome/content/ActionBarHandler.js:68\n(Diff revision 4)\n>  \n>      // Else, update an open ActionBar.\n>      if (this._selectionID) {\n>        let [element, win] = this._getSelectionTargets();\n>        if (this._targetElement === element && this._contentWindow === win) {\n> -        if (e.reason == 'visibilitychange' || e.reason == 'presscaret') {\n> +        if (e.reason == 'visibilitychange' || e.reason == 'presscaret' ||\n\nI guess we can remove \"visibilitychange\" here now?", "author": "s.kaspari@gmail.com", "id": 11347463, "time": "2016-04-22T08:32:18Z"}, {"text": "https://reviewboard.mozilla.org/r/46443/#review44797\n\n> I guess we can remove \"visibilitychange\" here now?\n\nThere are cases other than \"scroll\" which hide carets and dispatch \"visibilitychange\". I guess we still need it to hide the action bar, right?", "author": "aethanyc@gmail.com", "id": 11347520, "time": "2016-04-22T09:11:19Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #40)\n> https://reviewboard.mozilla.org/r/46443/#review44797\n> \n> > I guess we can remove \"visibilitychange\" here now?\n> \n> There are cases other than \"scroll\" which hide carets and dispatch\n> \"visibilitychange\". I guess we still need it to hide the action bar, right?\n\nIf my assumption is wrong, we should file a follow-up bug to clean that up.", "author": "aethanyc@gmail.com", "id": 11347536, "time": "2016-04-22T09:21:46Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/533b9287d572\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/989e88261527", "author": "pulsebot@bots.tld", "id": 11347537, "time": "2016-04-22T09:22:15Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #41)\n> (In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #40)\n> > https://reviewboard.mozilla.org/r/46443/#review44797\n> > \n> > > I guess we can remove \"visibilitychange\" here now?\n> > \n> > There are cases other than \"scroll\" which hide carets and dispatch\n> > \"visibilitychange\". I guess we still need it to hide the action bar, right?\n> \n> If my assumption is wrong, we should file a follow-up bug to clean that up.\n\nInteresting. What are those events? I used \"visibilitychange\" primarily to hide the toolbar when scrolling the page. I guess this depends on what other actions trigger \"visibilitychange\".", "author": "s.kaspari@gmail.com", "id": 11347579, "time": "2016-04-22T09:43:43Z"}, {"text": "(In reply to Sebastian Kaspari (:sebastian) from comment #43)\n> Interesting. What are those events? I used \"visibilitychange\" primarily to\n> hide the toolbar when scrolling the page. I guess this depends on what other\n> actions trigger \"visibilitychange\".\n\nThe most common case is the blur event. We need to hide the carets [1] as well as the actionbar. Other cases like range collapsing to start or end, etc., are also calling HideCarets() and dispatch \"visibilitychange\" in [2].\n\nHowever, I just realize that carets are hidden in these cases, so it should be handled in [3] in ActionBarHandler.js. If the sole purpose of the old \"visibilitychange\" is for hiding the actionbar during scrolling the page, we can remove it.\n\n[1] https://dxr.mozilla.org/mozilla-central/rev/0891f0fa044cba28024849803e170ed7700e01e0/layout/base/AccessibleCaretManager.cpp#689-693\n[2] https://dxr.mozilla.org/mozilla-central/rev/0891f0fa044cba28024849803e170ed7700e01e0/layout/base/AccessibleCaretManager.cpp#137\n[3] https://dxr.mozilla.org/mozilla-central/rev/0891f0fa044cba28024849803e170ed7700e01e0/mobile/android/chrome/content/ActionBarHandler.js#33", "author": "aethanyc@gmail.com", "id": 11347629, "time": "2016-04-22T10:12:01Z"}, {"text": "(In reply to Ting-Yu Lin [:TYLin] (UTC+8) from comment #44)\n> However, I just realize that carets are hidden in these cases, so it should\n> be handled in [3] in ActionBarHandler.js. If the sole purpose of the old\n> \"visibilitychange\" is for hiding the actionbar during scrolling the page, we\n> can remove it.\n\nOk. We can do some testing in a follow-up bug and then maybe remove it.. :)", "author": "s.kaspari@gmail.com", "id": 11347639, "time": "2016-04-22T10:16:24Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/533b9287d572\nhttps://hg.mozilla.org/mozilla-central/rev/989e88261527", "author": "cbook@mozilla.com", "id": 11352199, "time": "2016-04-25T09:59:10Z"}], "cf_last_resolved": "2016-04-25T09:59:10Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-05-04T09:11:54Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1124074, 1230609, 1097398, 1266922, 1270030], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1236434"], "cf_fx_iteration": "---", "component": "Selection", "votes": 0, "cf_status_firefox48": "fixed", "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla48", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "aethanyc@gmail.com", "id": 503090, "name": "aethanyc@gmail.com", "real_name": "Ting-Yu Lin [:TYLin] (UTC+8) (Away, needinfo me if you need anything)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "aethanyc@gmail.com", "id": 503090, "name": "aethanyc@gmail.com", "real_name": "Ting-Yu Lin [:TYLin] (UTC+8) (Away, needinfo me if you need anything)"}, {"email": "alam@mozilla.com", "id": 479537, "name": "alam@mozilla.com", "real_name": "Anthony Lam (:antlam)"}, {"email": "bmo@upshifts.org", "id": 549002, "name": "bmo@upshifts.org", "real_name": "Astley Chen (inactive)"}, {"email": "bugmail@mozilla.staktrace.com", "id": 426788, "name": "bugmail@mozilla.staktrace.com", "real_name": "Kartikaya Gupta (email:kats@mozilla.com)"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "hhsu@mozilla.com", "id": 486171, "name": "hhsu@mozilla.com", "real_name": "Harly Hsu[:harly]"}, {"email": "jh+bugzilla@buttercookie.de", "id": 470713, "name": "jh+bugzilla@buttercookie.de", "real_name": "Jan Henning [:JanH]"}, {"email": "margaret.leibovic@gmail.com", "id": 346894, "name": "margaret.leibovic@gmail.com", "real_name": ":Margaret Leibovic"}, {"email": "markcapella@twcny.rr.com", "id": 433343, "name": "markcapella@twcny.rr.com", "real_name": "Mark Capella [:capella]"}, {"email": "mats@mozilla.com", "id": 5168, "name": "mats@mozilla.com", "real_name": "Mats Palmgren (:mats)"}, {"email": "mephisto41@gmail.com", "id": 473875, "name": "mephisto41@gmail.com", "real_name": "Morris Tseng [:mtseng] [:Morris] (Inactive)"}, {"email": "s.kaspari@gmail.com", "id": 472516, "name": "s.kaspari@gmail.com", "real_name": "Sebastian Kaspari (:sebastian)"}, {"email": "snorp@snorp.net", "id": 227322, "name": "snorp@snorp.net", "real_name": "James Willcox (:snorp) (jwillcox@mozilla.com)"}, {"email": "tchen@mozilla.com", "id": 543997, "name": "tchen@mozilla.com", "real_name": "Tori Chen [:tori]"}, {"email": "xidorn+moz@upsuper.org", "id": 373403, "name": "xidorn+moz@upsuper.org", "real_name": "Xidorn Quan [:xidorn] UTC+10"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "markcapella@twcny.rr.com"}], "who": "markcapella@twcny.rr.com", "when": "2016-02-18T04:15:22Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1236434"}], "who": "aethanyc@gmail.com", "when": "2016-02-18T06:32:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "quanxunzhen@gmail.com"}], "who": "aethanyc@gmail.com", "when": "2016-02-19T10:00:21Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail.mozilla@staktrace.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-19T10:00:42Z"}, {"changes": [{"removed": "Continue showing AccessibleCaret when scrolling for panning the page", "field_name": "summary", "added": "Continue showing AccessibleCaret when scrolling or panning the page"}], "who": "aethanyc@gmail.com", "when": "2016-02-19T10:33:21Z"}, {"changes": [{"removed": "needinfo?(bugmail.mozilla@staktrace.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-02-19T14:12:50Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(alam@mozilla.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-20T16:24:49Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail.mozilla@staktrace.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-20T16:33:27Z"}, {"changes": [{"removed": "needinfo?(bugmail.mozilla@staktrace.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-02-21T19:19:14Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail.mozilla@staktrace.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-22T02:57:23Z"}, {"changes": [{"removed": "needinfo?(bugmail.mozilla@staktrace.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-02-22T15:16:25Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail.mozilla@staktrace.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-23T03:43:42Z"}, {"changes": [{"removed": "needinfo?(bugmail.mozilla@staktrace.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-02-23T16:39:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tlin@mozilla.com"}, {"removed": "needinfo?(alam@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(tlin@mozilla.com)"}], "who": "alam@mozilla.com", "when": "2016-02-23T18:02:59Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(alam@mozilla.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-24T08:08:55Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "tlin@mozilla.com"}, {"removed": "needinfo?(tlin@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "aethanyc@gmail.com", "when": "2016-02-24T08:10:25Z"}, {"changes": [{"removed": "needinfo?(alam@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(tlin@mozilla.com)"}], "who": "alam@mozilla.com", "when": "2016-02-24T18:03:39Z"}, {"changes": [{"removed": "needinfo?(tlin@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "aethanyc@gmail.com", "when": "2016-02-25T02:11:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hhsu@mozilla.com, tchen@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(alam@mozilla.com)"}], "who": "aethanyc@gmail.com", "when": "2016-02-25T04:53:53Z"}, {"changes": [{"removed": "needinfo?(alam@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "alam@mozilla.com", "when": "2016-02-25T17:46:29Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1097398"}], "who": "alam@mozilla.com", "when": "2016-03-03T18:28:51Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(tlin@mozilla.com)"}], "who": "alam@mozilla.com", "when": "2016-03-03T18:29:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "margaret.leibovic@gmail.com, snorp@snorp.net"}, {"removed": "needinfo?(tlin@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "aethanyc@gmail.com", "when": "2016-03-04T02:59:27Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(quanxunzhen@gmail.com)"}], "who": "aethanyc@gmail.com", "when": "2016-03-12T03:01:28Z"}, {"changes": [{"removed": "needinfo?(quanxunzhen@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "xidorn+moz@upsuper.org", "when": "2016-03-12T03:06:09Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1168113"}], "who": "aethanyc@gmail.com", "when": "2016-03-24T03:21:21Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1168847"}], "who": "alam@mozilla.com", "when": "2016-03-24T09:33:29Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "NEW"}, {"removed": "tlin@mozilla.com", "field_name": "assigned_to", "added": "nobody@mozilla.org"}], "who": "aethanyc@gmail.com", "when": "2016-04-04T14:21:10Z"}, {"changes": [{"removed": "1168847", "field_name": "blocks", "added": "1230609"}], "who": "margaret.leibovic@gmail.com", "when": "2016-04-14T15:37:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "s.kaspari@gmail.com"}], "who": "s.kaspari@gmail.com", "when": "2016-04-14T17:45:01Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jh+bugzilla@buttercookie.de"}], "who": "jh+bugzilla@buttercookie.de", "when": "2016-04-18T15:06:38Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8743305, "added": "review?(bugs@pettay.fi)"}, {"field_name": "attachments.description", "removed": "MozReview Request: Bug 1249201 - Show carets continuously when panning or zooming.", "attachment_id": 8741379, "added": "MozReview Request: Bug 1249201 Part 2 - Show carets continuously when panning or zooming."}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8741379, "added": "review?(mats@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "bugs@pettay.fi, mats@mozilla.com"}], "who": "aethanyc@gmail.com", "when": "2016-04-20T15:30:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8743305, "added": "review+"}], "who": "bugs@pettay.fi", "when": "2016-04-20T21:04:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mats@mozilla.com)", "attachment_id": 8741379, "added": "review+"}], "who": "mats@mozilla.com", "when": "2016-04-20T22:00:51Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1249201 Part 1 - Add \"scrollbyapz\" reason to CaretStateChangedEvent.", "attachment_id": 8743305, "added": "MozReview Request: Bug 1249201 Part 1 - Add \"scroll\" reason to CaretStateChangedEvent."}], "who": "aethanyc@gmail.com", "when": "2016-04-21T08:50:02Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "tlin@mozilla.com"}], "who": "aethanyc@gmail.com", "when": "2016-04-21T09:09:03Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8741379, "added": "review?(s.kaspari@gmail.com)"}], "who": "aethanyc@gmail.com", "when": "2016-04-21T09:13:36Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(alam@mozilla.com)"}], "who": "aethanyc@gmail.com", "when": "2016-04-21T13:39:04Z"}, {"changes": [{"removed": "needinfo?(alam@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "alam@mozilla.com", "when": "2016-04-21T21:41:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(s.kaspari@gmail.com)", "attachment_id": 8741379, "added": "review+"}], "who": "s.kaspari@gmail.com", "when": "2016-04-22T08:32:18Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1266922"}], "who": "aethanyc@gmail.com", "when": "2016-04-23T03:01:49Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla48"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-04-25 02:59:10"}, {"removed": "---", "field_name": "cf_status_firefox48", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-04-25T09:59:10Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1270030"}], "who": "aethanyc@gmail.com", "when": "2016-05-04T09:11:54Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}