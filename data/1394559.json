{"cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Components", "creator": "oriol-bugzilla@hotmail.com", "cc": ["jimb@mozilla.com", "mail@mniemietz.de", "maruf.rahman.95@gmail.com"], "depends_on": [1395276, 1406961, 1407026], "creation_time": "2017-08-28T21:09:04Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "fixed", "keywords": [], "summary": "Better handling of denied objects in the console", "cf_last_resolved": "2017-09-27T09:54:11Z", "attachments": [{"creator": "oriol-bugzilla@hotmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2017-08-30T00:21:42Z", "type_id": 748, "creation_date": "2017-08-28T21:10:04Z", "id": 1637067, "setter": "jimb@mozilla.com"}], "content_type": "text/plain", "id": 8901974}, {"creator": "oriol-bugzilla@hotmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8903698}, {"creator": "oriol-bugzilla@hotmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8905037}, {"creator": "oriol-bugzilla@hotmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2017-09-20T23:04:04Z", "type_id": 748, "creation_date": "2017-09-13T22:25:05Z", "id": 1646814, "setter": "jimb@mozilla.com"}], "content_type": "text/plain", "id": 8907846}, {"creator": "oriol-bugzilla@hotmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8911302}], "assigned_to_detail": {"email": "oriol-bugzilla@hotmail.com", "id": 541576, "name": "oriol-bugzilla@hotmail.com", "real_name": "Oriol Brufau [:Oriol]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "comments": [{"text": "There are objects which have security wrappers that deny all access. These objects have an \"Object\" class (or \"Function\" if callable), so the console attempts to do all kinds of things to display that object.\n\nHowever, all these operations throw errors, which are displayed in the browser console, and this seems wrong. And displaying the object as \"Object {}\" can be confusing, the user might think it's really an empty object while in fact it's just an object which denies access.\n\nExample of such an object:\n\n1. Load http://example.com\n2. Open web console\n3. Enter this code:\n    var iframe = document.createElement('iframe');\n    iframe.sandbox = 'allow-scripts';\n    iframe.src = 'data:text/html,<script>console.log({a:123})<\\/script>';\n    document.body.appendChild(iframe);\n4. Right-click the logged object, choose \"Store as global variable\"\n5. \"temp0\" appears in the console, press enter", "author": "oriol-bugzilla@hotmail.com", "id": 12607424, "time": "2017-08-28T21:09:04Z"}, {"text": "Created attachment 8901974\ndenied-object.patch\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=4e52e2a27fb7f215240a5313f55895dff3b7b3c0", "author": "oriol-bugzilla@hotmail.com", "id": 12607426, "time": "2017-08-28T21:10:04Z"}, {"text": "Comment on attachment 8901974\ndenied-object.patch\n\nReview of attachment 8901974:\n-----------------------------------------------------------------\n\n::: devtools/server/actors/object.js\n@@ +90,5 @@\n> +      // wrapper. Change the class so that this will be visible in the UI.\n> +      if (DevToolsUtils.isCPOW(this.obj)) {\n> +        g.class = \"CPOW: \" + g.class;\n> +      } else {\n> +        g.class = \"Denied\";\n\nBetter naming suggestions?\n\n@@ +100,5 @@\n>      } else {\n> +      g.class = this.obj.class;\n> +      g.extensible = this.obj.isExtensible();\n> +      g.frozen = this.obj.isFrozen();\n> +      g.sealed = this.obj.isSealed();\n\nRemoving the try statement passes all tests in the try push, but not sure if it would be safer to keep it.\n\n@@ +116,5 @@\n> +        let length = DevToolsUtils.getProperty(this.obj, \"length\");\n> +        g.ownPropertyLength = length;\n> +      } else if (![\"Function\", \"Proxy\"].includes(g.class)) {\n> +        // Bug 1163520: Assert on internal functions\n> +        g.ownPropertyLength = this.obj.getOwnPropertyNames().length;\n\nDitto.\n\n::: devtools/shared/webconsole/test/test_jsterm_queryselector.html\n@@ +92,5 @@\n>    let response = yield evaluateJS(\"$$(':foo')\");\n>    checkObject(response, {\n>      input: \"$$(':foo')\",\n>      exceptionMessage: \"SyntaxError: ':foo' is not a valid selector\",\n> +    exception: {}\n\nNot sure why this case is treated as a Denied object and thus loses it's preview. The cases above in this test file still have a preview.", "author": "oriol-bugzilla@hotmail.com", "id": 12607440, "time": "2017-08-28T21:15:09Z"}, {"text": "Filed bug 1394992 for the obsolete bug 1163520 workaround. That conflicts with the patch here; this one should probably land first.", "author": "jimb@mozilla.com", "id": 12611676, "time": "2017-08-29T23:47:13Z"}, {"text": "Comment on attachment 8901974\ndenied-object.patch\n\nReview of attachment 8901974:\n-----------------------------------------------------------------\n\nI'm rejecting this solely because the jsterm_queryselector.html regression looks serious to me. I'd want to understand what's going on there before landing this. The rest of it looks good.\n\n::: devtools/server/actors/object.js\n@@ +83,5 @@\n>        \"type\": \"object\",\n>        \"actor\": this.actorID\n>      };\n>  \n> +    let accesDenied = !unwrap(this.obj);\n\nShould be spelled \"accessDenied\".\n\n@@ +90,5 @@\n> +      // wrapper. Change the class so that this will be visible in the UI.\n> +      if (DevToolsUtils.isCPOW(this.obj)) {\n> +        g.class = \"CPOW: \" + g.class;\n> +      } else {\n> +        g.class = \"Denied\";\n\nHow about \"Inaccessible\"?\n\n@@ +100,5 @@\n>      } else {\n> +      g.class = this.obj.class;\n> +      g.extensible = this.obj.isExtensible();\n> +      g.frozen = this.obj.isFrozen();\n> +      g.sealed = this.obj.isSealed();\n\nWe should do whatever makes it easiest to learn about cases that we haven't covered (and I don't doubt there are some). I think that means leaving the `try` out, because a throw here will cause mochitests to fail and alert us to the problem. If we keep the `try` with the empty `catch`, that's a silent failure, which is not helpful.\n\n@@ +105,3 @@\n>      }\n>  \n> +    if (g.class != \"DeadObject\" && !accesDenied) {\n\nI would definitely expect the `isFrozen` and `isSealed` calls above to throw on dead objects. Could we handle dead objects up above, after the \"access denied\" case?\n\nOverall, I guess I would expect this function to have the structure:\n\ncheck for opaque wrapper\n    construct limited grip and return\n\ncheck for dead object\n    construct limited grip and return\n\ncheck for proxy\n    construct limited grip and return\n\ncommon tail for ordinary objects\n\n@@ +111,5 @@\n>  \n>        // FF40+: Allow to know how many properties an object has\n>        // to lazily display them when there is a bunch.\n> +      if (TYPED_ARRAY_CLASSES.indexOf(g.class) != -1) {\n> +        // Bug 1348761: getOwnPropertyNames is unecessary slow on TypedArrays\n\nWhile you're here, could we fix this typo? should be \"unnecessarily slow\"\n\n::: devtools/shared/webconsole/test/test_jsterm_queryselector.html\n@@ +92,5 @@\n>    let response = yield evaluateJS(\"$$(':foo')\");\n>    checkObject(response, {\n>      input: \"$$(':foo')\",\n>      exceptionMessage: \"SyntaxError: ':foo' is not a valid selector\",\n> +    exception: {}\n\nI think this regression needs to be worked out before we can land this patch.", "author": "jimb@mozilla.com", "id": 12611745, "time": "2017-08-30T00:21:42Z"}, {"text": "(In reply to Jim Blandy :jimb from comment #4)\n> I would definitely expect the `isFrozen` and `isSealed` calls above to throw\n> on dead objects. Could we handle dead objects up above, after the \"access\n> denied\" case?\n\nIt seems they don't throw. Enter this in a privileged web console:\n\n    var win = window.open();\n    win.close();\n    setTimeout(() => console.log({\n      obj: win,\n      extensible: Object.isExtensible(win),\n      frozen: Object.isFrozen(win),\n      sealed: Object.isSealed(win)\n    }), 1e3);\n\nResult: Object { obj: DeadObject, extensible: true, frozen: false, sealed: false }", "author": "oriol-bugzilla@hotmail.com", "id": 12613450, "time": "2017-08-30T15:12:46Z"}, {"text": "Created attachment 8903698\ndenied-object.patch\n\nRenamed grip class to \"Inaccessible\".\n\nEarly returns for CPOW, Inaccessible and DeadObject objects. Not for Proxy, because it can have a preview with the target and handler.\n\nFixed \"unnecessarily slow\" typo.\n\nI noticed that _findSafeGetterValues could run proxy traps if the proxy was inaccessible. So now safe getters are not searched in inaccessible objects. Then I removed the isProxy function because in all calls I already had the unwrapped object at hand.\n\nAdded more tests in test_objectgrips-17.js to ensure proxy traps don't run.\n\nThe querySelector problem was just that the thrown error belonged to a system principal, and thus wasn't accessible from non-system principals debuggees. This is being fixed in bug 1395276.", "author": "oriol-bugzilla@hotmail.com", "id": 12621393, "time": "2017-09-01T17:48:34Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=0260646abe19f8002abb1428a168d3b4f3df84e4", "author": "oriol-bugzilla@hotmail.com", "id": 12621395, "time": "2017-09-01T17:49:54Z"}, {"text": "Created attachment 8905037\ndenied-object.patch\n\nUpdating the patch with the changes from bug 1394992.", "author": "oriol-bugzilla@hotmail.com", "id": 12633367, "time": "2017-09-06T13:44:19Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=6c3f1474045eed1d414f41cbe9efc82945ea08c7", "author": "oriol-bugzilla@hotmail.com", "id": 12633375, "time": "2017-09-06T13:46:16Z"}, {"text": "Created attachment 8907846\ndenied-object.patch\n\nI was relying on bug 1274657 to prevent object inspector from running proxy traps. However, a proxy could be behind an inaccessible object, and then expanding it will run traps. So I changed onPrototypeAndProperties to prevent this, and added new tests.", "author": "oriol-bugzilla@hotmail.com", "id": 12661039, "time": "2017-09-13T22:25:05Z"}, {"text": "I meant bug 1388831 instead of bug 1274657.", "author": "oriol-bugzilla@hotmail.com", "id": 12661049, "time": "2017-09-13T22:26:54Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=8a7ff054868c1a781774cd5ad83e7ae533e383d7", "author": "oriol-bugzilla@hotmail.com", "id": 12661054, "time": "2017-09-13T22:28:55Z"}, {"text": "This series of bugs has really brought home to me that I don't have a grip on just how many different kinds of objects one may encounter in Firefox. There's unimportant variety: different constructors, different WebIDL objects. But even limiting the conversation to objects with different fundamental behaviors: native objects, proxies, xrays, dead objects, opaque wrappers, and so on, I don't have a lot of confidence that we've identified all the cases we need to cover.\n\nThis isn't a criticism of the patch at all; investigating, patching, and writing tests is a fine process to improve things. But I would be much more comfortable if we were working from an authoritative list of behaviors we need to cope with, than treating the code base like an unexplored country, and handling cases as we discover them.", "author": "jimb@mozilla.com", "id": 12672017, "time": "2017-09-15T21:20:56Z"}, {"text": "Of course, but it seems there is no such authoritative list of behaviors. BTW, I changed the review request of bug 1395276 because you were taking so long to respond, but if you are available now maybe you have more context to review it than nchevobbe.", "author": "oriol-bugzilla@hotmail.com", "id": 12673488, "time": "2017-09-16T18:27:04Z"}, {"text": "(In reply to Oriol Brufau [:Oriol] from comment #14)\n> BTW, I changed the review request of bug 1395276 because you were taking so\n> long to respond, but if you are available now maybe you have more context to\n> review it than nchevobbe.\n\nThat's completely reasonable. I can finish this review tomorrow.", "author": "jimb@mozilla.com", "id": 12683561, "time": "2017-09-20T00:00:14Z"}, {"text": "Comment on attachment 8907846\ndenied-object.patch\n\nReview of attachment 8907846:\n-----------------------------------------------------------------\n\nThanks very much.\n\n::: devtools/server/actors/object.js\n@@ +103,5 @@\n> +    // Otherwise, increment grip depth and attempt to create a preview.\n> +    this.hooks.incrementGripDepth();\n> +\n> +    // The `isProxy` getter is called on `unwrapped` instead of `this.obj` in order\n> +    // to detect proxies behing transparent wrappers, and thus avoid running traps.\n\n\"behind\"", "author": "jimb@mozilla.com", "id": 12687739, "time": "2017-09-20T23:04:04Z"}, {"text": "Created attachment 8911302\ndenied-object.patch\n\nFixing the typo. But this can't land until bug 1395276 is fixed.", "author": "oriol-bugzilla@hotmail.com", "id": 12694317, "time": "2017-09-22T18:54:25Z"}, {"text": "Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/3d899ef058ab\nBetter handling of inaccessible objects in the console. r=jimb", "author": "pulsebot@bots.tld", "id": 12704069, "time": "2017-09-26T19:58:21Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/3d899ef058ab", "author": "aryx.bugmail@gmx-topmail.de", "id": 12705809, "time": "2017-09-27T09:54:11Z"}, {"text": "I do not want to criticize this patch but I think it is not a smart way to just print out \"Inaccessible { }\". From my point of view, it could be a good idea to display the old output *and* an additional \"Inaccessible\" flag. \n\nExample: As described in ticket 1408376, we have the following behavior in FF 58.0a1-2017-10-15 Nightly:\n- cd(window.frames[0])\n- top.location.href\nSecurityError: Permission denied to access property \"href\" on cross-origin object\n- window.parent\nInaccessible {  }\n\nYou might think that window.parent is completely inaccessible including sub-properties like \"length\"; this is of course wrong. Furthermore, we have two different messages. Message two does not give you any valuable information why the browser disallows access.", "author": "mail@mniemietz.de", "id": 12762908, "time": "2017-10-16T14:30:17Z"}, {"text": "Yes, when I did this patch I assumed that objects from a global not subsumed by the debuggee would be completely inaccessible. And I thought that other objects would mostly be safe, so with this check most try statements could be removed. However, it's not that simple. Cross-origin Window and Location objects may expose some properties, and some same-origin objects are problematic (bug 1406961).\n\nSince it seems there is no reliable way to know whether an object can be accessed or not without accessing it, it might be better to just do it, but protecting everything with try statements.\n\nThat said, scripted proxy objects should still never be accessed. And objects from invisible-to-debugger compartments might be scripted proxies, so they should be blacklisted too.\n\nSo maybe the logic could be\n\n 1. Attempt to unwrap.\n 2. If that throws, it's from an invisible-to-debugger compartment.\n    1. If it's a CPOW, mark it as \"CPOW: class\" and do not access it. End.\n    2. Otherwise, mark it as \"InvisibleToDebugger: class\" and do not access it. End.\n 3. If an object is returned,\n    1. Check if it's a proxy. If so, mark it as \"Proxy\" and expose its target and handler. End.\n 4. If null is returned, mark it as potentially/partially inaccessible (any name suggestion better than \"Inaccessible\"?)\n 5. Create a preview, but expect that internal operations may throw.\n\nJim, does this sound good? I could do this while fixing bug 1403536.", "author": "oriol-bugzilla@hotmail.com", "id": 12763257, "time": "2017-10-16T16:17:33Z"}, {"text": "(In reply to Oriol Brufau [:Oriol] from comment #21)\n> any name suggestion better than \"Inaccessible\"?\n\nJust after posting the comment I thought that \"Restricted\" could be better.", "author": "oriol-bugzilla@hotmail.com", "id": 12763265, "time": "2017-10-16T16:20:29Z"}, {"text": "This somehow sounds like a \"hard\" statement. How about:\n\n[Partial restricted Object] Error Message XY with details", "author": "mail@mniemietz.de", "id": 12765247, "time": "2017-10-17T07:59:57Z"}, {"text": "(In reply to Marcus Niemietz from comment #23)\n> This somehow sounds like a \"hard\" statement. How about:\n> \n> [Partial restricted Object] Error Message XY with details\n\nA class this long would be bad when you want to display a bunch of these objects in an array.\n\nSo showing long messages should be handled in reps, because this may need different approaches depending on the mode (tiny, short, long).\n\nReps could check whether the grip class is \"Restricted\" to know when to show some kind of message. It could explain that the targeted document is not allowed to fully access the object, and suggest using \"Select an iframe as the current targeted document\" to fix it.", "author": "oriol-bugzilla@hotmail.com", "id": 12765848, "time": "2017-10-17T11:14:50Z"}, {"text": "This sounds goood. I am fine with it.", "author": "mail@mniemietz.de", "id": 12785760, "time": "2017-10-24T15:07:35Z"}, {"text": "I have reproduced this bug with Nightly 57.0a1 (2017-08-28) on Windows 10, 64 Bit!\n\nThis bug's fix is verified latest Beta!\n\nBuild ID   : 20171218174357\nUser Agent : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0", "author": "maruf.rahman.95@gmail.com", "id": 12936172, "time": "2017-12-25T08:28:10Z"}, {"text": "Clearing flag because I did it anyways in bug 1403536.\n\nThere is https://github.com/devtools-html/debugger.html/issues/6120 about improving how reps deals with restricted objects.", "author": "oriol-bugzilla@hotmail.com", "id": 13239991, "time": "2018-04-28T18:14:15Z"}], "id": 1394559, "priority": "--", "mentors_detail": [], "comment_count": 28, "version": "unspecified", "cf_qa_whiteboard": "[bugday-20171220]", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox62": "---", "status": "RESOLVED", "product": "DevTools", "cf_fx_iteration": "---", "blocks": [], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1404027"], "cf_status_firefox_esr52": "---", "component": "Console", "votes": 0, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "Firefox 58", "is_cc_accessible": true, "groups": [], "url": "", "creator_detail": {"email": "oriol-bugzilla@hotmail.com", "id": 541576, "name": "oriol-bugzilla@hotmail.com", "real_name": "Oriol Brufau [:Oriol]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "jimb@mozilla.com", "id": 298765, "name": "jimb@mozilla.com", "real_name": "Jim Blandy :jimb"}, {"email": "mail@mniemietz.de", "id": 593246, "name": "mail@mniemietz.de", "real_name": "Marcus Niemietz"}, {"email": "maruf.rahman.95@gmail.com", "id": 559911, "name": "maruf.rahman.95@gmail.com", "real_name": "Mohammad Maruf Rahman"}], "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-13T17:24:18Z", "cf_status_firefox_esr60": "---", "assigned_to": "oriol-bugzilla@hotmail.com", "is_open": false, "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8901974, "added": "review?(jimb@mozilla.com)"}, {"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "", "field_name": "cc", "added": "jimb@mozilla.com"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "oriol-bugzilla@hotmail.com"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-08-28T21:10:04Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jimb@mozilla.com)", "attachment_id": 8901974, "added": "review-"}], "who": "jimb@mozilla.com", "when": "2017-08-30T00:21:42Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1395276"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-08-30T18:32:52Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8901974, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8903698, "added": "review?(jimb@mozilla.com)"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-09-01T17:48:34Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8903698, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(jimb@mozilla.com)", "attachment_id": 8903698, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8905037, "added": "review?(jimb@mozilla.com)"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-09-06T13:44:19Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8905037, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(jimb@mozilla.com)", "attachment_id": 8905037, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8907846, "added": "review?(jimb@mozilla.com)"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-09-13T22:25:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jimb@mozilla.com)", "attachment_id": 8907846, "added": "review+"}], "who": "jimb@mozilla.com", "when": "2017-09-20T23:04:04Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8907846, "added": "1"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-09-22T18:54:25Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-09-26T13:34:51Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2017-09-26T19:58:21Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "Firefox 58"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2017-09-27 09:54:11"}, {"removed": "---", "field_name": "cf_status_firefox58", "added": "fixed"}], "who": "aryx.bugmail@gmx-topmail.de", "when": "2017-09-27T09:54:11Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1404027"}], "who": "bgrinstead@mozilla.com", "when": "2017-09-29T17:52:55Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1406961"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-10-09T15:43:13Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1407026"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-10-09T19:47:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mail@mniemietz.de"}], "who": "mail@mniemietz.de", "when": "2017-10-16T14:30:17Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jimb@mozilla.com)"}], "who": "oriol-bugzilla@hotmail.com", "when": "2017-10-16T16:17:33Z"}, {"changes": [{"removed": "", "field_name": "cf_qa_whiteboard", "added": "[bugday-20171220]"}, {"removed": "", "field_name": "cc", "added": "maruf.rahman.95@gmail.com"}], "who": "maruf.rahman.95@gmail.com", "when": "2017-12-25T08:28:10Z"}, {"changes": [{"removed": "needinfo?(jimb@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "oriol-bugzilla@hotmail.com", "when": "2018-04-28T18:14:15Z"}, {"changes": [{"removed": "Firefox", "field_name": "product", "added": "DevTools"}], "who": "automation@bmo.tld", "when": "2018-06-13T17:24:18Z"}]}