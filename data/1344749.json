{"cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "attachments": [{"creator": "u462496@disabled.tld", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2017-10-23T20:37:37Z", "type_id": 607, "creation_date": "2017-10-22T00:31:28Z", "id": 1668917, "setter": "mixedpuppy@gmail.com"}, {"status": "-", "name": "feedback", "modification_date": "2017-10-24T14:41:16Z", "type_id": 607, "creation_date": "2017-10-23T20:21:44Z", "id": 1669532, "setter": "bob.silverberg@gmail.com"}], "content_type": "text/plain", "id": 8920839}, {"creator": "u462496@disabled.tld", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8932056}, {"creator": "u462496@disabled.tld", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8936487}, {"creator": "bob.silverberg@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-02-28T16:21:17Z", "type_id": 4, "creation_date": "2018-02-28T16:21:17Z", "id": 1722872, "setter": "mixedpuppy@gmail.com"}, {"status": "+", "name": "review", "modification_date": "2018-03-01T15:57:24Z", "type_id": 4, "creation_date": "2018-02-28T19:58:10Z", "id": 1723048, "setter": "dao+bmo@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8944043}, {"creator": "mixedpuppy@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-24T18:53:35Z", "type_id": 4, "creation_date": "2018-03-07T22:31:41Z", "id": 1726556, "setter": "dao+bmo@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8956994}, {"creator": "mixedpuppy@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-04T08:49:06Z", "type_id": 4, "creation_date": "2018-04-02T21:37:36Z", "id": 1738185, "setter": "dao+bmo@mozilla.com"}], "content_type": "text/plain", "id": 8964410}, {"creator": "marius.santa@softvision.ro", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/gif", "id": 8980306}], "cf_tracking_firefox62": "---", "creator": "u462496@disabled.tld", "mentors_detail": [], "depends_on": [1442679, 1442703, 1449061, 1454873], "cf_status_firefox_esr60": "---", "cf_user_story": "", "history": [{"changes": [{"removed": "", "field_name": "whiteboard", "added": "[design-decision-needed]"}], "who": "u462496@disabled.tld", "when": "2017-03-06T15:16:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "amckay@mozilla.com"}], "who": "andy+bugzilla@mckay.pub", "when": "2017-03-06T22:38:23Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "WONTFIX"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2017-03-06 23:06:41"}], "who": "andy+bugzilla@mckay.pub", "when": "2017-03-06T23:06:41Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(amckay@mozilla.com)"}], "who": "u462496@disabled.tld", "when": "2017-10-12T08:01:08Z"}, {"changes": [{"removed": "needinfo?(amckay@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "andy+bugzilla@mckay.pub", "when": "2017-10-12T22:08:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ajfhajf@yandex.ru"}], "who": "ajfhajf@yandex.ru", "when": "2017-10-13T07:03:47Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P5"}, {"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "WONTFIX", "field_name": "resolution", "added": ""}], "who": "andy+bugzilla@mckay.pub", "when": "2017-10-13T16:46:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cneiman@mozilla.com"}], "who": "cneiman@mozilla.com", "when": "2017-10-20T21:02:55Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yfdyh000@gmail.com"}], "who": "yfdyh000@gmail.com", "when": "2017-10-20T23:54:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mixedpuppy@gmail.com"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "kevinhowjones@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8920839, "added": "feedback?(amckay@mozilla.com), feedback?(mixedpuppy@gmail.com)"}], "who": "u462496@disabled.tld", "when": "2017-10-22T00:31:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bob.silverberg@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8920839, "added": "feedback?(bob.silverberg@gmail.com)"}], "who": "mixedpuppy@gmail.com", "when": "2017-10-23T20:21:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(mixedpuppy@gmail.com)", "attachment_id": 8920839, "added": "feedback+"}], "who": "mixedpuppy@gmail.com", "when": "2017-10-23T20:37:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mconca@mozilla.com"}], "who": "mconca@mozilla.com", "when": "2017-10-23T20:48:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(bob.silverberg@gmail.com)", "attachment_id": 8920839, "added": "feedback-"}], "who": "bob.silverberg@gmail.com", "when": "2017-10-24T14:41:16Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kevinhowjones@gmail.com)"}], "who": "bob.silverberg@gmail.com", "when": "2017-10-24T14:43:35Z"}, {"changes": [{"removed": "needinfo?(kevinhowjones@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "u462496@disabled.tld", "when": "2017-10-24T18:36:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(amckay@mozilla.com)", "attachment_id": 8920839, "added": ""}], "who": "andy+bugzilla@mckay.pub", "when": "2017-10-25T16:48:25Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bob.silverberg@gmail.com)"}], "who": "andy+bugzilla@mckay.pub", "when": "2017-10-31T17:50:44Z"}, {"changes": [{"removed": "[design-decision-needed]", "field_name": "whiteboard", "added": "[design-decision-approved][browserSettings]"}], "who": "bob.silverberg@gmail.com", "when": "2017-10-31T17:51:44Z"}, {"changes": [{"removed": "needinfo?(bob.silverberg@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bob.silverberg@gmail.com", "when": "2017-10-31T17:52:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kmaglione+bmo@mozilla.com"}], "who": "kmaglione+bmo@mozilla.com", "when": "2017-11-06T21:53:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yurivkhan@gmail.com"}], "who": "yurivkhan@gmail.com", "when": "2017-11-10T18:31:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mozilla@goots.org"}], "who": "mozilla@goots.org", "when": "2017-11-10T20:53:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "w.elwood08+bmo@gmail.com"}], "who": "w.elwood08+bmo@gmail.com", "when": "2017-11-10T21:21:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cellulies@gmail.com"}], "who": "cellulies@gmail.com", "when": "2017-11-15T02:59:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yoasif@gmail.com"}], "who": "yoasif@gmail.com", "when": "2017-11-17T06:43:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "matt1299@gmail.com"}], "who": "matt1299@gmail.com", "when": "2017-11-18T18:23:01Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tummychow511@gmail.com"}], "who": "tummychow511@gmail.com", "when": "2017-11-20T03:07:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dharding@living180.net"}], "who": "dharding@living180.net", "when": "2017-11-25T20:53:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "zaaooza@yandex.ru"}], "who": "zaaooza@yandex.ru", "when": "2017-11-26T16:56:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8932056, "added": "feedback?(bob.silverberg@gmail.com)"}], "who": "u462496@disabled.tld", "when": "2017-11-27T11:08:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8932056, "added": "feedback?(mixedpuppy@gmail.com)"}], "who": "u462496@disabled.tld", "when": "2017-11-27T11:30:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(bob.silverberg@gmail.com)", "attachment_id": 8932056, "added": ""}], "who": "bob.silverberg@gmail.com", "when": "2017-11-27T13:14:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dao+bmo@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8932056, "added": "feedback?(dao+bmo@mozilla.com)"}], "who": "u462496@disabled.tld", "when": "2017-11-27T13:24:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "remtanmajitenshi@gmail.com"}], "who": "remtanmajitenshi@gmail.com", "when": "2017-11-27T17:48:09Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(dao+bmo@mozilla.com)", "attachment_id": 8932056, "added": "feedback?(kmaglione+bmo@mozilla.com)"}], "who": "u462496@disabled.tld", "when": "2017-11-28T13:13:55Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconca@mozilla.com)"}], "who": "mixedpuppy@gmail.com", "when": "2017-11-29T20:32:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(mixedpuppy@gmail.com)", "attachment_id": 8932056, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2017-11-29T20:45:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "grahamperrin@gmail.com"}], "who": "grahamperrin@gmail.com", "when": "2017-11-29T22:54:35Z"}, {"changes": [{"removed": "needinfo?(mconca@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconca@mozilla.com", "when": "2017-12-04T15:31:01Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1226546"}], "who": "yfdyh000@gmail.com", "when": "2017-12-05T22:18:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "human.peng@gmail.com"}], "who": "human.peng@gmail.com", "when": "2017-12-05T22:22:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "vrtareg+mozilla@gmail.com"}], "who": "vrtareg+mozilla@gmail.com", "when": "2017-12-05T22:50:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tjfla@hotmail.com"}], "who": "dao+bmo@mozilla.com", "when": "2017-12-06T13:02:33Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mixedpuppy@gmail.com), needinfo?(mconca@mozilla.com), needinfo?(kmaglione+bmo@mozilla.com)"}], "who": "u462496@disabled.tld", "when": "2017-12-12T23:45:32Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=933532"}], "who": "dao+bmo@mozilla.com", "when": "2017-12-13T11:49:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yuki@clear-code.com"}], "who": "yuki@clear-code.com", "when": "2017-12-13T13:39:11Z"}, {"changes": [{"removed": "kevinhowjones@gmail.com", "field_name": "assigned_to", "added": "nobody@mozilla.org"}], "who": "u462496@disabled.tld", "when": "2017-12-15T07:26:21Z"}, {"changes": [{"removed": "needinfo?(mixedpuppy@gmail.com), needinfo?(mconca@mozilla.com), needinfo?(kmaglione+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "u462496@disabled.tld", "when": "2017-12-15T20:35:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(kmaglione+bmo@mozilla.com)", "attachment_id": 8932056, "added": ""}], "who": "u462496@disabled.tld", "when": "2017-12-15T20:37:33Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bob.silverberg@gmail.com)"}], "who": "andy+bugzilla@mckay.pub", "when": "2017-12-19T20:05:38Z"}, {"changes": [{"removed": "WebExtensions: Untriaged", "field_name": "component", "added": "WebExtensions: General"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bob.silverberg@gmail.com"}, {"removed": "needinfo?(bob.silverberg@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bob.silverberg@gmail.com", "when": "2018-01-05T19:56:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sriram.singa@gmail.com"}], "who": "sriram.singa@gmail.com", "when": "2018-01-13T16:27:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bzhao@mozilla.com"}], "who": "bzhao@mozilla.com", "when": "2018-01-18T08:19:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "leehw@live.co.uk"}], "who": "bob.silverberg@gmail.com", "when": "2018-01-19T16:18:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8944043, "added": "review?(dao+bmo@mozilla.com), review?(mixedpuppy@gmail.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-01-19T19:29:51Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1431840"}], "who": "mconca@mozilla.com", "when": "2018-01-19T21:56:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8944043, "added": "review+"}], "who": "mixedpuppy@gmail.com", "when": "2018-01-22T19:52:09Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8920839, "added": "1"}], "who": "dao+bmo@mozilla.com", "when": "2018-01-25T11:18:41Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8936487, "added": "1"}], "who": "dao+bmo@mozilla.com", "when": "2018-01-25T11:18:47Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8932056, "added": "1"}], "who": "dao+bmo@mozilla.com", "when": "2018-01-25T11:18:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dao+bmo@mozilla.com)", "attachment_id": 8944043, "added": "review-"}], "who": "dao+bmo@mozilla.com", "when": "2018-01-26T11:16:48Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconca@mozilla.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-01-26T12:50:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "robert_abc3@yahoo.com"}], "who": "robert_abc3@yahoo.com", "when": "2018-01-27T05:42:18Z"}, {"changes": [{"removed": "needinfo?(mconca@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconca@mozilla.com", "when": "2018-01-29T00:06:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nodensntt@hotmail.com"}], "who": "nodensntt@hotmail.com", "when": "2018-01-31T01:30:21Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1311472"}], "who": "bzhao@mozilla.com", "when": "2018-02-01T07:32:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dietrich@mozilla.com"}], "who": "dietrich@mozilla.com", "when": "2018-02-01T18:14:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "beking@email.com"}], "who": "beking@email.com", "when": "2018-02-02T17:25:30Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconca@mozilla.com)"}], "who": "dao+bmo@mozilla.com", "when": "2018-02-07T12:17:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "zlamma@gmail.com"}], "who": "zlamma@gmail.com", "when": "2018-02-07T20:35:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "johnlgalt@gmail.com"}], "who": "johnlgalt@gmail.com", "when": "2018-02-08T05:36:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "reven4000@yahoo.com"}], "who": "reven4000@yahoo.com", "when": "2018-02-08T08:34:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "werner.braun@muenster.de"}], "who": "u611587@disabled.tld", "when": "2018-02-09T09:39:08Z"}, {"changes": [{"removed": "werner.braun@muenster.de", "field_name": "cc", "added": ""}], "who": "u611587@disabled.tld", "when": "2018-02-09T09:39:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dolske@mozilla.com"}], "who": "dolske@mozilla.com", "when": "2018-02-12T22:37:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "olivergill.mail@gmail.com"}], "who": "olivergill.mail@gmail.com", "when": "2018-02-14T00:02:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dennis.lissov@gmail.com"}], "who": "dennis.lissov@gmail.com", "when": "2018-02-16T20:30:11Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1436738"}], "who": "yurivkhan@gmail.com", "when": "2018-02-22T11:21:44Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1436738"}, {"removed": "1436738", "field_name": "depends_on", "added": ""}], "who": "dao+bmo@mozilla.com", "when": "2018-02-22T11:35:49Z"}, {"changes": [{"removed": "1436738", "field_name": "blocks", "added": ""}, {"removed": "", "field_name": "depends_on", "added": "1436738"}], "who": "yurivkhan@gmail.com", "when": "2018-02-22T12:55:29Z"}, {"changes": [{"removed": "1436738", "field_name": "depends_on", "added": ""}], "who": "yurivkhan@gmail.com", "when": "2018-02-22T14:02:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sokol.vojtech@gmail.com"}], "who": "sokol.vojtech@gmail.com", "when": "2018-02-22T14:21:39Z"}, {"changes": [{"removed": "sokol.vojtech@gmail.com", "field_name": "cc", "added": ""}], "who": "sokol.vojtech@gmail.com", "when": "2018-02-22T14:21:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mdeboer@mozilla.com"}], "who": "mdeboer@mozilla.com", "when": "2018-02-22T17:58:57Z"}, {"changes": [{"removed": "needinfo?(mconca@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconca@mozilla.com", "when": "2018-02-23T00:07:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dan@danielarnold.net"}], "who": "dan@danielarnold.net", "when": "2018-02-23T17:42:31Z"}, {"changes": [{"removed": "dan@danielarnold.net", "field_name": "cc", "added": ""}], "who": "dan@danielarnold.net", "when": "2018-02-23T17:42:33Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "WONTFIX"}, {"removed": "2017-03-06 23:06:41", "field_name": "cf_last_resolved", "added": "2018-02-23 21:20:36"}], "who": "mconca@mozilla.com", "when": "2018-02-23T21:20:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dan@danielarnold.net"}], "who": "dan@danielarnold.net", "when": "2018-02-23T21:43:38Z"}, {"changes": [{"removed": "dan@danielarnold.net", "field_name": "cc", "added": ""}], "who": "dan@danielarnold.net", "when": "2018-02-23T21:46:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "thiswillvoidyourwarranty@outlook.com"}], "who": "thiswillvoidyourwarranty@outlook.com", "when": "2018-02-24T01:32:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "eight04@gmail.com"}], "who": "eight04@gmail.com", "when": "2018-02-24T03:28:31Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "albert@scheiner.cc"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconca@mozilla.com)"}], "who": "albert@scheiner.cc", "when": "2018-02-24T03:38:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "smartfon.reddit@gmail.com"}], "who": "smartfon.reddit@gmail.com", "when": "2018-02-24T04:25:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tortino@gmail.com"}], "who": "tortino@gmail.com", "when": "2018-02-24T06:54:26Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "WONTFIX", "field_name": "resolution", "added": ""}], "who": "mdeboer@mozilla.com", "when": "2018-02-24T11:51:18Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "ASSIGNED"}], "who": "mdeboer@mozilla.com", "when": "2018-02-24T11:51:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "simon.b.may@gmail.com"}], "who": "simon.b.may@gmail.com", "when": "2018-02-25T11:29:57Z"}, {"changes": [{"removed": "smartfon.reddit@gmail.com", "field_name": "cc", "added": ""}], "who": "smartfon.reddit@gmail.com", "when": "2018-02-25T19:40:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "Tobias.Marty@gmx.de"}], "who": "Tobias.Marty@gmx.de", "when": "2018-02-26T10:53:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kumar.mcmillan@gmail.com"}], "who": "kumar.mcmillan@gmail.com", "when": "2018-02-27T16:37:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sokol.vojtech@gmail.com"}], "who": "sokol.vojtech@gmail.com", "when": "2018-02-27T19:21:34Z"}, {"changes": [{"removed": "sokol.vojtech@gmail.com", "field_name": "cc", "added": ""}], "who": "sokol.vojtech@gmail.com", "when": "2018-02-27T19:21:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review-", "attachment_id": 8944043, "added": "review?(dao+bmo@mozilla.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-02-27T19:36:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8944043, "added": "review?(mixedpuppy@gmail.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-02-27T19:39:04Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "roaminghazard@gmail.com"}], "who": "roaminghazard@gmail.com", "when": "2018-02-27T20:07:58Z"}, {"changes": [{"removed": "roaminghazard@gmail.com", "field_name": "cc", "added": ""}], "who": "roaminghazard@gmail.com", "when": "2018-02-27T20:08:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "roaminghazard@gmail.com"}], "who": "roaminghazard@gmail.com", "when": "2018-02-27T20:08:07Z"}, {"changes": [{"removed": "roaminghazard@gmail.com", "field_name": "cc", "added": ""}], "who": "roaminghazard@gmail.com", "when": "2018-02-27T20:08:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8944043, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-02-27T20:36:38Z"}, {"changes": [{"removed": "needinfo?(mconca@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dao+bmo@mozilla.com", "when": "2018-02-28T11:11:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dao+bmo@mozilla.com)", "attachment_id": 8944043, "added": ""}], "who": "dao+bmo@mozilla.com", "when": "2018-02-28T11:12:16Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mixedpuppy@gmail.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-02-28T13:32:54Z"}, {"changes": [{"removed": "needinfo?(mixedpuppy@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-02-28T15:42:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8944043, "added": "review+"}], "who": "mixedpuppy@gmail.com", "when": "2018-02-28T16:21:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8944043, "added": "review?(dao+bmo@mozilla.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-02-28T19:58:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yannbreliere@gmail.com"}], "who": "yannbreliere@gmail.com", "when": "2018-02-28T21:43:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dao+bmo@mozilla.com)", "attachment_id": 8944043, "added": "review+"}], "who": "dao+bmo@mozilla.com", "when": "2018-03-01T15:57:24Z"}, {"changes": [{"removed": "mozilla@goots.org", "field_name": "cc", "added": ""}], "who": "mozilla@goots.org", "when": "2018-03-01T20:34:13Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla60"}, {"removed": "2018-02-23 21:20:36", "field_name": "cf_last_resolved", "added": "2018-03-02 10:17:24"}, {"removed": "---", "field_name": "cf_status_firefox60", "added": "fixed"}], "who": "apavel@mozilla.com", "when": "2018-03-02T10:17:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "joucoski@gmail.com"}], "who": "joucoski@gmail.com", "when": "2018-03-02T10:21:54Z"}, {"changes": [{"removed": "joucoski@gmail.com", "field_name": "cc", "added": ""}], "who": "joucoski@gmail.com", "when": "2018-03-02T10:23:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "joucoski@gmail.com"}], "who": "joucoski@gmail.com", "when": "2018-03-02T11:24:04Z"}, {"changes": [{"removed": "joucoski@gmail.com", "field_name": "cc", "added": ""}], "who": "joucoski@gmail.com", "when": "2018-03-02T11:24:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "joucoski@gmail.com"}], "who": "joucoski@gmail.com", "when": "2018-03-02T11:24:16Z"}, {"changes": [{"removed": "joucoski@gmail.com", "field_name": "cc", "added": ""}], "who": "joucoski@gmail.com", "when": "2018-03-02T11:24:19Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dao+bmo@mozilla.com)"}], "who": "u601173@disabled.tld", "when": "2018-03-02T16:38:42Z"}, {"changes": [{"removed": "needinfo?(dao+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dao+bmo@mozilla.com", "when": "2018-03-02T16:55:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hulmelomla@deyom.com"}], "who": "u601173@disabled.tld", "when": "2018-03-02T17:04:34Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1442679"}], "who": "dao+bmo@mozilla.com", "when": "2018-03-02T17:08:08Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1442703"}], "who": "kumar.mcmillan@gmail.com", "when": "2018-03-02T18:15:58Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1442843"}], "who": "robert_abc3@yahoo.com", "when": "2018-03-03T06:09:36Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dao+bmo@mozilla.com)"}], "who": "bob.silverberg@gmail.com", "when": "2018-03-03T13:51:34Z"}, {"changes": [{"removed": "needinfo?(dao+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dao+bmo@mozilla.com", "when": "2018-03-03T14:03:50Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "FIXED", "field_name": "resolution", "added": ""}, {"removed": "mozilla60", "field_name": "target_milestone", "added": "---"}, {"removed": "fixed", "field_name": "cf_status_firefox60", "added": "---"}], "who": "dao+bmo@mozilla.com", "when": "2018-03-03T14:06:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kidhanis@gmail.com"}], "who": "kidhanis@gmail.com", "when": "2018-03-04T22:29:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yxu@mozilla.com"}], "who": "yxu@mozilla.com", "when": "2018-03-05T06:16:33Z"}, {"changes": [{"removed": "P5", "field_name": "priority", "added": "P2"}, {"removed": "bob.silverberg@gmail.com", "field_name": "assigned_to", "added": "mixedpuppy@gmail.com"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-05T17:49:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "caspy77@gmail.com"}], "who": "caspy77@gmail.com", "when": "2018-03-06T22:14:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fullersm@yahoo.com"}], "who": "fullersm@yahoo.com", "when": "2018-03-07T19:18:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956994, "added": "review?(dao+bmo@mozilla.com), review?(mixedpuppy@gmail.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-07T22:31:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8956994, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-03-07T22:32:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "login.spv@gmail.com"}], "who": "login.spv@gmail.com", "when": "2018-03-08T03:53:27Z"}, {"changes": [{"removed": "login.spv@gmail.com", "field_name": "cc", "added": ""}], "who": "login.spv@gmail.com", "when": "2018-03-11T11:43:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kernp25@yahoo.com"}], "who": "kernp25@yahoo.com", "when": "2018-03-12T03:52:04Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dao+bmo@mozilla.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-13T15:43:23Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "login.spv@gmail.com"}], "who": "login.spv@gmail.com", "when": "2018-03-13T15:55:51Z"}, {"changes": [{"removed": "login.spv@gmail.com", "field_name": "cc", "added": ""}], "who": "login.spv@gmail.com", "when": "2018-03-13T17:13:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "login.spv@gmail.com"}], "who": "login.spv@gmail.com", "when": "2018-03-13T17:13:48Z"}, {"changes": [{"removed": "login.spv@gmail.com", "field_name": "cc", "added": ""}], "who": "login.spv@gmail.com", "when": "2018-03-13T17:13:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hdd60311@gmail.com"}], "who": "hdd60311@gmail.com", "when": "2018-03-13T18:19:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956994, "added": "review?(mixedpuppy@gmail.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-13T20:22:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8956994, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-03-14T14:15:27Z"}, {"changes": [{"removed": "needinfo?(dao+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dao+bmo@mozilla.com", "when": "2018-03-20T19:13:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956994, "added": "review?(mixedpuppy@gmail.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-20T21:29:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8956994, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-03-20T21:35:49Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dao+bmo@mozilla.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-20T21:37:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cb22hh@firemath.info"}], "who": "cb22hh@firemath.info", "when": "2018-03-21T08:38:37Z"}, {"changes": [{"removed": "cb22hh@firemath.info", "field_name": "cc", "added": ""}], "who": "cb22hh@firemath.info", "when": "2018-03-21T08:38:40Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1446913"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-23T14:41:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956994, "added": "review?(mixedpuppy@gmail.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-23T18:21:28Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dao+bmo@mozilla.com)", "attachment_id": 8956994, "added": "review+"}], "who": "dao+bmo@mozilla.com", "when": "2018-03-24T18:53:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8956994, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-03-26T14:40:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956994, "added": "review?(mixedpuppy@gmail.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-03-26T15:10:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mixedpuppy@gmail.com)", "attachment_id": 8956994, "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-03-26T15:12:51Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "2018-03-02 10:17:24", "field_name": "cf_last_resolved", "added": "2018-03-27 09:39:03"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "btara@mozilla.com", "when": "2018-03-27T09:39:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "blueguitarbob@gmail.com"}], "who": "blueguitarbob@gmail.com", "when": "2018-03-27T15:50:11Z"}, {"changes": [{"removed": "needinfo?(dao+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-03-28T15:06:59Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1449061"}], "who": "jmaher@mozilla.com", "when": "2018-03-30T16:44:57Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mixedpuppy@gmail.com)"}], "who": "csabou@mozilla.com", "when": "2018-03-30T23:25:38Z"}, {"changes": [{"removed": "needinfo?(mixedpuppy@gmail.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8964410, "added": "review?(dao+bmo@mozilla.com)"}], "who": "mixedpuppy@gmail.com", "when": "2018-04-02T21:37:36Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dao+bmo@mozilla.com)", "attachment_id": 8964410, "added": "review+"}], "who": "dao+bmo@mozilla.com", "when": "2018-04-04T08:49:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "guygud@gmail.com"}], "who": "guygud@gmail.com", "when": "2018-04-04T12:46:59Z"}, {"changes": [{"removed": "guygud@gmail.com", "field_name": "cc", "added": ""}], "who": "guygud@gmail.com", "when": "2018-04-04T12:54:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "marius.santa@softvision.ro"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mixedpuppy@gmail.com)"}], "who": "marius.santa@softvision.ro", "when": "2018-04-16T15:01:08Z"}, {"changes": [{"removed": "needinfo?(mixedpuppy@gmail.com)", "field_name": "flagtypes.name", "added": "qe-verify-"}], "who": "mixedpuppy@gmail.com", "when": "2018-04-16T16:18:53Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1454873"}], "who": "fetrelapsu@deyom.com", "when": "2018-04-18T06:28:24Z"}, {"changes": [{"removed": "qe-verify-", "field_name": "flagtypes.name", "added": "qe-verify+"}], "who": "sescalante@mozilla.com", "when": "2018-04-26T17:26:35Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed"}], "who": "mconca@mozilla.com", "when": "2018-05-10T17:00:39Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mixedpuppy@gmail.com)"}], "who": "marius.santa@softvision.ro", "when": "2018-05-11T15:13:10Z"}, {"changes": [{"removed": "needinfo?(mixedpuppy@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mixedpuppy@gmail.com", "when": "2018-05-11T15:29:42Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "verified"}], "who": "marius.santa@softvision.ro", "when": "2018-05-24T14:59:01Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "acee@rambler.ru"}], "who": "acee@rambler.ru", "when": "2018-06-02T04:13:28Z"}], "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["dev-doc-needed"], "cc_detail": [{"email": "acee@rambler.ru", "id": 614174, "name": "acee@rambler.ru", "real_name": ""}, {"email": "ajfhajf@yandex.ru", "id": 559449, "name": "ajfhajf@yandex.ru", "real_name": ""}, {"email": "albert@scheiner.cc", "id": 449258, "name": "albert@scheiner.cc", "real_name": "Albert Scheiner [:alberts]"}, {"email": "andy+bugzilla@mckay.pub", "id": 397635, "name": "andy+bugzilla@mckay.pub", "real_name": "Andy McKay"}, {"email": "beking@email.com", "id": 611251, "name": "beking@email.com", "real_name": ""}, {"email": "blueguitarbob@gmail.com", "id": 614905, "name": "blueguitarbob@gmail.com", "real_name": "Robert Arthur"}, {"email": "bob.silverberg@gmail.com", "id": 440009, "name": "bob.silverberg@gmail.com", "real_name": "Bob Silverberg [:bsilverberg]"}, {"email": "bzhao@mozilla.com", "id": 424852, "name": "bzhao@mozilla.com", "real_name": "Hector Zhao [:hectorz]"}, {"email": "caspy77@gmail.com", "id": 8628, "name": "caspy77@gmail.com", "real_name": "Caspy7"}, {"email": "cellulies@gmail.com", "id": 565799, "name": "cellulies@gmail.com", "real_name": "monk-time"}, {"email": "cneiman@mozilla.com", "id": 582971, "name": "cneiman@mozilla.com", "real_name": "Caitlin Neiman [:caitmuenster]"}, {"email": "dao+bmo@mozilla.com", "id": 219124, "name": "dao+bmo@mozilla.com", "real_name": "D\u00e3o Gottwald [::dao]"}, {"email": "dennis.lissov@gmail.com", "id": 383577, "name": "dennis.lissov@gmail.com", "real_name": "Denis Lisov"}, {"email": "dharding@living180.net", "id": 288842, "name": "dharding@living180.net", "real_name": "Daniel Harding"}, {"email": "dietrich@mozilla.com", "id": 213632, "name": "dietrich@mozilla.com", "real_name": "Dietrich Ayala (:dietrich)"}, {"email": "dolske@mozilla.com", "id": 27780, "name": "dolske@mozilla.com", "real_name": "Justin Dolske [:Dolske]"}, {"email": "eight04@gmail.com", "id": 570191, "name": "eight04@gmail.com", "real_name": ""}, {"email": "fullersm@yahoo.com", "id": 613355, "name": "fullersm@yahoo.com", "real_name": ""}, {"email": "grahamperrin@gmail.com", "id": 258142, "name": "grahamperrin@gmail.com", "real_name": "Graham Perrin"}, {"email": "hdd60311@gmail.com", "id": 613764, "name": "hdd60311@gmail.com", "real_name": "hdd60311"}, {"email": "human.peng@gmail.com", "id": 376587, "name": "human.peng@gmail.com", "real_name": "fireattack"}, {"email": "johnlgalt@gmail.com", "id": 204561, "name": "johnlgalt@gmail.com", "real_name": "John L. Galt"}, {"email": "kernp25@yahoo.com", "id": 436361, "name": "kernp25@yahoo.com", "real_name": ""}, {"email": "kidhanis@gmail.com", "id": 611782, "name": "kidhanis@gmail.com", "real_name": "Kidhanis"}, {"email": "kmaglione+bmo@mozilla.com", "id": 106098, "name": "kmaglione+bmo@mozilla.com", "real_name": "Kris Maglione [:kmag]"}, {"email": "kumar.mcmillan@gmail.com", "id": 254682, "name": "kumar.mcmillan@gmail.com", "real_name": "Kumar McMillan [:kumar] (needinfo all the things)"}, {"email": "leehw@live.co.uk", "id": 487703, "name": "leehw@live.co.uk", "real_name": "Lee"}, {"email": "marius.santa@softvision.ro", "id": 594506, "name": "marius.santa@softvision.ro", "real_name": ""}, {"email": "matt1299@gmail.com", "id": 376252, "name": "matt1299@gmail.com", "real_name": "Matt"}, {"email": "mconca@mozilla.com", "id": 599100, "name": "mconca@mozilla.com", "real_name": "Mike Conca [:mconca] (Denver, CO, USA UTC-6)"}, {"email": "mdeboer@mozilla.com", "id": 463945, "name": "mdeboer@mozilla.com", "real_name": "Mike de Boer [:mikedeboer]"}, {"email": "mixedpuppy@gmail.com", "id": 372685, "name": "mixedpuppy@gmail.com", "real_name": "Shane Caraveo (:mixedpuppy)"}, {"email": "nodensntt@hotmail.com", "id": 427666, "name": "nodensntt@hotmail.com", "real_name": ""}, {"email": "olivergill.mail@gmail.com", "id": 451374, "name": "olivergill.mail@gmail.com", "real_name": "Oli"}, {"email": "remtanmajitenshi@gmail.com", "id": 601996, "name": "remtanmajitenshi@gmail.com", "real_name": "Qwerty"}, {"email": "reven4000@yahoo.com", "id": 604135, "name": "reven4000@yahoo.com", "real_name": "Hlsg"}, {"email": "robert_abc3@yahoo.com", "id": 608377, "name": "robert_abc3@yahoo.com", "real_name": "Robert Ab"}, {"email": "simon.b.may@gmail.com", "id": 401731, "name": "simon.b.may@gmail.com", "real_name": ""}, {"email": "sriram.singa@gmail.com", "id": 609827, "name": "sriram.singa@gmail.com", "real_name": "sriram"}, {"email": "thiswillvoidyourwarranty@outlook.com", "id": 612637, "name": "thiswillvoidyourwarranty@outlook.com", "real_name": ""}, {"email": "tjfla@hotmail.com", "id": 607686, "name": "tjfla@hotmail.com", "real_name": ""}, {"email": "Tobias.Marty@gmx.de", "id": 572549, "name": "Tobias.Marty@gmx.de", "real_name": "TMart"}, {"email": "tortino@gmail.com", "id": 588239, "name": "tortino@gmail.com", "real_name": "Tortino"}, {"email": "tummychow511@gmail.com", "id": 571920, "name": "tummychow511@gmail.com", "real_name": ""}, {"email": "u601173@disabled.tld", "id": 601173, "name": "u601173@disabled.tld", "real_name": ""}, {"email": "vrtareg+mozilla@gmail.com", "id": 530160, "name": "vrtareg+mozilla@gmail.com", "real_name": "Areg Vrtanesyan"}, {"email": "w.elwood08+bmo@gmail.com", "id": 423032, "name": "w.elwood08+bmo@gmail.com", "real_name": "Will Elwood (:Will)"}, {"email": "yannbreliere@gmail.com", "id": 349306, "name": "yannbreliere@gmail.com", "real_name": "Yann Breli\u00e8re"}, {"email": "yfdyh000@gmail.com", "id": 398515, "name": "yfdyh000@gmail.com", "real_name": "YF (Yang)"}, {"email": "yoasif@gmail.com", "id": 347239, "name": "yoasif@gmail.com", "real_name": "Asif Youssuff"}, {"email": "yuki@clear-code.com", "id": 61043, "name": "yuki@clear-code.com", "real_name": "YUKI \"Piro\" Hiroshi"}, {"email": "yurivkhan@gmail.com", "id": 296434, "name": "yurivkhan@gmail.com", "real_name": "Yuri Khan"}, {"email": "yxu@mozilla.com", "id": 565421, "name": "yxu@mozilla.com", "real_name": ""}, {"email": "zaaooza@yandex.ru", "id": 606958, "name": "zaaooza@yandex.ru", "real_name": ""}, {"email": "zlamma@gmail.com", "id": 611356, "name": "zlamma@gmail.com", "real_name": "Slawomir Brzezinski"}], "cf_last_resolved": "2018-03-27T09:39:03Z", "cf_tracking_firefox61": "---", "votes": 165, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 176, "comments": [{"text": "Currently in my XUL addon All Tabs Helper I offer the user the ability to opt for where a new tab opens when clicking the \"New Tab\" button or using keyboard shortcut: next to the current tab, or at the end of the tabs bar (default).\n\nI am requesting an API which will allow me to continue this feature.", "author": "u462496@disabled.tld", "id": 12118897, "time": "2017-03-06T15:14:44Z"}, {"text": "It just occurred to me that it may be better/simpler to make this a feature of Firefox, as the API for that action would have to be in place anyway.", "author": "u462496@disabled.tld", "id": 12118914, "time": "2017-03-06T15:19:42Z"}, {"text": "You can use the tabs API to listen for new tab events and move the tab appropriately. So you are looking for a way to alter the UI to show the choice?", "author": "andy+bugzilla@mckay.pub", "id": 12120621, "time": "2017-03-06T22:38:23Z"}, {"text": "(In reply to Andy McKay [:andym] from comment #2)\n> You can use the tabs API to listen for new tab events and move the tab\n> appropriately.\n\nYes indeed.  I had been doing it by relatedToCurrent:true, but I can seen in addTab it would be doing the same thing, appending the new tab at the end, then moving it.\n\n> So you are looking for a way to alter the UI to show the\n> choice?\n\nNo, that isn't necessary.\n\nThanks.", "author": "u462496@disabled.tld", "id": 12120721, "time": "2017-03-06T22:59:55Z"}, {"text": "Cool, thanks.", "author": "andy+bugzilla@mckay.pub", "id": 12120747, "time": "2017-03-06T23:06:41Z"}, {"text": "Andy, I have finally gotten around to implementing your suggestion, and while it is true, a new tab can be opened and then moved next to the originally current tab, there is a UI/UX problem as outlined below.\n\nOpen a new tab next to current by using the suggested method of first opening, then moving the tab, when the original current tab is visible on the tabstrip:\n\nThe expected behavior from a user POV would be just as if link is opened in a new tab where the new tab would appear next to the orginal current tab without any scrolling, with the exception of, if the original tab were the last tab on the strip, the new tab would scroll into view, thus scrolling one tab over.\n\nHowever, if the scrolling position of the tabstrip is such that the last tab is off the end of the tabstrip, the tabstrip will - unexpectedly to the user - scroll to another position, and if there are enough tabs between the original current tab and the end of the tabstrip, the original current tab will disappear off the end of the tabstrip.\n\nFrom an API POV this is expected behavior, for when using the method you suggested, the new tab is first scrolled into view at the end of the tabstrip.  Then, when the tab gets moved next to the original current tab, if the new position puts the new tab out of view, the tabstrip is again scrolled into view, placing it at the far left of the tab strip, with the original current tab out of view.\n\nAdding a tab next to the current tab - with the expected behavior from a user POV - can be accomplished in tabbrowser code simply by setting relatedToCurrent to true when calling addTab().  No subsequent moving is necessary (this is handled internally without intermediate UI corrections).\n\nAFAIK, there is no way to control scrolling of the tabstrip nor even get the tabstrip scrolling position from a WebExtension.  Unless you can suggest some other method of implementing this with a WebExtension which would accomplish the expected behavior from a user POV (that is not too complex) I would like to reopen this bug.", "author": "u462496@disabled.tld", "id": 12751832, "time": "2017-10-12T08:01:08Z"}, {"text": "This sounds like a bug 1387372, would that bug resolve the problem?", "author": "andy+bugzilla@mckay.pub", "id": 12754624, "time": "2017-10-12T22:08:53Z"}, {"text": "(In reply to Andy McKay [:andym] from comment #6)\n> This sounds like a bug 1387372, would that bug resolve the problem?\n\nMaybe... I'm not really clear on the goal of that bug, IMO it seems to be going off on a tangent from the core issue the OP seems to be referring to (needing to open a tab next to current).  I'll see what the response is to my comment/suggestion and maybe I'll have a better idea of where it's going.", "author": "u462496@disabled.tld", "id": 12755337, "time": "2017-10-13T04:12:19Z"}, {"text": "Thanks for the detailed explanation, let's reopen this.", "author": "andy+bugzilla@mckay.pub", "id": 12757092, "time": "2017-10-13T16:46:59Z"}, {"text": "(In reply to Andy McKay [:andym] from comment #8)\n> Thanks for the detailed explanation, let's reopen this.\n\nThanks a lot, Andy.  Regarding bug 1387372, it was actually I who was off on a tangent, but IAE, that bug has a different goal than what I am talking about here.\n\nI was thinking of maybe doing something a little different here than a WebExtension API for this.  What about taking this to a native level, a global browser preference that determines where a tab opens, like browser.tabs.insertRelatedAfterCurrent does with tabs opened in the background when a link is clicked.  It could be something like browser.tabs.insertNewTabAfterCurrent.  I think this would be as simple as checking the pref in the openLinkIn => tabbrowser.loadOneTab chain and setting relatedToCurrent accordingly.\n\nThen as far as an extension goes, is it possible for an extension to set a global pref, given proper permissions of course?", "author": "u462496@disabled.tld", "id": 12758246, "time": "2017-10-13T23:25:13Z"}, {"text": "Hi Kevin, this has been added to the agenda for the October 31 WebExtensions APIs triage meeting. Would you be able to join us? \n\nHere's a few things about the triage to keep in mind: \n\n* We normally spend 5 minutes per bug\n* The more information in the bug, the better\n* The goal of the triage is to give a general thumbs up or thumbs down on a proposal; we won't be going deep into implementation details\n\nRelevant Links: \n\n* Wiki for the meeting: https://wiki.mozilla.org/Add-ons/Contribute/Triage\n* Meeting agenda: https://docs.google.com/document/d/1qqE6fkqr-RNWaFvMpv0Z8O5FLDgQ3AT5eGdbTt7lRGg/edit#\n* Vision doc for WebExtensions: https://wiki.mozilla.org/WebExtensions/Vision", "author": "cneiman@mozilla.com", "id": 12777743, "time": "2017-10-20T21:02:55Z"}, {"text": "Created attachment 8920839\nproof_of_concept_V1.diff\n\nHere is a proof-of-concept.\n\nI designed this around using a pref, as that allows advanced users to take advantage of the feature without needing an addon to implement it for them if they wish.\n\nThe tests have some delays built in for now to give visual rendering of the feature.", "author": "u462496@disabled.tld", "id": 12778817, "time": "2017-10-22T00:31:28Z"}, {"text": "Comment on attachment 8920839\nproof_of_concept_V1.diff\n\n>diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js\n>--- a/browser/base/content/browser.js\n>+++ b/browser/base/content/browser.js\n>@@ -2257,17 +2257,19 @@ function BrowserOpenTab(event) {\n\n>+  let relatedToCurrent =\n>+    gPrefService.getPrefType(\"browser.tabs.newTabNextToCurrent\") == gPrefService.PREF_BOOL &&\n>+    gPrefService.getBoolPref(\"browser.tabs.newTabNextToCurrent\");\n\nUse Services.prefs.\n\n>diff --git a/browser/components/extensions/ext-tabs.js b/browser/components/extensions/ext-tabs.js\n>--- a/browser/components/extensions/ext-tabs.js\n>+++ b/browser/components/extensions/ext-tabs.js\n>@@ -936,13 +936,17 @@ this.tabs = class extends ExtensionAPI {\n\n>+        setNewTabNextToCurrent(state) {\n>+          Services.prefs.setBoolPref(\"browser.tabs.newTabNextToCurrent\", state);\n>+        },\n\nSetting prefs should use the pref management, bsilverberg would be good to ask about that.", "author": "mixedpuppy@gmail.com", "id": 12783484, "time": "2017-10-23T20:21:44Z"}, {"text": "Comment on attachment 8920839\nproof_of_concept_V1.diff\n\n\n>diff --git a/browser/components/extensions/schemas/tabs.json b/browser/components/extensions/schemas/tabs.json\n>--- a/browser/components/extensions/schemas/tabs.json\n>+++ b/browser/components/extensions/schemas/tabs.json\n>@@ -916,16 +916,29 @@\n\n>       {\n>+        \"name\": \"setNewTabNextToCurrent\",\n>+        \"type\": \"function\",\n>+        \"description\": \"Sets/unsets the browser.tabs.newTabNextToCurrent preference.\",\n\nSeems I accidentally deleted a comment.  \n\nI'm thinking this belongs in browser settings.  Again Bob for help.", "author": "mixedpuppy@gmail.com", "id": 12783494, "time": "2017-10-23T20:23:15Z"}, {"text": "Comment on attachment 8920839\nproof_of_concept_V1.diff\n\nReview of attachment 8920839:\n-----------------------------------------------------------------\n\n::: browser/components/extensions/ext-tabs.js\n@@ +941,5 @@\n>  \n>            tab.linkedBrowser.messageManager.sendAsyncMessage(\"Reader:ToggleReaderMode\");\n>          },\n> +\n> +        setNewTabNextToCurrent(state) {\n\nI agree with Shane, this should be added to the browserSettings API, not the tabs API. This will allow for multiple extensions to set this and browserSettings will deal with who gets control.\n\nPlease let me know if you have any questions when working with the browserSettings API.", "author": "bob.silverberg@gmail.com", "id": 12785657, "time": "2017-10-24T14:41:16Z"}, {"text": "Although, I wonder whether this needs to be an API at all. Why not just add this to about:preferences and allow a user to control it that way?", "author": "bob.silverberg@gmail.com", "id": 12785662, "time": "2017-10-24T14:43:35Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #15)\n> Although, I wonder whether this needs to be an API at all. Why not just add\n> this to about:preferences and allow a user to control it that way?\n\nWell I think that would be great, personally.  It always seemed to me like it would be natural to have that option.  If fact, I have always felt it would be more natural to be the default, but that is just viewing from my workflow.\n\n+1", "author": "u462496@disabled.tld", "id": 12786492, "time": "2017-10-24T18:36:58Z"}, {"text": "(In reply to Kevin Jones from comment #16)\n> (In reply to Bob Silverberg [:bsilverberg] from comment #15)\n> > Although, I wonder whether this needs to be an API at all. Why not just add\n> > this to about:preferences and allow a user to control it that way?\n> \n> Well I think that would be great, personally.  It always seemed to me like\n> it would be natural to have that option.  If fact, I have always felt it\n> would be more natural to be the default, but that is just viewing from my\n> workflow.\n> \n> +1\n\nI'm holding off on working on any more patches until there is a decision on this.", "author": "u462496@disabled.tld", "id": 12801563, "time": "2017-10-30T11:28:52Z"}, {"text": "In examining a number of existing tab-related add-ons on AMO, it appears the most common use cases are to open a tab:\n 1) to the left\n 2) to the right \n 3) at the end of the current tab strip\n\nIf supporting just those use cases makes implementation easier, it would capture the majority of what extension developers do today.", "author": "mconca@mozilla.com", "id": 12805995, "time": "2017-10-31T17:48:23Z"}, {"text": "We agreed to move forward with this as a browserSetting. Ideally this could be set to one of three values: to the left of the current tab, to the right of the current tab, at the end of the tab strip. I'm not sure if all of those are currently supported via preferences. If not we could probably implement just those that are currently supported and open follow-up bugs for the others.", "author": "bob.silverberg@gmail.com", "id": 12806008, "time": "2017-10-31T17:51:44Z"}, {"text": "Created attachment 8932056\nbug_1344749_define_prefs_modify_tabbrowser_fb.diff", "author": "u462496@disabled.tld", "id": 12876158, "time": "2017-11-27T11:08:22Z"}, {"text": "Comment on attachment 8932056\nbug_1344749_define_prefs_modify_tabbrowser_fb.diff\n\nThis patch defines the internals, the scheme and prefs needed for handling setting tab opening positions for both opening links, and new tabs created in the UI controls.\n\nI am assuming a tab that doesn't have an `openerTab` is a new tab created in the UI.  Please advise if this is a valid assumption.\n\nI am keeping the behavior for opening tabs from links and opening new tabs completely independent of each other as this makes more sense to me.  Each has their own integer pref which determines opening the tab before, after, or at the end of the tabs list.  The current bool `insertRelatedAfterCurrent` has been replaced with int `insertRelatedNextToCurrent`.  (Maybe these can be better named.)\n\nIn the case of opening new tabs, they are always opened immediately next to the current tab, rather than `lastRelatedTab`.  This makes the most sense to me.\n\nI am wondering if in the case of opening tabs from links in the __before__ position, if these also should be opened relative to the current tab each time.  This would maintain the same left-to-right orientation (always adding the next tab at the end of the previous ones) as when opening them in the __after__ position.\n\nAnyway, I would appreciate feedback on these thoughts and any others.", "author": "u462496@disabled.tld", "id": 12876191, "time": "2017-11-27T11:30:46Z"}, {"text": "I am very excited to see this feature finally become integrated into the browser. My only wish is that the current default behavior of insertRelatedAfterCurrent would not change for links opened in background. Currently, until I switch to another tab, all links opened in bg (with a middle click/ctrl+click etc.) would open in order of opening. (btw, I think \"background tabs\" is a better name than \"related\")\n\nFor example, if I have tabs `[a] b c` where `[a]` is currently active, and I open in bg tabs `1 2 3` in that order from that tab, I would get `[a] 1 2 3 b c`. That's how Firefox has been opening such links since v3.6, and it's very helpful for e.g. opening multiple pages of a forum thread and then reading them chronologically. Otherwise I'd have to conciosly open links in reverse order of how I would like to read them, which is quite inconvenient.\n\nSo as long as that functionality doesn't change I would be happy. Maybe it would be wise to add another state to that int pref to differentiate between whether tabs would open \"to the right of the last related tab\" (current default behavior) or \"immediately to the right\". I have tried three WebExtensions to open new blank tabs after the current one, and all of them break this default feature of placing related tabs after each other.", "author": "cellulies@gmail.com", "id": 12876269, "time": "2017-11-27T12:26:28Z"}, {"text": "Comment on attachment 8932056\nbug_1344749_define_prefs_modify_tabbrowser_fb.diff\n\nReview of attachment 8932056:\n-----------------------------------------------------------------\n\nThanks Kevin. I'm not really the one to review this, but I did add a comment.\n\n::: browser/app/profile/firefox.js\n@@ +458,5 @@\n>  \n>  // Tabbed browser\n>  pref(\"browser.tabs.closeWindowWithLastTab\", true);\n> +pref(\"browser.tabs.insertRelatedNextToCurrent\", 2);\n> +pref(\"browser.tabs.newTabNextToCurrent\", 0);\n\nI'm a bit confused about exactly how these work and how they are related to each other. The names don't seem intuitively understandable. Could you add some comments to the file to explain what these are and how they work?", "author": "bob.silverberg@gmail.com", "id": 12876342, "time": "2017-11-27T13:14:35Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #23)\n> Comment on attachment 8932056\n> bug_1344749_define_prefs_modify_tabbrowser_fb.diff\n> \n> Review of attachment 8932056:\n> -----------------------------------------------------------------\n> \n> Thanks Kevin. I'm not really the one to review this, but I did add a comment.\n> \n> ::: browser/app/profile/firefox.js\n> @@ +458,5 @@\n> >  \n> >  // Tabbed browser\n> >  pref(\"browser.tabs.closeWindowWithLastTab\", true);\n> > +pref(\"browser.tabs.insertRelatedNextToCurrent\", 2);\n> > +pref(\"browser.tabs.newTabNextToCurrent\", 0);\n> \n> I'm a bit confused about exactly how these work and how they are related to\n> each other. The names don't seem intuitively understandable. Could you add\n> some comments to the file to explain what these are and how they work?\n\nOkay, thanks.  Yes, documentation is good :-).  Renaming might be good also in this case, such as \"newTabOpenPosition\".\n\nBasically they are (in both cases)\n\n0 - open tab at end of tabs bar\n1 - open tab to left of current\n2 - open tab to right of current", "author": "u462496@disabled.tld", "id": 12876358, "time": "2017-11-27T13:23:16Z"}, {"text": "(In reply to Kevin Jones from comment #24)\n> (In reply to Bob Silverberg [:bsilverberg] from comment #23)\n> > Comment on attachment 8932056\n> > bug_1344749_define_prefs_modify_tabbrowser_fb.diff\n> > \n> > Review of attachment 8932056:\n> > -----------------------------------------------------------------\n> > \n> > Thanks Kevin. I'm not really the one to review this, but I did add a comment.\n> > \n> > ::: browser/app/profile/firefox.js\n> > @@ +458,5 @@\n> > >  \n> > >  // Tabbed browser\n> > >  pref(\"browser.tabs.closeWindowWithLastTab\", true);\n> > > +pref(\"browser.tabs.insertRelatedNextToCurrent\", 2);\n> > > +pref(\"browser.tabs.newTabNextToCurrent\", 0);\n> > \n> > I'm a bit confused about exactly how these work and how they are related to\n> > each other. The names don't seem intuitively understandable. Could you add\n> > some comments to the file to explain what these are and how they work?\n> \n> Okay, thanks.  Yes, documentation is good :-).  Renaming might be good also\n> in this case, such as \"newTabOpenPosition\".\n> \n> Basically they are (in both cases)\n> \n> 0 - open tab at end of tabs bar\n> 1 - open tab to left of current\n> 2 - open tab to right of current\n\nDao:  If you don't mind please take a look at the tabbrowser stuff here.  Please see comment 24 for explanation of prefs.  I'll update the documentation and names in the next one.", "author": "u462496@disabled.tld", "id": 12876374, "time": "2017-11-27T13:27:43Z"}, {"text": "(In reply to monk-time from comment #22)\n\n> For example, if I have tabs `[a] b c` where `[a]` is currently active, and I\n> open in bg tabs `1 2 3` in that order from that tab, I would get `[a] 1 2 3\n> b c`. That's how Firefox has been opening such links since v3.6, and it's\n> very helpful for e.g. opening multiple pages of a forum thread and then\n> reading them chronologically. Otherwise I'd have to conciosly open links in\n> reverse order of how I would like to read them, which is quite inconvenient.\n\nI, on the contrary, got accustomed to them opening in the na\u00efve order: `[a] 3 2 1 b c` (possibly because that was all we had before 3.6). Then I switch to 1, read it and close it. Closing a tab focuses the one to the left, so I get tab 2, which is also quite convenient.\n\nFocusing the preceding tab on close is also consistent with the scenario:\n\n* given a tab [a] b c,\n* open a link in new tab \u2192 a [1] b c,\n* read and close 1 \u2192 [a] b c.\n\nI\u2019m not a big fan of the idea of focusing this or that tab depending on invisible flags. I can never internalize them and that makes the browser behavior unpredictable and perceived as broken.\n\n> So as long as that functionality doesn't change I would be happy. Maybe it\n> would be wise to add another state to that int pref to differentiate between\n> whether tabs would open \"to the right of the last related tab\" (current\n> default behavior) or \"immediately to the right\".\n\nYes, I\u2019d like a preference.", "author": "yurivkhan@gmail.com", "id": 12876380, "time": "2017-11-27T13:29:03Z"}, {"text": "Comment on attachment 8932056\nbug_1344749_define_prefs_modify_tabbrowser_fb.diff\n\nAlso wondering if there is a preferred method for migrating prefs?", "author": "u462496@disabled.tld", "id": 12876384, "time": "2017-11-27T13:30:28Z"}, {"text": "(In reply to Yuri Khan from comment #26)\n> I, on the contrary, got accustomed to them opening in the na\u00efve order: `[a]\n> 3 2 1 b c` (possibly because that was all we had before 3.6). Then I switch\n> to 1, read it and close it. Closing a tab focuses the one to the left, so I\n> get tab 2, which is also quite convenient.\n\nCorrect me if I'm wrong, but AFAIK the current default is to focus on the right tab after closing, which plays very well with the default `insertRelatedAfterCurrent: true` (`[a] 1 2 3 b c`). But I agree that for comfortable browsing both orders require a corresponding setting to set which tab to focus on close, which I don't think Firefox currently has, and all webexts for this do so with a visible jerk when they override the focus.\n\nKevin, if you are going to replace that pref with `insertRelatedNextToCurrent: 2`, does this mean the default behavior in that use case is going to be reversed (`[a] 3 2 1 b c`)? This is very unexpected and would subtly but irritatingly break the habits of all users who don't already use add-ons for this.", "author": "cellulies@gmail.com", "id": 12876419, "time": "2017-11-27T13:49:11Z"}, {"text": "(In reply to monk-time from comment #28)\n> (In reply to Yuri Khan from comment #26)\n> > I, on the contrary, got accustomed to them opening in the na\u00efve order: `[a]\n> > 3 2 1 b c` (possibly because that was all we had before 3.6). Then I switch\n> > to 1, read it and close it. Closing a tab focuses the one to the left, so I\n> > get tab 2, which is also quite convenient.\n> \n> Correct me if I'm wrong, but AFAIK the current default is to focus on the\n> right tab after closing, which plays very well with the default\n> `insertRelatedAfterCurrent: true` (`[a] 1 2 3 b c`). But I agree that for\n> comfortable browsing both orders require a corresponding setting to set\n> which tab to focus on close, which I don't think Firefox currently has, and\n> all webexts for this do so with a visible jerk when they override the focus.\n> \n> Kevin, if you are going to replace that pref with\n> `insertRelatedNextToCurrent: 2`, does this mean the default behavior in that\n> use case is going to be reversed (`[a] 3 2 1 b c`)? This is very unexpected\n> and would subtly but irritatingly break the habits of all users who don't\n> already use add-ons for this.\n\nThe way the patch is currently written, the default behavior is preserved in all cases.", "author": "u462496@disabled.tld", "id": 12876424, "time": "2017-11-27T13:51:36Z"}, {"text": "(In reply to monk-time from comment #28)\n\n> Correct me if I'm wrong, but AFAIK the current default is to focus on the\n> right tab after closing, which plays very well with the default\n> `insertRelatedAfterCurrent: true` (`[a] 1 2 3 b c`).\n\nExperiment time!\n\n0. I start `firefox --no-remote --ProfileManager` and create a new profile.\n1. It opens with two tabs. One, \u201cThank you for using Firefox Nightly\u201d, conveniently contains prominent links, \u201cStart testing\u201d, \u201cStart coding\u201d, \u201cStart localizing\u201d, and quite a few more. The second tab is titled \u201cFirefox by default shares da\u2026\u201d (privacy notice).\n2. One the \u201cThank you\u201d tab, I middle-click \u201cStart testing\u201d, \u201cStart coding\u201d, and \u201cStart localizing\u201d, in this order. Now I have: `[Thank you] Testing Coding Localizing Privacy`.\n3. Assume I\u2019m going to read the other tabs and want to get back to \u201cThank you\u201d.\n4. I click the Testing tab, read it, and close it.\n5. Firefox switches to the next tab, Coding.\n6. I read and close it.\n7. Firefox switches to the next tab, Localizing.\n8. I read and close it.\n9. Firefox switches to the next tab, Privacy. I did not achieve my goal.\n\n> But I agree that for\n> comfortable browsing both orders require a corresponding setting to set\n> which tab to focus on close, which I don't think Firefox currently has, and\n> all webexts for this do so with a visible jerk when they override the focus.\n\nYes. Do we have a bug for that?\n\n> Kevin, if you are going to replace that pref with\n> `insertRelatedNextToCurrent: 2`, does this mean the default behavior in that\n> use case is going to be reversed (`[a] 3 2 1 b c`)? This is very unexpected\n> and would subtly but irritatingly break the habits of all users who don't\n> already use add-ons for this.\n\nI think this order should be a possibility, with a new value of this preference or with a different preference.", "author": "yurivkhan@gmail.com", "id": 12876674, "time": "2017-11-27T15:25:27Z"}, {"text": "(In reply to Kevin Jones from comment #21)\n> I am assuming a tab that doesn't have an `openerTab` is a new tab created in\n> the UI.  Please advise if this is a valid assumption.\n\nProbably not but I don't really know. This stuff is confusing, see bug 1238314 comment 40. Please ask Kris.", "author": "dao+bmo@mozilla.com", "id": 12879637, "time": "2017-11-28T11:49:22Z"}, {"text": "Comment on attachment 8932056\nbug_1344749_define_prefs_modify_tabbrowser_fb.diff\n\nKris, would you mind taking a look at this?\n\nIn addTab I am naively assuming that a condition where there is no openerTab we must be trying to open a new tab from the UI.  Can you advise on this, or suggest how we can deduce this is a new tab from the code in this method?  Otherwise I suppose we could just add a param that gets passed down from BrowserOpenTab in browser.js, which maybe would be safer.", "author": "u462496@disabled.tld", "id": 12879751, "time": "2017-11-28T13:13:55Z"}, {"text": "\n> 0 - open tab at end of tabs bar\n> 1 - open tab to left of current\n> 2 - open tab to right of current\n\nLets keep the terminology as before and after rather than left and right.  If the UI is switched to RTL left will end up being right.  before/after will remain meaningful.", "author": "mixedpuppy@gmail.com", "id": 12884444, "time": "2017-11-29T20:28:48Z"}, {"text": "(In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #18)\n> In examining a number of existing tab-related add-ons on AMO, it appears the\n> most common use cases are to open a tab:\n>  1) to the left\n>  2) to the right \n>  3) at the end of the current tab strip\n> \n> If supporting just those use cases makes implementation easier, it would\n> capture the majority of what extension developers do today.\n\nWhy would we have an insert before?  Is that really a use case people want?  Why would one do that to themselves?", "author": "mixedpuppy@gmail.com", "id": 12884456, "time": "2017-11-29T20:32:55Z"}, {"text": "Comment on attachment 8932056\nbug_1344749_define_prefs_modify_tabbrowser_fb.diff\n\nI'm not terribly happy with new prefs, but if we do have them, lets have insertRelatedTab and insertNewTab.  \n\nStrange that we unset owner on lastRelatedTab, looks like we only allow a tab to own one tab?\n\nI think you're fine relying on openerTab, but am not 100% certain.", "author": "mixedpuppy@gmail.com", "id": 12884489, "time": "2017-11-29T20:45:12Z"}, {"text": "(In reply to Shane Caraveo (:mixedpuppy) from comment #34)\n> (In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #18)\n> > In examining a number of existing tab-related add-ons on AMO, it appears the\n> > most common use cases are to open a tab:\n> >  1) to the left\n> >  2) to the right \n> >  3) at the end of the current tab strip\n> > \n> > If supporting just those use cases makes implementation easier, it would\n> > capture the majority of what extension developers do today.\n> \n> Why would we have an insert before?  Is that really a use case people want? \n> Why would one do that to themselves?\n\nIf we eliminated the before case, this bug becomes much simpler and basically I think the first patch I submitted might be sufficient.\n\nIMNSHO, those kinds of distinctions kind of get into the realm of nit-picky \"I want it just so\", along with wanting options for rtl or ltr for related-to-current order for multiple tab opening.\n\nOTH, having a tab open at the end of the tabs bar versus (somewhere) next to the current tab has a pretty dramatic impact on UX.", "author": "u462496@disabled.tld", "id": 12884495, "time": "2017-11-29T20:49:43Z"}, {"text": "(In reply to Kevin Jones from comment #36)\n> If we eliminated the before case, this bug becomes much simpler and\n> basically I think the first patch I submitted might be sufficient.\n\n...of course changing that from a browser.tabs method to a browserSetting.", "author": "u462496@disabled.tld", "id": 12884546, "time": "2017-11-29T21:09:33Z"}, {"text": "(In reply to Kevin Jones from comment #36)\n> IMNSHO, those kinds of distinctions kind of get into the realm of nit-picky\n> \"I want it just so\", along with wanting options for rtl or ltr for\n> related-to-current order for multiple tab opening.\n\nI am sorry if my comments caused this reaction, and I see how that distinction would appear nit-picky. It wasn't my intention. I admit I am a bit irritated by a minor disruption in my workflow caused by FF57 and the demise of Tab Mix Plus that could fully control [1] how and where new tabs open, and since no webextension is able to replace it in a clean manner, I thought my feedback on the importance of that rtl/ltr order would be helpful. But maybe it's just a case of \"spacebar heating\".\n\n[1] http://tabmixplus.org/support/viewpage.php?t=3&p=events-new-tabs", "author": "cellulies@gmail.com", "id": 12884629, "time": "2017-11-29T21:40:11Z"}, {"text": "(In reply to Kevin Jones from comment #36)\n> (In reply to Shane Caraveo (:mixedpuppy) from comment #34)\n> > (In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #18)\n> > > In examining a number of existing tab-related add-ons on AMO, it appears the\n> > > most common use cases are to open a tab:\n> > >  1) to the left\n> > >  2) to the right \n> > >  3) at the end of the current tab strip\n> > > \n> > > If supporting just those use cases makes implementation easier, it would\n> > > capture the majority of what extension developers do today.\n> > \n> > Why would we have an insert before?  Is that really a use case people want? \n> > Why would one do that to themselves?\n> \n> If we eliminated the before case, this bug becomes much simpler and\n> basically I think the first patch I submitted might be sufficient.\n> \n> IMNSHO, those kinds of distinctions kind of get into the realm of nit-picky\n> \"I want it just so\", along with wanting options for rtl or ltr for\n> related-to-current order for multiple tab opening.\n> \n> OTH, having a tab open at the end of the tabs bar versus (somewhere) next to\n> the current tab has a pretty dramatic impact on UX.\n\nI have no idea why inserting a tab before would be useful, other than to say \"everybody is different\" and some people seemed to do it. Right now, I'd much rather see us land the \"after and end\" cases ASAP and open a separate issue to track the \"before\" case, where we can debate the merits of the feature versus the scope of work required.", "author": "mconca@mozilla.com", "id": 12895275, "time": "2017-12-04T15:31:01Z"}, {"text": "(In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #39)\n> I have no idea why inserting a tab before would be useful, other than to say\n> \"everybody is different\" and some people seemed to do it.\nSeems like some people like to have reverse tab order in vertical tabs extensions (new tab opens at the top instead of bottom). If they want to open tab next to current, they need it before instead of after.\nI, for example, just want ability to open tabs right to the current ([a] 1 2 3 b c variant that mentioned above), which hopefully would be compatible with all vertical tabs extensions. Currently they doing it via hacks (those that have this feature) and compatibility with each other and native tabbar (brings problems when switching from one to another) and with Always Right/Open Tabs Next to Current extensions is just awful (especially in Tab Center Redux, see https://github.com/eoger/tabcenter-redux/issues/163).", "author": "remtanmajitenshi@gmail.com", "id": 12899014, "time": "2017-12-05T16:52:12Z"}, {"text": "*** Bug 1423333 has been marked as a duplicate of this bug. ***", "author": "dao+bmo@mozilla.com", "id": 12901841, "time": "2017-12-06T13:02:33Z"}, {"text": "Created attachment 8936487\nBug 1344749 - about:config pref to open new tab next to current, includes WE browserSetting\n\nReview commit: https://reviewboard.mozilla.org/r/207194/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/207194/", "author": "u462496@disabled.tld", "id": 12915743, "time": "2017-12-12T23:42:38Z"}, {"text": "(In reply to Kevin Jones from comment #42)\n> Created attachment 8936487\n> Bug 1344749 - about:config pref to open new tab next to current, includes WE\n> browserSetting\n> \n> Review commit: https://reviewboard.mozilla.org/r/207194/diff/#index_header\n> See other reviews: https://reviewboard.mozilla.org/r/207194/\n\nKris, Mike, Shane, I invite you to have a look at this.", "author": "u462496@disabled.tld", "id": 12915748, "time": "2017-12-12T23:45:32Z"}, {"text": "Comment on attachment 8936487\nBug 1344749 - about:config pref to open new tab next to current, includes WE browserSetting\n\nBug 933532 wants to add a pref to open \"unrelated tabs\", not just new tabs, next to the current one. Not really sure what's preferable.", "author": "dao+bmo@mozilla.com", "id": 12916160, "time": "2017-12-13T11:49:08Z"}, {"text": "Ideally people should be able to customize all of them to the way they want. New tabs, bookmarks, you name it. A singular pref will never satisfy everyone.", "author": "human.peng@gmail.com", "id": 12917056, "time": "2017-12-13T20:06:58Z"}, {"text": "(Cont'd, I sent my previous one accidently)\n\nSo I'd say a comprehensive tab open position API for WebExt will be a much better implementation than just keeping adding these prefs.", "author": "human.peng@gmail.com", "id": 12917060, "time": "2017-12-13T20:09:20Z"}, {"text": "I will no longer be able to spend time contributing to bugs for Mozilla.  I am un-assigning myself from this bug.", "author": "u462496@disabled.tld", "id": 12919665, "time": "2017-12-15T07:26:21Z"}, {"text": "With Kevin not being able to finish this off, would you be able to take this on in the new year?", "author": "andy+bugzilla@mckay.pub", "id": 12927471, "time": "2017-12-19T20:05:38Z"}, {"text": "(In reply to Andy McKay [:andym] from comment #48)\n> With Kevin not being able to finish this off, would you be able to take this\n> on in the new year?\n\nSure, I'll add it to my queue.", "author": "bob.silverberg@gmail.com", "id": 12948046, "time": "2018-01-05T19:56:03Z"}, {"text": "*** Bug 933532 has been marked as a duplicate of this bug. ***", "author": "bob.silverberg@gmail.com", "id": 12982088, "time": "2018-01-19T16:18:54Z"}, {"text": "Here is what we have decided to implement:\n\nA new pref will be added, browser.tabs.newUnrelatedTabPosition, which will allow a user to control in what position a new unrelated tab will be opened. Two values will be supported: \"afterCurrent\" and \"endOfTabStrip\".\n\nTwo new browserSettings APIs will be added: browserSettings.newRelatedTabPosition and browserSettings.newUnrelatedTabPosition, both of which will also accept the two values listed above. \"afterCurrent\" will be the default value for the former and \"endOfTabStrip\" will be the default value for the latter.\n\nA separate bug will be opened to discuss adding support for \"beforeCurrent\" to each of those settings.", "author": "bob.silverberg@gmail.com", "id": 12982253, "time": "2018-01-19T17:39:20Z"}, {"text": "What does \"Unrelated Tab\" include, though?\n\nNew tab, sidebar middle click, bookmark bar click?", "author": "human.peng@gmail.com", "id": 12982410, "time": "2018-01-19T18:44:33Z"}, {"text": "I'm not sure the browserSettings type API you mentioned is sufficient (If I misunderstood anything, feel free to correct!).\n\nFor example, if an user wants to open new tab at the end, but tabs from bookmark bar click after current (or vise versa, or any combinations), like what they used to be able to do with Tab Mix Plus, the new API doesn't sound like capable.", "author": "human.peng@gmail.com", "id": 12982422, "time": "2018-01-19T18:50:04Z"}, {"text": "Created attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nThis patch implements the preference \"browser.tabs.newUnrelatedTabPosition\" which will\ncurrently support values for \"afterCurrent\" and \"endOfTabStrip\", but may be enhanced\nin the future to support \"beforeCurrent\" as well.\n\nIt also implements two browserSettings APIs, \"newRelatedTabPosition\", which allows\nextensions to control \"browser.tabs.insertRelatedAfterCurrent\", and\n\"newUnrelatedTabPosition\", which allows extensions to control the new\n\"browser.tabs.newUnrelatedTabPosition\" pref.\n\nThe code for \"browser.tabs.newUnrelatedTabPosition\" include the test for it is\nmostly taken from a patch attached to bug 933532 written by Masayuki Nakano.\n\nReview commit: https://reviewboard.mozilla.org/r/214374/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/214374/", "author": "bob.silverberg@gmail.com", "id": 12982485, "time": "2018-01-19T19:29:51Z"}, {"text": "(In reply to fireattack from comment #52)\n> What does \"Unrelated Tab\" include, though?\n> \n> New tab, sidebar middle click, bookmark bar click?\n\nYes, all of those.", "author": "bob.silverberg@gmail.com", "id": 12982487, "time": "2018-01-19T19:31:59Z"}, {"text": "(In reply to fireattack from comment #53)\n> I'm not sure the browserSettings type API you mentioned is sufficient (If I\n> misunderstood anything, feel free to correct!).\n> \n> For example, if an user wants to open new tab at the end, but tabs from\n> bookmark bar click after current (or vise versa, or any combinations), like\n> what they used to be able to do with Tab Mix Plus, the new API doesn't sound\n> like capable.\n\nFor now, we're not looking at making it any more granular than described in comment 51. If an extension overrides where new unrelated tabs open, they all will open in that position.", "author": "bob.silverberg@gmail.com", "id": 12982489, "time": "2018-01-19T19:33:17Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #51)\n\n> A separate bug will be opened to discuss adding support for \"beforeCurrent\"\n> to each of those settings.\n\nThis has been filed as bug 1431840.", "author": "mconca@mozilla.com", "id": 12982703, "time": "2018-01-19T21:57:56Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review220326\n\nGeneral NIT: I'm not crazy about the \"related\" and \"unrelated\" naming, but that could just be me.  If \"related\" always means a child tab, I think I'd prefer to see something like defaultNewTabPosition or newTabPosition, and newChildTabPosition.  I do see \"related\" being used in tabbrowser, maybe it's just the \"unrelated\" that could go.  In any case, I don't feel like I have vastely better naming on this item, so I'm not going to block.\n\n::: browser/base/content/test/tabs/browser_new_unrelated_tab_position.js:27\n(Diff revision 1)\n> +  }\n> +\n> +  await addTab(\"http://mochi.test:8888/#0\");\n> +  await addTab(\"http://mochi.test:8888/#1\");\n> +  await addTab(\"http://mochi.test:8888/#2\");\n> +  await addTab(\"http://mochi.test:8888/#3\");\n\nIt might be slightly easier to do a bunch of tab stuff using sessions like I did in browser_ext_tabs_hide.js.\n\n::: browser/base/content/test/tabs/browser_new_unrelated_tab_position.js:32\n(Diff revision 1)\n> +  await addTab(\"http://mochi.test:8888/#3\");\n> +\n> +  // Create a new tab page which has a link to \"example.com\".\n> +  let dir = getChromeDir(getResolvedURI(gTestPath));\n> +  dir.append(\"file_new_tab_page.html\");\n> +  let newTab = await BrowserTestUtils.openNewForegroundTab(gBrowser, Services.io.newFileURI(dir).spec);\n\nSeems like this is opening a chrome url, perhaps:  getRootDirectory(gTestPath).replace(\"chrome://mochitests/content\", \"http://example.com\");\n\nNot sure it matters.\n\n::: toolkit/components/extensions/schemas/browser_settings.json:134\n(Diff revision 1)\n>          \"$ref\": \"types.Setting\",\n>          \"description\": \"Controls the behaviour of image animation in the browser. This setting's value is of type ImageAnimationBehavior, defaulting to <code>normal</code>.\"\n>        },\n> +      \"newRelatedTabPosition\": {\n> +        \"$ref\": \"types.Setting\",\n> +        \"description\": \"Controls where new related tabs are opened. Can be either `afterCurrent` or `endOfTabStrip`, with `afterCurrent` being the default.\"\n\nWhat is a \"related\" tab?  It should be documented (could be in MDN)", "author": "mixedpuppy@gmail.com", "id": 12987046, "time": "2018-01-22T19:52:09Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/214374/diff/1-2/", "author": "bob.silverberg@gmail.com", "id": 12991844, "time": "2018-01-24T16:16:48Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review220326\n\nI agree \"unrelated\" is kind of ugly, and maybe using \"child\" instead of related would be better, but, as you point out, the existing pref is called \"insertRelatedAfterCurrent\", so I wanted to keep the pref names consistent. We could use different names for the API, and still call the new pref \"newUnrelatedTabPosition\", but that feels weird too. I did discuss the names with mconca, and he signed off on them, so I think we'll just go with them for now.\n\n> It might be slightly easier to do a bunch of tab stuff using sessions like I did in browser_ext_tabs_hide.js.\n\nRegarding the test, tbh, I pretty much just lifted the code for the test, and for the changes to tabbrowserl.xml from the patch  attached to bug 933532 which was written by Masayuki Nakano. I assumed that the format of the test was consistent with other tests in the same folder. I think I'll leave it as is for now, and see if any changes are requested by dao.\n\n> Seems like this is opening a chrome url, perhaps:  getRootDirectory(gTestPath).replace(\"chrome://mochitests/content\", \"http://example.com\");\n> \n> Not sure it matters.\n\nThanks, I updated this.\n\n> What is a \"related\" tab?  It should be documented (could be in MDN)\n\nGood point. I updated the description of both `newRelatedTabPosition` and `newUnrelatedTabPosition` in browser_settings.json to be more descriptive, and I'll make sure to check the docs on MDN once they've been written to ensure that it is well described.", "author": "bob.silverberg@gmail.com", "id": 12991847, "time": "2018-01-24T16:17:08Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/214374/diff/2-3/", "author": "bob.silverberg@gmail.com", "id": 12991994, "time": "2018-01-24T17:04:23Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #51)\n> A new pref will be added, browser.tabs.newUnrelatedTabPosition, which will\n> allow a user to control in what position a new unrelated tab will be opened.\n> Two values will be supported: \"afterCurrent\" and \"endOfTabStrip\".\n\nI don't think we should assume that we'll want to extend this later, so I think this should be a boolean pref.", "author": "dao+bmo@mozilla.com", "id": 12994214, "time": "2018-01-25T11:26:40Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #62)\n> (In reply to Bob Silverberg [:bsilverberg] from comment #51)\n> > A new pref will be added, browser.tabs.newUnrelatedTabPosition, which will\n> > allow a user to control in what position a new unrelated tab will be opened.\n> > Two values will be supported: \"afterCurrent\" and \"endOfTabStrip\".\n> \n> I don't think we should assume that we'll want to extend this later, so I\n> think this should be a boolean pref.\n\nFair point. We could make this a boolean pref for now, and if we want to extend it for the API later we can deal with the implementation of that at that time. I'll make that change and update the patch.", "author": "bob.silverberg@gmail.com", "id": 12995093, "time": "2018-01-25T17:34:13Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/214374/diff/3-4/", "author": "bob.silverberg@gmail.com", "id": 12995405, "time": "2018-01-25T19:10:52Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review221622\n\n::: browser/app/profile/firefox.js:468\n(Diff revision 4)\n> +// append new tab to the end.\n>  pref(\"browser.tabs.insertRelatedAfterCurrent\", true);\n> +// Open even unrelated links, e.g., bookmarks, history items at next to\n> +// current tab if |insertUnreleatedAfterCurrent| is true.  Otherwise,\n> +// always append new tab to the end.\n> +pref(\"browser.tabs.insertUnreleatedAfterCurrent\", false);\n\nLet's rename this to browser.tabs.insertAfterCurrent, and if set to true, let's make that trump browser.tabs.insertRelatedAfterCurrent as it wouldn't make sense to insert orphan tabs after the current one but child tabs at the end.", "author": "dao+bmo@mozilla.com", "id": 12997057, "time": "2018-01-26T11:16:48Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review221622\n\n> Let's rename this to browser.tabs.insertAfterCurrent, and if set to true, let's make that trump browser.tabs.insertRelatedAfterCurrent as it wouldn't make sense to insert orphan tabs after the current one but child tabs at the end.\n\nI can see your logic here, but I'm not sure extension developers will appreciate us taking away granular control. You are suggesting that there be the following three options:\n1. Child tabs open next to current, orphan tabs open at the end of the strip. This is the current default behaviour.\n2. Both child and orphan tabs open at the end of the strip. This is the current behaviour with `browser.tabs.insertRelatedAfterCurrent` set to false.\n3. Both child and orphan tabs open next to current. This would be the behaviour if the new pref, which you're suggesting calling `browser.tabs.insertAfterCurrent`, is set to true.\n\nIt would not be possible for an extension to configure Firefox so that child tabs open at the end of the strip and orphan tabs open next to the current one.\n\nI just want to check with Mike to see if he foresees any issues from extension developers if we place this limitation on the API. One advantage of this is that we could create a single API with three possible values, instead of two APIs each with two possible values. It also, however, assumes we're never going to implement bug 1431840, which I know you don't support, but again I want to see what Product has to say about it.", "author": "bob.silverberg@gmail.com", "id": 12997201, "time": "2018-01-26T12:49:41Z"}, {"text": "Mike, can you please take a look at comment 66 and let us know if you support only allowing for those three states?", "author": "bob.silverberg@gmail.com", "id": 12997203, "time": "2018-01-26T12:50:40Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #66)\n> It would not be possible for an extension to configure Firefox so that child\n> tabs open at the end of the strip and orphan tabs open next to the current\n> one.\n\nWhich is precisely my point, because this combination doesn't seem to make sense. :)", "author": "dao+bmo@mozilla.com", "id": 12997206, "time": "2018-01-26T12:52:08Z"}, {"text": "Can we stop deciding which \"makes sense\" and what does not for users, especially in a ticket that is supposed to extend the API? I really, really hate this mindset. \n\nWe still yet to get a reply from Mr. Gottwald why in bug 1335108 he thought \"Without previews, switching in recently used order between more than two tabs would be unusable\", and proceeded to close it, while at least three users (including me) expressed there they prefer this way, and now it is impossible to have it in Firefox 57 due to the merge of two irrelevant about:config options together with the kill of Tab Mix Plus.", "author": "human.peng@gmail.com", "id": 12997798, "time": "2018-01-26T17:10:16Z"}, {"text": "Can we stop deciding which \"makes sense\" and what does not for users, especially in a ticket that is supposed to extend the API? I really, really hate this mindset. \n\n(Removed off-topic parts.)", "author": "human.peng@gmail.com", "id": 12999164, "time": "2018-01-27T09:50:30Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #66)\n> I just want to check with Mike to see if he foresees any issues from\n> extension developers if we place this limitation on the API. One advantage\n> of this is that we could create a single API with three possible values,\n> instead of two APIs each with two possible values. It also, however, assumes\n> we're never going to implement bug 1431840, which I know you don't support,\n> but again I want to see what Product has to say about it.\n\nThe WebExtensions API should not place limits on what can and cannot be done from a UX point-of-view. With Firefox, Mozilla strives to provide the best UX possible in the default browser, the UX that is most intuitive to most users.  The WebExtensions API, however, should provide the hooks necessary for developers to create alternate UX experiences for users. These may or may not be useful to any large segment of users, and may or may not make sense to you or I. The point of extensions, though, is to both broaden the capabilities of Firefox as well as alter its behavior so that individuals can shape their own experiences on the Internet.\n\nI appreciate that certain combinations of parameters may not make sense in the default Firefox browser, but we cannot impose that judgment on the API. Please maintain the API as two separate functions with (for the moment) two options each.", "author": "mconca@mozilla.com", "id": 13000263, "time": "2018-01-29T00:06:35Z"}, {"text": "We don't provide prefs and extension hooks arbitrarily. While obviously extensions allow users to do things differently from the default, so far nobody has presented a reasonable use case for said pref combination, so my position remains that browser.tabs.insertUnreleatedAfterCurrent should be browser.tabs.insertAfterCurrent, and that browser.tabs.insertAfterCurrent=true needs to trump browser.tabs.insertRelatedAfterCurrent.", "author": "dao+bmo@mozilla.com", "id": 13002000, "time": "2018-01-29T12:12:05Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #72)\n> We don't provide prefs and extension hooks arbitrarily. While obviously\n> extensions allow users to do things differently from the default, so far\n> nobody has presented a reasonable use case for said pref combination, so my\n> position remains that browser.tabs.insertUnreleatedAfterCurrent should be\n> browser.tabs.insertAfterCurrent, and that\n> browser.tabs.insertAfterCurrent=true needs to trump\n> browser.tabs.insertRelatedAfterCurrent.\n\nThanks, D\u00e3o. The desire for a use case is understandable, but for an API, it is important to provide a complete toolkit for developers so they can implement creative and powerful extensions; extensions that make Firefox an attractive browser to users everywhere. I honestly don't know why someone would want to open child tabs at the end and orphan tabs next to the current tab - but that doesn't matter. Extensions with hundreds of thousands of users did it in the past, and extensions are trying to do it now, only without this API, it provides a terrible user experience (see comment 5). \n\nI absolutely appreciate that we don't provide prefs arbitrarily. Nothing is free, and there are maintenance and support considerations for nearly every change. Initial technical scope, potential performance implications, and anticipated technical debt should all be factors in the decision. If any of those apply, please let me know.", "author": "mconca@mozilla.com", "id": 13020492, "time": "2018-02-05T23:58:36Z"}, {"text": "(In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #73)\n> (In reply to D\u00e3o Gottwald [::dao] from comment #72)\n> > We don't provide prefs and extension hooks arbitrarily. While obviously\n> > extensions allow users to do things differently from the default, so far\n> > nobody has presented a reasonable use case for said pref combination, so my\n> > position remains that browser.tabs.insertUnreleatedAfterCurrent should be\n> > browser.tabs.insertAfterCurrent, and that\n> > browser.tabs.insertAfterCurrent=true needs to trump\n> > browser.tabs.insertRelatedAfterCurrent.\n> \n> Thanks, D\u00e3o. The desire for a use case is understandable, but for an API, it\n> is important to provide a complete toolkit for developers so they can\n> implement creative and powerful extensions; extensions that make Firefox an\n> attractive browser to users everywhere. I honestly don't know why someone\n> would want to open child tabs at the end and orphan tabs next to the current\n> tab - but that doesn't matter. Extensions with hundreds of thousands of\n> users did it in the past, and extensions are trying to do it now, only\n> without this API, it provides a terrible user experience (see comment 5).\n\nNothing I've read in this bug so far seems to support the assumption that \"open child tabs at the end and orphan tabs next to the current tab\" is a setting that anybody actually wants or cares about, so we need more details on that use case. \"It doesn't matter\" is unsatisfying, because this directly factors into the cost/benefit question that we need to ask when adding APIs. What extensions specifically are we talking about that wouldn't be satisfied with the prefs I suggested?\n\n> I absolutely appreciate that we don't provide prefs arbitrarily. Nothing is\n> free, and there are maintenance and support considerations for nearly every\n> change. Initial technical scope, potential performance implications, and\n> anticipated technical debt should all be factors in the decision. If any of\n> those apply, please let me know.\n\nTechnical debt is always a concern with tabbrowser, yes.", "author": "dao+bmo@mozilla.com", "id": 13023964, "time": "2018-02-07T12:17:09Z"}, {"text": "> Nothing I've read in this bug so far seems to support the assumption that \"open child tabs at the end and orphan tabs next to the current tab\" is a setting that anybody actually wants or cares about, so we need more details on that use case. \"It doesn't matter\" is unsatisfying, because this directly factors into the cost/benefit question that we need to ask when adding APIs. What extensions specifically are we talking about that wouldn't be satisfied with the prefs I suggested?\n\nWe talking about TabMixPlus, for the lack of which I, regular Firefox user, switched to Chrome.\nStop being so arrogant and make Firefox great again.", "author": "awkravchuk@gmail.com", "id": 13024017, "time": "2018-02-07T12:35:52Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #74)\n> What extensions specifically are we talking about that wouldn't be satisfied\n> with the prefs I suggested?\n\nTab mixplus\n\nhttp://www.tabmixplus.org/support/help/images/events-new-tabs.jpg\n\nI, for one, prefer to open related and new tab next to current, but ones from bookmark at the end.", "author": "human.peng@gmail.com", "id": 13024946, "time": "2018-02-07T17:10:27Z"}, {"text": "(In reply to fireattack from comment #76)\n> (In reply to D\u00e3o Gottwald [::dao] from comment #74)\n> > What extensions specifically are we talking about that wouldn't be satisfied\n> > with the prefs I suggested?\n> \n> Tab mixplus\n> \n> http://www.tabmixplus.org/support/help/images/events-new-tabs.jpg\n> \n> I, for one, prefer to open related and new tab next to current, but ones\n> from bookmark at the end.\n\nI should have been clearer: extensions that wouldn't be satisfied with the prefs I suggested but would be with Bob's.", "author": "dao+bmo@mozilla.com", "id": 13025472, "time": "2018-02-07T19:22:08Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #77)\n> (In reply to fireattack from comment #76)\n> > (In reply to D\u00e3o Gottwald [::dao] from comment #74)\n> > > What extensions specifically are we talking about that wouldn't be satisfied\n> > > with the prefs I suggested?\n> > \n> > Tab mixplus\n> > \n> > http://www.tabmixplus.org/support/help/images/events-new-tabs.jpg\n> > \n> > I, for one, prefer to open related and new tab next to current, but ones\n> > from bookmark at the end.\n> \n> I should have been clearer: extensions that wouldn't be satisfied with the\n> prefs I suggested but would be with Bob's.\n\nI'm not sure if I'm getting both suggestions correctly, but I actually feel that none of them satisfies the use case I find most helpful.\n\nNamely, just like [::fireattack], \"I prefer to open related and new tab next to current, while ones from bookmark at the end\"... \n\n...however what I found an invaluable feature of the TabMixPlus add-on, which I miss a lot, was that when I opened my first link in an article in a new background tab it would appear next to currently read article, but when I then opened a few more background tabs from the article like that, Tab Mix Plus would actually insert the tabs after the one that was previously open. This gave me a very natural way of reading about a subject, say on Wikipedia, where I would open up links in the background for reading later and, when I got to them, I would find them in the exact order I opened them, not the reverse. It plays especially nicely with cycling through them with [Ctrl+Tab/Ctrl+Shift+Tab].\n\nUnless any of the suggestions provides this behaviour in one of the preference values, I would concur with [::fireattack]'s comment 70 and [::mconca]'s comment 73 that this could be best solved by allowing to extend the behavior programmatically via an API extension.", "author": "zlamma@gmail.com", "id": 13025725, "time": "2018-02-07T20:35:06Z"}, {"text": "(In reply to Slawomir Brzezinski from comment #78)\n> (In reply to D\u00e3o Gottwald [::dao] from comment #77)\n> > (In reply to fireattack from comment #76)\n> > > (In reply to D\u00e3o Gottwald [::dao] from comment #74)\n> > > > What extensions specifically are we talking about that wouldn't be satisfied\n> > > > with the prefs I suggested?\n> > > \n> > > Tab mixplus\n> > > \n> > > http://www.tabmixplus.org/support/help/images/events-new-tabs.jpg\n> > > \n> > > I, for one, prefer to open related and new tab next to current, but ones\n> > > from bookmark at the end.\n> > \n> > I should have been clearer: extensions that wouldn't be satisfied with the\n> > prefs I suggested but would be with Bob's.\n> \n> I'm not sure if I'm getting both suggestions correctly, but I actually feel\n> that none of them satisfies the use case I find most helpful.\n> \n> Namely, just like [::fireattack], \"I prefer to open related and new tab next\n> to current, while ones from bookmark at the end\"... \n> \n> ...however what I found an invaluable feature of the TabMixPlus add-on,\n> which I miss a lot, was that when I opened my first link in an article in a\n> new background tab it would appear next to currently read article, but when\n> I then opened a few more background tabs from the article like that, Tab Mix\n> Plus would actually insert the tabs after the one that was previously open.\n> This gave me a very natural way of reading about a subject, say on\n> Wikipedia, where I would open up links in the background for reading later\n> and, when I got to them, I would find them in the exact order I opened them,\n> not the reverse. It plays especially nicely with cycling through them with\n> [Ctrl+Tab/Ctrl+Shift+Tab].\n> \n> Unless any of the suggestions provides this behaviour in one of the\n> preference values, I would concur with [::fireattack]'s comment 70 and\n> [::mconca]'s comment 73 that this could be best solved by allowing to extend\n> the behavior programmatically via an API extension.\n\nActually. I guess what I asked for above is what [:monk-time] asked for in Comment 22 - and it is going to be available, as per Comment 29", "author": "zlamma@gmail.com", "id": 13025760, "time": "2018-02-07T20:46:12Z"}, {"text": "Sorry for repeating myself, but, as far as I can tell, in the current state of the patch, opening multiple related tabs will order them nearest to farthest:\n\n    [a] b c\n    \u2193 (middle-click links to 1, 2, and 3 in this order)\n    [a] 1 2 3 b c\n\nWhat about the reverse order, so that a related tab will always be opened immediately after the current?\n\n    [a] b c\n    \u2193 (middle-click links to 1, 2, and 3 in this order)\n    [a] 3 2 1 b c", "author": "yurivkhan@gmail.com", "id": 13026761, "time": "2018-02-08T05:04:32Z"}, {"text": "(In reply to Yuri Khan from comment #80)\n> Sorry for repeating myself, but, as far as I can tell, in the current state\n> of the patch, opening multiple related tabs will order them nearest to\n> farthest:\n> \n>     [a] b c\n>     \u2193 (middle-click links to 1, 2, and 3 in this order)\n>     [a] 1 2 3 b c\n> \n> What about the reverse order, so that a related tab will always be opened\n> immediately after the current?\n> \n>     [a] b c\n>     \u2193 (middle-click links to 1, 2, and 3 in this order)\n>     [a] 3 2 1 b c\n\nThis (Yuri's second example) is exactly how I had TMP set to open tabs for me, and would prefer this io at the very least be an option, either via addon or natively.", "author": "johnlgalt@gmail.com", "id": 13026789, "time": "2018-02-08T05:36:40Z"}, {"text": "(In reply to Yuri Khan from comment #80)\n> Sorry for repeating myself, but, as far as I can tell, in the current state\n> of the patch, opening multiple related tabs will order them nearest to\n> farthest:\n> \n>     [a] b c\n>     \u2193 (middle-click links to 1, 2, and 3 in this order)\n>     [a] 1 2 3 b c\n> \n> What about the reverse order, so that a related tab will always be opened\n> immediately after the current?\n> \n>     [a] b c\n>     \u2193 (middle-click links to 1, 2, and 3 in this order)\n>     [a] 3 2 1 b c\n\n\nProbably, both variants should be possible, but it should be an option in Firefox menu and/or addon to switch between these two settings.", "author": "robert_abc3@yahoo.com", "id": 13026887, "time": "2018-02-08T07:31:45Z"}, {"text": "(In reply to John L. Galt from comment #81)\n> (In reply to Yuri Khan from comment #80)\n> > Sorry for repeating myself, but, as far as I can tell, in the current state\n> > of the patch, opening multiple related tabs will order them nearest to\n> > farthest:\n> > \n> >     [a] b c\n> >     \u2193 (middle-click links to 1, 2, and 3 in this order)\n> >     [a] 1 2 3 b c\n> > \n> > What about the reverse order, so that a related tab will always be opened\n> > immediately after the current?\n> > \n> >     [a] b c\n> >     \u2193 (middle-click links to 1, 2, and 3 in this order)\n> >     [a] 3 2 1 b c\n> \n> This (Yuri's second example) is exactly how I had TMP set to open tabs for\n> me, and would prefer this io at the very least be an option, either via\n> addon or natively.\n\n[:John L. Galt] [:Yuri Khan] Interesting to see a preference for [a] 3 2 1 b c - the opposite from the [a] 1 2 3 b c that I and few others ([:monk-time], [:qwerty]) prefer (I also only just realized that it's also Chrome's default behaviour!). \n\nI guess you gave the main explanation, and our difference, is in Comment 26:\n\n> Then I switch to 1, read it and close it. Closing a tab focuses the one to the left, so I get tab 2, which is also quite convenient.\n\nActually, by default, both Chrome and Firefox focus the right tab on closing. If you got rid of that customization I guess the main nuisance four you would be that you end up on [b] after you've done 1 2 3. For this, I just use Ctrl+Shift+Tab when I want to go back to the main page.\n\nThe reason I accept that one Ctrl+Shift+Tab at the end is because I most often I don't actually close the related articles after first attending to them (Wikipedia articles are usually lengthy and my first attendance is most likely to just to get some idea that will allow me to continue reading, but then read thoroughly later), which makes Ctrl+Shift+Tab/Ctrl+Tab a 'daily bread' anyways. A much bigger nuisance for me would be trying to find the 1 in '3 2 1 b c' and having to use just the right number of Ctrl+Tabs (which would also unnecessarily flag the tabs as 'read' - yeah another TMP feature I miss :) ) or having to switch to touchpad (always a killer of my reading flow).", "author": "zlamma@gmail.com", "id": 13026991, "time": "2018-02-08T09:04:36Z"}, {"text": "(In reply to Slawomir Brzezinski from comment #83)\n\n> Actually, by default, both Chrome and Firefox focus the right tab on\n> closing. If you got rid of that customization I guess the main nuisance four\n> you would be that you end up on [b] after you've done 1 2 3. For this, I\n> just use Ctrl+Shift+Tab when I want to go back to the main page.\n\nYes, that is my main beef with the current default behavior. My perception is that the case \u201cbriefly consult a linked page; close it and continue working on the current task\u201d is extremely frequent and important, and I do not want to follow each Ctrl+W with a Ctrl+PgUp. The preference for a reverse order of related tabs follows from that.\n\n> The reason I accept that one Ctrl+Shift+Tab at the end is because I most\n> often I don't actually close the related articles after first attending to\n> them (Wikipedia articles are usually lengthy and my first attendance is most\n> likely to just to get some idea that will allow me to continue reading, but\n> then read thoroughly later), which makes Ctrl+Shift+Tab/Ctrl+Tab a 'daily\n> bread' anyways.\n\nInteresting. My daily bread for switching tabs is a mouse and a userChrome.css snippet enabling a multi-row tab bar. And I tint my first 8 tabs with colors that I can mentally map into Alt+[1-8] keystrokes.\n\nIncidentally, Alt+[1-8] switching basically requires that the most frequently|recently used tabs be at the start of the tab stack.", "author": "yurivkhan@gmail.com", "id": 13027201, "time": "2018-02-08T10:40:51Z"}, {"text": "This bug has already progressed pretty far, so let's stay focused on discussing the patch at hand. Anything beyond that can be separate feature / API requests.", "author": "dao+bmo@mozilla.com", "id": 13027344, "time": "2018-02-08T12:32:45Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #85)\n> This bug has already progressed pretty far, so let's stay focused on\n> discussing the patch at hand. Anything beyond that can be separate feature /\n> API requests.\n\nFiled bug 1436738.", "author": "yurivkhan@gmail.com", "id": 13027705, "time": "2018-02-08T15:09:29Z"}, {"text": "I will try to summarize the salient points from the latest set of comments since I was asked for more information:\n\nIs there a use case for opening child tabs at the end, orphan tabs next to the current?\n* Some people might prefer to open children at the end to create a \"read these later\" queue, while opening bookmarks and new tabs next to their current tab for ease of navigation. This is particularly useful when the tab strip overflows so that users don't have to scroll.\n\nAre there extensions requesting this?\n* Several comments mention TabMixPlus.  This extension offered this type of tab opening flexibility (and even more). Prior to WebExtensions, TabMixPlus had approximately 500,000 users. The current version of TabMixPlus using WebExtensions has approximately 3,000 users. Providing additional tab positioning features as part of the WebExtensions API would help users of TabMixPlus regain lost functionality.\n\nWould a boolean pref satisfy this request?\n* openAfterCurrent=true does not permit the use case above\n* The original request provided four unique permutations of tab opening position, the boolean pref offers three unique permutations. TabMixPlus users had at least four possible permutations, so it is presumed that providing three will be less satisfactory.", "author": "mconca@mozilla.com", "id": 13062869, "time": "2018-02-23T00:07:51Z"}, {"text": "(In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #87)\n> I will try to summarize the salient points from the latest set of comments\n> since I was asked for more information:\n> \n> Is there a use case for opening child tabs at the end, orphan tabs next to\n> the current?\n> * Some people might prefer to open children at the end to create a \"read\n> these later\" queue, while opening bookmarks and new tabs next to their\n> current tab for ease of navigation. This is particularly useful when the tab\n> strip overflows so that users don't have to scroll.\n\nThis seems a bit constructed. I'm willing to believe that someone out there might want this. I'm skeptical that this is common enough that we should support it.\n\n> Are there extensions requesting this?\n> * Several comments mention TabMixPlus.  This extension offered this type of\n> tab opening flexibility (and even more).\n\nThose comments were off-topic. What these users were asking for is not part of what Bob's patch offers.\n\n> Prior to WebExtensions, TabMixPlus\n> had approximately 500,000 users. The current version of TabMixPlus using\n> WebExtensions has approximately 3,000 users. Providing additional tab\n> positioning features as part of the WebExtensions API would help users of\n> TabMixPlus regain lost functionality.\n> \n> Would a boolean pref satisfy this request?\n> * openAfterCurrent=true does not permit the use case above\n> * The original request provided four unique permutations of tab opening\n> position, the boolean pref offers three unique permutations. TabMixPlus\n> users had at least four possible permutations, so it is presumed that\n> providing three will be less satisfactory.\n\nThere's a more fundamental question we've been dancing around: Are we going to support all of what TabMixPlus was doing? I'm quite positive that the answer to this is no. TMP offered all kinds of fringe customization that cannot realistically supported. That's not because it would be technically unfeasible but because it would be too expensive to maintain such a large API. I thought this was clear when we abandoned legacy extensions. I'm sympathetic to adding extension hooks where we think that makes sense; I'm less sympathetic to the \"TMB did it so let's support it\" theme.", "author": "dao+bmo@mozilla.com", "id": 13063769, "time": "2018-02-23T12:11:07Z"}, {"text": "Maintaining a symmetrical set of options would be less expensive than artificially excluding one combination out of four. D\u00e3o, this whole bike-shedding around a simple API that would make some workflows viable (including those that we can't imagine right now) is very sad to witness. I really hope that someone more reasonable would handle this bug so that it can finally move ahead.\n\nAlso, when Mozilla promised to keep TMP working, there was not a single mention of this sentiment about fringe customizations that you express right now.", "author": "cellulies@gmail.com", "id": 13063817, "time": "2018-02-23T12:54:09Z"}, {"text": "(In reply to monk-time from comment #89)\n> Maintaining a symmetrical set of options would be less expensive than\n> artificially excluding one combination out of four.\n\nWhat makes you think that? \"Symmetrical\" is pretty meaningless here. It's another use case to support and take care of whenever we touch this code.\n\n> D\u00e3o, this whole\n> bike-shedding around a simple API that would make some workflows viable\n> (including those that we can't imagine right now) is very sad to witness. I\n> really hope that someone more reasonable would handle this bug so that it\n> can finally move ahead.\n\n\"bike-shedding\" seems to suggest that you don't really care about said use case either. I understand that this makes you lean towards \"just supporting it.\" I hope you understand that, as one of the people who'll have to maintain this, I'm leaning towards not supporting something we don't really care about.\n\n> Also, when Mozilla promised to keep TMP working, there was not a single\n> mention of this sentiment about fringe customizations that you express right\n> now.\n\nWhere was this promised? I can't imagine that any Firefox engineer who's slightly familiar with tabbrowser was on board with that.", "author": "dao+bmo@mozilla.com", "id": 13063879, "time": "2018-02-23T13:27:29Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #90)\n> What makes you think that? \"Symmetrical\" is pretty meaningless here. It's\n> another use case to support and take care of whenever we touch this code.\n\nI disagree. There are 2x2 permutations that come out naturally from two types of new tabs (orphan and related tabs) and two places to put them. Two types, two places - that's the symmetry I am talking about. I can't imagine a scenario where only one out of four breaks, and if one were to appear in the future it would be a sign of a deeper issue around opening tabs that has no relation to this API.\n\nAs it often happens with such symmetrical cases, artificially constraining this would mean making the code more brittle and complex, not the opposite. I do understand the difficulty of maintaining \"fridge\" features, but in this case having that feature would be a simpler solution with less maintenance than not having it.\n\n> Where was this promised? I can't imagine that any Firefox engineer who's\n> slightly familiar with tabbrowser was on board with that.\n\nSoon after the initial blog post about migrating to WebExtensions (mid-2015) a short list of extensions that would be supported no matter what was often cited in discussions about the move. I can't find the example I had in mind where this promise was more explicit, but these two can be (and often were) read as a promise to support TMP:\n\nhttps://billmccloskey.wordpress.com/2015/08/21/firefox-add-on-changes/\nhttps://wiki.mozilla.org/WebExtensions/Future", "author": "cellulies@gmail.com", "id": 13064024, "time": "2018-02-23T14:26:39Z"}, {"text": "(In reply to monk-time from comment #91)\n> (In reply to D\u00e3o Gottwald [::dao] from comment #90)\n> > What makes you think that? \"Symmetrical\" is pretty meaningless here. It's\n> > another use case to support and take care of whenever we touch this code.\n> \n> I disagree. There are 2x2 permutations that come out naturally from two\n> types of new tabs (orphan and related tabs) and two places to put them. Two\n> types, two places - that's the symmetry I am talking about. I can't imagine\n> a scenario where only one out of four breaks, and if one were to appear in\n> the future it would be a sign of a deeper issue around opening tabs that has\n> no relation to this API.\n>\n> As it often happens with such symmetrical cases, artificially constraining\n> this would mean making the code more brittle and complex, not the opposite.\n> I do understand the difficulty of maintaining \"fridge\" features, but in this\n> case having that feature would be a simpler solution with less maintenance\n> than not having it.\n\nNot supporting that case literally means replacing a ternary operator with two logical operators. There's no inherent brittleness or complexity to this. Supporting it means there's an extra case to keep in mind should we change or fundamentally refactor this code, plus having automated tests for it. No matter how you spin it, supporting another case doesn't make our lives easier in any way.\n\nEngineering aside, there's a cost of providing weird pref combinations that might put users in unintended states (a.k.a. footguns).\n\n> > Where was this promised? I can't imagine that any Firefox engineer who's\n> > slightly familiar with tabbrowser was on board with that.\n> \n> Soon after the initial blog post about migrating to WebExtensions (mid-2015)\n> a short list of extensions that would be supported no matter what was often\n> cited in discussions about the move. I can't find the example I had in mind\n> where this promise was more explicit, but these two can be (and often were)\n> read as a promise to support TMP:\n> \n> https://billmccloskey.wordpress.com/2015/08/21/firefox-add-on-changes/\n> https://wiki.mozilla.org/WebExtensions/Future\n\nThese just recognize TMP as a popular extension that is hard to support, hence the talk about direct or \"superpower\" access (I believe this motivated WebExtension Experiments). A promise we definitely did make is that we'd look into providing a growing number of APIs. That's what we're doing here. We should absolutely support as many TMP features as we think is reasonable, but we need to draw the line somewhere.", "author": "dao+bmo@mozilla.com", "id": 13064161, "time": "2018-02-23T15:09:07Z"}, {"text": "Supporting this case means at most as much code as that. If you are testing the three other combinations (are you?), testing the fourth means copying a case for A & !B and flipping it to !A & B.\n\nIt's definitely going to be hard to support extensions if every little feature is blocked for months by devs who can't possibly imagine a use for it. Firefox's ability to customize UI has already become very limited, I'm sure there are much better areas to apply feature frugality.", "author": "cellulies@gmail.com", "id": 13064220, "time": "2018-02-23T15:26:43Z"}, {"text": "Maybe, rather than arguing which limited subset of cases to support, it would be better to solve the problem generically as requested in bug 1387372 comment 14?", "author": "yurivkhan@gmail.com", "id": 13064481, "time": "2018-02-23T16:29:02Z"}, {"text": "(In reply to monk-time from comment #93)\n> It's definitely going to be hard to support extensions if every little\n> feature is blocked for months by devs who can't possibly imagine a use for\n> it. Firefox's ability to customize UI has already become very limited, I'm\n> sure there are much better areas to apply feature frugality.\n\nI don't know how we arrived at the idea that somebody imagining a use (rather than e.g. demonstrating significant demand) is the bar that needs to be passed for adding extension APIs, let alone not even imagining a use; that's a recipe for catastrophic API design and just unsustainable.\n\n(In reply to Yuri Khan from comment #94)\n> Maybe, rather than arguing which limited subset of cases to support, it\n> would be better to solve the problem generically as requested in bug 1387372\n> comment 14?\n\nThe problem with that is that we can only query add-ons asynchronously but we need to know immediately where to open new tabs.", "author": "dao+bmo@mozilla.com", "id": 13064525, "time": "2018-02-23T16:45:47Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #95)\n> > Maybe, rather than arguing which limited subset of cases to support, it\n> > would be better to solve the problem generically as requested in bug 1387372\n> > comment 14?\n> \n> The problem with that is that we can only query add-ons asynchronously but\n> we need to know immediately where to open new tabs.\n\nEvery asynchronous API can be used in a synchronous way by awaiting on the returned future, can\u2019t it? Shunt it with a 100ms timeout if necessary, I don\u2019t know. That is an engineering problem that can be solved. Deciding between supporting three vs four cases out of infinity, on the other hand, is nigh impossible.", "author": "yurivkhan@gmail.com", "id": 13064615, "time": "2018-02-23T17:12:08Z"}, {"text": "(In reply to Yuri Khan from comment #96)\n> Every asynchronous API can be used in a synchronous way by awaiting on the\n> returned future, can\u2019t it? Shunt it with a 100ms timeout if necessary, I\n> don\u2019t know. That is an engineering problem that can be solved. Deciding\n> between supporting three vs four cases out of infinity, on the other hand,\n> is nigh impossible.\n\nThe UI needs to react immediately, we don't have 100ms to spare here. Plus tabbrowser.addTab is synchronous and making it async would be a huge undertaking.", "author": "dao+bmo@mozilla.com", "id": 13064642, "time": "2018-02-23T17:21:11Z"}, {"text": "Thank you for your input, D\u00e3o. As an experienced developer who knows tabbrowser as well as anyone, we will respect your decision to r- this feature request. I have removed this API from the WebExtensions roadmap and will continue to monitor market channels to determine what APIs we can offer to Firefox developers in the future.", "author": "mconca@mozilla.com", "id": 13065303, "time": "2018-02-23T21:20:36Z"}, {"text": "Wait, I don't understand why the much more important use-case of allowing new (empty) tabs to open next to the current tab should get the axe? The discussion above was about introducing a fourth combination (quite an obscure one, I admit) of [child tabs at the end, orphan/blank tabs near]. But the main issue, an ability to have [orphan tabs at the end] was already approved, and I don't recall anyone having any doubts about its usefulness?\n\nI now feel really bad that my inopportune and unwise bickering-for-the-sake-of-it about an unimportant extra detail caused the main UI quirk to be dismissed.  I apologize for being stubborn and dragging discussion away from the main issue to an insignificant detail. \n\nMike, I (and likely all 105 users who voted for this issue) hope you would reconsider. Punishing everyone for one fool (me) being too argumentative seems excessively cruel. All available add-ons for opening blank tabs near the current introduce significant visual noise that makes the very common action feel sluggish. That's the main issue.", "author": "cellulies@gmail.com", "id": 13065356, "time": "2018-02-23T21:41:47Z"}, {"text": "> an ability to have [orphan tabs at the end]\nCorrection: an ability to have [orphan tabs next to current]", "author": "cellulies@gmail.com", "id": 13065366, "time": "2018-02-23T21:44:46Z"}, {"text": "(In reply to Mike Conca [:mconca] (Denver, CO, USA UTC-6) from comment #98)\n> Thank you for your input, D\u00e3o. As an experienced developer who knows\n> tabbrowser as well as anyone, we will respect your decision to r- this\n> feature request. I have removed this API from the WebExtensions roadmap and\n> will continue to monitor market channels to determine what APIs we can offer\n> to Firefox developers in the future.\n\nIsn't Mr. D\u00e3o Gottwald's opinion (at comment #65) just to rename browser.tabs.insertUnreleatedAfterCurrent to browser.tabs.insertAfterCurrent, and make it override browser.tabs.insertRelatedAfterCurrent?\n\nWhy the whole thing is closed? If what he suggested is followed and implemented, at least people can have the all the tabs (related or unrelated) to open next to the current.", "author": "human.peng@gmail.com", "id": 13065443, "time": "2018-02-23T22:11:58Z"}, {"text": "> WONTFIX\n\nDoes it mean that there is no plan to allow webextensions to control the position of the new tab? What about browser prefs? Is browser.tabs.insertUnreleatedAfterCurrent added?", "author": "eight04@gmail.com", "id": 13065954, "time": "2018-02-24T03:28:31Z"}, {"text": "Mike, I can't seem to find where D\u00e3o r-'ed this whole request?!\nI can only find comments regarding the approval and implementation (see comment 19 and comment 85).\n\nI mean 'chapeau' to you and D\u00e3o for answering really every comment patiently here, but I thought comment 85 was the current status, not?", "author": "albert@scheiner.cc", "id": 13065961, "time": "2018-02-24T03:38:44Z"}, {"text": "This must be a very sad misunderstanding. The only thing that was debated here was the 4th option, the edge case.\n\nThose of us who work with hundreds of tabs, find the ability to open any kind of new tabs next to current, absolutely critical.\nThe current situation for this is a VERY annoying visual mess due to the panning of the tabstrip.\n\nIt is also very sad to see that a dispute about an edge case, which should be handled outside the main bug in the first place and in a non-blocking way, is causing further delays. Without looking at metrics, I am pretty sure there are thousands upon thousands of users who utilize more than 50 tabs, having UX affected severely by this. UX affecting issues should move much faster than this, specially considering the patch is already there..", "author": "nodensntt@hotmail.com", "id": 13066022, "time": "2018-02-24T05:57:07Z"}, {"text": "I think closing this off might have been a bit premature, but I can understand the frustration.\n\nAt this point I'd like to ask if Bob would be willing to finish this bug with the changes that D\u00e3o requested. With that in place, we can file a follow-up to discuss & possibly implement the edge cases that have been discussed at length here.\n\nTo me, this seems the most productive way forward.\n\n\nSpeaking of discussion: I find the number of examples of bad form in this bug to be staggering; if you're inclined to drop in cheap words with childish comments belittling the folk who are trying their hardest to create the best, independent and privacy-minded web browser out there, please count to ten and kill the urge.\nBug comments are supposed to be productive, constructive and above all respectful; be mindful of who you're conversing with. We're taking this serious. It might be you're not, whims aplenty, but hold your peace if so.", "author": "mdeboer@mozilla.com", "id": 13066198, "time": "2018-02-24T11:51:18Z"}, {"text": "> if you're inclined to drop in cheap words with childish comments belittling the folk who are trying their hardest to create the best, independent and privacy-minded web browser out there, please count to ten and kill the urge\n\nI apologize once again. My behavior here was totally not acceptable, and I am going to refrain from adding more noise to the discussion. I'm very sorry.", "author": "cellulies@gmail.com", "id": 13066206, "time": "2018-02-24T12:16:31Z"}, {"text": "(In reply to Mike de Boer [:mikedeboer] from comment #105)\n> To me, this seems the most productive way forward.\n\n Agreed. It is rather counter-productive to block an issue for more than a month, discussing a possible edge case, in bad form as well as you very well put it. Discussions about \"promises\" etc etc are BBS/forum material and don't really belong in a bug tracker. There is also no point in discussing something, in this context, that no one has actually actively requested.\n\n Mr D\u00e3o's requested changes should have been implemented from the start, with a follow-up posted by any actual interested parties for anything additional. So we can move forward.", "author": "nodensntt@hotmail.com", "id": 13066260, "time": "2018-02-24T13:51:21Z"}, {"text": "Fixing bug 1387372 should cover this use case.", "author": "ntim.bugs@gmail.com", "id": 13066845, "time": "2018-02-25T19:26:49Z"}, {"text": "But this one is essentially the fix for bug 1387372.\n\nIt is the first of the three possible solutions proposed by Shane Caraveo in bug 1387372 comment 5 and the one actually selected according to comment 19.", "author": "nodensntt@hotmail.com", "id": 13068471, "time": "2018-02-26T06:33:27Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/214374/diff/4-5/", "author": "bob.silverberg@gmail.com", "id": 13073420, "time": "2018-02-27T19:36:49Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nThis has been updated per the discussion in today's meeting. Can you please take another look, Shane and Dao?", "author": "bob.silverberg@gmail.com", "id": 13073431, "time": "2018-02-27T19:39:04Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review229666\n\n::: browser/app/profile/firefox.js:464\n(Diff revision 5)\n>  // Tabbed browser\n>  pref(\"browser.tabs.closeWindowWithLastTab\", true);\n> +// Open related links to a tab, e.g., link in current tab, at next to the\n> +// current tab if |insertRelatedAfterCurrent| is true.  Otherwise, always\n> +// append new tab to the end.\n>  pref(\"browser.tabs.insertRelatedAfterCurrent\", true);\n\nI think we can/should do this with one pref since insertRelatedAfterCurrent is only used in one place (doesn't have tests either).  This would also simplify the webext bits.  \n\nI would propose:\n\n// enum [atEnd, relatedAfterCurrent, afterCurrent]\npref(browser.tabs.insertTabPosition, atEnd)\n\nWhether it's an integer or string doesn't matter much to me, might to others.\n\n::: toolkit/components/extensions/schemas/browser_settings.json:136\n(Diff revision 5)\n>        },\n>        \"newTabPageOverride\": {\n>          \"$ref\": \"types.Setting\",\n>          \"description\": \"Returns the value of the overridden new tab page. Read-only.\"\n>        },\n> +      \"newTabPosition\": {\n\nandroid?", "author": "mixedpuppy@gmail.com", "id": 13073552, "time": "2018-02-27T20:36:38Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review229666\n\n> I think we can/should do this with one pref since insertRelatedAfterCurrent is only used in one place (doesn't have tests either).  This would also simplify the webext bits.  \n> \n> I would propose:\n> \n> // enum [atEnd, relatedAfterCurrent, afterCurrent]\n> pref(browser.tabs.insertTabPosition, atEnd)\n> \n> Whether it's an integer or string doesn't matter much to me, might to others.\n\nThis is an interesting idea, I'm not sure why it wasn't raised before. If we do that do we have to worry about deprecating/migrating the existing preference, or do we just remove it and anyone who had it set to a non-default value will have to set the new one?\n\n> android?\n\nSorry, can you be a bit more explicit? What about android? Does tabbrowser exist on android?", "author": "bob.silverberg@gmail.com", "id": 13073565, "time": "2018-02-27T20:41:29Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #113)\n> Comment on attachment 8944043\n> Bug 1344749 - Expose API to customize where new tabs open\n> \n> https://reviewboard.mozilla.org/r/214374/#review229666\n> \n> > I think we can/should do this with one pref since insertRelatedAfterCurrent is only used in one place (doesn't have tests either).  This would also simplify the webext bits.  \n> > \n> > I would propose:\n> > \n> > // enum [atEnd, relatedAfterCurrent, afterCurrent]\n> > pref(browser.tabs.insertTabPosition, atEnd)\n> > \n> > Whether it's an integer or string doesn't matter much to me, might to others.\n> \n> This is an interesting idea, I'm not sure why it wasn't raised before. If we\n> do that do we have to worry about deprecating/migrating the existing\n> preference\n\nThat might be a reason to keep two, but IMO it does complicate the code base.  I'd go for migrating the existing pref to reduce complexity long term.\n\n> > android?\n> \n> Sorry, can you be a bit more explicit? What about android? Does tabbrowser\n> exist on android?\n\nThe settings are in toolkit and look available to android (didn't verify), so what happens with their use on android?  I assume nothing, it should at least be a doc note.", "author": "mixedpuppy@gmail.com", "id": 13073609, "time": "2018-02-27T20:54:35Z"}, {"text": "(In reply to Shane Caraveo (:mixedpuppy) from comment #114)\n> (In reply to Bob Silverberg [:bsilverberg] from comment #113)\n\n> > This is an interesting idea, I'm not sure why it wasn't raised before.\n\nYeah, I just assumed there were other dependencies on the pref.  Seeing the code again I thought \"what a PITA juggling two prefs\".", "author": "mixedpuppy@gmail.com", "id": 13073617, "time": "2018-02-27T20:57:30Z"}, {"text": "(In reply to Shane Caraveo (:mixedpuppy) from comment #112)\n> I think we can/should do this with one pref since insertRelatedAfterCurrent\n> is only used in one place (doesn't have tests either).  This would also\n> simplify the webext bits.  \n> \n> I would propose:\n> \n> // enum [atEnd, relatedAfterCurrent, afterCurrent]\n> pref(browser.tabs.insertTabPosition, atEnd)\n> \n> Whether it's an integer or string doesn't matter much to me, might to others.\n\nIntegers are annoying because you need to look them up to read or write them. Strings are annoying because you still need to look them up to write them and typos are made easily. Integers are traditionally the preferred choice between the two, but clearly neither is ideal. So I'd prefer boolean prefs, but maybe I'm underestimating the complexity of the webextension framework code. Perhaps another option would be to just expose the two prefs as two boolean settings?", "author": "dao+bmo@mozilla.com", "id": 13075028, "time": "2018-02-28T11:11:13Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review229826\n\nThe tabbrowser.xml code has now moved to tabbrowser.js (bug 1392352).", "author": "dao+bmo@mozilla.com", "id": 13075035, "time": "2018-02-28T11:12:16Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #116)\n> (In reply to Shane Caraveo (:mixedpuppy) from comment #112)\n> > I think we can/should do this with one pref since insertRelatedAfterCurrent\n> > is only used in one place (doesn't have tests either).  This would also\n> > simplify the webext bits.  \n> > \n> > I would propose:\n> > \n> > // enum [atEnd, relatedAfterCurrent, afterCurrent]\n> > pref(browser.tabs.insertTabPosition, atEnd)\n> > \n> > Whether it's an integer or string doesn't matter much to me, might to others.\n> \n> Integers are annoying because you need to look them up to read or write\n> them. Strings are annoying because you still need to look them up to write\n> them and typos are made easily. Integers are traditionally the preferred\n> choice between the two, but clearly neither is ideal. So I'd prefer boolean\n> prefs, but maybe I'm underestimating the complexity of the webextension\n> framework code. Perhaps another option would be to just expose the two prefs\n> as two boolean settings?\n\nAlthough a single pref would be simpler, the webextension code is by no means particularly complicated. Based on the above I am in favour of keeping things as they are, using two boolean prefs and exposing them via a single setting. This also eliminates the need to worry about migrating the existing pref. How do you feel about that, Shane?", "author": "bob.silverberg@gmail.com", "id": 13075256, "time": "2018-02-28T13:32:54Z"}, {"text": "A single setting would be simpler IMO.  With two, there will always be that moment of \"how do these interact together\", whereas one (with strings) will always be clear.  I'm not going to block on this.", "author": "mixedpuppy@gmail.com", "id": 13075678, "time": "2018-02-28T15:42:35Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review229930\n\nWhile I would prefer a single pref I'm not going to block, webext side is fine.  r?dao after the tabbrowser related stuff is updated.", "author": "mixedpuppy@gmail.com", "id": 13075854, "time": "2018-02-28T16:21:17Z"}, {"text": "*** Bug 1387372 has been marked as a duplicate of this bug. ***", "author": "mixedpuppy@gmail.com", "id": 13077340, "time": "2018-02-28T19:38:33Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/214374/diff/5-6/", "author": "bob.silverberg@gmail.com", "id": 13077426, "time": "2018-02-28T19:58:10Z"}, {"text": "(In reply to Shane Caraveo (:mixedpuppy) from comment #114)\n> \n> The settings are in toolkit and look available to android (didn't verify),\n> so what happens with their use on android?  I assume nothing, it should at\n> least be a doc note.\n\nI don't have an Android device to test on (nor an emulator set up), but I too assume this wouldn't work on Android, so that should be documented in the MDN docs for this API. If someone can verify that that would be even better.", "author": "bob.silverberg@gmail.com", "id": 13079313, "time": "2018-03-01T13:45:47Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review230278\n\n::: browser/base/content/tabbrowser.js:2917\n(Diff revision 6)\n>      }\n>  \n> -    // If we're opening a tab related to the an existing tab, move it\n> +    // If \"browser.tabs.insertAfterCurrent\" is true or if we're opening\n> +    // a tab related to an existing tab and\n> +    // \"browser.tabs.insertRelatedAfterCurrent\" is true, move it\n>      // to a position after that tab.\n\nThis is basically verbalizing the if statement's conditions, which doesn't seem very useful. I think we can trim this to just:\n\n// Move the new tab after another tab if needed.\n\n::: browser/base/content/tabbrowser.js:2920\n(Diff revision 6)\n> +    // a tab related to an existing tab and\n> +    // \"browser.tabs.insertRelatedAfterCurrent\" is true, move it\n>      // to a position after that tab.\n> -    if (openerTab &&\n> -        Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) {\n> +    if (Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\") ||\n> +        (openerTab &&\n> +         Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\"))) {\n\nSince insertRelatedAfterCurrent defaults to true and insertAfterCurrent doesn't, this should normally be cheaper:\n\n    if ((openerTab &&\n         Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) ||\n        Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\")) {\n\n::: browser/base/content/tabbrowser.js:2923\n(Diff revision 6)\n> -    if (openerTab &&\n> -        Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) {\n> +    if (Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\") ||\n> +        (openerTab &&\n> +         Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\"))) {\n> +\n> +      let lastRelatedTab =\n> +        openerTab ? this._lastRelatedTabMap.get(openerTab) : null;\n\nlet lastRelatedTab = openerTab && this._lastRelatedTabMap.get(openerTab);\n\n::: browser/base/content/tabbrowser.js:2926\n(Diff revision 6)\n> +\n> +      let lastRelatedTab =\n> +        openerTab ? this._lastRelatedTabMap.get(openerTab) : null;\n> +      let prevTabOfNewTab =\n> +        lastRelatedTab || openerTab || this.mCurrentTab;\n> +      let newTabPos = prevTabOfNewTab._tPos + 1;\n\njust put this on one line:\n\nlet newTabPos = (lastRelatedTab || openerTab || this.mCurrentTab)._tPos + 1;\n\n::: browser/base/content/tabbrowser.js:2936\n(Diff revision 6)\n>          lastRelatedTab.owner = null;\n> -      else\n> +      else if (openerTab)\n>          t.owner = openerTab;\n>        this.moveTabTo(t, newTabPos, true);\n> +      if (openerTab)\n>        this._lastRelatedTabMap.set(openerTab, t);\n\nindentation", "author": "dao+bmo@mozilla.com", "id": 13079789, "time": "2018-03-01T15:57:24Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/214374/diff/6-7/", "author": "bob.silverberg@gmail.com", "id": 13080130, "time": "2018-03-01T17:31:25Z"}, {"text": "Pushed by bsilverberg@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/0d138609abfd\nExpose API to customize where new tabs open, r=dao,mixedpuppy", "author": "pulsebot@bots.tld", "id": 13080987, "time": "2018-03-01T20:31:35Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/0d138609abfd", "author": "apavel@mozilla.com", "id": 13082434, "time": "2018-03-02T10:17:24Z"}, {"text": "Comment on attachment 8944043\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/214374/#review230598\n\n::: browser/base/content/tabbrowser.js:2929\n(Diff revisions 6 - 7)\n> -      else if (openerTab)\n> +    else if (openerTab)\n> -        t.owner = openerTab;\n> +      t.owner = openerTab;\n> -      this.moveTabTo(t, newTabPos, true);\n> +    this.moveTabTo(t, newTabPos, true);\n> -      if (openerTab)\n> +    if (openerTab)\n>        this._lastRelatedTabMap.set(openerTab, t);\n> -    }\n> +  }\n\nYou completely messed up the indentation here. :(", "author": "dao+bmo@mozilla.com", "id": 13082485, "time": "2018-03-02T10:22:27Z"}, {"text": "Pushed by dgottwald@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/dcfe51f25e29\nfollowup: fix indentation", "author": "pulsebot@bots.tld", "id": 13082562, "time": "2018-03-02T11:22:12Z"}, {"text": "Regression\n\nFrom mozillazine \n\n\"enable\nbrowser.bookmarks.openInTabClosesMenu\nbrowser.tabs.insertAfterCurrent\n\nopen a bookmark folder\ntabs are opened in reverse order\n\nJust flip browser.tabs.insertAfterCurrent to false\nand it is ok\n\nBut that pref is very handy and should not break browser.bookmarks.openInTabClosesMenu\"", "author": "u601173@disabled.tld", "id": 13083368, "time": "2018-03-02T16:38:42Z"}, {"text": "Please just file new bugs on regressions. Thanks!", "author": "dao+bmo@mozilla.com", "id": 13083441, "time": "2018-03-02T16:55:27Z"}, {"text": "Filed bug 1442679", "author": "u601173@disabled.tld", "id": 13083489, "time": "2018-03-02T17:04:34Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/dcfe51f25e29", "author": "shindli@mozilla.com", "id": 13099803, "time": "2018-03-02T23:12:24Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #128)\n> Comment on attachment 8944043\n> Bug 1344749 - Expose API to customize where new tabs open\n> \n> https://reviewboard.mozilla.org/r/214374/#review230598\n> \n> ::: browser/base/content/tabbrowser.js:2929\n> (Diff revisions 6 - 7)\n> > -      else if (openerTab)\n> > +    else if (openerTab)\n> > -        t.owner = openerTab;\n> > +      t.owner = openerTab;\n> > -      this.moveTabTo(t, newTabPos, true);\n> > +    this.moveTabTo(t, newTabPos, true);\n> > -      if (openerTab)\n> > +    if (openerTab)\n> >        this._lastRelatedTabMap.set(openerTab, t);\n> > -    }\n> > +  }\n> \n> You completely messed up the indentation here. :(\n\nOops, sorry, I didn't see the problem and my editor and eslint didn't complain, so it slipped through.", "author": "bob.silverberg@gmail.com", "id": 13100424, "time": "2018-03-03T13:51:05Z"}, {"text": "I think we need to back this out for now. It has caused (at least) two regressions: bug 1442703 and bug 1442679, neither of which were covered by tests (because there were no test failures when landing this bug). \n\nIs it possible to just back out the commit, or does a reverse patch need to be written?", "author": "bob.silverberg@gmail.com", "id": 13100425, "time": "2018-03-03T13:51:34Z"}, {"text": "Okay, I'll take care of the backout.", "author": "dao+bmo@mozilla.com", "id": 13100440, "time": "2018-03-03T14:03:50Z"}, {"text": "Backed out the main commit and the followup:\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/6e894068a646008ead0b0cca454f0a9e8ccca0d8\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/e7bfe2b00511371afc39f85ff2bff37b695dac63", "author": "dao+bmo@mozilla.com", "id": 13100443, "time": "2018-03-03T14:06:16Z"}, {"text": "Thank you for taking care of the backout.", "author": "bob.silverberg@gmail.com", "id": 13100447, "time": "2018-03-03T14:08:08Z"}, {"text": "The backouts:\nhttps://hg.mozilla.org/mozilla-central/rev/6e894068a646\nhttps://hg.mozilla.org/mozilla-central/rev/e7bfe2b00511", "author": "aryx.bugmail@gmx-topmail.de", "id": 13100790, "time": "2018-03-03T22:32:45Z"}, {"text": "(In reply to Bob Silverberg [:bsilverberg] from comment #135)\n> I think we need to back this out for now. It has caused (at least) two\n> regressions: bug 1442703 and bug 1442679, neither of which were covered by\n> tests (because there were no test failures when landing this bug). \n\nFor bookmarks and restored tabs, the tabs open in reverse order because this._lastRelatedTabMap is not being modified.  Does it have to be that way? Would\n\nthis._lastRelatedTabMap.set(this.selectedTab, t)\n\nwork if there is no openerTab?", "author": "kidhanis@gmail.com", "id": 13101375, "time": "2018-03-04T22:29:03Z"}, {"text": "Session restore will restore tabs in the order they were.  However this patch now changes that ordering if there is not an openertab.  We need the tab creation to be aware that it is handling tab creation for session restore so it does not mess with the tab order during that stage.", "author": "mixedpuppy@gmail.com", "id": 13112458, "time": "2018-03-07T22:17:59Z"}, {"text": "Created attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nThis patch implements the preference \"browser.tabs.insertAfterCurrent\" which,\nwhen set to true, will cause all tabs (related and unrelated) to be opened next\nto the current tab.\n\nIt also implements the browserSettings API \"newTabPosition\", which allows\nextensions to control both \"browser.tabs.insertRelatedAfterCurrent\", and\n\"browser.tabs.insertAfterCurrent\" via values for \"afterCurrent\",\n\"relatedAfterCurrent\" and \"atEnd\".\n\nThe code for \"browser.tabs.insertAfterCurrent\" including the test for it is\nmostly taken from a patch attached to bug 933532 written by Masayuki Nakano.\n\nReview commit: https://reviewboard.mozilla.org/r/225956/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/225956/", "author": "mixedpuppy@gmail.com", "id": 13112516, "time": "2018-03-07T22:31:41Z"}, {"text": "Have you audited our other addTab calls? I think it might be better to let openUILinkIn opt in to this behavior rather than letting SessionStore opt out. Not sure, though.", "author": "dao+bmo@mozilla.com", "id": 13119460, "time": "2018-03-11T11:29:14Z"}, {"text": "The only time I think this needs to be considered is during bulk-open operations where the order should be determined by that operation rather than by addTab.  Session restore is one, the only other one I can think of is synced tabs, but am unsure if order is important for that.  Based on quick look at how it works, I don't think it is.", "author": "mixedpuppy@gmail.com", "id": 13125280, "time": "2018-03-13T15:43:23Z"}, {"text": "I don't have a full understanding of the current discussion but can say I sent a tab from my mobile device while this code was landed and it arrived directly next to the currently selected tab (rather than at the end of a long row of tabs) which is exactly how I'd like it. Easy to discover.", "author": "caspy77@gmail.com", "id": 13125301, "time": "2018-03-13T15:47:08Z"}, {"text": "(In reply to Shane Caraveo (:mixedpuppy) from comment #144)\n> The only time I think this needs to be considered is during bulk-open\n> operations where the order should be determined by that operation rather\n> than by addTab.  Session restore is one, the only other one I can think of\n> is synced tabs\n\nAnother bulk-open operation is opening a group of tabs by middle-clicking (or right-clicking, Open All in Tabs) a folder of bookmarks. Although I have no opinion what order that should produce.\n\nAlso, how does Undo Close Tab behave? (Expected behavior: the restored tab should reappear at the relative position where it was before it was closed, as much as that still makes sense, and not be affected by this option.)", "author": "yurivkhan@gmail.com", "id": 13125441, "time": "2018-03-13T16:23:22Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/225956/diff/1-2/", "author": "mixedpuppy@gmail.com", "id": 13126353, "time": "2018-03-13T20:22:59Z"}, {"text": "(In reply to Yuri Khan from comment #146)\n\n> Also, how does Undo Close Tab behave? \n\nIt is placed where it was when closed.  I added tests for it.", "author": "mixedpuppy@gmail.com", "id": 13126355, "time": "2018-03-13T20:23:57Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/225956/#review235204\n\n::: browser/base/content/tabbrowser.js:2214\n(Diff revision 2)\n>        aSkipBackgroundNotify = params.skipBackgroundNotify;\n>        aNextTabParentId = params.nextTabParentId;\n>        aNoInitialLabel = params.noInitialLabel;\n>        aFocusUrlBar = params.focusUrlBar;\n>        aName = params.name;\n> +      aBrowserSetState = params.browserSetState;\n\nI'm not a fan of this name, maybe you can come up with something better. bulkOperation?\n\n::: browser/base/content/tabbrowser.js:2481\n(Diff revision 2)\n> -      else\n> +        else\n> -        t.owner = openerTab;\n> +          t.owner = openerTab;\n> -      this.moveTabTo(t, newTabPos, true);\n> +        this.moveTabTo(t, newTabPos, true);\n> -      this._lastRelatedTabMap.set(openerTab, t);\n> +        this._lastRelatedTabMap.set(openerTab, t);\n> +      } else if (Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\")) {\n> +        this.moveTabTo(t, this.mCurrentTab._tPos + 1, true);\n\nThis is a change from Bob's patch that will affect the tab-select behavior when closing a tab that was moved. Is this intentional?", "author": "dao+bmo@mozilla.com", "id": 13143448, "time": "2018-03-20T19:10:57Z"}, {"text": "(In reply to D\u00e3o Gottwald [::dao] from comment #149)\n> Comment on attachment 8956994\n> Bug 1344749 - Expose API to customize where new tabs open\n\n> This is a change from Bob's patch that will affect the tab-select behavior\n> when closing a tab that was moved. Is this intentional?\n\nIt took a moment for me to get that.  I guess I have to add tests for close behavior.", "author": "mixedpuppy@gmail.com", "id": 13143507, "time": "2018-03-20T19:27:25Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/225956/diff/2-3/", "author": "mixedpuppy@gmail.com", "id": 13143852, "time": "2018-03-20T21:29:23Z"}, {"text": "added a couple close tab tests.  reverted changes.  merged to current code.", "author": "mixedpuppy@gmail.com", "id": 13143875, "time": "2018-03-20T21:37:12Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/225956/#review236130\n\n::: browser/base/content/tabbrowser.js:2459\n(Diff revision 3)\n>  \n> -    // If we're opening a tab related to the an existing tab, move it\n> -    // to a position after that tab.\n> -    if (openerTab &&\n> -        Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) {\n> +    // Move the new tab after another tab if needed.\n> +    if (!aBulkOrderedOpen &&\n> +      (((openerTab &&\n> +         Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) ||\n> +         Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\")))) {\n\nToo many parens and please fix the indentation...", "author": "dao+bmo@mozilla.com", "id": 13151823, "time": "2018-03-23T16:13:00Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/225956/#review236138\n\n::: browser/base/content/test/tabs/browser_new_tab_insert_position.js:34\n(Diff revision 3)\n> +  // that the active tab is loaded and restored.\n> +  let promise = Promise.all([\n> +    TestUtils.topicObserved(\"sessionstore-closed-objects-changed\"),\n> +    BrowserTestUtils.waitForEvent(gBrowser.tabContainer, \"SSTabRestored\")\n> +  ]);\n> +  await BrowserTestUtils.removeTab(tab);\n\nBrowserTestUtils.removeTab isn't async.", "author": "dao+bmo@mozilla.com", "id": 13151852, "time": "2018-03-23T16:24:19Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/225956/diff/3-4/", "author": "mixedpuppy@gmail.com", "id": 13152233, "time": "2018-03-23T18:21:28Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nhttps://reviewboard.mozilla.org/r/225956/#review236372\n\n::: browser/base/content/tabbrowser.js:2452\n(Diff revision 4)\n>      }\n>  \n> -    // If we're opening a tab related to the an existing tab, move it\n> -    // to a position after that tab.\n> -    if (openerTab &&\n> -        Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) {\n> +    // Move the new tab after another tab if needed.\n> +    if (!aBulkOrderedOpen && ((openerTab &&\n> +        Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) ||\n> +        Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\"))) {\n\nNot sure if there's a style guide for this, but to make it easier to see the grouping of the conditions I'd prefer something like this:\n\n    if (!aBulkOrderedOpen &&\n        ((openerTab &&\n          Services.prefs.getBoolPref(\"browser.tabs.insertRelatedAfterCurrent\")) ||\n         Services.prefs.getBoolPref(\"browser.tabs.insertAfterCurrent\"))) {", "author": "dao+bmo@mozilla.com", "id": 13153494, "time": "2018-03-24T18:53:35Z"}, {"text": "Comment on attachment 8956994\nBug 1344749 - Expose API to customize where new tabs open\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/225956/diff/4-5/", "author": "mixedpuppy@gmail.com", "id": 13155957, "time": "2018-03-26T15:10:13Z"}, {"text": "Pushed by mixedpuppy@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/aee255d8336c\nExpose API to customize where new tabs open, r=dao", "author": "pulsebot@bots.tld", "id": 13156725, "time": "2018-03-26T19:09:16Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/aee255d8336c", "author": "btara@mozilla.com", "id": 13158163, "time": "2018-03-27T09:39:03Z"}, {"text": "Got pretty excited when I saw this landed, but then I restarted to update and my tabs had all shuffled again. :(", "author": "caspy77@gmail.com", "id": 13160536, "time": "2018-03-27T17:43:09Z"}, {"text": "(In reply to Caspy7 from comment #160)\n> Got pretty excited when I saw this landed, but then I restarted to update\n> and my tabs had all shuffled again. :(\n\nSession restore shouldn't be causing a problem here now.  I'd need more information to try and replicate what you ran into.", "author": "mixedpuppy@gmail.com", "id": 13163565, "time": "2018-03-28T15:06:59Z"}, {"text": "(In reply to Shane Caraveo (:mixedpuppy) from comment #161)\n> I'd need more information\n\nI, too, can reliably reproduce tab ordering issues with session restore on a new profile of 61.0a1 (2018-03-28), the only change I did being `browser.tabs.insertAfterCurrent;true`.\n\nSTR:\n1. Open a bunch of orphan tabs: say Google searches for `tab1`, `tab2`... up to, say, `tab6`. Now the *n*th tab is a Google search for `tab*n*`.\n\n2a. Switch to `tab4`, OR\n2b. Switch to `tab6`, OR\n2c. Switch to `tab1`\n\n3. Press shift+F2 for Developer Toolbar, type `restart`\n\nAR:\nThe new order of tabs is:\n\nFor STR 2a) tab3 tab2 tab1 tab4 tab6 tab5\n\nFor STR 2b) tab5 tab4 tab3 tab2 tab1 tab6\n\nFor STR 2c) tab1 tab6 tab5 tab4 tab3 tab2\n\nSo while the last active tab before a restart is restored at its expected position, all the tabs to its left, if any, and those to its right, if any, are reversed.", "author": "ampersand100000@gmail.com", "id": 13164388, "time": "2018-03-28T18:43:12Z"}, {"text": "requested a backout on this until I have time to address the issues.", "author": "mixedpuppy@gmail.com", "id": 13169604, "time": "2018-03-30T18:50:20Z"}, {"text": "Shane, I've tried to back this out and got the following error:\n\nchecking for uncommitted changes\nbacking out aee255d8336c\napplying patch from stdin\nunable to find 'toolkit/components/extensions/ext-browserSettings.js' for patching\n(use '--prefix' to apply patch relative to the current directory)\n2 out of 2 hunks FAILED -- saving rejects to file toolkit/components/extensions/ext-browserSettings.js.rej\npatching file toolkit/components/extensions/test/xpcshell/test_ext_browserSettings.js\nHunk #1 FAILED at 47\n1 out of 2 hunks FAILED -- saving rejects to file toolkit/components/extensions/test/xpcshell/test_ext_browserSettings.js.rej\nabort: patch failed to apply\n\nPlease take a look. Thank you.", "author": "csabou@mozilla.com", "id": 13170148, "time": "2018-03-30T23:25:38Z"}, {"text": "Created attachment 8964410\n1344749-followup\n\nRelying on this._browserSetState was incorrect as that is only set via tests.  It needs to be always true so session restore works in the right order.\n\nThe lazy restore is fine in the test, and avoids the about:blank intermittent (or at least makes it much much harder to reproduce on my linux vm).", "author": "mixedpuppy@gmail.com", "id": 13174902, "time": "2018-04-02T21:37:36Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/864320860e94d0dd3a8f05976601ed6a7dc5a79d\nBug 1344749 followup fix for session restore when using insertAfterCurrent and intermittent test failure, r=dao", "author": "mixedpuppy@gmail.com", "id": 13179702, "time": "2018-04-04T14:23:55Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/864320860e94", "author": "nbeleuzu@mozilla.com", "id": 13181493, "time": "2018-04-04T22:05:27Z"}, {"text": "Bug 1442679 was marked as fixed due to the backout, but this new patch doesn't fix it.", "author": "kidhanis@gmail.com", "id": 13182093, "time": "2018-04-05T04:08:34Z"}, {"text": "I have tried to reproduce the scenario mentioned in https://bugzilla.mozilla.org/show_bug.cgi?id=1344749#c162 with the pref set to False as the default and was unable to reproduce the issue on Firefox 59.0a1 (20180101220336). Can you please provide steps or a webext in order to test and verify this improvement?", "author": "marius.santa@softvision.ro", "id": 13209793, "time": "2018-04-16T15:01:08Z"}, {"text": "covered by tests.", "author": "mixedpuppy@gmail.com", "id": 13210072, "time": "2018-04-16T16:18:53Z"}, {"text": "Changing to QE+ based on some etherpad comments by Shane: \n\n    There were a couple followup bugs about session restore and bulk opening bookmarks.  \n\n    Those were fixed.  I'm concerned there are unknown issues lurking.  \n\n    It might be useful to have some QA running with this pref fliped for a while.", "author": "sescalante@mozilla.com", "id": 13236123, "time": "2018-04-26T17:26:35Z"}, {"text": "*** Bug 1296043 has been marked as a duplicate of this bug. ***", "author": "gijskruitbosch+bugs@gmail.com", "id": 13238620, "time": "2018-04-27T16:26:55Z"}, {"text": "I have tested using https://bugzilla.mozilla.org/show_bug.cgi?id=1344749#c169 in Firefox 59.0a1 (20180101220336) and was unable to find the bug or reproduce what was stated in https://bugzilla.mozilla.org/show_bug.cgi?id=1344749#c162. Please provide steps or an extension to reproduce the issue and test around what was fixed. Also please link the session restore and bulk opening bookmark bugs.", "author": "marius.santa@softvision.ro", "id": 13270956, "time": "2018-05-11T15:13:10Z"}, {"text": "(In reply to marius.santa from comment #173)\n> I have tested using\n> https://bugzilla.mozilla.org/show_bug.cgi?id=1344749#c169 in Firefox 59.0a1\n> (20180101220336)\n\nThis is a new feature in Fx 61.", "author": "mixedpuppy@gmail.com", "id": 13271000, "time": "2018-05-11T15:29:42Z"}, {"text": "Created attachment 8980306\ntabs opening in the right order.gif\n\nI've tested tab opening scenarios with the pref set to true using https://addons.mozilla.org/en-US/firefox/addon/tab-open-close-control/?src=search.\nAlso tested bookmark opening scenarios.\nTested end verified in Firefox 62.0a1 (20180524100118)on Windows 10 64Bit and MacOS 10.13.3.", "author": "marius.santa@softvision.ro", "id": 13350235, "time": "2018-05-24T14:58:23Z"}], "id": 1344749, "priority": "P2", "cc": ["acee@rambler.ru", "ajfhajf@yandex.ru", "albert@scheiner.cc", "andy+bugzilla@mckay.pub", "beking@email.com", "blueguitarbob@gmail.com", "bob.silverberg@gmail.com", "bzhao@mozilla.com", "caspy77@gmail.com", "cellulies@gmail.com", "cneiman@mozilla.com", "dao+bmo@mozilla.com", "dennis.lissov@gmail.com", "dharding@living180.net", "dietrich@mozilla.com", "dolske@mozilla.com", "eight04@gmail.com", "fullersm@yahoo.com", "grahamperrin@gmail.com", "hdd60311@gmail.com", "human.peng@gmail.com", "johnlgalt@gmail.com", "kernp25@yahoo.com", "kidhanis@gmail.com", "kmaglione+bmo@mozilla.com", "kumar.mcmillan@gmail.com", "leehw@live.co.uk", "marius.santa@softvision.ro", "matt1299@gmail.com", "mconca@mozilla.com", "mdeboer@mozilla.com", "mixedpuppy@gmail.com", "nodensntt@hotmail.com", "olivergill.mail@gmail.com", "remtanmajitenshi@gmail.com", "reven4000@yahoo.com", "robert_abc3@yahoo.com", "simon.b.may@gmail.com", "sriram.singa@gmail.com", "thiswillvoidyourwarranty@outlook.com", "tjfla@hotmail.com", "Tobias.Marty@gmx.de", "tortino@gmail.com", "tummychow511@gmail.com", "u601173@disabled.tld", "vrtareg+mozilla@gmail.com", "w.elwood08+bmo@gmail.com", "yannbreliere@gmail.com", "yfdyh000@gmail.com", "yoasif@gmail.com", "yuki@clear-code.com", "yurivkhan@gmail.com", "yxu@mozilla.com", "zaaooza@yandex.ru", "zlamma@gmail.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=933532"], "cf_tracking_thunderbird_esr60": "---", "status": "VERIFIED", "product": "Toolkit", "cf_fx_iteration": "---", "blocks": [1226546, 1311472, 1431840, 1442843, 1446913], "qa_contact": "", "creation_time": "2017-03-06T15:14:44Z", "cf_status_firefox_esr52": "---", "component": "WebExtensions: General", "assigned_to_detail": {"email": "mixedpuppy@gmail.com", "id": 372685, "name": "mixedpuppy@gmail.com", "real_name": "Shane Caraveo (:mixedpuppy)"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "verified", "cf_status_firefox61": "verified", "cf_status_firefox60": "---", "target_milestone": "mozilla61", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "u462496@disabled.tld", "id": 462496, "name": "u462496@disabled.tld", "real_name": ""}, "whiteboard": "[design-decision-approved][browserSettings]", "mentors": [], "summary": "Expose API to customize where new tabs open", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"status": "+", "name": "qe-verify", "modification_date": "2018-04-26T17:26:35Z", "type_id": 864, "creation_date": "2018-04-16T16:18:53Z", "id": 1744504, "setter": "sescalante@mozilla.com"}], "last_change_time": "2018-06-02T04:13:28Z", "assigned_to": "mixedpuppy@gmail.com", "is_open": false, "cf_blocking_webextensions": "---", "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}