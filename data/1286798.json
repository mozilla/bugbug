{"cf_tracking_thunderbird_esr52": "---", "status": "ASSIGNED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "jvarga@mozilla.com", "mentors_detail": [], "depends_on": [1402254, 768074, 1283609, 1405270, 1444414, 1446037, 1446310], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["meta"], "cc_detail": [{"email": "amarchesini@mozilla.com", "id": 446257, "name": "amarchesini@mozilla.com", "real_name": "Andrea Marchesini [:baku]"}, {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (On Leave Until June 11th)"}, {"email": "bugmail@asutherland.org", "id": 151407, "name": "bugmail@asutherland.org", "real_name": "Andrew Sutherland [:asuth]"}, {"email": "bugzilla@twinql.com", "id": 396243, "name": "bugzilla@twinql.com", "real_name": "Richard Newman [:rnewman]"}, {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, {"email": "crimsteam@gmail.com", "id": 478577, "name": "crimsteam@gmail.com", "real_name": "Arkadiusz Michalski (Spirit)"}, {"email": "dietrich@mozilla.com", "id": 213632, "name": "dietrich@mozilla.com", "real_name": "Dietrich Ayala (:dietrich)"}, {"email": "eoger@fastmail.com", "id": 521718, "name": "eoger@fastmail.com", "real_name": "Edouard Oger [:eoger]"}, {"email": "gkrizsanits@mozilla.com", "id": 420273, "name": "gkrizsanits@mozilla.com", "real_name": "Gabor Krizsanits (INACTIVE)"}, {"email": "harshid@gmail.com", "id": 152647, "name": "harshid@gmail.com", "real_name": "Harsh86"}, {"email": "honzab.moz@firemni.cz", "id": 269762, "name": "honzab.moz@firemni.cz", "real_name": "Honza Bambas (:mayhemer)"}, {"email": "jf.dev@hotmail.com", "id": 520642, "name": "jf.dev@hotmail.com", "real_name": ""}, {"email": "jgriffiths@mozilla.com", "id": 421111, "name": "jgriffiths@mozilla.com", "real_name": "Jeff Griffiths (:canuckistani) (:\u26a1\ufe0e)"}, {"email": "jhofmann@mozilla.com", "id": 522029, "name": "jhofmann@mozilla.com", "real_name": "Johann Hofmann [:johannh]"}, {"email": "johnp@gmx.de", "id": 386893, "name": "johnp@gmx.de", "real_name": "Johannes Pfrang [:johnp]"}, {"email": "jryans@gmail.com", "id": 282978, "name": "jryans@gmail.com", "real_name": "J. Ryan Stinnett [:jryans] (use ni?)"}, {"email": "krzysztof.glebowicz@gmail.com", "id": 442930, "name": "krzysztof.glebowicz@gmail.com", "real_name": "Krzysztof"}, {"email": "lhenry@mozilla.com", "id": 451704, "name": "lhenry@mozilla.com", "real_name": "Liz Henry (:lizzard) (needinfo? me)"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mdaly@mozilla.com", "id": 609492, "name": "mdaly@mozilla.com", "real_name": "Marion Daly [:mdaly]"}, {"email": "mrbkap@mozilla.com", "id": 69426, "name": "mrbkap@mozilla.com", "real_name": "Blake Kaplan (:mrbkap)"}, {"email": "myk@mykzilla.org", "id": 27300, "name": "myk@mykzilla.org", "real_name": "Myk Melez [:myk] [@mykmelez]"}, {"email": "overholt@mozilla.com", "id": 442218, "name": "overholt@mozilla.com", "real_name": "Andrew Overholt [:overholt]"}, {"email": "pascalc@gmail.com", "id": 24572, "name": "pascalc@gmail.com", "real_name": "Pascal Chevrel:pascalc"}, {"email": "shawnjohnjr@gmail.com", "id": 458181, "name": "shawnjohnjr@gmail.com", "real_name": "Shawn Huang [:shawnjohnjr] (left Mozilla)"}, {"email": "shes050117@gmail.com", "id": 552411, "name": "shes050117@gmail.com", "real_name": "Tom Tung [:tt] (not receiving bugmail, please ni me)"}, {"email": "simon.mainey@gmail.com", "id": 587136, "name": "simon.mainey@gmail.com", "real_name": "Simon Mainey"}, {"email": "skywalker333@gmail.com", "id": 451488, "name": "skywalker333@gmail.com", "real_name": "Trevor Skywalker"}, {"email": "stpeter@mozilla.com", "id": 607517, "name": "stpeter@mozilla.com", "real_name": "Peter Saint-Andre"}, {"email": "thesweetlilycake@gmail.com", "id": 499806, "name": "thesweetlilycake@gmail.com", "real_name": "Lily Rose"}, {"email": "timbugzilla@gmail.com", "id": 437905, "name": "timbugzilla@gmail.com", "real_name": ""}, {"email": "tmaity@mozilla.com", "id": 617844, "name": "tmaity@mozilla.com", "real_name": "Tania Maity (:tmaity)"}, {"email": "Virtual@teknik.io", "id": 342842, "name": "Virtual@teknik.io", "real_name": "Virtual_ManPL [:Virtual] - (please needinfo? me - so I will see your comment/reply/question/etc.)"}, {"email": "vseerror@lehigh.edu", "id": 29811, "name": "vseerror@lehigh.edu", "real_name": "Wayne Mery (:wsmwk)"}, {"email": "wisniewskit@gmail.com", "id": 471096, "name": "wisniewskit@gmail.com", "real_name": "Thomas Wisniewski"}, {"email": "wtds.trabalho@gmail.com", "id": 392178, "name": "wtds.trabalho@gmail.com", "real_name": "Wellington Torrejais da Silva"}], "cf_last_resolved": null, "attachments": [{"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8772366}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8926883}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8926884}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8926885}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8934520}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8934523}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8934525}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8941046}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8941047}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8941048}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8941049}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946606}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946607}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946608}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946609}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946611}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946612}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946613}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8946614}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-06T21:23:44Z", "type_id": 4, "creation_date": "2018-03-06T11:08:48Z", "id": 1725527, "setter": "continuation@gmail.com"}], "content_type": "text/plain", "id": 8956397}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956398}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956402}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956437}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956448}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956477}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956489}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956533}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956730}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956744}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8956962}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957058}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957061}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957082}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957111}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957112}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957120}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957126}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-09T07:18:00Z", "type_id": 4, "creation_date": "2018-03-08T21:16:58Z", "id": 1727101, "setter": "amarchesini@mozilla.com"}], "content_type": "text/plain", "id": 8957133}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957303}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8957315}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-09T23:58:01Z", "type_id": 4, "creation_date": "2018-03-09T23:58:01Z", "id": 1727815, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8957324}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8958425}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8958432}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8958445}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8959654}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8960540}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-22T12:44:24Z", "type_id": 4, "creation_date": "2018-05-22T12:44:24Z", "id": 1759919, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979506}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:45:37Z", "type_id": 4, "creation_date": "2018-05-22T12:45:37Z", "id": 1759921, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979507}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:46:40Z", "type_id": 4, "creation_date": "2018-05-22T12:46:40Z", "id": 1759922, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979508}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:47:27Z", "type_id": 4, "creation_date": "2018-05-22T12:47:27Z", "id": 1759923, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979510}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:48:11Z", "type_id": 4, "creation_date": "2018-05-22T12:48:11Z", "id": 1759924, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979511}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:48:54Z", "type_id": 4, "creation_date": "2018-05-22T12:48:54Z", "id": 1759925, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979512}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:49:34Z", "type_id": 4, "creation_date": "2018-05-22T12:49:34Z", "id": 1759926, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979513}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:50:19Z", "type_id": 4, "creation_date": "2018-05-22T12:50:19Z", "id": 1759927, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979514}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:50:59Z", "type_id": 4, "creation_date": "2018-05-22T12:50:59Z", "id": 1759928, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979515}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:51:47Z", "type_id": 4, "creation_date": "2018-05-22T12:51:47Z", "id": 1759930, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979516}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:53:31Z", "type_id": 4, "creation_date": "2018-05-22T12:53:31Z", "id": 1759933, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979519}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:55:03Z", "type_id": 4, "creation_date": "2018-05-22T12:55:03Z", "id": 1759934, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979520}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:55:54Z", "type_id": 4, "creation_date": "2018-05-22T12:55:54Z", "id": 1759935, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979521}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:56:45Z", "type_id": 4, "creation_date": "2018-05-22T12:56:45Z", "id": 1759938, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979522}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:57:33Z", "type_id": 4, "creation_date": "2018-05-22T12:57:33Z", "id": 1759941, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979524}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:58:38Z", "type_id": 4, "creation_date": "2018-05-22T12:58:38Z", "id": 1759942, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979525}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T12:59:17Z", "type_id": 4, "creation_date": "2018-05-22T12:59:17Z", "id": 1759943, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979526}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:01:12Z", "type_id": 4, "creation_date": "2018-05-22T13:01:12Z", "id": 1759944, "setter": "jvarga@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2018-05-22T13:01:30Z", "type_id": 4, "creation_date": "2018-05-22T13:01:30Z", "id": 1759945, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979527}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:02:58Z", "type_id": 4, "creation_date": "2018-05-22T13:02:58Z", "id": 1759946, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979528}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:03:42Z", "type_id": 4, "creation_date": "2018-05-22T13:03:42Z", "id": 1759947, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979529}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-22T13:05:39Z", "type_id": 4, "creation_date": "2018-05-22T13:05:39Z", "id": 1759949, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979531}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:06:42Z", "type_id": 4, "creation_date": "2018-05-22T13:06:42Z", "id": 1759951, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979532}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:07:26Z", "type_id": 4, "creation_date": "2018-05-22T13:07:26Z", "id": 1759952, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979533}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:08:09Z", "type_id": 4, "creation_date": "2018-05-22T13:08:09Z", "id": 1759953, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979534}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-22T13:09:00Z", "type_id": 4, "creation_date": "2018-05-22T13:09:00Z", "id": 1759954, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8979535}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-23T18:57:44Z", "type_id": 4, "creation_date": "2018-05-23T18:57:44Z", "id": 1760718, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8980046}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-23T18:59:37Z", "type_id": 4, "creation_date": "2018-05-23T18:59:37Z", "id": 1760723, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8980048}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-23T19:32:19Z", "type_id": 4, "creation_date": "2018-05-23T19:32:19Z", "id": 1760760, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8980070}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-25T10:16:13Z", "type_id": 4, "creation_date": "2018-05-25T10:16:13Z", "id": 1761584, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8980537}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-05-25T10:17:06Z", "type_id": 4, "creation_date": "2018-05-25T10:17:06Z", "id": 1761585, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8980538}, {"creator": "jvarga@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8981412}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-06-01T13:07:10Z", "type_id": 4, "creation_date": "2018-06-01T13:07:10Z", "id": 1764647, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8982508}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-06-01T13:08:14Z", "type_id": 4, "creation_date": "2018-06-01T13:08:14Z", "id": 1764648, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8982509}, {"creator": "jvarga@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "review", "modification_date": "2018-06-01T13:09:13Z", "type_id": 4, "creation_date": "2018-06-01T13:09:13Z", "id": 1764650, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8982511}], "votes": 7, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 153, "comments": [{"text": "The next-generation should solve a bunch of problems:\n- unification with other storage APIs (using QuotaManager)\n- per origin database files\n- database files in temporary storage (eviction of old data)\n- e10s multi support\n- move from PContent to PBackground", "author": "jvarga@mozilla.com", "id": 11547777, "time": "2016-07-14T10:29:02Z"}, {"text": "Created attachment 8772366\nlatest snappy", "author": "jvarga@mozilla.com", "id": 11558089, "time": "2016-07-19T10:52:35Z"}, {"text": "My main profile's 100MB webappstore.sqlite has 2,659 distinct originKeys.\n\nDoes that imply that my profile will have a couple of thousand SQLite databases, and a WAL for each one that's open?\n\nThat might not work out on mobile, even if you manage to put these files in the Android Cache directory. Heck, it might not be too fun on my MacBook Pro\u2026!\n\nAm I misunderstanding your approach?", "author": "bugzilla@twinql.com", "id": 11641832, "time": "2016-08-20T19:07:32Z"}, {"text": "I have a similar profile (60MB, around 1800 domains), so I'm testing with real world data.\nYes, local storage is special in many regards. It's synchronous API which makes it quite hard to plug into quota manager, but it's been here for some time and many sites use it. However, we never evicted unused data, so we ended up with 2-3 thousand distinct domains.\nI'm thinking about creating separate databases only for new local storage and about converting origins with existing local storage lazily. I believe many of those distinct domains won't be ever converted, so we will have to delete them when other domains need to store more data.", "author": "jvarga@mozilla.com", "id": 11641918, "time": "2016-08-20T22:32:24Z"}, {"text": "And btw, I'm not going to use SQLite for new local storage implementation :)", "author": "jvarga@mozilla.com", "id": 11641920, "time": "2016-08-20T22:33:33Z"}, {"text": "\\o/\n\nI was worried about the per-database overhead for multi-tab mobile users! Glad to hear you have it all in hand :D", "author": "bugzilla@twinql.com", "id": 11642276, "time": "2016-08-21T16:58:19Z"}, {"text": "multi-tab shouldn't be such a big concern since local storage will be preloaded in memory so the per origin database can be \"closed\" after preloading", "author": "jvarga@mozilla.com", "id": 11642455, "time": "2016-08-21T21:23:12Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #0)\n> The next-generation should solve a bunch of problems:\n> - unification with other storage APIs (using QuotaManager)\n> - per origin database files\n> - database files in temporary storage (eviction of old data)\n> - e10s multi support\n> - move from PContent to PBackground\n\nJust a quick update:\n- e10s multi support landed, although there is room for improvements\n- move from PContent to PBackground landed too, bug 1350637", "author": "jvarga@mozilla.com", "id": 12660242, "time": "2017-09-13T19:34:18Z"}, {"text": "I'm updating the subject to make this easier to find, and I want to give a dump of my current understanding of :janv's plan, as I think the design has a lot of wins, but there are trade-offs involved and we want any discussion/debate to happen sooner rather than later.\n\n## Plan\nMy mental model of the overhaul plan is (Jan, please correct me if I'm wrong!):\n- All (canonical) LocalStorageCache data state is held in the parent process.\n- We have actors per-LocalStorageCache which are per-principal (that is, origin+attributes) instead of the current \"one actor per process that is conceptually just a remoted database connection\" so that we can scope events properly.\n- All localStorage reads happen via sync IPC to PBackground.  (Or, if necessary, a new PLocalStorageIsDumbAndNeedsItsOwnThread.)\n- localStorage writes probably also happen via sync IPC[1].\n- Events happen via async IPC if there are any \"storage\" event listeners in a content process.  The subscription should happen synchronously for maximum correctness, but it's fine to subscribe async under the spec.  This means that a change can be perceived by reading localStorage for which a \"storage\" event has not yet been received.  This is fine and consistent with how LocalStorage already works in Chromium/Blink (and probably webkit too?).  It's also how we've worked for a while.\n- We use QuotaManager, but the origin never gets more than 5MiB of LocalStorage space (+slack) no matter what.\n\n1: At least some writes could be optimized to be async if we're willing to allow the origin to exceed quota.  For example, Chromium allows quota to be exceeded by 100k because of multi-process races.  Our implementation could similarly allow each process some \"slack\" quota that permits async write messages up to that quota (and assuming no space would be freed by overwrites) as long as we're (sufficiently) under quota.  If a write would exceed the slack size, a sync write is performed and resets the outstandingSlackBytes to 0.  In the best-case scenario, outstandingSlackBytes never exceeds the threshold, and is continually re-zeroed by async IPC messages that confirm the writes and current quota usage for the given cache.\n\n## Upsides\nWe get the following wins out of this implementation strategy versus our current strategy:\n- Reduced memory usage.  Right now each browser process that has a window/iframe loaded for an origin that uses LocalStorage will carry the memory burden of the origin's entire LocalStorage usage in every process with the window/iframe loaded.  For sites that use localStorage and are very popular or are embedded as 3rd-party iframes (and assuming we don't double-key them), this could be a lot of memory[2].\n- Globally consistent, sequential view of localStorage across all processes (unless we make any caching optimizations).  The HTML spec provides us basically infinite wiggle room when multiple processes are involved, but I know of at least one instance of LocalStorage being used by a site as a mutex between multiple windows.  There are arguably no downsides \n- Improved page load performance where the origin has a ton of data stored in localStorage but only needs a small amount of it near startup.  If the origin has 5MiB stored and it uses localStorage at all, all 5 MiB needs to be loaded from disk and received by the thread responsible for storage.  And if we go synchronous (in the current implementation), that could mean a simple boolean check has to wait on 5 megs of data.  Based on our current DB strategy, the load is still unavoidable, but we avoid having to ship it over IPC or process that on the content process main thread.\n\n2: Note that this regressed in bug 1285898 out of necessity.  Previously, we'd drop the storage if a page didn't actually use LocalStorage within ~20 seconds.  This could be added back without the overhaul by addressing bug 1350071.\n\n## Downsides\n- Synchronous IPC is synchronous IPC, and this approach means more of it, even if it's in smaller bite-sized pieces.  Although we can mitigate by letting Quantom DOM context-switch to other TabGroups, it's not a win if we're perceptibly stalling a foreground TabGroup the user cares about.\n\n## Potential Mitigations\n- Use some kind of clever multi-process shared-memory map to make all reads except the preload non-blocking, and all writes async.  This would increase complexity and lose the globally consistent sequence.\n- Create a second mode of operation for localStorage-heavy origins.  Once an activity threshold is crossed,  cache the entirety of the state in the content process and rely on the \"storage\" events (which must be subscribed to even if not delivered to content pages) to update the local cache.  If there's heavy write-load, consider coalescing the writes locally by tracking dirty keys and flushing on a timer, much like we do in the database thread already.\n\n## Meta: Metrics / Benchmarks / Synthetic Benchmarks\n\nFrom my perspective, we don't have a good understanding of how LocalStorage is used in the wild or a clear goal to optimize for than to reduce the scalar telemetry LOCALDOMSTORAGE_GETVALUE_BLOCKING_MS and make the boolean telemetry LOCALDOMSTORAGE_PRELOAD_PENDING_ON_FIRST_ACCESS as false as possible.  These are mainly questions of moving the preload trigger as early as possible in the pipeline, optimizing the database queries, and reducing database fragmentation.  These are all orthogonal to whether we do the in-parent overhaul or instead massively clean-up the existing implementation.  (Although our current implementation is limited in how early we can move the preload trigger because of how broadcast is implemented.)\n\nIt might be beneficial to instrument our LocalStorage implementation with MOZ_LOG statements that can generate optionally-anonymized traces of localstorage usage.  They'd log all reads/writes as `origin \"${hashy(perUserRandomKey, origin}\" key \"${hashy(perUserRandomKey, key)}\" ${key.length} ${readOrWriteOrClear} ${value && value.length}`.  Some kind of \"about:networking\" \"logging\"-tab-style affordance could turn on the logs for helpful people, who could then provide us privately with their logs with the understanding that we could reverse things if we brute-forced the per-user-key/salt or did traffic-analysis, but that we would not do so and this would largely avoid us accidentally learning anything private when skimming or otherwise analyzing logs.\n\n## Analytical tools.\n### Per-origin via Devtools console\nPaste this into a dev-tools console of any browser on any origin to get a report on what localStorage is up to:\n```\n(function() { var valueBytes=0; var keyBytes=0; for (var i=0; i < localStorage.length; i++) { var key = localStorage.key(i); keyBytes += key.length; valueBytes += localStorage[key].length; } console.log(\"localStorage has\", localStorage.length, \"keys and uses\", keyBytes, \"key bytes,\", valueBytes, \"value bytes,\", keyBytes+valueBytes, \"total bytes-ish\"); })();\n```\nex, my google.com in my Firefox primary profile:\nlocalStorage has 177 keys and uses 5738 key bytes, 17683 value bytes, 23421 total bytes-ish\nex, my google.com in my Google Chrome MoCo profile:\nlocalStorage has 168 keys and uses 3295 key bytes, 2623 value bytes, 5918 total bytes-ish\n\n### Whole profile via browser console\nOpen up a browser console via ctrl-shift-j (you may need to enable it first): paste this in and run it:\n```\nComponents.utils.import(\"resource://gre/modules/Sqlite.jsm\"); (async function() { const conn = await Sqlite.openConnection({ path: \"webappsstore.sqlite\", sharedMemoryCache: false }); await conn.execute(\"select sum(length(key) + length(value))/1024 AS total, originkey from webappsstore2 GROUP BY originKey HAVING total > 1024 ORDER BY total ASC\", [], (row) => { console.log(row.getResultByIndex(0), row.getResultByIndex(1)); }); conn.close(); console.log(\"That's it.\"); })()\n```\n\nNote that if you have no origins with over 1 meg, you'll just see \"That's it.\"  You can adjust the query as needed.\n\n### Whole profile via sqlite3 command line tool\nSame as the browser console invocation above.\n\nRun this inside a `sqlite3 webappsstore.sqlite` to get a rough list of per (reversed) origin localStorage usage in KiB for sites using more than a meg:\n```\nselect sum(length(key) + length(value))/1024 AS total, originkey from webappsstore2 GROUP BY originKey HAVING total > 1024 ORDER BY total ASC;\n```\nor direct from the command-line in your profile directory:\n```\nsqlite3 webappsstore.sqlite \"select sum(length(key) + length(value))/1024 AS total, originkey from webappsstore2 GROUP BY originKey HAVING total > 1024 ORDER BY total ASC;\"\n```", "author": "bugmail@asutherland.org", "id": 12663779, "time": "2017-09-14T00:57:22Z"}, {"text": "(In reply to Andrew Sutherland [:asuth] from comment #8)\n\nThanks for the plan description, nice written!\nAs others can see, this is not trivial at all.\n\nI have some more comments:\n1. Regarding sync/async writes. We could avoid the slack if decide to keep the precise quota checks strategy by making QuotaObject::MaybeUpdateSize to work on PBackground thread (or special LocalStorage thread dedicated for IPC in the parent process).\nThe idea is that in LocalStorage it's easy to calculate how much data (or at least maximum) will be stored on disk. It's a simple key.length + value.length calculation. So we can try to synchronously pre-allocate the size (which would check the group limit and possibly free some space). Writes would then be asynchronously finished and after we know real size we can again update quota object (we could also try to compress in content process and send compressed bytes across IPC).\nThis can't work well with SQLite because it's hard to estimate how much data will actually be stored on disk, so I'm also considering to drop SQLite in LocalStorage and replace it with own simple db system.\nAll we need is to write key/value pairs using snappy compression and splitting these pairs across multiple files (to avoid 5 MB writes when only 1 byte is changed in the worst case). The splitting can be done based on hashing the key or something like that.\nI already experimented with the simple db system. (Note this is not simpledb, bug 1361330).\n\n2. Hopefully sync IPC reads won't be a performance problem since it makes everything much cleaner and less complicated.\n\n3. Local storage db can contain thousands of unique domains. The current quota manager storage placement on disk is a directory per origin and these directories must be scanned during default/temporary storage initialization.\nHowever, we don't need to create all of them. We can do it on demand when they are actually needed. Something like lazy upgrade of old Local Storage db.\nThis can be improved even more and have a zip file with compressed (unused) origin directories and unzip them when needed.\nFinally, we can also cover a case when there's plenty of space on disk so origin directories never get evicted, but the number of origin directories gets quite big after some time. We can use the same archive/zip file to archive unused origin directories.\n\nOf course, we don't have to implement everything at once.", "author": "jvarga@mozilla.com", "id": 12664633, "time": "2017-09-14T07:38:33Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #9)\n> This can't work well with SQLite because it's hard to estimate how much data\n> will actually be stored on disk, so I'm also considering to drop SQLite in\n> LocalStorage and replace it with own simple db system.\n> All we need is to write key/value pairs using snappy compression and\n> splitting these pairs across multiple files (to avoid 5 MB writes when only\n> 1 byte is changed in the worst case). The splitting can be done based on\n> hashing the key or something like that.\n> I already experimented with the simple db system. (Note this is not\n> simpledb, bug 1361330).\n\nCan we dig into this a bit more?\n\nI agree that given our usage pattern for localStorage, the main thing SQLite is doing is bounding I/O for small writes, as you say.  But I don't view the SQLite disk overhead as particularly concerning[1].  At least not worth the maintenance overhead of implementing a persistence layer that has to juggle multiple files.\n\nThat's not to say there isn't a gap in our set of persistence solutions, especially from C++ code.  We basically have SQLite and the ServiceWorkerRegistrar-style \"sketchily read and write a text-file that's a downgrade nightmare\" strategies.  JS is in better shape because it has easy JSON flat-file serialization and IndexedDB.\n\nMy thoughts in this area were that now that we can write rust code we can use its \"serde\" serialization/deserialization library to allow our platform code to do easily do JSON-style serialization.  And it seems conceivable that there is some middle-ground between flat-file and SQLite, but I think we want there to be an existing open source project we build around that's aligned with our use-case.  Or at least, it should be more than just you taking on an embedded database engine as part of your day job :)\n\nNote that MoCo is a member of the SQLite consortium (https://sqlite.org/consortium.html) which means we actually can get a lot of their time; we're already paying for it, we're just not using it.  I'm sure they'd be happy to advise us on how to optimize for the localStorage case.  And it's worth pointing out that SQLite has a lot of extensibility.  For example, there's the CSV virtual table at https://sqlite.org/csv.html, plus, as you know, there's the VFS layer.  And as a virtual table, we'd get to use all of our existing mozStorage bindings, any rust bindings we adopt, etc.\n\n1: The localStorage 5meg limit is in many ways orthogonal to the QuotaManager limit.  It's a policy decision from the pre-QuotaManager era that now is more about bounding memory use from LocalStorage-sites than it's about disk space.  To avoid breaking on sites that depend on the limit as we previously implemented it, we need to give them that space as we originally measured it, roughly speaking.  QuotaManager does need to deal in real-world disk usage, but there's no reason it has to insist on the localStorage on-disk usage being exactly 5 megabytes.  It can give it 10.  It should enforce our more generous upper limits, which we may need to boost slightly with the localStorage move to QM, but those are more abstract as far as the various origins are concerned.", "author": "bugmail@asutherland.org", "id": 12666430, "time": "2017-09-14T16:54:50Z"}, {"text": "I haven't made any decision regarding database system for LocalStorage, I just experimented with own one :)\nI'm all for an existing open source system that fits our needs.", "author": "jvarga@mozilla.com", "id": 12666836, "time": "2017-09-14T18:37:55Z"}, {"text": "2\u00a2 on this: adding another database tool of almost any kind is a non-trivial installer size bump, and that really matters on mobile, particularly if it's a tool that's only used for one specific case.\n\nThat means I tend to see fewer middle grounds between flat files (which have lots of problems) and SQLite (which solves lots of problems) -- the only acceptable middle grounds are those that have a future across a number of components and kill a bunch of other code, because we don't want to pay a few MB of library size just for one feature.\n\nI say that as someone who very much thinks adding a suitable database tool to the codebase is a good idea!", "author": "bugzilla@twinql.com", "id": 12667245, "time": "2017-09-14T20:35:22Z"}, {"text": "If we go the SQLite route here's proposed db schema:\n\nCREATE TABLE database (\n  origin TEXT NOT NULL\n  last_vacuum_time INTEGER NOT NULL DEFAULT 0,\n  last_analyze_time INTEGER NOT NULL DEFAULT 0,\n  last_vacuum_size INTEGER NOT NULL DEFAULT 0\n)  WITHOUT ROWID;\n\nCREATE TABLE data (\n  key TEXT PRIMARY KEY,\n  value TEXT NOT NULL,\n  keyCompressed INTEGET NOT NULL,\n  valueCompressed INTEGET NOT NULL,\n  lastAccessTime INTEGER NOT NULL DEFAULT 0\n);\n\nCREATE INDEX data_key ON data(key);\n\nFeatures (some of them just for consideration):\n- WAL is probably not needed for such small databases\n- queue changes coming from content processes and apply them to SQLite periodically or when the size gets over a threshold\n- after a database update, check if it's worth to vacuum the database (or vacuum only when we get the idle notification)\n- compress keys and values if the length is greater than a threshold, if compressed data isn't significantly smaller, keep key/value uncompressed\n- compression/decompression would happen in content processes\n- pre-loaded data could stay compressed to send less bytes across IPC either for normal operations or for distributing the change events\n- every key/value pair would have last access time, if such a pair is not used for long time, it doesn't have to be preloaded next time we preload data for entire origin\n- lastAccessTime may also serve for clearing session data based on time constraints ?\n\nIt would be nice if we could calculate the size needed by SQLite on disk for given key/value pair in the worst case (no free blocks in the database).\nThat way we could just synchronously pre-allocate space using QuotaManager before setItem() call is finished.\nThe pre-allocated space would then be freed once a database update is finished.", "author": "jvarga@mozilla.com", "id": 12669780, "time": "2017-09-15T11:37:22Z"}, {"text": "Created attachment 8926883\nPart 1\n\nbackup", "author": "jvarga@mozilla.com", "id": 12831090, "time": "2017-11-09T15:22:23Z"}, {"text": "Created attachment 8926884\nPart 2\n\nbackup", "author": "jvarga@mozilla.com", "id": 12831093, "time": "2017-11-09T15:22:47Z"}, {"text": "Created attachment 8926885\nPart 3\n\nbackup", "author": "jvarga@mozilla.com", "id": 12831094, "time": "2017-11-09T15:23:12Z"}, {"text": "Created attachment 8934520\nPart 3", "author": "jvarga@mozilla.com", "id": 12898385, "time": "2017-12-05T13:58:17Z"}, {"text": "Created attachment 8934523\nPart 4", "author": "jvarga@mozilla.com", "id": 12898389, "time": "2017-12-05T13:59:40Z"}, {"text": "Created attachment 8934525\nPart 5", "author": "jvarga@mozilla.com", "id": 12898392, "time": "2017-12-05T14:01:21Z"}, {"text": "Created attachment 8941046\nPart 3", "author": "jvarga@mozilla.com", "id": 12954796, "time": "2018-01-09T13:57:07Z"}, {"text": "Created attachment 8941047\nPart 4", "author": "jvarga@mozilla.com", "id": 12954798, "time": "2018-01-09T13:57:38Z"}, {"text": "Created attachment 8941048\nPart 5", "author": "jvarga@mozilla.com", "id": 12954802, "time": "2018-01-09T13:58:27Z"}, {"text": "Created attachment 8941049\nPart 6", "author": "jvarga@mozilla.com", "id": 12954804, "time": "2018-01-09T14:00:02Z"}, {"text": "Ok, Part 6 implements persistence on disk\n\nTODO (may miss some items):\n- quota checks\n- migration of old data\n- support for private browsing mode\n- storage events", "author": "jvarga@mozilla.com", "id": 12954811, "time": "2018-01-09T14:04:03Z"}, {"text": ":janv update the bug with latest info please?", "author": "mdaly@mozilla.com", "id": 13003220, "time": "2018-01-29T20:07:07Z"}, {"text": "Created attachment 8946606\nPart 1: Allow BackgroundChild::GetOrCreateForCurrentThread() to use a custom main event target", "author": "jvarga@mozilla.com", "id": 13004854, "time": "2018-01-30T12:58:10Z"}, {"text": "Created attachment 8946607\nPart 2: Add IsOnDOMFileThread() and AssertIsOnDOMFileThread() generic helper methods", "author": "jvarga@mozilla.com", "id": 13004855, "time": "2018-01-30T12:58:52Z"}, {"text": "Created attachment 8946608\nPart 3: New basic (memory only) implementation of LocalStorage", "author": "jvarga@mozilla.com", "id": 13004856, "time": "2018-01-30T12:59:48Z"}, {"text": "Created attachment 8946609\nPart 4: Basic integration with QuotaManager", "author": "jvarga@mozilla.com", "id": 13004859, "time": "2018-01-30T13:00:34Z"}, {"text": "Created attachment 8946611\nPart 5: More integration with QuotaManager", "author": "jvarga@mozilla.com", "id": 13004863, "time": "2018-01-30T13:01:22Z"}, {"text": "Created attachment 8946612\nPart 6: Fix a dead lock in the single process case", "author": "jvarga@mozilla.com", "id": 13004864, "time": "2018-01-30T13:01:56Z"}, {"text": "Created attachment 8946613\nPart 7: Teach QuotaManager's OriginParser to handle file://UNIVERSAL_FILE_URI_ORIGIN", "author": "jvarga@mozilla.com", "id": 13004867, "time": "2018-01-30T13:02:33Z"}, {"text": "Created attachment 8946614\nPart 8: Persist datastores to disk", "author": "jvarga@mozilla.com", "id": 13004869, "time": "2018-01-30T13:03:09Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #25)\n> :janv update the bug with latest info please?\n\nSure, here are current patches with some description:\n\nPart 1: Allow BackgroundChild::GetOrCreateForCurrentThread() to use a custom main event target\n\nPart 2: Add IsOnDOMFileThread() and AssertIsOnDOMFileThread() generic helper methods\n\nPart 3: New basic (memory only) implementation of LocalStorage;\n\nThe implementation is based on a cache (datastore) living in the parent process and sync IPC calls initiated from content processes.\nIPC communication is done using per principal/origin database actors which connect to the datastore.\nThe synchronous blocking of the main thread is done by creating a nested event target and spinning the event loop.\n\nPart 4: Basic integration with QuotaManager\n\nThis adds a new quota client implementation, but only implements ShutdownWorkThreads.\nAt shutdown we wait for all running operations to finish including database actors which are closed by using an extra IPC message which avoids races between the parent and child.\nDatabases are dropped on the child side as soon as they are not used (e.g. after unlinking by the cycle collector).\n\nPart 5: More integration with QuotaManager\n\nPreparation of datastores now creates real database files on disk. The LocalStorage directory is protected by a directory lock.\nInfrastructure for database schema upgrades is in place too.\nDatabase actors are now explicitely tracked by the datastore. When the last actor finishes the directory lock is released.\nAdded also implementation for QuotaClient::GetUsageForOrigin() and QuotaClient::AbortOperations().\n\nPart 6: Fix a dead lock in the single process case\n\nIn the single process case, pass the nested main event target across IPC.\nThe event target is then used by the parent side to process runnables which need to run on the main thread.\nAfter this change we don't have use hacks like getting profile directory path on the child side and sending it to the parent. The parent side can now do it freely even in the single process case.\n\nPart 7: Teach QuotaManager's OriginParser to handle file://UNIVERSAL_FILE_URI_ORIGIN\n\nSee bug 1340710 which introduced this kind of URI.\n\nPart 8: Persist datastores to disk; r=asuth\n\nIntroduced a Connection and a ConnectioThread object.\nAll I/O requests are processed by a new single thread managed by ConnectionThread object.\nConnection objects are prepared by the prepare datastore operation and then kept alive by datastores just like directory locks.\nAll datastore I/O operations are wrapped in a transaction which automaticaly commits after 5 seconds.\nDatastore preparation now also loads all items from the database.\n\n\nSo most of the stuff that is mentioned in my initial description of this bug and in comment 8 is implemented except:\n- storage event notifications\n- quota checks\n- private browsing\n- data migration\n\nI'm currently working on:\n- storage event notifications\n\nIn patch Part 3 I disabled tests that currently don't pass on try, they are mostly related to storage events not working.\n\nMy goal is to have all of this in FF 61, if I have time, I'd like to also implement data compression and some other performance and memory enhancements.", "author": "jvarga@mozilla.com", "id": 13004882, "time": "2018-01-30T13:14:17Z"}, {"text": "From the last update in comment 24 I was mostly working on:\n1. Datastore/cache sharing by multiple tabs\nThis took a bit more time than I originally thought, but it's now working nicely. A datastore object is not tight to an actor, so it can be \"preloaded\" much sooner or can be kept alive for some time.\n\n2. Bullet-proof quota client shutdown\nI paid extra attention to this because we see many problems/crashes related to this. Some of the ideas/approaches/fixes can be used in other quota clients, especially in IndexedDB\n\n3. Make it pass on try\nI had to fix a problem with quota manager initialization ending in a dead lock in the single process case. Hopefully I fixed it in a way that we won't have to use hacks to handle the single process case.\nThen I discovered that we introduced file://UNIVERSAL_FILE_URI_ORIGIN and some LocalStorage tests use that, so I had to fix the OriginParser. We might find out that some IndexedDB initialization issues are related to this special URI.\nAnd a bunch of other small problems.\n\n4. Code cleanup\nI cleaned up the code and added many comments. The attached patches are ready to reviewed I think", "author": "jvarga@mozilla.com", "id": 13004914, "time": "2018-01-30T13:30:28Z"}, {"text": "Progress update:\n\n1. storage event notifications\n- implemented, but needs cleanup\n\n2. private browsing\n- fixed\n\nTODO:\n- quota checks\n- data migration\n- support for session only local storage (can we just drop this feature ?)\n- fix clearing triggered by extension API, preferences, etc.", "author": "jvarga@mozilla.com", "id": 13021065, "time": "2018-02-06T09:32:21Z"}, {"text": "Session only local storage: research if others use it, talk to :asuth about it, if no one uses it we can safely dump it. Who would be stakeholders here?", "author": "mdaly@mozilla.com", "id": 13021642, "time": "2018-02-06T14:50:47Z"}, {"text": "We will have to do something for CPOWs, some tests still use it.\n\nCurrently it can lead to a dead lock when local storage in the content process is synchronously blocking the main thread.\n\nHere's the scenario:\n- a content process touches local storage for the first time\n- the content process issues a request to the parent process to prepare a datastore for local storage\n- the content process synchronously blocks the main thread while waiting for a response\n- the parent process sends a CPOW synchronous message (on the main thread) to the content process \n- the parent process receives the local storage request (on the PBackground thread) and starts a state machine\n- one of the steps of the state machine is work on the main thread in the parent process, so a runnable is dispatched to the main thread\n- the runnable is not executed because the main thread is doing a synchronous CPOW request\n- the state machine can't continue, so both ends wait for each other\n\nI found out that if I send a synchronous message from the content process to the parent while spinning the event loop, then the CPOW request gets processed. However, I'm not sure if it's safe and we want to allow it.\nMy understanding is that we want to get rid of CPOWs at some point and they are already disabled for normal web content.\nSo we should rewrite those tests that use local storage using CPOWs and somehow disable CPOWs when local storage is going to synchronously block the main thread (to rather throw an exception instead of deadlocking).", "author": "jvarga@mozilla.com", "id": 13030125, "time": "2018-02-09T11:52:22Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #37)\n> Session only local storage: research if others use it, talk to :asuth about\n> it, if no one uses it we can safely dump it. Who would be stakeholders here?\n\nI think the consensus reached at the Storage UX meeting in December at MozAustin, as I reported at bug 1400678 comment 3, is that clear-on-shutdown is sufficient for our session-only semantics.\n\nI think it's also somewhat agreed that the current semantics of session-only LocalStorage bootstrapping from whatever is already persisted to LocalStorage on disk is weird and defies user expectations.  So, specifically, if the user goes to the canonical private browsing example of an engagement ring site, does something that persists data, then switches the site (or global preference) to session storage, the session storage will be bootstrapped from that already-persisted data each time, which is unexpected.\n\nSo:\n- If we implement QuotaManager clear-on-shutdown in bug 1400678, I think we can remove the concept of session-only storage from LocalStorage here.\n- If we don't implement bug 1400678, we might be able to simplify session-only to non-persistent in-memory-only.  (And since PrivateBrowsing is segregated by OriginAttribute, that further eliminates the need for slots.)", "author": "bugmail@asutherland.org", "id": 13039978, "time": "2018-02-13T21:10:28Z"}, {"text": "Thanks Andrew, that makes perfect sense.", "author": "jvarga@mozilla.com", "id": 13041118, "time": "2018-02-14T10:30:20Z"}, {"text": "Latest try looks good:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=7e5604be21b713dc4f0fe82a1e6679c07fe27b1c\n\nProgress since last update:\n- storage events implementation optimized, cleaned up and heavily tested\n- local storage clearing fixed except browser_ext_browsingData_localStorage.js\n- implemented cancellable datastore preparation to fix problems with CPOWs\n- removed tests for session only support\n- added checks for dom.storage.enabled pref and StorageAllowedForPrincipal()\n- added support for low disk space mode\n\nTests that are still temporarily disabled:\ntest_bug600307-DBOps.html\ntest_localStorageFromChrome.xhtml\nbrowser_ext_browsingData_localStorage.js\ntest_localStorageQuota.html\ntest_localStorageQuotaPrivateBrowsing_perwindowpb.html\ndom/tests/browser/browser_localStorage_e10s.js\n\nwhich results in this TODO list:\n- broadcast domstorage-test-flushed message\n- fix LocalStorage in chrome\n- enhance nsIQuotaManagerService::clearStoragesForPrincipal() to accept a quota client argument\n- finish quota checks\n- database migration", "author": "jvarga@mozilla.com", "id": 13052570, "time": "2018-02-19T14:54:11Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #41)\n> - fix LocalStorage in chrome\n\nfixed\n\n> - enhance nsIQuotaManagerService::clearStoragesForPrincipal() to accept a quota client argument\n\nfixed", "author": "jvarga@mozilla.com", "id": 13054280, "time": "2018-02-20T14:11:49Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #41)\n> - broadcast domstorage-test-flushed message\n\nfixed\n\n> - finish quota checks\n\norigin quota checks - done\nquota manager quota checks:\n- group limit - done\n- global limit - needs more work\n\nAll tests now pass except some devtools related ones that still use CPOWs\n\nYesterday asuth and I had a pre-review meeting to discuss current patches.\n\nThe new implementation is not fully complete (migration is still missing), but I'll start submitting patches for review following days.", "author": "jvarga@mozilla.com", "id": 13072470, "time": "2018-02-27T14:17:19Z"}, {"text": "Created attachment 8956397\nPart 1: Allow BackgroundChild::GetOrCreateForCurrentThread() to use a custom main event target\n\nAndrew, the new local storage implementation uses a nested event queue for synchronous blocking of the main thread in content processes. At the same time we dispatch to a DOM file thread that communicates with the parent process/PBackground thread asynchronously. The problem happens when GetOrCreateForCurrentThread() is called on the DOM file thread and a new runnable is dispatched to the main thread. The runnable connects the newly created PBackgroundChild with the parent process. However, the runnable never gets processed since we created a nested event queue on the main thread. This patch allows GetOrCreateForCurrentThread() to use a custom main event target, so we can pass our nested event queue.", "author": "jvarga@mozilla.com", "id": 13107593, "time": "2018-03-06T11:08:48Z"}, {"text": "Created attachment 8956398\nPart 2: Add IsOnDOMFileThread() and AssertIsOnDOMFileThread() generic helper methods", "author": "jvarga@mozilla.com", "id": 13107609, "time": "2018-03-06T11:14:43Z"}, {"text": "Created attachment 8956402\nPart 3: New basic (memory only) implementation of LocalStorage", "author": "jvarga@mozilla.com", "id": 13107661, "time": "2018-03-06T11:38:03Z"}, {"text": "Created attachment 8956437\nPart 3: New basic (memory only) implementation of LocalStorage\n\nSorry, attaching a new version, the previous patch doesn't build with latest m-c.", "author": "jvarga@mozilla.com", "id": 13107935, "time": "2018-03-06T13:57:58Z"}, {"text": "Created attachment 8956448\nPart 4: Basic integration with QuotaManager", "author": "jvarga@mozilla.com", "id": 13108125, "time": "2018-03-06T14:52:49Z"}, {"text": "Created attachment 8956477\nPart 5: More integration with QuotaManager", "author": "jvarga@mozilla.com", "id": 13108306, "time": "2018-03-06T15:46:58Z"}, {"text": "Created attachment 8956489\nPart 6: Fix a dead lock in the single process case", "author": "jvarga@mozilla.com", "id": 13108391, "time": "2018-03-06T16:15:31Z"}, {"text": "Created attachment 8956533\nPart 7: Teach QuotaManager's OriginParser to handle file://UNIVERSAL_FILE_URI_ORIGIN", "author": "jvarga@mozilla.com", "id": 13108768, "time": "2018-03-06T18:10:01Z"}, {"text": "Comment on attachment 8956397\nPart 1: Allow BackgroundChild::GetOrCreateForCurrentThread() to use a custom main event target\n\nReview of attachment 8956397:\n-----------------------------------------------------------------\n\nI don't know much about event targets but this looks reasonable.\n\n::: ipc/glue/BackgroundChild.h\n@@ +11,5 @@\n>  #include \"mozilla/Attributes.h\"\n>  #include \"mozilla/ipc/Transport.h\"\n>  \n>  class nsIDOMBlob;\n> +class nsIEvenTarget;\n\nnsIEventTarget\n\n::: ipc/glue/BackgroundImpl.cpp\n@@ +1460,2 @@\n>  {\n> +  MOZ_ASSERT_IF(NS_IsMainThread(), !aMainEventTarget);\n\nShould this assert also be on BlockAndGetResults()? That also does a dispatch of this new argument.", "author": "continuation@gmail.com", "id": 13109382, "time": "2018-03-06T21:23:44Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #52)\n\nThanks for quick review!\n\n> ::: ipc/glue/BackgroundImpl.cpp\n> @@ +1460,2 @@\n> >  {\n> > +  MOZ_ASSERT_IF(NS_IsMainThread(), !aMainEventTarget);\n> \n> Should this assert also be on BlockAndGetResults()? That also does a\n> dispatch of this new argument.\n\nYeah, but I think that method shouldn't be called on the main thread at all, I added |AssertIsNotOnMainThread()| there.", "author": "jvarga@mozilla.com", "id": 13110319, "time": "2018-03-07T07:31:19Z"}, {"text": "Created attachment 8956730\nPart 8: Persist datastores to disk", "author": "jvarga@mozilla.com", "id": 13110321, "time": "2018-03-07T07:32:22Z"}, {"text": "Created attachment 8956744\nPart 9: Support for private browsing", "author": "jvarga@mozilla.com", "id": 13110418, "time": "2018-03-07T09:03:36Z"}, {"text": "Created attachment 8956962\nPart 10: Support for storage events", "author": "jvarga@mozilla.com", "id": 13112197, "time": "2018-03-07T21:09:02Z"}, {"text": "What sort performance regressions should we expect from this?", "author": "mdaly@mozilla.com", "id": 13113111, "time": "2018-03-08T02:53:19Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #57)\n> What sort performance regressions should we expect from this?\n\nPage load time can be affected by this.\nIn theory, with all patches applied, especially the one that triggers preloading in ContentParent::AboutToLoadHttpFtpWyciwygDocumentForChild(), the synchronous waiting for I/O should happen less.\nStorage events are also distributed in a more efficient manner.\n\nAnyway, I'll have to do some talos testing.", "author": "jvarga@mozilla.com", "id": 13113247, "time": "2018-03-08T05:13:48Z"}, {"text": "Andrew, patches 1-10 implement most of the stuff and most of the tests pass.\nHere's latest try for pathes 1-10:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=6b0cd9168e2b8476f76c06fc66139814eaf5a478\n\nI'll be now attaching patches to fix the rest of tests and also patches with some improvements.\nI'll attach them one by one as I finish final cleanup and self-review.", "author": "jvarga@mozilla.com", "id": 13113250, "time": "2018-03-08T05:19:29Z"}, {"text": "Created attachment 8957058\nPart 11: Remove tests for session only mode", "author": "jvarga@mozilla.com", "id": 13113253, "time": "2018-03-08T05:20:49Z"}, {"text": "Created attachment 8957061\nPart 12: Honor the storage preference and cookie settings in all LocalStorage API methods", "author": "jvarga@mozilla.com", "id": 13113284, "time": "2018-03-08T06:04:50Z"}, {"text": "Created attachment 8957082\nPart 13: Add support for low disk space mode", "author": "jvarga@mozilla.com", "id": 13113456, "time": "2018-03-08T08:42:44Z"}, {"text": "Created attachment 8957111\nPart 14: Enhance clearStoragesForPrincipal() to support clearing of storages for specific quota client", "author": "jvarga@mozilla.com", "id": 13113628, "time": "2018-03-08T10:13:59Z"}, {"text": "Created attachment 8957112\nPart 15: Fix clearLocalStorage() in browser extensions", "author": "jvarga@mozilla.com", "id": 13113640, "time": "2018-03-08T10:23:03Z"}, {"text": "Created attachment 8957120\nPart 16: Adjust ForgetAboutSite.removeDataFromDomain() for new local storage implementation", "author": "jvarga@mozilla.com", "id": 13113762, "time": "2018-03-08T12:14:34Z"}, {"text": "Created attachment 8957126\nPart 17: Fix a test failing in --verify mode", "author": "jvarga@mozilla.com", "id": 13113792, "time": "2018-03-08T12:33:42Z"}, {"text": "Created attachment 8957133\nPart 18: Verify that data is persisted on disk", "author": "jvarga@mozilla.com", "id": 13113864, "time": "2018-03-08T13:16:44Z"}, {"text": "Created attachment 8957303\nPart 19: Implement a helper method for datastore preloading verification", "author": "jvarga@mozilla.com", "id": 13115131, "time": "2018-03-08T20:44:48Z"}, {"text": "Comment on attachment 8957303\nPart 19: Implement a helper method for datastore preloading verification\n\nReview of attachment 8957303:\n-----------------------------------------------------------------\n\nAndrew, I did only the minimum in browser_localStorage_e10s.js\nFeel free to suggest what needs to be changed/removed or you can even do it yourself if you have a bit of time.\nIt's your test and you know best what needs to be done :)", "author": "jvarga@mozilla.com", "id": 13115147, "time": "2018-03-08T20:50:01Z"}, {"text": "Created attachment 8957315\nPart 20: Add checks for the 5 MB origin limit", "author": "jvarga@mozilla.com", "id": 13115205, "time": "2018-03-08T21:11:39Z"}, {"text": "Comment on attachment 8957133\nPart 18: Verify that data is persisted on disk\n\nAndrea, the Storage.webidl changes need to be reviewed by a DOM peer. Can you take a look ?", "author": "jvarga@mozilla.com", "id": 13115221, "time": "2018-03-08T21:16:58Z"}, {"text": "Created attachment 8957324\nPart 21: Base domain needs to be handled too if strict file origin policy is not in effect\n\nBobby, the universal file origin was introduced in bug 1340710.\nThe base domain is currently not handled if strict file origin policy is not in effect which confuses quota manager.\nI noticed this problem when I was testing new local storage implementation, but I guess it could already cause (hidden) problems with IndexedDB too.", "author": "jvarga@mozilla.com", "id": 13115261, "time": "2018-03-08T21:32:18Z"}, {"text": "Comment on attachment 8957133\nPart 18: Verify that data is persisted on disk\n\nReview of attachment 8957133:\n-----------------------------------------------------------------\n\nr+ for the webidl. I leave all the rest to Andrew.", "author": "amarchesini@mozilla.com", "id": 13116115, "time": "2018-03-09T07:18:00Z"}, {"text": "Comment on attachment 8957324\nPart 21: Base domain needs to be handled too if strict file origin policy is not in effect\n\nReview of attachment 8957324:\n-----------------------------------------------------------------\n\nHm, why do we need this boolean on every codebase principal, rather than just querying dynamically? Is it to handle the pref changing mid-run? I don't think I really care to support that, so how about just checking GetStrictFileOriginPolicy directly in GetBaseDomain?", "author": "bobbyholley@gmail.com", "id": 13117962, "time": "2018-03-09T21:10:23Z"}, {"text": "(In reply to Bobby Holley (:bholley) from comment #74)\n> Comment on attachment 8957324\n> Part 21: Base domain needs to be handled too if strict file origin policy is\n> not in effect\n> \n> Review of attachment 8957324:\n> -----------------------------------------------------------------\n> \n> Hm, why do we need this boolean on every codebase principal, rather than\n> just querying dynamically? Is it to handle the pref changing mid-run? I\n> don't think I really care to support that, so how about just checking\n> GetStrictFileOriginPolicy directly in GetBaseDomain?\n\nYeah, that's what I did initially, but I got assertions on try, because some\ndoc group code gets the base domain before the pref for file\norigin policy changes and then gets it again and compares with the previous\nvalue after the pref changes.\nSo I think the only way is to snapshot the pref setting.", "author": "jvarga@mozilla.com", "id": 13118351, "time": "2018-03-09T23:40:27Z"}, {"text": "Here's the failing try:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=85ad51bbb284dcf2538b27a82a15867db8c4ed3f&selectedJob=164439785\nSee all the R7 and Ru7 failures.", "author": "jvarga@mozilla.com", "id": 13118356, "time": "2018-03-09T23:42:56Z"}, {"text": "Comment on attachment 8957324\nPart 21: Base domain needs to be handled too if strict file origin policy is not in effect\n\nReview of attachment 8957324:\n-----------------------------------------------------------------\n\nUgh, ok. Add a comment explaining why this is there, then?", "author": "bobbyholley@gmail.com", "id": 13118369, "time": "2018-03-09T23:58:01Z"}, {"text": "(In reply to Bobby Holley (:bholley) from comment #77)\n> Comment on attachment 8957324\n> Part 21: Base domain needs to be handled too if strict file origin policy is\n> not in effect\n> \n> Review of attachment 8957324:\n> -----------------------------------------------------------------\n> \n> Ugh, ok. Add a comment explaining why this is there, then?\n\nOk, will do. Thanks!", "author": "jvarga@mozilla.com", "id": 13118370, "time": "2018-03-09T23:59:19Z"}, {"text": "Created attachment 8958425\nPart 22: Add support for preloading of datastores", "author": "jvarga@mozilla.com", "id": 13124853, "time": "2018-03-13T13:15:52Z"}, {"text": "Created attachment 8958432\nPart 23: Fix GetOrCreateForCurrentThread() when the runnable for calling SendInitBackground() on the main thread was already dispatched, but the main thread then entered a nested event loop", "author": "jvarga@mozilla.com", "id": 13124904, "time": "2018-03-13T13:38:22Z"}, {"text": "Created attachment 8958445\nPart 24: A new exclusive directory lock shouldn't invalidate existing internal directory locks", "author": "jvarga@mozilla.com", "id": 13124974, "time": "2018-03-13T14:02:26Z"}, {"text": "Created attachment 8959654\nPart 25: Add checks for the group and global limit", "author": "jvarga@mozilla.com", "id": 13134469, "time": "2018-03-16T18:37:12Z"}, {"text": "Ok, the only patch that is not yet ready for review is data migration.\nIt should be ready in coming days.", "author": "jvarga@mozilla.com", "id": 13134484, "time": "2018-03-16T18:41:59Z"}, {"text": "Jan, I haven't had a chance to investigate this patchset, but will it add a concept of last-accessed timestamps to localStorages so that we can implement support for the \"since\" parameter of the browsingData extension API for clearing localStorages? If not, do you think it's worth adding it now to reduce the number of necessary data migrations down the line?", "author": "wisniewskit@gmail.com", "id": 13136477, "time": "2018-03-18T15:33:44Z"}, {"text": "Created attachment 8960540\ndata migration WIP", "author": "jvarga@mozilla.com", "id": 13142325, "time": "2018-03-20T12:59:38Z"}, {"text": "(In reply to Thomas Wisniewski from comment #84)\n> Jan, I haven't had a chance to investigate this patchset, but will it add a\n> concept of last-accessed timestamps to localStorages so that we can\n> implement support for the \"since\" parameter of the browsingData extension\n> API for clearing localStorages? If not, do you think it's worth adding it\n> now to reduce the number of necessary data migrations down the line?\n\nThere's a lastAccessTime column, but it's not used right now. I could add another patch that initializes it, but I wouldn't bet that it's enough for the feature you are talking about.", "author": "jvarga@mozilla.com", "id": 13144978, "time": "2018-03-21T10:24:09Z"}, {"text": "(In reply to Thomas Wisniewski from comment #84)\n> Jan, I haven't had a chance to investigate this patchset, but will it add a\n> concept of last-accessed timestamps to localStorages so that we can\n> implement support for the \"since\" parameter of the browsingData extension\n> API for clearing localStorages? If not, do you think it's worth adding it\n> now to reduce the number of necessary data migrations down the line?\n\nCan this be a feature we implement in a future release? It isn't necessarily related to this patch set.", "author": "mdaly@mozilla.com", "id": 13145853, "time": "2018-03-21T16:07:14Z"}, {"text": ">Can this be a feature we implement in a future release?\n\nOh I'm certainly not against that, and wouldn't expect the full feature to be implemented right now. I was just wondering if it was worth minimizing potential data-migrations (and starting to let the data be annotated in user profiles ahead of time), if it was trivial to extend this patch right now.\n\n>I could add another patch that initializes it, but I wouldn't bet that it's enough for the feature you are talking about.\n\nThat's fine, I just think it's worth giving it a shot since we know it will be necessary, and we want to implement the feature anyway. But if it's not trivial and will delay this patchset, then let's just skip it for now.", "author": "wisniewskit@gmail.com", "id": 13145977, "time": "2018-03-21T16:39:05Z"}, {"text": "Thomas, something you could be interesting in, is bug 1252998 where I'm introducing a new service able to store which principal has done storage operation. This is meant to be used for clear history, but probably it's fine for you too.\n\nThose patches are not landed because I don't have time to fix 1 test failure... but if you want to help, that would be great!", "author": "amarchesini@mozilla.com", "id": 13146414, "time": "2018-03-21T18:43:07Z"}, {"text": "Thanks baku, I'll see if I can scrounge up the time to help rebase that patchset and get it landed (but I'll be posting my XHR implementation patchset first).\n\nAnd with that bug in mind, I suppose it's not worth delaying this one, so I retract my request.", "author": "wisniewskit@gmail.com", "id": 13146481, "time": "2018-03-21T19:03:05Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #85)\n> Created attachment 8960540\n> data migration WIP\n\nSo, in the end I didn't implement a zip archive, I just move webappsstore.sqlite to <profile>/storage/ls-archive.sqlite and then lazily migrate data from it when it's needed. It works quite well. It's nice that SQLite supports transaction across multiple databases, so ensuring that stuff is done atomically is quite easy.\nI also believe that we don't have to do a major storage upgrade (only minor), so it won't affect users switching between release/beta/nightly.\nI'll attach a new patch once I finish final cleanup.\n\nI also have a patch that removes old local storage implementation, just to be sure that everything uses new implementation.", "author": "jvarga@mozilla.com", "id": 13149887, "time": "2018-03-22T21:22:35Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #91)\n> (In reply to Jan Varga [:janv] from comment #85)\n> > Created attachment 8960540\n> > data migration WIP\n> \n> So, in the end I didn't implement a zip archive, I just move\n> webappsstore.sqlite to <profile>/storage/ls-archive.sqlite and then lazily\n> migrate data from it when it's needed. It works quite well. It's nice that\n> SQLite supports transaction across multiple databases, so ensuring that\n> stuff is done atomically is quite easy.\n> I also believe that we don't have to do a major storage upgrade (only\n> minor), so it won't affect users switching between release/beta/nightly.\n> I'll attach a new patch once I finish final cleanup.\n> \n> I also have a patch that removes old local storage implementation, just to\n> be sure that everything uses new implementation.\n\nany performance implicates either positive or negative with this change in strategy?", "author": "mdaly@mozilla.com", "id": 13150420, "time": "2018-03-23T02:35:21Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #92)\n> (In reply to Jan Varga [:janv] from comment #91)\n> > (In reply to Jan Varga [:janv] from comment #85)\n> > > Created attachment 8960540\n> > > data migration WIP\n> > \n> > So, in the end I didn't implement a zip archive, I just move\n> > webappsstore.sqlite to <profile>/storage/ls-archive.sqlite and then lazily\n> > migrate data from it when it's needed. It works quite well. It's nice that\n> > SQLite supports transaction across multiple databases, so ensuring that\n> > stuff is done atomically is quite easy.\n> > I also believe that we don't have to do a major storage upgrade (only\n> > minor), so it won't affect users switching between release/beta/nightly.\n> > I'll attach a new patch once I finish final cleanup.\n> > \n> > I also have a patch that removes old local storage implementation, just to\n> > be sure that everything uses new implementation.\n> \n> any performance implicates either positive or negative with this change in\n> strategy?\n\nThe performance is much better since the old database is just moved during a minor\nstorage upgrade (done by quota manager after startup).\nThen, during a preload, old data is accessed using an index and inserted into new\nper origin database.\n\nThe downside of this approach is that the old database is kept around uncompressed.\nMy multi year app profile contains a 125 MB database with roughly 3000 unique origins.\n\nSo, performance should be much better overall, we just keep a bit more data in user's\nprofile.\n\nI have some ideas what to do with the old database long term. For example, we can try\nto shrink it by vacuuming when the app is idle or just remove the whole file if it's\nnot touched for 6 months (or so).", "author": "jvarga@mozilla.com", "id": 13150664, "time": "2018-03-23T07:40:38Z"}, {"text": "Per https://bugzilla.mozilla.org/show_bug.cgi?id=1373244#c30 it sounds like we're not going to have profile-per-channel in time for the landing of this, so we do need to be more concerned about \"profile from the future\" than I was hoping.  Setting needinfo on myself to explicitly address the migration logic in the context of this.\n\n:janv, please feel free to chime in with any thoughts too.\n\nAnd for context for others, our general plan for situations like this has been :bkelly's idea to do the following when we encounter \"from the future\" things:\n- Invoke a hook that can be used by system extensions to attempt to handle the data from the future and make it work in the current, downgraded version.\n- If there was no hook or the hook failed/gave up, wipe the data in question.\n\nIn the context of QuotaManager we'd expect the above to happen at a few possible granularity levels: profile-wide, origin-wide, QM-client-for-an-origin.\n\n\nA general issue is that in an ideal world, we'd need the hook mechanism and wipe mechanism in place for at least one release prior to landing anything that would make things look like they're from the future.  Although there's always uplifts...", "author": "bugmail@asutherland.org", "id": 13156728, "time": "2018-03-26T19:10:26Z"}, {"text": "Andrew, hopefully we won't have this problem with new local storage since I think a *minor* storage upgrade should be enough.\nSee comment 91.", "author": "jvarga@mozilla.com", "id": 13157012, "time": "2018-03-26T20:51:30Z"}, {"text": "Would this be prefed on or off in FF 61?", "author": "mdaly@mozilla.com", "id": 13164374, "time": "2018-03-28T18:39:27Z"}, {"text": "So I found performance regression on linux tp6_google. Obviously google.com uses LocalStorage and tp6_google on linux is very low number (the page loads very fast compared to other platforms), so any additional overhead is noticeable.\nI already optimized PBackgroundIDBDatabase creation, now there's only once actor per origin and per process (there use to be one per DOM global) and various other small optimizations. However, it seems it's still not enough.\nOriginally I wanted to do another optimization in a follow up bug, but due to the tp6_google regression on linux I changed my mind. I want to do what Andrew described in comment 8\n\n> ... consider coalescing the writes locally by tracking\n> dirty keys and flushing on a timer, much like we do in the database thread\n> already.\n\nI'll try to do a basic (lightweight) version of this, I just want to create a small per origin and content process cache that coalesces setItem/removeItem calls and flush changes to the parent process after let's say 100ms.", "author": "jvarga@mozilla.com", "id": 13166068, "time": "2018-03-29T09:52:02Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #96)\n> Would this be prefed on or off in FF 61?\n\nWe have roughly 5 weeks until m-c becomes FF 62, I think it's still feasible to have it enabled in FF 61.", "author": "jvarga@mozilla.com", "id": 13168549, "time": "2018-03-30T07:12:09Z"}, {"text": "Status?", "author": "mdaly@mozilla.com", "id": 13192399, "time": "2018-04-09T16:23:16Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #99)\n> Status?\n\nI implemented the micro cache on the content side and I also verified that all tests pass cross platform:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=d9412df3564c5db60e41d184090bb314c65bb288\n\nI also tested performance and it looks good:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=73348ff8d0338cc4261b2575e4891b39997a759d\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=try&newRevision=73348ff8d0338cc4261b2575e4891b39997a759d&framework=1&selectedTimeRange=172800\n\nHowever, the micro cache currently supports only \"full snapshots\", that is that all data is sent to the content process.\nI plan to implement lazy loading of data for micro cache if data is over 4K.\nSo that should be the last patch.\n\nI'm currently trying to solve a shutdown crash related to quota manager, once I fix it, I'll get back to the micro cache.", "author": "jvarga@mozilla.com", "id": 13192418, "time": "2018-04-09T16:31:33Z"}, {"text": ":jan will this be a pref?", "author": "mdaly@mozilla.com", "id": 13233147, "time": "2018-04-25T17:36:07Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #101)\n> :jan will this be a pref?\n\nYeah, I'm leaning towards to have a pref for this, but I have to investigate what to do with migrated data. We will need a new patch for that.", "author": "jvarga@mozilla.com", "id": 13233310, "time": "2018-04-25T18:26:27Z"}, {"text": "Can you create a bug for the pref then and add it as a dependency?", "author": "mdaly@mozilla.com", "id": 13234324, "time": "2018-04-26T04:14:17Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #103)\n> Can you create a bug for the pref then and add it as a dependency?\n\nExisting patches for new implementation depend on the fact that the old implementation is replaced with the new one. So I'm reworking stuff here in this bug to have a pref for new LS implementation.", "author": "jvarga@mozilla.com", "id": 13234491, "time": "2018-04-26T06:22:44Z"}, {"text": "status?", "author": "mdaly@mozilla.com", "id": 13260445, "time": "2018-05-07T19:33:41Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #105)\n> status?\n\nFinishing work on the shadow database writing, so the new LS implementation will write data changes to new per origin databases and also to the old one (webappstore.sqlite).", "author": "jvarga@mozilla.com", "id": 13260663, "time": "2018-05-07T20:47:03Z"}, {"text": "Created attachment 8979506\nPart 1: Allow BackgroundChild::GetOrCreateForCurrentThread() to use a custom main event target\n\nr=mccr8", "author": "jvarga@mozilla.com", "id": 13296350, "time": "2018-05-22T12:44:24Z"}, {"text": "Created attachment 8979507\nPart 2: Add IsOnDOMFileThread() and AssertIsOnDOMFileThread() generic helper methods", "author": "jvarga@mozilla.com", "id": 13296356, "time": "2018-05-22T12:45:37Z"}, {"text": "Created attachment 8979508\nPart 3: New basic (memory only) implementation of LocalStorage", "author": "jvarga@mozilla.com", "id": 13296361, "time": "2018-05-22T12:46:40Z"}, {"text": "Created attachment 8979510\nPart 4: Basic integration with QuotaManager", "author": "jvarga@mozilla.com", "id": 13296364, "time": "2018-05-22T12:47:27Z"}, {"text": "Created attachment 8979511\nPart 5: More integration with QuotaManager", "author": "jvarga@mozilla.com", "id": 13296366, "time": "2018-05-22T12:48:11Z"}, {"text": "Created attachment 8979512\nPart 6: Fix a dead lock in the single process case", "author": "jvarga@mozilla.com", "id": 13296369, "time": "2018-05-22T12:48:54Z"}, {"text": "Created attachment 8979513\nPart 7: Teach QuotaManager's OriginParser to handle file://UNIVERSAL_FILE_URI_ORIGIN", "author": "jvarga@mozilla.com", "id": 13296370, "time": "2018-05-22T12:49:34Z"}, {"text": "Created attachment 8979514\nPart 8: Persist datastores to disk", "author": "jvarga@mozilla.com", "id": 13296373, "time": "2018-05-22T12:50:19Z"}, {"text": "Created attachment 8979515\nPart 9: Support for private browsing", "author": "jvarga@mozilla.com", "id": 13296375, "time": "2018-05-22T12:50:59Z"}, {"text": "Created attachment 8979516\nPart 10: Support for storage events", "author": "jvarga@mozilla.com", "id": 13296378, "time": "2018-05-22T12:51:47Z"}, {"text": "Created attachment 8979519\nPart 11: Enable tests for session only mode (but only for the old local storage implementation)", "author": "jvarga@mozilla.com", "id": 13296386, "time": "2018-05-22T12:53:31Z"}, {"text": "Created attachment 8979520\nPart 12: Honor the storage preference and cookie settings in all LocalStorage API methods", "author": "jvarga@mozilla.com", "id": 13296392, "time": "2018-05-22T12:55:03Z"}, {"text": "Created attachment 8979521\nPart 13: Add support for low disk space mode", "author": "jvarga@mozilla.com", "id": 13296394, "time": "2018-05-22T12:55:54Z"}, {"text": "Created attachment 8979522\nPart 14: Enhance clearStoragesForPrincipal() to support clearing of storages for specific quota client", "author": "jvarga@mozilla.com", "id": 13296398, "time": "2018-05-22T12:56:45Z"}, {"text": "Created attachment 8979524\nPart 15: Fix clearLocalStorage() in browser extensions", "author": "jvarga@mozilla.com", "id": 13296402, "time": "2018-05-22T12:57:33Z"}, {"text": "Created attachment 8979525\nPart 16: Adjust ForgetAboutSite.removeDataFromDomain() for new local storage implementation", "author": "jvarga@mozilla.com", "id": 13296407, "time": "2018-05-22T12:58:38Z"}, {"text": "Created attachment 8979526\nPart 17: Fix a test failing in --verify mode", "author": "jvarga@mozilla.com", "id": 13296409, "time": "2018-05-22T12:59:17Z"}, {"text": "Created attachment 8979527\nPart 18: Verify that data is persisted on disk\n\nr=baku", "author": "jvarga@mozilla.com", "id": 13296417, "time": "2018-05-22T13:01:12Z"}, {"text": "Created attachment 8979528\nPart 19: Implement a helper method for datastore preloading verification", "author": "jvarga@mozilla.com", "id": 13296423, "time": "2018-05-22T13:02:58Z"}, {"text": "Created attachment 8979529\nPart 20: Add checks for the 5 MB origin limit", "author": "jvarga@mozilla.com", "id": 13296426, "time": "2018-05-22T13:03:42Z"}, {"text": "Created attachment 8979531\nPart 21: Base domain needs to be handled too if strict file origin policy is not in effect\n\nr=bholley", "author": "jvarga@mozilla.com", "id": 13296433, "time": "2018-05-22T13:05:39Z"}, {"text": "Created attachment 8979532\nPart 22: Add support for preloading of datastores", "author": "jvarga@mozilla.com", "id": 13296436, "time": "2018-05-22T13:06:42Z"}, {"text": "Created attachment 8979533\nPart 23: Fix GetOrCreateForCurrentThread() when the runnable for calling SendInitBackground() on the main thread was already dispatched, but the main thread then entered a nested event loop", "author": "jvarga@mozilla.com", "id": 13296438, "time": "2018-05-22T13:07:26Z"}, {"text": "Created attachment 8979534\nPart 24: A new exclusive directory lock shouldn't invalidate existing internal directory locks", "author": "jvarga@mozilla.com", "id": 13296443, "time": "2018-05-22T13:08:09Z"}, {"text": "Created attachment 8979535\nPart 25: Add checks for the group and global limit", "author": "jvarga@mozilla.com", "id": 13296445, "time": "2018-05-22T13:09:00Z"}, {"text": "Timeframe for bringing into nightly?", "author": "mdaly@mozilla.com", "id": 13299924, "time": "2018-05-23T16:30:57Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #132)\n> Timeframe for bringing into nightly?\n\nGiven the fact that we can land it preffed off, I think 2 weeks is realistic timeframe.", "author": "jvarga@mozilla.com", "id": 13299989, "time": "2018-05-23T16:53:35Z"}, {"text": "Created attachment 8980046\nPart 26: Implement a lazy data migration from old webappsstore.sqlite", "author": "jvarga@mozilla.com", "id": 13300337, "time": "2018-05-23T18:57:44Z"}, {"text": "Created attachment 8980048\nPart 27: Share database actors", "author": "jvarga@mozilla.com", "id": 13300345, "time": "2018-05-23T18:59:37Z"}, {"text": "Created attachment 8980070\nPart 28: Add more QuotaClient::IsShuttingDownOnBackgroundThread() and MayProceed() checks", "author": "jvarga@mozilla.com", "id": 13300459, "time": "2018-05-23T19:32:19Z"}, {"text": "Created attachment 8980537\nPart 29: Implement implicit snapshotting of databases", "author": "jvarga@mozilla.com", "id": 13363426, "time": "2018-05-25T10:16:13Z"}, {"text": "Created attachment 8980538\nPart 30: Preserve key order when sending items to a content process", "author": "jvarga@mozilla.com", "id": 13363429, "time": "2018-05-25T10:17:06Z"}, {"text": "Created attachment 8981412\nPart 31: Support for lazy loading of items", "author": "jvarga@mozilla.com", "id": 13370951, "time": "2018-05-29T13:03:56Z"}, {"text": "Ok, there are only two patches remaining, one for e10s testing of snapshotting and a patch for shadow database writing. Both are coming today/tomorrow, I just need to do final cleanup and testing of those patches.", "author": "jvarga@mozilla.com", "id": 13370963, "time": "2018-05-29T13:07:35Z"}, {"text": "Here's the latest plan for landing:\n\nWe will land a special patch for current m-c (FF 62) that updates quota manager to know about new quota client (quota client for local storage).\nNew implementation of local storage will land early in the FF 63 cycle (initially preffed off), just to have enough time for fixing possible regressions.\nWe have a pref for the new implementation, so we can switch to old implementation anytime we want, but still, it's better to have more time for fixing possible regressions (keep in mind that local storage is used by sites a lot).\nLanding a pre-patch in previous cycle will ensure that users which switch between nightly and beta will be able to use the same profile without any problems. This also covers users which switch between release and beta.\nIf we enable new implementation by defaut in FF 64, then users will be able to use the same profile with all 3 channels (nightly/beta/release).", "author": "jvarga@mozilla.com", "id": 13370989, "time": "2018-05-29T13:18:06Z"}, {"text": "Liz: Does that work for you?", "author": "mdaly@mozilla.com", "id": 13371025, "time": "2018-05-29T13:25:07Z"}, {"text": "That sounds good. I'd like to make sure we have QA set up to cover this as a feature for 63. Can you file a PI request?", "author": "lhenry@mozilla.com", "id": 13371983, "time": "2018-05-29T18:07:23Z"}, {"text": "(In reply to Liz Henry (:lizzard) (needinfo? me) from comment #143)\n> That sounds good. I'd like to make sure we have QA set up to cover this as a\n> feature for 63. Can you file a PI request?\n\nHappily, I'll file one, I need to learn how to do it anyway.", "author": "mdaly@mozilla.com", "id": 13372040, "time": "2018-05-29T18:26:57Z"}, {"text": "\n\n(In reply to Marion Daly [:mdaly] from comment #144)\n> (In reply to Liz Henry (:lizzard) (needinfo? me) from comment #143)\n> > That sounds good. I'd like to make sure we have QA set up to cover this as a\n> > feature for 63. Can you file a PI request?\n> \n> Happily, I'll file one, I need to learn how to do it anyway.\n\nThanks Marion. You can follow the below link and submit a PI Request. \nhttps://mana.mozilla.org/wiki/display/PI/PI+Request\n\nAlso, for any future reference, we track all the Milestones and Test Results in Trello.\n\nThank you!", "author": "tmaity@mozilla.com", "id": 13379129, "time": "2018-05-31T23:23:04Z"}, {"text": "Created attachment 8982508\nPart 31: Support for lazy loading of items\n\nBug fixes.", "author": "jvarga@mozilla.com", "id": 13380149, "time": "2018-06-01T13:07:10Z"}, {"text": "Created attachment 8982509\nPart 32: Add a test for snapshotting verification in multi-e10s setup", "author": "jvarga@mozilla.com", "id": 13380150, "time": "2018-06-01T13:08:14Z"}, {"text": "Created attachment 8982511\nPart 33: Restrict localStorage from being available on some pages", "author": "jvarga@mozilla.com", "id": 13380152, "time": "2018-06-01T13:09:13Z"}, {"text": "try:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=3640163c666208d149e8bd8b5b0154bf5751590c&selectedJob=181300055\n\nOne failure has been fixed by a new patch (part 33) and the other one by updating patch part 16.", "author": "jvarga@mozilla.com", "id": 13380160, "time": "2018-06-01T13:11:51Z"}, {"text": "(In reply to Tania Maity from comment #145)\n> \n> (In reply to Marion Daly [:mdaly] from comment #144)\n> > (In reply to Liz Henry (:lizzard) (needinfo? me) from comment #143)\n> > > That sounds good. I'd like to make sure we have QA set up to cover this as a\n> > > feature for 63. Can you file a PI request?\n> > \n> > Happily, I'll file one, I need to learn how to do it anyway.\n> \n> Thanks Marion. You can follow the below link and submit a PI Request. \n> https://mana.mozilla.org/wiki/display/PI/PI+Request\n> \n> Also, for any future reference, we track all the Milestones and Test Results\n> in Trello.\n> \n> Thank you!\n\nAlso adding the Trello card link for this:\nhttps://trello.com/c/RAxskkWh/543-next-generation-localstorage-domstorage-implementation#", "author": "tmaity@mozilla.com", "id": 13380548, "time": "2018-06-01T15:39:29Z"}, {"text": "Jan can you verify the pref we are using to turn this on/off?\n\nIs it dom.storage.enabled ?", "author": "mdaly@mozilla.com", "id": 13391705, "time": "2018-06-06T17:35:58Z"}, {"text": "(In reply to Marion Daly [:mdaly] from comment #151)\n> Jan can you verify the pref we are using to turn this on/off?\n> \n> Is it dom.storage.enabled ?\nThat's for LocalStorage in general.\n\nThe pref for new LS implementation is: dom.storage.next_gen", "author": "jvarga@mozilla.com", "id": 13391718, "time": "2018-06-06T17:41:07Z"}], "id": 1286798, "priority": "P2", "cc": ["amarchesini@mozilla.com", "bobbyholley@gmail.com", "bugmail@asutherland.org", "bugzilla@twinql.com", "continuation@gmail.com", "crimsteam@gmail.com", "dietrich@mozilla.com", "eoger@fastmail.com", "gkrizsanits@mozilla.com", "harshid@gmail.com", "honzab.moz@firemni.cz", "jf.dev@hotmail.com", "jgriffiths@mozilla.com", "jhofmann@mozilla.com", "johnp@gmx.de", "jryans@gmail.com", "krzysztof.glebowicz@gmail.com", "lhenry@mozilla.com", "mcastelluccio@mozilla.com", "mdaly@mozilla.com", "mrbkap@mozilla.com", "myk@mykzilla.org", "overholt@mozilla.com", "pascalc@gmail.com", "shawnjohnjr@gmail.com", "shes050117@gmail.com", "simon.mainey@gmail.com", "skywalker333@gmail.com", "stpeter@mozilla.com", "thesweetlilycake@gmail.com", "timbugzilla@gmail.com", "tmaity@mozilla.com", "Virtual@teknik.io", "vseerror@lehigh.edu", "wisniewskit@gmail.com", "wtds.trabalho@gmail.com"], "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1350071", "https://bugzilla.mozilla.org/show_bug.cgi?id=1362190", "https://bugzilla.mozilla.org/show_bug.cgi?id=1411908"], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [666724, 742822, 857888, 1294386, 1296572, 1318713, 1341070, 1350071, 1378716, 1400983, 1427234, 1207306], "qa_contact": "", "creation_time": "2016-07-14T10:29:02Z", "cf_status_firefox_esr52": "---", "component": "DOM", "assigned_to_detail": {"email": "jvarga@mozilla.com", "id": 8340, "name": "jvarga@mozilla.com", "real_name": "Jan Varga [:janv]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "jvarga@mozilla.com", "id": 8340, "name": "jvarga@mozilla.com", "real_name": "Jan Varga [:janv]"}, "whiteboard": "[e10s-multi:-]", "mentors": [], "summary": "[meta] Next-generation LocalStorage (DOMStorage) implementation", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"requestee": "bugmail@asutherland.org", "status": "?", "name": "needinfo", "modification_date": "2018-03-26T19:10:26Z", "type_id": 800, "creation_date": "2018-03-26T19:10:26Z", "id": 1734988, "setter": "bugmail@asutherland.org"}], "last_change_time": "2018-06-06T17:41:07Z", "assigned_to": "jvarga@mozilla.com", "is_open": true, "history": [{"changes": [{"removed": "", "field_name": "blocks", "added": "742822, 666724"}], "who": "jvarga@mozilla.com", "when": "2016-07-14T10:34:42Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1283609"}], "who": "jvarga@mozilla.com", "when": "2016-07-14T10:35:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "thesweetlilycake@gmail.com"}], "who": "thesweetlilycake@gmail.com", "when": "2016-07-14T14:08:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "overholt@mozilla.com"}], "who": "overholt@mozilla.com", "when": "2016-07-14T18:13:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gkrizsanits@mozilla.com"}, {"removed": "", "field_name": "blocks", "added": "1207306"}, {"removed": "", "field_name": "whiteboard", "added": "[e10s-multi:M?]"}], "who": "gkrizsanits@mozilla.com", "when": "2016-07-14T19:10:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jryans@gmail.com"}], "who": "jryans@gmail.com", "when": "2016-07-14T19:39:31Z"}, {"changes": [{"removed": "[e10s-multi:M?]", "field_name": "whiteboard", "added": "[e10s-multi:M1]"}], "who": "gkrizsanits@mozilla.com", "when": "2016-07-15T16:29:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "timbugzilla@gmail.com"}], "who": "timbugzilla@gmail.com", "when": "2016-07-17T03:05:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugmail@asutherland.org"}], "who": "bugmail@asutherland.org", "when": "2016-07-17T21:34:31Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "human.peng@gmail.com"}], "who": "human.peng@gmail.com", "when": "2016-07-17T23:08:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wtds.trabalho@gmail.com"}], "who": "wtds.trabalho@gmail.com", "when": "2016-07-18T02:42:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "honzab.moz@firemni.cz"}], "who": "honzab.moz@firemni.cz", "when": "2016-07-18T11:31:16Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "jvarga@mozilla.com"}], "who": "jvarga@mozilla.com", "when": "2016-07-19T10:52:35Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1294386"}], "who": "gkrizsanits@mozilla.com", "when": "2016-08-11T09:44:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rnewman@mozilla.com"}, {"removed": "", "field_name": "blocks", "added": "857888"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jvarga@mozilla.com)"}], "who": "bugzilla@twinql.com", "when": "2016-08-20T19:07:32Z"}, {"changes": [{"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2016-08-20T22:32:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "crimsteam@gmail.com"}], "who": "crimsteam@gmail.com", "when": "2016-08-20T22:41:15Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1296572"}], "who": "jvarga@mozilla.com", "when": "2016-08-26T08:21:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "harshid@gmail.com"}], "who": "harshid@gmail.com", "when": "2016-08-30T11:29:15Z"}, {"changes": [{"removed": "[e10s-multi:M1]", "field_name": "whiteboard", "added": "[e10s-multi:?]"}], "who": "gkrizsanits@mozilla.com", "when": "2016-09-07T08:45:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "johnp@gmx.de"}], "who": "johnp@gmx.de", "when": "2016-09-08T20:32:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mrbkap@mozilla.com"}, {"removed": "[e10s-multi:?]", "field_name": "whiteboard", "added": "[e10s-multi:M3]"}], "who": "mrbkap@mozilla.com", "when": "2016-09-13T16:18:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "vseerror@lehigh.edu"}], "who": "vseerror@lehigh.edu", "when": "2016-09-18T09:12:55Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jgriffiths@mozilla.com"}], "who": "jgriffiths@mozilla.com", "when": "2016-09-20T16:04:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "virtual@msgsafe.io"}], "who": "Virtual@teknik.io", "when": "2016-10-17T18:54:32Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "768074"}], "who": "jvarga@mozilla.com", "when": "2016-10-19T19:03:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mstange@themasta.com"}], "who": "mstange@themasta.com", "when": "2016-12-22T14:02:53Z"}, {"changes": [{"removed": "[e10s-multi:M3]", "field_name": "whiteboard", "added": "[e10s-multi:-]"}], "who": "mrbkap@mozilla.com", "when": "2017-03-07T17:44:34Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1350071"}], "who": "bugmail@asutherland.org", "when": "2017-03-23T21:08:02Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1362190"}], "who": "stomlinson@mozilla.com", "when": "2017-05-11T10:01:26Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1350071"}], "who": "overholt@mozilla.com", "when": "2017-05-17T13:47:44Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "meta"}, {"removed": "Next-generation DOMStorage implementation", "field_name": "summary", "added": "[meta] Next-generation DOMStorage implementation"}], "who": "overholt@mozilla.com", "when": "2017-08-11T13:42:25Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}], "who": "overholt@mozilla.com", "when": "2017-09-12T20:21:11Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1378716"}], "who": "bugmail@asutherland.org", "when": "2017-09-13T18:02:47Z"}, {"changes": [{"removed": "[meta] Next-generation DOMStorage implementation", "field_name": "summary", "added": "[meta] Next-generation LocalStorage (DOMStorage) implementation"}], "who": "bugmail@asutherland.org", "when": "2017-09-14T00:57:22Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jvarga@mozilla.com)"}], "who": "bugmail@asutherland.org", "when": "2017-09-14T16:54:50Z"}, {"changes": [{"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2017-09-15T11:37:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "simon.mainey@gmail.com"}], "who": "simon.mainey@gmail.com", "when": "2017-09-20T09:47:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jf.dev@hotmail.com"}], "who": "jf.dev@hotmail.com", "when": "2017-09-22T12:28:20Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1405270"}], "who": "jvarga@mozilla.com", "when": "2017-10-03T12:14:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2017-10-11T17:23:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dietrich@mozilla.com"}], "who": "dietrich@mozilla.com", "when": "2017-11-12T04:34:11Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1400983"}], "who": "overholt@mozilla.com", "when": "2017-11-14T15:36:09Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1318713"}], "who": "annevk@annevk.nl", "when": "2017-11-21T12:54:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rob@everhardt.nl"}], "who": "rob@everhardt.nl", "when": "2017-11-27T09:49:16Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8926885, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2017-12-05T13:58:17Z"}, {"changes": [{"field_name": "attachments.ispatch", "removed": "0", "attachment_id": 8934520, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2017-12-05T13:58:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ttung@mozilla.com"}], "who": "shes050117@gmail.com", "when": "2017-12-06T10:14:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "shuang@mozilla.com"}], "who": "shawnjohnjr@gmail.com", "when": "2017-12-15T15:15:55Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1427234"}], "who": "jhofmann@mozilla.com", "when": "2018-01-02T14:24:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jhofmann@mozilla.com"}], "who": "jhofmann@mozilla.com", "when": "2018-01-02T14:25:08Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8934520, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-09T13:57:07Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8934523, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-09T13:57:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8934525, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-09T13:58:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sendstufftokevin@gmail.com"}], "who": "sendstufftokevin@gmail.com", "when": "2018-01-24T21:57:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "eoger@fastmail.com"}], "who": "eoger@fastmail.com", "when": "2018-01-24T22:09:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mdaly@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jvarga@mozilla.com)"}], "who": "mdaly@mozilla.com", "when": "2018-01-29T20:07:07Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8926883, "added": "1"}, {"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2018-01-30T12:58:10Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8926884, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-30T12:59:09Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8941046, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-30T12:59:48Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8941047, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-30T13:00:34Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8941048, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-30T13:01:22Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8941049, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-01-30T13:01:56Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail@asutherland.org)"}], "who": "mdaly@mozilla.com", "when": "2018-02-06T14:50:47Z"}, {"changes": [{"removed": "P3", "field_name": "priority", "added": "P2"}], "who": "mdaly@mozilla.com", "when": "2018-02-07T04:00:42Z"}, {"changes": [{"removed": "needinfo?(bugmail@asutherland.org)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@asutherland.org", "when": "2018-02-13T21:10:28Z"}, {"changes": [{"removed": "rob@everhardt.nl", "field_name": "cc", "added": ""}], "who": "rob@everhardt.nl", "when": "2018-02-14T10:39:36Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1402254"}], "who": "jvarga@mozilla.com", "when": "2018-02-19T17:19:53Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946606, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:49:05Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946607, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:49:19Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946608, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:49:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946609, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:49:54Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946611, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:50:48Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946612, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:51:02Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946613, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:51:15Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8946614, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T10:51:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "continuation@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956397, "added": "review?(continuation@gmail.com)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T11:08:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956398, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T11:14:43Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956402, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T11:38:03Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956402, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956402, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956437, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T13:57:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956448, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T14:52:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956477, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T15:46:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956489, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T16:15:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956533, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-06T18:10:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(continuation@gmail.com)", "attachment_id": 8956397, "added": "review+"}], "who": "continuation@gmail.com", "when": "2018-03-06T21:23:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956730, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-07T07:32:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956744, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-07T09:03:36Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8956962, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-07T21:09:02Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1341070"}], "who": "mdaly@mozilla.com", "when": "2018-03-08T02:56:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957058, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T05:20:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957061, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T06:04:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957082, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T08:42:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957111, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T10:13:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957112, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T10:23:03Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957120, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T12:14:34Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957126, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T12:33:42Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957133, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T13:16:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "stpeter@mozilla.com"}], "who": "stpeter@mozilla.com", "when": "2018-03-08T15:30:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957303, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T20:44:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957315, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T21:11:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "amarchesini@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957133, "added": "review?(amarchesini@mozilla.com)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T21:16:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bobbyholley@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957324, "added": "review?(bobbyholley@gmail.com)"}], "who": "jvarga@mozilla.com", "when": "2018-03-08T21:32:18Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(amarchesini@mozilla.com)", "attachment_id": 8957133, "added": "review+"}], "who": "amarchesini@mozilla.com", "when": "2018-03-09T07:18:00Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1444414"}], "who": "mratcliffe@mozilla.com", "when": "2018-03-09T15:47:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8957324, "added": ""}], "who": "bobbyholley@gmail.com", "when": "2018-03-09T21:10:23Z"}, {"changes": [{"removed": "sendstufftokevin@gmail.com", "field_name": "cc", "added": ""}], "who": "sendstufftokevin@gmail.com", "when": "2018-03-09T21:11:37Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bobbyholley@gmail.com)"}], "who": "jvarga@mozilla.com", "when": "2018-03-09T23:40:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8957324, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2018-03-09T23:58:01Z"}, {"changes": [{"removed": "needinfo?(bobbyholley@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bobbyholley@gmail.com", "when": "2018-03-09T23:58:09Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8958425, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-13T13:15:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8958432, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-13T13:38:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8958445, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-13T14:02:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8959654, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-03-16T18:37:12Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1446037, 1446310"}], "who": "jvarga@mozilla.com", "when": "2018-03-18T13:30:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wisniewskit@gmail.com"}], "who": "wisniewskit@gmail.com", "when": "2018-03-18T15:33:44Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(wisniewskit@gmail.com)"}], "who": "amarchesini@mozilla.com", "when": "2018-03-21T18:43:07Z"}, {"changes": [{"removed": "needinfo?(wisniewskit@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "wisniewskit@gmail.com", "when": "2018-03-21T19:03:05Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail@asutherland.org)"}], "who": "bugmail@asutherland.org", "when": "2018-03-26T19:10:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "skywalker333@gmail.com"}], "who": "skywalker333@gmail.com", "when": "2018-03-30T23:18:31Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1411908"}], "who": "skywalker333@gmail.com", "when": "2018-03-31T00:45:19Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jvarga@mozilla.com)"}], "who": "mdaly@mozilla.com", "when": "2018-04-25T17:36:07Z"}, {"changes": [{"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2018-04-25T18:26:27Z"}, {"changes": [{"removed": "human.peng@gmail.com", "field_name": "cc", "added": ""}], "who": "human.peng@gmail.com", "when": "2018-04-26T06:23:54Z"}, {"changes": [{"removed": "mstange@themasta.com", "field_name": "cc", "added": ""}], "who": "mstange@themasta.com", "when": "2018-04-26T13:24:44Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956397, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979506, "added": "review+"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:44:24Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956398, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956398, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979507, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:45:37Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956437, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956437, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979508, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:46:40Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956448, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956448, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979510, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:47:27Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956477, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956477, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979511, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:48:11Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956489, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956489, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979512, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:48:54Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956533, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956533, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979513, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:49:34Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956730, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956730, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979514, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:50:19Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956744, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956744, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979515, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:50:59Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8956962, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8956962, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979516, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:51:47Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957058, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957058, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979519, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:53:31Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957061, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957061, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979520, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:55:03Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957082, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957082, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979521, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:55:54Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957111, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957111, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979522, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:56:45Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957112, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957112, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979524, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:57:33Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957120, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957120, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979525, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:58:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957126, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957126, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979526, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T12:59:17Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957133, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957133, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979527, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:01:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979527, "added": "review+"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:01:30Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957303, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957303, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979528, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:02:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979529, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:03:42Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957315, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8957315, "added": ""}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:04:00Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8957324, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979531, "added": "review+"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:05:39Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8958425, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8958425, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979532, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:06:42Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8958432, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8958432, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979533, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:07:26Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8958445, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8958445, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979534, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:08:09Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8959654, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8959654, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8979535, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:09:00Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8772366, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:09:22Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8960540, "added": "1"}], "who": "jvarga@mozilla.com", "when": "2018-05-22T13:09:35Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jvarga@mozilla.com)"}], "who": "mdaly@mozilla.com", "when": "2018-05-23T16:30:57Z"}, {"changes": [{"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2018-05-23T16:53:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8980046, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-23T18:57:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8980048, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-23T18:59:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8980070, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-23T19:32:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "lhenry@mozilla.com"}], "who": "lhenry@mozilla.com", "when": "2018-05-24T20:18:55Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "pascalc@gmail.com"}], "who": "pascalc@gmail.com", "when": "2018-05-24T21:53:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8980537, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-25T10:16:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8980538, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-25T10:17:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8981412, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-05-29T13:03:56Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(lhenry@mozilla.com)"}], "who": "mdaly@mozilla.com", "when": "2018-05-29T13:25:07Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mdaly@mozilla.com), needinfo?(jvarga@mozilla.com)"}], "who": "lhenry@mozilla.com", "when": "2018-05-29T18:07:23Z"}, {"changes": [{"removed": "needinfo?(mdaly@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mdaly@mozilla.com", "when": "2018-05-29T18:26:57Z"}, {"changes": [{"removed": "needinfo?(lhenry@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "lhenry@mozilla.com", "when": "2018-05-30T15:16:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "myk@mykzilla.org"}], "who": "myk@mykzilla.org", "when": "2018-05-31T15:08:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tmaity@mozilla.com"}], "who": "tmaity@mozilla.com", "when": "2018-05-31T23:23:04Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8981412, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(bugmail@asutherland.org)", "attachment_id": 8981412, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8982508, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-06-01T13:07:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8982509, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-06-01T13:08:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8982511, "added": "review?(bugmail@asutherland.org)"}], "who": "jvarga@mozilla.com", "when": "2018-06-01T13:09:13Z"}, {"changes": [{"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2018-06-01T13:11:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "krzysztof.glebowicz@gmail.com"}], "who": "krzysztof.glebowicz@gmail.com", "when": "2018-06-06T10:34:48Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jvarga@mozilla.com)"}], "who": "mdaly@mozilla.com", "when": "2018-06-06T17:35:58Z"}, {"changes": [{"removed": "needinfo?(jvarga@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jvarga@mozilla.com", "when": "2018-06-06T17:41:07Z"}], "resolution": "", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}