{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-05-27T18:02:00Z", "type_id": 4, "creation_date": "2015-05-26T23:01:21Z", "id": 1175406, "setter": "botond@mozilla.com"}], "content_type": "text/plain", "id": 8610873}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-05-27T18:06:45Z", "type_id": 4, "creation_date": "2015-05-26T23:02:32Z", "id": 1175408, "setter": "botond@mozilla.com"}], "content_type": "text/plain", "id": 8610875}, {"creator": "tnikkel@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8610876}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-05-29T16:06:33Z", "type_id": 4, "creation_date": "2015-05-29T09:47:37Z", "id": 1178286, "setter": "botond@mozilla.com"}], "content_type": "text/plain", "id": 8612773}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-05-29T16:11:23Z", "type_id": 4, "creation_date": "2015-05-29T09:53:12Z", "id": 1178291, "setter": "botond@mozilla.com"}], "content_type": "text/plain", "id": 8612777}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-05-29T17:12:47Z", "type_id": 4, "creation_date": "2015-05-29T09:55:54Z", "id": 1178293, "setter": "botond@mozilla.com"}], "content_type": "text/plain", "id": 8612778}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-05-29T22:42:20Z", "type_id": 4, "creation_date": "2015-05-29T22:38:01Z", "id": 1178910, "setter": "botond@mozilla.com"}], "content_type": "text/plain", "id": 8613141}], "classification": "Components", "creator": "tnikkel@gmail.com", "cc": ["botond@mozilla.com", "bugmail@mozilla.staktrace.com"], "depends_on": [1364440, 1364443, 1172310, 1173108, 1180899], "creation_time": "2015-05-26T22:58:58Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "if the layer we hit doesn't have an apzc (and no ancestor does either) search the tree for the root apzc with the same layers id", "id": 1168630, "assigned_to_detail": {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "tnikkel@gmail.com", "comment_count": 24, "comments": [{"text": "", "author": "tnikkel@gmail.com", "id": 10312618, "time": "2015-05-26T22:58:58Z"}, {"text": "Created attachment 8610873\nPart 1. Add layers id to hit test nodes", "author": "tnikkel@gmail.com", "id": 10312641, "time": "2015-05-26T23:01:21Z"}, {"text": "Created attachment 8610875\nPart 2. only look for an azpc with the same layers id\n\nThis is a slight change of behaviour, but should be the correct thing to do I think.", "author": "tnikkel@gmail.com", "id": 10312649, "time": "2015-05-26T23:02:32Z"}, {"text": "Created attachment 8610876\nSearch the tree for an apzc with the right layers id", "author": "tnikkel@gmail.com", "id": 10312654, "time": "2015-05-26T23:03:19Z"}, {"text": "Comment on attachment 8610873\nPart 1. Add layers id to hit test nodes\n\nReview of attachment 8610873:\n-----------------------------------------------------------------\n\n::: gfx/layers/apz/src/HitTestingTreeNode.cpp\n@@ +237,5 @@\n>      mPrevSibling->Dump(aPrefix);\n>    }\n>    printf_stderr(\"%sHitTestingTreeNode (%p) APZC (%p) g=(%s) %s%sr=(%s) t=(%s) c=(%s)\\n\",\n> +    aPrefix, this, mApzc.get(),\n> +    mApzc ? Stringify(mApzc->GetGuid()).c_str() : nsPrintfCString(\"l=%llu\", mLayersId).get(),\n\nUse |\"l=%\" PRIu64, ...| instead of |\"l=%llu\", ...| for better cross-platform compat", "author": "bugmail@mozilla.staktrace.com", "id": 10314888, "time": "2015-05-27T12:34:09Z"}, {"text": "Comment on attachment 8610876\nSearch the tree for an apzc with the right layers id\n\nReview of attachment 8610876:\n-----------------------------------------------------------------\n\nThanks for splitting the patches so cleanly! Makes it easy to read :)\n\n::: gfx/layers/apz/src/APZCTreeManager.cpp\n@@ +1451,5 @@\n>    return nullptr;\n>  }\n>  \n> +AsyncPanZoomController*\n> +APZCTreeManager::FindRootAzpcForLayersId(uint64_t aLayersId) const\n\ns/Azpc/Apzc/\n\n@@ +1464,5 @@\n> +    queue.RemoveElementAt(0);\n> +\n> +    AsyncPanZoomController* apzc = node->GetApzc();\n> +    if (apzc && apzc->GetLayersId() == aLayersId) {\n> +      return GetRootAPZCForLayersId(apzc);\n\nI'm fairly sure that the first APZC you encounter for the layers id will be root one, so you don't need to call GetRootAPZCForLayersId here. (That would be true even if you did a recursive DFS search instead of BFS). I may have missed something though.\n\n@@ +1714,5 @@\n> +APZCTreeManager::GetRootAPZCForLayersId(AsyncPanZoomController* aApzc) const\n> +{\n> +  AsyncPanZoomController* apzc = aApzc;\n> +  while (apzc && !apzc->IsRootForLayersId()) {\n> +    apzc = apzc->GetParent();\n\nThe function above this (RootAPZCForLayersId) is identical except for the locking/refptr stuff, you could trivially refactor it to use this function as a helper (assuming you end up keeping this function).", "author": "bugmail@mozilla.staktrace.com", "id": 10314907, "time": "2015-05-27T12:42:31Z"}, {"text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #5)\n> I'm fairly sure that the first APZC you encounter for the layers id will be\n> root one, so you don't need to call GetRootAPZCForLayersId here. (That would\n> be true even if you did a recursive DFS search instead of BFS). I may have\n> missed something though.\n\nI think if we have a scrollable element inside a fixed element that is on top of the page we could encounter that first. Hmm, but would that apzc have the root apzc as it's parent? We use scrollparent id's to determine the parent apzc? Then that should work I think, the fixed content should have the root as it's scrollparent due to how display list building works and how we set scrollparent ids.", "author": "tnikkel@gmail.com", "id": 10315821, "time": "2015-05-27T16:24:45Z"}, {"text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #4)\n> Comment on attachment 8610873\n> Add layers id to hit test nodes\n> \n> Review of attachment 8610873:\n> -----------------------------------------------------------------\n> \n> ::: gfx/layers/apz/src/HitTestingTreeNode.cpp\n> @@ +237,5 @@\n> >      mPrevSibling->Dump(aPrefix);\n> >    }\n> >    printf_stderr(\"%sHitTestingTreeNode (%p) APZC (%p) g=(%s) %s%sr=(%s) t=(%s) c=(%s)\\n\",\n> > +    aPrefix, this, mApzc.get(),\n> > +    mApzc ? Stringify(mApzc->GetGuid()).c_str() : nsPrintfCString(\"l=%llu\", mLayersId).get(),\n> \n> Use |\"l=%\" PRIu64, ...| instead of |\"l=%llu\", ...| for better cross-platform\n> compat\n\nIf we do this, we might as well make a corresponding change to AppendToString(stringstream, ScrollableLayerGuid) in LayersLogging.cpp for consistency.\n\n(The compiler doesn't enforce this because we were thus far unable to add MOZ_FORMAT_PRINTF to nsPrintfCString, see bug 1060419).", "author": "botond@mozilla.com", "id": 10316395, "time": "2015-05-27T18:03:30Z"}, {"text": "(In reply to Timothy Nikkel (:tn) from comment #6)\n> (In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #5)\n> > I'm fairly sure that the first APZC you encounter for the layers id will be\n> > root one, so you don't need to call GetRootAPZCForLayersId here. (That would\n> > be true even if you did a recursive DFS search instead of BFS). I may have\n> > missed something though.\n> \n> I think if we have a scrollable element inside a fixed element that is on\n> top of the page we could encounter that first. Hmm, but would that apzc have\n> the root apzc as it's parent? We use scrollparent id's to determine the\n> parent apzc? Then that should work I think, the fixed content should have\n> the root as it's scrollparent due to how display list building works and how\n> we set scrollparent ids.\n\nWe do not use scroll parent ids for determining the APZC tree structure - it's determined solely by the layer structure.\n\nThe scroll parent id is only used for building the overscroll handoff chain.", "author": "botond@mozilla.com", "id": 10316435, "time": "2015-05-27T18:11:38Z"}, {"text": "Comment on attachment 8610876\nSearch the tree for an apzc with the right layers id\n\nReview of attachment 8610876:\n-----------------------------------------------------------------\n\nDropping review until we clear up the \"finding the root APZC for a layers id\" bit.\n\n::: gfx/layers/apz/src/APZCTreeManager.cpp\n@@ +1456,5 @@\n> +{\n> +  if (!mRootNode) {\n> +    return nullptr;\n> +  }\n> +  nsTArray<HitTestingTreeNode*> queue;\n\nWould it be more appropriate to use a container with (amortized) constant-time removal at the front, like std::deque?\n\n@@ +1458,5 @@\n> +    return nullptr;\n> +  }\n> +  nsTArray<HitTestingTreeNode*> queue;\n> +  queue.AppendElement(mRootNode);\n> +  while (queue.Length()) {\n\nnit: I prefer !queue.IsEmpty() for things like this.\n\n@@ +1464,5 @@\n> +    queue.RemoveElementAt(0);\n> +\n> +    AsyncPanZoomController* apzc = node->GetApzc();\n> +    if (apzc && apzc->GetLayersId() == aLayersId) {\n> +      return GetRootAPZCForLayersId(apzc);\n\nSo based on comment 6 and comment 8, just returning 'apzc' here isn't sufficient.\n\nHowever, walking up the the APZC tree from 'apzc' doesn't help either, because in the situation described in comment 6, the root APZC for the layers id would be a sibling of 'apzc', not an ancestor.\n\nDo we have enough information in the layer tree structure to be able to find the root APZC for a layers id in general? Do we need to start looking at scroll parent ids?\n\n@@ +1468,5 @@\n> +      return GetRootAPZCForLayersId(apzc);\n> +    }\n> +\n> +    HitTestingTreeNode* child = node->GetLastChild();\n> +    while (child) {\n\nnit: I think a for loop would read better.", "author": "botond@mozilla.com", "id": 10316540, "time": "2015-05-27T18:28:58Z"}, {"text": "(In reply to Botond Ballo [:botond] from comment #9)\n> So based on comment 6 and comment 8, just returning 'apzc' here isn't\n> sufficient.\n> \n> However, walking up the the APZC tree from 'apzc' doesn't help either,\n> because in the situation described in comment 6, the root APZC for the\n> layers id would be a sibling of 'apzc', not an ancestor.\n> \n> Do we have enough information in the layer tree structure to be able to find\n> the root APZC for a layers id in general? Do we need to start looking at\n> scroll parent ids?\n\nLooking at scroll parent ids relies on the scroll parent working the same way it currently does for out of flow items like fixed position (ie the scroll parent of scroll frames inside fixed pos content will be the root scroll frame). This is quirky, and not necessarily the right way to do things, so we might want to change it in the future. So it might be best to avoid using scroll parent ids.\n\nThe only other way I can think of is to tag frame metrics with a flag that says \"this frame metrics is for the rootscrollframe/rootelement of the root document in its process\". Does that seem like a reasonable plan?\n\nSo this also means that AsyncPanZoomController::IsRootForLayersId is not really correct, and we should look at it's users and adjust them if necessary.", "author": "tnikkel@gmail.com", "id": 10319903, "time": "2015-05-28T04:40:38Z"}, {"text": "(In reply to Timothy Nikkel (:tn) from comment #10)\n> The only other way I can think of is to tag frame metrics with a flag that\n> says \"this frame metrics is for the rootscrollframe/rootelement of the root\n> document in its process\". Does that seem like a reasonable plan?\n\nIn the terminology of bug 1158424, this basically means storing mIsProcessRoot after all (except now we know it should be called something like mIsLayersIdRoot rather than mIsProcessRoot). Seems reasonable to me in the absence of a better idea.\n\n> So this also means that AsyncPanZoomController::IsRootForLayersId is not\n> really correct, and we should look at it's users and adjust them if\n> necessary.\n\nYup. I basically say as much in bug 1158424 comment 9.", "author": "botond@mozilla.com", "id": 10319946, "time": "2015-05-28T05:12:00Z"}, {"text": "Sounds reasonable to me as well. With all the stuff being added to FrameMetrics we should probably up the priority of bug 1066763, but that's a separate issue.", "author": "bugmail@mozilla.staktrace.com", "id": 10321825, "time": "2015-05-28T15:16:24Z"}, {"text": "Created attachment 8612773\nPart 3. Add IsLayersIdRoot to frame metrics", "author": "tnikkel@gmail.com", "id": 10325451, "time": "2015-05-29T09:47:37Z"}, {"text": "Created attachment 8612777\nPart 4. rename AsyncPanZoomController::IsRootForLayersId\n\nI just want the shortest path to my goal in this bug, so I'm just going to rename AsyncPanZoomController::IsRootForLayersId so it is out of the way (and I can use the name in the next patch). I'll save the cleanup of this function for another bug.", "author": "tnikkel@gmail.com", "id": 10325461, "time": "2015-05-29T09:53:12Z"}, {"text": "Created attachment 8612778\nPart 5. Search the tree for an apzc with the right layers id that is root\n\nI applied the review comments from comment 9 and comment 5 (some of them from comment 5 no longer apply since that code does not exist in this patch).\n\nDo I need to enter the monitor here? It's not going to cause any deadlock with other held locks? I'm not clear on the locking needs and ordering, so give that extra scrutiny.", "author": "tnikkel@gmail.com", "id": 10325465, "time": "2015-05-29T09:55:54Z"}, {"text": "Comment on attachment 8612777\nPart 4. rename AsyncPanZoomController::IsRootForLayersId\n\nReview of attachment 8612777:\n-----------------------------------------------------------------\n\n(In reply to Timothy Nikkel (:tn) from comment #14)\n> I just want the shortest path to my goal in this bug, so I'm just going to\n> rename AsyncPanZoomController::IsRootForLayersId so it is out of the way\n> (and I can use the name in the next patch). I'll save the cleanup of this\n> function for another bug.\n\nSounds good - I'll do the cleanup in bug 1158424.", "author": "botond@mozilla.com", "id": 10326745, "time": "2015-05-29T16:11:23Z"}, {"text": "Comment on attachment 8612778\nPart 5. Search the tree for an apzc with the right layers id that is root\n\nReview of attachment 8612778:\n-----------------------------------------------------------------\n\n(In reply to Timothy Nikkel (:tn) from comment #15)\n> Do I need to enter the monitor here? It's not going to cause any deadlock\n> with other held locks? I'm not clear on the locking needs and ordering, so\n> give that extra scrutiny.\n\nmTreeLock should be held while running FindRootApzcForLayersId(). The only current caller, GetAPZCAtPoint(), is already holding it, but let's add 'mTreeLock.AssertCurrentThreadOwns()' at the top of FindRootApzcForLayersId() for the benefit of possible future callers.", "author": "botond@mozilla.com", "id": 10327073, "time": "2015-05-29T17:12:47Z"}, {"text": "(In reply to Botond Ballo [:botond] from comment #17)\n> (In reply to Timothy Nikkel (:tn) from comment #15)\n> > Do I need to enter the monitor here? It's not going to cause any deadlock\n> > with other held locks? I'm not clear on the locking needs and ordering, so\n> > give that extra scrutiny.\n> \n> mTreeLock should be held while running FindRootApzcForLayersId(). The only\n> current caller, GetAPZCAtPoint(), is already holding it, but let's add\n> 'mTreeLock.AssertCurrentThreadOwns()' at the top of\n> FindRootApzcForLayersId() for the benefit of possible future callers.\n\nThrough an IRC discussion I realized that you were actually asking about acquiring AsyncPanZoomController::mMonitor in IsRootForLayersId().\n\nSummarizing: it's safe to do so (it obeys the lock ordering described at the top of APZCTreeManager.h), and you should do it because mMonitor is described as protecting mFrameMetrics among other things.", "author": "botond@mozilla.com", "id": 10327184, "time": "2015-05-29T17:33:42Z"}, {"text": "Created attachment 8613141\nPart 6. Modify the test for bug 1119497\n\nThis test triggers the assert in GetAPZCAtPoint about not returning a null azpc. Because we hit a layer with no apzc, and no apzc on any ancestor layer.\n\nSo add a root apzc to the root layer (because that is more like what we have in practice), and then change the test to expect to get this root apzc. The test is intending to test that we don't get the apzc on the other child layer (that is covered by the layer with no apzc) so we are still testing what the test intends to test.", "author": "tnikkel@gmail.com", "id": 10328463, "time": "2015-05-29T22:38:01Z"}, {"text": "Comment on attachment 8613141\nPart 6. Modify the test for bug 1119497\n\nReview of attachment 8613141:\n-----------------------------------------------------------------\n\n::: gfx/tests/gtest/TestAsyncPanZoomController.cpp\n@@ +1893,5 @@\n>    static void SetScrollableFrameMetrics(Layer* aLayer, FrameMetrics::ViewID aScrollId,\n>                                          CSSRect aScrollableRect = CSSRect(-1, -1, -1, -1)) {\n>      FrameMetrics metrics;\n>      metrics.SetScrollId(aScrollId);\n> +    // By convention START_SCROLL_ID is the root, so mark it as such.\n\nPlease mention that this convention applies to this test file only, not to production code, lest someone reading this gets the wrong the idea.\n\n@@ +2837,5 @@\n>      // LayerID                     0 12\n> +    // 0 is the root and has an APZC\n> +    // 1 is behind 2 and has an APZC\n> +    // 2 entirely covers 1 and should take all the input events, but has no APZC\n> +    // so hits to 2 should goto to the route APZC\n\n\"go to the root\"", "author": "botond@mozilla.com", "id": 10328482, "time": "2015-05-29T22:42:20Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=b102cdc91601", "author": "tnikkel@gmail.com", "id": 10329668, "time": "2015-05-31T05:49:07Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/b63dd7e56dc6\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bab9b38fcc1a\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/b04610020a55\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/44a885179fc3\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/1f0fdd3b4007\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/098390cdba51", "author": "pulsebot@bots.tld", "id": 10329972, "time": "2015-05-31T19:46:03Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/b63dd7e56dc6\nhttps://hg.mozilla.org/mozilla-central/rev/bab9b38fcc1a\nhttps://hg.mozilla.org/mozilla-central/rev/b04610020a55\nhttps://hg.mozilla.org/mozilla-central/rev/44a885179fc3\nhttps://hg.mozilla.org/mozilla-central/rev/1f0fdd3b4007\nhttps://hg.mozilla.org/mozilla-central/rev/098390cdba51", "author": "cbook@mozilla.com", "id": 10331370, "time": "2015-06-01T13:34:08Z"}], "cf_last_resolved": "2015-06-01T13:34:08Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2017-05-16T08:43:42Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1158424, 1166326], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Panning and Zooming", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox41": "fixed", "target_milestone": "mozilla41", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "botond@mozilla.com", "id": 474533, "name": "botond@mozilla.com", "real_name": "Botond Ballo [:botond]"}, {"email": "bugmail@mozilla.staktrace.com", "id": 426788, "name": "bugmail@mozilla.staktrace.com", "real_name": "Kartikaya Gupta (email:kats@mozilla.com)"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "botond@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8610873, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-26T23:01:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8610875, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-26T23:02:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8610876, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-26T23:03:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugmail.mozilla@staktrace.com"}], "who": "bugmail@mozilla.staktrace.com", "when": "2015-05-27T17:32:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8610873, "added": "review+"}], "who": "botond@mozilla.com", "when": "2015-05-27T18:02:00Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8610875, "added": "review+"}], "who": "botond@mozilla.com", "when": "2015-05-27T18:06:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8610876, "added": ""}], "who": "botond@mozilla.com", "when": "2015-05-27T18:28:58Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail.mozilla@staktrace.com), needinfo?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-28T04:40:38Z"}, {"changes": [{"removed": "needinfo?(botond@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "botond@mozilla.com", "when": "2015-05-28T05:12:00Z"}, {"changes": [{"removed": "needinfo?(bugmail.mozilla@staktrace.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2015-05-28T15:16:24Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8612773, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:47:37Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Add layers id to hit test nodes", "attachment_id": 8610873, "added": "Part 1. Add layers id to hit test nodes"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:48:07Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8610876, "added": "1"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:48:15Z"}, {"changes": [{"field_name": "attachments.description", "removed": "only look for an azpc with the same layers id", "attachment_id": 8610875, "added": "Part 2. only look for an azpc with the same layers id"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:49:05Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Add IsLayersIdRoot to frame metrics", "attachment_id": 8612773, "added": "Part 3. Add IsLayersIdRoot to frame metrics"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:49:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8612777, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:53:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8612778, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T09:55:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8612773, "added": "review+"}], "who": "botond@mozilla.com", "when": "2015-05-29T16:06:33Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1158424"}], "who": "botond@mozilla.com", "when": "2015-05-29T16:08:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8612777, "added": "review+"}], "who": "botond@mozilla.com", "when": "2015-05-29T16:11:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8612778, "added": "review+"}], "who": "botond@mozilla.com", "when": "2015-05-29T17:12:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8613141, "added": "review?(botond@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2015-05-29T22:38:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8613141, "added": "review+"}], "who": "botond@mozilla.com", "when": "2015-05-29T22:42:20Z"}, {"changes": [{"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla41"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-06-01 06:34:08"}, {"removed": "---", "field_name": "cf_status_firefox41", "added": "fixed"}, {"removed": "NEW", "field_name": "status", "added": "RESOLVED"}], "who": "cbook@mozilla.com", "when": "2015-06-01T13:34:08Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1172310"}], "who": "tnikkel@gmail.com", "when": "2015-06-08T18:14:14Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1173108"}], "who": "bugmail@mozilla.staktrace.com", "when": "2015-06-09T20:38:44Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1180899"}], "who": "anygregor@gmail.com", "when": "2015-07-06T20:48:13Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1364440"}], "who": "alice0775@yahoo.co.jp", "when": "2017-05-16T07:42:31Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1364443"}], "who": "alice0775@yahoo.co.jp", "when": "2017-05-16T08:43:42Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}