{"cf_tracking_thunderbird_esr52": "---", "status": "VERIFIED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "cpeterson@mozilla.com", "mentors_detail": [], "depends_on": [], "cf_status_firefox_esr60": "disabled", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "cc_detail": [{"email": "daniel@haxx.se", "id": 16743, "name": "daniel@haxx.se", "real_name": "Daniel Stenberg [:bagder]"}, {"email": "dirkjan@ochtman.nl", "id": 110217, "name": "dirkjan@ochtman.nl", "real_name": "Dirkjan Ochtman (:djc)"}, {"email": "drno@ohlmeier.org", "id": 489581, "name": "drno@ohlmeier.org", "real_name": "Nils Ohlmeier [:drno]"}, {"email": "george.craciun@softvision.ro", "id": 616174, "name": "george.craciun@softvision.ro", "real_name": "Cristian Craciun"}, {"email": "hurley@mozilla.com", "id": 408661, "name": "hurley@mozilla.com", "real_name": "Nicholas Hurley [:nwgh][:hurley]"}, {"email": "mcmanus@ducksong.com", "id": 32546, "name": "mcmanus@ducksong.com", "real_name": "Patrick McManus [:mcmanus]"}, {"email": "michal.novotny@gmail.com", "id": 268625, "name": "michal.novotny@gmail.com", "real_name": "Michal Novotny (:michal)"}, {"email": "mozilla@jens-hausdorf.de", "id": 599880, "name": "mozilla@jens-hausdorf.de", "real_name": "Jens Hausdorf"}, {"email": "ryanvm@gmail.com", "id": 75935, "name": "ryanvm@gmail.com", "real_name": "Ryan VanderMeulen [:RyanVM]"}, {"email": "shianyow@gmail.com", "id": 447022, "name": "shianyow@gmail.com", "real_name": "Shian-Yow Wu"}, {"email": "valentin.gosu@gmail.com", "id": 415378, "name": "valentin.gosu@gmail.com", "real_name": "Valentin Gosu [:valentin]"}], "cf_last_resolved": "2018-05-10T22:01:16Z", "attachments": [{"creator": "cpeterson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/png", "id": 8966011}, {"creator": "daniel@haxx.se", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/plain", "id": 8971199}, {"creator": "daniel@haxx.se", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8972846}, {"creator": "daniel@haxx.se", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8974397}, {"creator": "daniel@haxx.se", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-10T14:16:07Z", "type_id": 4, "creation_date": "2018-05-10T12:36:19Z", "id": 1755172, "setter": "mcmanus@ducksong.com"}, {"status": "+", "name": "approval-mozilla-beta", "modification_date": "2018-05-13T19:05:00Z", "type_id": 721, "creation_date": "2018-05-10T14:22:08Z", "id": 1755249, "setter": "ryanvm@gmail.com"}], "content_type": "text/plain", "id": 8974678}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 46, "comments": [{"text": "Created attachment 8966011\nSlack_screenshot.png\n\nSTR:\n1. Enable DoH prefs with Google's DNS:\nnetwork.trr.mode = 2 or 1\nnetwork.trr.uri = https://dns.google.com/experimental\n\n2. Restart Firefox.\n3. Load Slack, e.g. https://mozilla.slack.com/\n\nRESULT:\nSlack can load the page's wireframe, but it can't load the channel list or recent messages from Slack's WebSocket server. See the attached screenshot. Occasionally, Slack can load the channel list and recent messages after waiting 20 seconds (which just happens to be a multiple of the Slack SOCKET-MANAGER's 10000 ms timeout below).\n\nThis problem only seems to happen with Google's DNS. If I use Cloudflare's DNS (network.trr.uri = https://mozilla.cloudflare-dns.com/dns-query) or disable DoH (network.trr.mode = 0) and reload the Slack page, then the channel list and recent messages load correctly.\n\nWhen using Google's DNS, I see WebSocket error messages in the devtools console like:\n\nFirefox can\u2019t establish a connection to the server at wss://mpmulti-5eri.lb.slack-msgs.com/...\nApr-7 22:49:21.398 [T027LFU12] SOCKET-MANAGER: Changing from prov_connecting to error\nApr-7 22:49:21.400 [T027LFU12] SOCKET-MANAGER: will stay in error state for up to 10000 ms\nApr-7 22:49:21.401 T027LFU12 SOCKET-MANAGER: Closing socket due to unknown error", "author": "cpeterson@mozilla.com", "id": 13188925, "time": "2018-04-08T05:56:19Z"}, {"text": "This seems more like a race condition than a problem with Google's DNS. Today I can also reliably reproduce the problem with Cloudflare's DNS in mode = 1 (but mode = 2 still works).", "author": "cpeterson@mozilla.com", "id": 13190763, "time": "2018-04-09T02:07:56Z"}, {"text": "I can reliably reproduce this problem on macOS 10.13.4, but I can't reproduce it on my Windows 10 laptop.", "author": "cpeterson@mozilla.com", "id": 13190907, "time": "2018-04-09T06:29:22Z"}, {"text": "I take that back: I can reproduce on both macOS and Windows 10. On macOS, I can make the problem start and stop just by changing the prefs. On Windows, however, it seems like I have to restart the browser for the new prefs to trigger the problem.", "author": "cpeterson@mozilla.com", "id": 13190917, "time": "2018-04-09T06:41:03Z"}, {"text": "I can reproduce on Windows 10, too. I'm suffering of that. :/", "author": "mozilla@jens-hausdorf.de", "id": 13195283, "time": "2018-04-10T16:10:39Z"}, {"text": "I'm also seeing this, on macOS. Fixed by flipping trr.mode back from 2 to 0.", "author": "dirkjan@ochtman.nl", "id": 13197478, "time": "2018-04-11T11:58:59Z"}, {"text": "I've managed to reproduce a long delay a few times but I can't seem to do it very reliably and I have not been able to observe exactly why this problem happens. I'm logging at nsHostResolver:5,nsHttp:5 and I can see that the slack host names are \"CNAME-chased\" quite a bit but I can't spot any DOH-related failures (due to CNAMEs or otherwise).\n\nMode 2 should cause a retry on native resole if TRR fails, but I see no fails.\n\nMode 1 should just go with the fastest (and use native if TRR fails).\n\nBased on all this, it seems like TRR doesn't really (report) fail when this effect happens.", "author": "daniel@haxx.se", "id": 13197696, "time": "2018-04-11T13:15:31Z"}, {"text": "chris - can you turn on dns logging in the about:networking tab and repro for daniel? Mode 1 is the most curious.", "author": "mcmanus@ducksong.com", "id": 13212193, "time": "2018-04-17T12:10:32Z"}, {"text": "actually you might want all of http logging on. its possible the dns data from cloud is the problem, not the dns interaction", "author": "mcmanus@ducksong.com", "id": 13212195, "time": "2018-04-17T12:11:07Z"}, {"text": "Here is a zip with log files of mode=0, mode=1, and mode=2:\n\nhttps://www.dropbox.com/s/d5x1x8cc3fk2n6e/bug-1452436-logs.zip?dl=0\n\nI recorded these log files with the default modules: timestamp,sync,nsHttp:5,cache2:5,nsSocketTransport:5,nsHostResolver:5. If there is a different HTTP module I should specify, just let me know.\n\nI can still reproduce this Slack connection problem very easily with mode=1 while mode=2 connects successfully.", "author": "cpeterson@mozilla.com", "id": 13213078, "time": "2018-04-17T17:18:50Z"}, {"text": "thanks!", "author": "mcmanus@ducksong.com", "id": 13213497, "time": "2018-04-17T19:59:36Z"}, {"text": "(In reply to Chris Peterson [:cpeterson] from comment #9)\n> I can still reproduce this Slack connection problem very easily with mode=1\n> while mode=2 connects successfully.\n\nDid any DoH changes land recently? Slack used to fail to load for me with mode=1 while mode=0 and mode=2 loaded successfully. But today Slack fails to load with either mode=1 or mode=2 (on Mac and Windows with both Google's and Cloudflare's DNS servers).", "author": "cpeterson@mozilla.com", "id": 13231752, "time": "2018-04-25T06:32:19Z"}, {"text": "There's been a few smaller changes recently, and a change of how CNAME responses are handled landed just the other day (bug 1455972).\n\nI've stared on your logs a lot and I've tried to make sense of the symptoms but failed so far - there doesn't seem to be any TRR failures logged when you get these problems!\n\nI keep using the mozilla slack in a tab of mine all the time and I alternate between trr mode 2 and 3 (usually with cloudflare) and I experience none of these problems. (I've seen delayed loads at some point but I'm far from being able to reproduce).\n\nmode 0 isn't using TRR at all so I ignore that.\n\nmode 1 is racing native vs trr and goes with the fastest response, which then would indicate that sometimes you get the TRR response and for some reason it seems to give you the \"wrong\" IP or an IP that is slow for you.\n\nmode 2 is trr-first and then as long as you get an IP from the DOH server (and Firefox doesn't fail to connect to it) you'll use the TRR address so why mode 2 would work and mode 1 would not is really hard to grasp.\n\nIt might offer some additional data points if you check \"about:networking\" on the DNS tab when things go wrong/right and see if the TRR columns says true or false for the involved host names.\n\nCan you record some new logs with these more \"absolute\" failures you experience now? Maybe this situation gives a better picture.", "author": "daniel@haxx.se", "id": 13231870, "time": "2018-04-25T07:51:25Z"}, {"text": "Here's a snapshot of my about:networking DNS tab with trr mode 2. After waiting about one minute, Slack finally loaded.\n\nHostname                        Family  TRR     Addresses                     Expires (Seconds)\nca.slack-edge.com               ipv4    false   151.101.40.102                18\nmpmulti-s86e.lb.slack-msgs.com  ipv4    false   18.216.16.163                 14\nmpmulti-wq3r.lb.slack-msgs.com  ipv4    true    54.149.194.173                17\na.slack-edge.com                ipv4    true    151.101.40.102                9\nmozilla.cloudflare-dns.com      ipv4    false   104.16.112.25 104.16.111.25   90\nlh4.googleusercontent.com       ipv4    true    172.217.0.33                  36\nsecure.gravatar.com             ipv4    true    192.0.73.2                    59\nlh3.googleusercontent.com       ipv4    true    172.217.0.33                  36\na.slack-edge.com                ipv4    true    151.101.40.102                9\nemoji.slack-edge.com            ipv4    true    151.101.40.102                9\nlh6.googleusercontent.com       ipv4    true    172.217.0.33                  36", "author": "cpeterson@mozilla.com", "id": 13233123, "time": "2018-04-25T17:26:49Z"}, {"text": "Created attachment 8971199\nwebsocket-hostresolver-log.txt\n\nHere's a freshly recorded log file when this happens (\"timestamp,sync,nsWebSocket:5,nsHostResolver:5\").\n\nThis shows that TRR works fine the whole time, but the websockets fail to connect to the given addresses and it has a 20 second timeout on each attempt.\n\nThere's no fallback to native DNS resolve in the websocket logic so the next attempt (if any) may very well also fail. I think we need to add logic there i similar style that we're doing for the sockettransport:\n\nhttps://searchfox.org/mozilla-central/source/netwerk/base/nsSocketTransport2.cpp#1820-1830\n\nI can't explain why TRR returns diff/non-functional addresses and why native resolves doesn't. It surprises me that the slack web site out of all sites would show this behavior.\n\nMichal, as somewhat familiar with the websockets code, would you agree with my conclusion and do you have a suggestion on how I'd best add the fallback/retry ?", "author": "daniel@haxx.se", "id": 13235071, "time": "2018-04-26T12:34:45Z"}, {"text": "(In reply to Daniel Stenberg [:bagder] from comment #14)\n> Michal, as somewhat familiar with the websockets code, would you agree with\n> my conclusion and do you have a suggestion on how I'd best add the\n> fallback/retry ?\n\nWe use the address from resolver only in nsWSAdmissionManager to control how many websocket channels we're connecting to some host at the same time. We create http channel in WebSocketChannel::AsyncOpen with the given URI, so no fallback is necessary in websockets code.", "author": "michal.novotny@gmail.com", "id": 13235549, "time": "2018-04-26T14:56:54Z"}, {"text": "daniel can you confirm that this will have no impact in shadow mode?", "author": "mcmanus@ducksong.com", "id": 13236360, "time": "2018-04-26T18:53:41Z"}, {"text": "I can confirm that in mode 4 this issue doesn't trigger.\n\nI haven't seen this problem (and nobody else has reported it) happen in mode 4 (nor 0) and it also follows the logic that the problem is somehow related to the particular IP addresses returned from TRR instead of native. After talking with the team this evening I got some new ideas on how to proceed my debugging from here so I hope to have some further details on this soon.", "author": "daniel@haxx.se", "id": 13236728, "time": "2018-04-26T21:11:58Z"}, {"text": "Ok Nick,\n\nLet me bounce this with you as well. I have a 6MB gzipped logfile here: https://daniel.haxx.se/test/mozilla-slack-broken2-2018-04-27.log.gz (about 60MB unpacked)\n\nThat's a log of nsHostResolver, nsWebSocket and nsHttp when I load mozilla.slack.com from my own Firefox dev build a few days ago.\n\nSearch for \"mpmulti-pzxk.lb.slack-msgs.com\" and look at the WebSocket HTTP request that is sent at timestamp 2018-04-27 13:26:20.822957.\n\nWebSockets here implies HTTP/1 while the rest of this site is served over h2. I'm asking for your help to interpret the logs here to spot why this request takes ~95 seconds(!) to fulfill. The WebSockets code itself only allows 20 seconds and times out before the actual HTTP response arrives.\n\nThe TRR name resolve is done in 22ms at \"2018-04-27 13:26:20.860225\". I can't see any problems with that.\n\nAfter almost 7 seconds (2018-04-27 13:26:27.617449), we get \"GetSpdyActiveConn() request for ent 0x7f6e42944580 .S...X.[tlsflags0x00000000]mpmulti-pzxk.lb.slack-msgs.com:443 did not find an active connection\"\n\n... which to me sounds as if we're looking for an h2 connection for this request? I can't see anything else interesting done on this request before then and it puzzles me greatly.\n\nI can't see how this is related to TRR/name resolving at all, but right now I'm trying to figure out exactly what's going on so that I can possibly backtrack from there and figure out where the problem is introduced in this scenario. Since it doesn't happen without TRR it pretty much has to be involved somehow!", "author": "daniel@haxx.se", "id": 13242923, "time": "2018-04-30T12:08:54Z"}, {"text": "I've looked at the bits specifically related to the GetSpdyActiveConn bits. It looks like we hit that code as part of ProcessPendingQForEntry, which while not strictly necessary (the conninfo's hash key has the 'X' bit set, indicating no spdy allowed), but it does the right thing (there is, of course, no spdy conn available to an entry that has conninfo with no spdy).\n\nFor reference, it looks like we're trying to ProcessPendingQForEntry due to the code at https://searchfox.org/mozilla-central/source/netwerk/protocol/http/nsHttpConnectionMgr.cpp#2543 (we were asked to process the pending queue for something with an empty pending queue, so we just go looking for something to process)\n\nThe other thing I noticed around that bit of the log is that it then tries to dispatch the transaction with no connection available (indicating at that point that we haven't successfully made a connection). We definitely *try* to make a connection (2018-04-27 13:26:20.823149 UTC - [12579:Socket Thread]: V/nsHttp nsHttpConnectionMgr::MakeNewConnection 0x7f6e65e97740 ent=0x7f6e42944580 trans=0x7f6e409f2c00).\n\nIf you look at the DispatchPendingQ log lines a bit below the GetSpdyActiveConn stuff, it looks like the connection stays in the state where it has a half-open connection (implied by the second DispatchPendingQ line) that has not yet completed. It keeps going around like that every time we ProcessPendingQForEntry. Eventually the existing halfopen goes away (timed out, I presume, no socket transport stuff in the log), and we try to MakeNewConnection again.\n\nThat all indicates to me that the connection is just taking a *really* long time to get set up. Are we certain that the TRR server is returning the same rrset as plain ol' dns? (I didn't see any mention of that in my quick scan of the bug, apologies if I missed that.)", "author": "hurley@mozilla.com", "id": 13246567, "time": "2018-05-01T17:11:30Z"}, {"text": "Thanks for taking a look Nick!\n\n> Are we certain that the TRR server is returning the same rrset as plain ol' dns?\n\nThey often don't return the exact same addresses, no, but they return addresses from the same general IP ranges - which isn't a surprise since these are all Amazon things.\n\nI have however found that in many cases when we get an A record back from TRR for this host, that also typically include two CNAMEs, I will get a different A record if we \"chase\" the CNAME down and get that A record. I might hint that the A record we get in the first response is actually... stale? I'm now working on trying this theory out more to see what I can learn.\n\nI've also been thinking about TTL times, especially with responses using CNAMEs, and I intend to go back to study exact how they are supposed to work for us here and make sure that our code does what my reading will tell me.", "author": "daniel@haxx.se", "id": 13250798, "time": "2018-05-02T23:05:13Z"}, {"text": "Created attachment 8972846\n0001-bug-1452436-TRR-use-CNAME-and-TTL-better-r-mcmanus.patch\n\nOk, here's a patch for testing and I'm curious how this changes the slack page for people who can repro this problem.\n\nThis patch does a few things that changes TRR behavior:\n\n1 - it brings back CNAME \"chasing\" instead of relying on the address records that also comes back (reverting bug 1455972). Empirical testing shows that this makes us get a different address in a significant share of the cases.\n\n2 - it prefers the last CNAME instead of the first, which is mostly arbitrary but in the slack case it gets the final name faster.\n\n3 - I figured out that the code didn't correctly use the TRR provided TTL in all cases and now made sure that all addresses resolved with TRR always set the TTL correctlt for the DNS cache entry (with grace time zero).\n\nUsing this patch in my own testing, I seem to at least have reduced the likeliness of problems quite significantly. I'll continue and test more...\n\nI'm mostly looking for some input before I try to land this.", "author": "daniel@haxx.se", "id": 13251770, "time": "2018-05-03T11:58:49Z"}, {"text": "ni?myself to also try with this patch, since I'd been reproducing basically constantly.", "author": "hurley@mozilla.com", "id": 13252242, "time": "2018-05-03T14:54:33Z"}, {"text": "> Ok, here's a patch for testing and I'm curious how this changes the slack page for people who can repro this problem.\n\nIs there some kind of performance decrease?", "author": "mozilla@jens-hausdorf.de", "id": 13252515, "time": "2018-05-03T16:13:41Z"}, {"text": "(In reply to Jens Hausdorf from comment #23)\n\n> Is there some kind of performance decrease?\n\nYes, a small one. Performance goes back to how it was before bug 1455972 landed and I doubt anyone even noticed a performance difference (improvement) with that. Following CNAMEs means doing another HTTP request (potentially a whole series of them) to get the \"actual\" address, so typically another round-trip extra time for a \"fresh\" resolve. (We don't cache the CNAMEs, we only cache the end results in the in-memory DNS cache.)", "author": "daniel@haxx.se", "id": 13253179, "time": "2018-05-03T20:11:11Z"}, {"text": "(In reply to Daniel Stenberg [:bagder] from comment #21)\n> Created attachment 8972846\n> 0001-bug-1452436-TRR-use-CNAME-and-TTL-better-r-mcmanus.patch\n> \n> Ok, here's a patch for testing and I'm curious how this changes the slack\n> page for people who can repro this problem.\n\nIn my local build, this patch seems to improve things a little, but I can still easily reproduce the websocket connection problems. I'm testing a debug build on macOS with network.trr.uri = https://dns.google.com/experimental.\n\nThe first time I load mozilla.slack.com in a browser session seems to be the most likely to reproduce the problem. I can repro with either network.trr.mode = 1 or 2.", "author": "cpeterson@mozilla.com", "id": 13253520, "time": "2018-05-03T22:21:13Z"}, {"text": "So, first time I go to load slack with this patch applied, I hit the bug. However, like :cpeterson, this does appear to have improved the situation (it's not *every* time I load slack, as it was previously). Only other difference with my build is that it's debug (whereas of course I've been experiencing this on release builds otherwise). Just to rule out that difference, I've pushed to try (macOS only, since that's what I'm running) to get a \"real\" build out of infra to make sure.\n\nFor reference, I've been using trr mode 3, and https://1.1.1.1/dns-query as my resolver", "author": "hurley@mozilla.com", "id": 13254968, "time": "2018-05-04T15:44:06Z"}, {"text": "Created attachment 8974397\nbug 1452436 - callback when resolving a host already in progress\n\n... for which a previously set callback already fired. This implies that\nthis is a TRR resolved entry for each one of the responses has arrived\nbut not the other (yet).\n\nReview commit: https://reviewboard.mozilla.org/r/242746/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/242746/", "author": "daniel@haxx.se", "id": 13265410, "time": "2018-05-09T14:16:42Z"}, {"text": "We eventually figured out the ultimate reason for this problem and it turned out to not really be about websockets.\n\nHere's how the bug happens:\n\n1. A name resolve is done for host X (TRR asks for A and AAAA records separately)\n2. A response for the A records arrives\n3. The host resolver callback fires early (before the AAAA response has arrived)\n4. *Another* resolve is then started for the same host X\n5. The AAAA response arrives\n6. The second callback is then wrongly inhibited because the code sees that a callback has been called already for the A records\n\nThe fix (just submitted for review):\n\nMakes sure that if a new resolve is done when the existing record is \"in progress\", that callback gets called at once if there has been a callback called previously for this record.", "author": "daniel@haxx.se", "id": 13265428, "time": "2018-05-09T14:22:54Z"}, {"text": "Comment on attachment 8974397\nbug 1452436 - callback when resolving a host already in progress\n\nhttps://reviewboard.mozilla.org/r/242746/#review248846", "author": "mcmanus@ducksong.com", "id": 13267842, "time": "2018-05-10T11:02:36Z"}, {"text": "Comment on attachment 8974397\nbug 1452436 - callback when resolving a host already in progress\n\nhttps://reviewboard.mozilla.org/r/242746/#review248848", "author": "mcmanus@ducksong.com", "id": 13267844, "time": "2018-05-10T11:02:54Z"}, {"text": "Created attachment 8974678\n0001-bug-1452436-callback-when-resolving-a-host-already-i.patch\n\nA better take on fixing this issue", "author": "daniel@haxx.se", "id": 13267964, "time": "2018-05-10T12:36:19Z"}, {"text": "Comment on attachment 8974678\n0001-bug-1452436-callback-when-resolving-a-host-already-i.patch\n\nApproval Request Comment\n[Feature/Bug causing the regression]: bug 1452436\n[User impact if declined]: It causes non-obvious timeouts/hangs for users of TRR. Trigger perhaps easiest when websockets are involved.\n[Is this code covered by automated tests?]: no\n[Has the fix been verified in Nightly?]: it is about to\n[Needs manual test from QE? If yes, steps to reproduce]: enable TRR, goto mozilla.slack.com and see if it updates fine\n[List of other uplifts needed for the feature/fix]:\n[Is the change risky?]: no\n[Why is the change risky/not risky?]: the change is tiny and only affects users with TRR enabled\n[String changes made/needed]:", "author": "daniel@haxx.se", "id": 13268238, "time": "2018-05-10T14:22:08Z"}, {"text": "Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9d23e0279ecd\nCallback when resolving a host already in progress. r=mcmanus", "author": "pulsebot@bots.tld", "id": 13268431, "time": "2018-05-10T15:32:26Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/9d23e0279ecd", "author": "dluca@mozilla.com", "id": 13269488, "time": "2018-05-10T22:01:16Z"}, {"text": "Comment on attachment 8974678\n0001-bug-1452436-callback-when-resolving-a-host-already-i.patch\n\nFixes a Slack bug for users preffing on TRR for testing. Since the change only affects users who've preffed TRR on, I'll approve for 61.0b5.", "author": "ryanvm@gmail.com", "id": 13273143, "time": "2018-05-13T19:05:00Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-beta/rev/1da8d36ce5a4", "author": "ryanvm@gmail.com", "id": 13273189, "time": "2018-05-13T19:57:34Z"}, {"text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:62.0) Gecko/20100101 Firefox/62.0\nBuild ID: 20180514220126\n\nI verified this issue on MacOS 10.13.4, Windows 10 and Ubuntu 16.04 with the latest FF Nightly 61.0a1(2018-05-14) and the issue is no longer reproducible. \nWe will verify this also in beta (61.0b5) after the fix will be uplifted.", "author": "george.craciun@softvision.ro", "id": 13278023, "time": "2018-05-15T08:41:06Z"}, {"text": "(In reply to Cristian Craciun from comment #37)\n> User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:62.0)\n> Gecko/20100101 Firefox/62.0\n> Build ID: 20180514220126\n> \n> I verified this issue on MacOS 10.13.4, Windows 10 and Ubuntu 16.04 with the\n> latest FF Nightly 61.0a1(2018-05-14) and the issue is no longer\n> reproducible. \n> We will verify this also in beta (61.0b5) after the fix will be uplifted.\n\nEdit: latest FF Nightly 62.0a1(2018-05-14)", "author": "george.craciun@softvision.ro", "id": 13278374, "time": "2018-05-15T11:40:21Z"}, {"text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:61.0) Gecko/20100101 Firefox/61.0\nBuild ID: 20180514150347\n\nVerified as fixed on Firefox 61.0b5 on MacOS 10.13.4, Windows 10 and Ubuntu 16.04", "author": "george.craciun@softvision.ro", "id": 13278815, "time": "2018-05-15T14:50:15Z"}, {"text": "I'm still/again seeing this on 62.0a1 (2018-05-21) (64-bit) (resetting trr.mode from 1 to 0 makes it go away) on macOS.", "author": "dirkjan@ochtman.nl", "id": 13295783, "time": "2018-05-22T07:09:14Z"}, {"text": "I double-checked on my mac right now and it works as snappy as it is supposed to on the 2018-05-21 version for me. I checked and I can't spot any difference in behavior between Windows, Mac and Linux on the slack page. I suspect what you're experiencing is not the same problem that was already fixed.\n\nDid you change any other trr pref than mode and uri?\n\nCan you switch to trr mode 2 and enable logging[*] with \"timestamp,nsHostResolver:5\" when you go to the slack page and experience this problem, and then share that log with me/us?\n\n[*] = https://developer.mozilla.org/en-US/docs/Mozilla/Debugging/HTTP_logging", "author": "daniel@haxx.se", "id": 13295861, "time": "2018-05-22T08:03:05Z"}, {"text": "Hmm, can't reproduce now in either mode 1 or 2. Probably not worth logging now? Sorry for the false alarm!", "author": "dirkjan@ochtman.nl", "id": 13295890, "time": "2018-05-22T08:21:20Z"}, {"text": "No worries. If you can't reproduce it's not worth logging. Let's save that for if this ever happens again... =)", "author": "daniel@haxx.se", "id": 13295905, "time": "2018-05-22T08:29:11Z"}, {"text": "I had problems loading Slack yesterday, too. I thought it might be a DoH regression, but I think it was a Slack server problem:\n\nhttps://status.slack.com/2018-05/42acc9f7860c0416", "author": "cpeterson@mozilla.com", "id": 13297336, "time": "2018-05-22T17:52:07Z"}, {"text": "I had a similar problem again earlier. I was going to log it, but when I toggled trr.mode from 1 to 2, the problem resolved itself (and I can't reproduce it again setting it back to mode = 1).", "author": "dirkjan@ochtman.nl", "id": 13378606, "time": "2018-05-31T20:09:03Z"}], "id": 1452436, "priority": "P1", "cc": ["daniel@haxx.se", "dirkjan@ochtman.nl", "drno@ohlmeier.org", "george.craciun@softvision.ro", "hurley@mozilla.com", "mcmanus@ducksong.com", "michal.novotny@gmail.com", "mozilla@jens-hausdorf.de", "ryanvm@gmail.com", "shianyow@gmail.com", "valentin.gosu@gmail.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1434852], "qa_contact": "", "creation_time": "2018-04-08T05:56:19Z", "cf_status_firefox_esr52": "unaffected", "component": "Networking: DNS", "assigned_to_detail": {"email": "daniel@haxx.se", "id": 16743, "name": "daniel@haxx.se", "real_name": "Daniel Stenberg [:bagder]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "verified", "cf_status_firefox61": "verified", "cf_status_firefox60": "disabled", "target_milestone": "mozilla62", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "cpeterson@mozilla.com", "id": 430528, "name": "cpeterson@mozilla.com", "real_name": "Chris Peterson [:cpeterson]"}, "whiteboard": "[necko-triaged][trr]", "mentors": [], "summary": "Slack page can't load channel list from Slack's WebSocket server when using DoH and Google's DNS", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-31T20:09:03Z", "assigned_to": "daniel@haxx.se", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "jan@ikenmeyer.eu"}], "who": "jan@ikenmeyer.eu", "when": "2018-04-08T11:48:31Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P1"}, {"removed": "", "field_name": "cc", "added": "daniel@haxx.se"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "daniel@haxx.se"}, {"removed": "", "field_name": "whiteboard", "added": "[necko-triaged][trr]"}], "who": "daniel@haxx.se", "when": "2018-04-08T11:51:10Z"}, {"changes": [{"removed": "Unspecified", "field_name": "op_sys", "added": "All"}], "who": "cpeterson@mozilla.com", "when": "2018-04-09T06:41:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mozilla@jens-hausdorf.de"}], "who": "mozilla@jens-hausdorf.de", "when": "2018-04-10T16:10:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dirkjan@ochtman.nl"}], "who": "dirkjan@ochtman.nl", "when": "2018-04-11T11:58:23Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "valentin.gosu@gmail.com"}], "who": "valentin.gosu@gmail.com", "when": "2018-04-12T19:55:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mcmanus@ducksong.com"}], "who": "mcmanus@ducksong.com", "when": "2018-04-17T12:10:32Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(daniel@haxx.se)"}], "who": "mcmanus@ducksong.com", "when": "2018-04-17T19:59:36Z"}, {"changes": [{"removed": "needinfo?(daniel@haxx.se)", "field_name": "flagtypes.name", "added": ""}], "who": "daniel@haxx.se", "when": "2018-04-25T07:51:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "michal.novotny@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(michal.novotny@gmail.com)"}], "who": "daniel@haxx.se", "when": "2018-04-26T12:34:45Z"}, {"changes": [{"removed": "needinfo?(michal.novotny@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "michal.novotny@gmail.com", "when": "2018-04-26T14:56:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "drno@ohlmeier.org"}], "who": "drno@ohlmeier.org", "when": "2018-04-26T18:35:39Z"}, {"changes": [{"removed": "jan@ikenmeyer.eu", "field_name": "cc", "added": ""}], "who": "jan@ikenmeyer.eu", "when": "2018-04-26T18:59:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hurley@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(hurley@mozilla.com)"}], "who": "daniel@haxx.se", "when": "2018-04-30T12:08:54Z"}, {"changes": [{"removed": "needinfo?(hurley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "hurley@mozilla.com", "when": "2018-05-01T17:11:30Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(cpeterson@mozilla.com)"}], "who": "daniel@haxx.se", "when": "2018-05-03T11:58:49Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(hurley@mozilla.com)"}], "who": "hurley@mozilla.com", "when": "2018-05-03T14:54:33Z"}, {"changes": [{"removed": "needinfo?(cpeterson@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "cpeterson@mozilla.com", "when": "2018-05-03T22:21:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "shianyow@gmail.com"}], "who": "shianyow@gmail.com", "when": "2018-05-04T10:27:17Z"}, {"changes": [{"removed": "needinfo?(hurley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "hurley@mozilla.com", "when": "2018-05-04T15:44:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974397, "added": "review?(mcmanus@ducksong.com)"}], "who": "daniel@haxx.se", "when": "2018-05-09T14:16:42Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mcmanus@ducksong.com)", "attachment_id": 8974397, "added": ""}], "who": "mcmanus@ducksong.com", "when": "2018-05-10T11:02:36Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8972846, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8974397, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974678, "added": "review?(mcmanus@ducksong.com)"}], "who": "daniel@haxx.se", "when": "2018-05-10T12:36:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mcmanus@ducksong.com)", "attachment_id": 8974678, "added": "review+"}], "who": "mcmanus@ducksong.com", "when": "2018-05-10T14:16:07Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "daniel@haxx.se", "when": "2018-05-10T14:16:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974678, "added": "approval-mozilla-beta?"}], "who": "daniel@haxx.se", "when": "2018-05-10T14:22:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ryanvm@gmail.com"}, {"removed": "---", "field_name": "cf_status_firefox_esr52", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_firefox_esr60", "added": "disabled"}, {"removed": "affected", "field_name": "cf_status_firefox60", "added": "disabled"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "affected"}], "who": "ryanvm@gmail.com", "when": "2018-05-10T15:31:23Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2018-05-10T15:32:26Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla62"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-10 22:01:16"}, {"removed": "affected", "field_name": "cf_status_firefox62", "added": "fixed"}], "who": "dluca@mozilla.com", "when": "2018-05-10T22:01:16Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "qe-verify+"}], "who": "ryanvm@gmail.com", "when": "2018-05-13T19:03:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8974678, "added": "approval-mozilla-beta+"}], "who": "ryanvm@gmail.com", "when": "2018-05-13T19:05:00Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2018-05-13T19:57:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "george.craciun@softvision.ro"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}], "who": "george.craciun@softvision.ro", "when": "2018-05-15T08:41:06Z"}, {"changes": [{"removed": "verified", "field_name": "cf_status_firefox61", "added": "fixed"}, {"removed": "fixed", "field_name": "cf_status_firefox62", "added": "verified"}], "who": "george.craciun@softvision.ro", "when": "2018-05-15T11:40:21Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "qe-verify+", "field_name": "flagtypes.name", "added": ""}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}], "who": "george.craciun@softvision.ro", "when": "2018-05-15T14:50:15Z"}, {"changes": [{"removed": "dirkjan@ochtman.nl", "field_name": "cc", "added": ""}], "who": "dirkjan@ochtman.nl", "when": "2018-05-15T15:23:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dirkjan@ochtman.nl"}], "who": "dirkjan@ochtman.nl", "when": "2018-05-22T07:09:14Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}