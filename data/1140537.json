{"cf_status_firefox38": "verified", "cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "attachments": [{"creator": "ugobejishvili@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/x-python", "id": 8574558}, {"creator": "erahm@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8591124}, {"creator": "erahm@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-04-22T09:46:52Z", "type_id": 4, "creation_date": "2015-04-14T21:36:23Z", "id": 1146539, "setter": "peterv@propagandism.org"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2015-04-24T23:07:29Z", "type_id": 720, "creation_date": "2015-04-24T20:19:05Z", "id": 1154605, "setter": "abillings@mozilla.com"}, {"status": "+", "name": "approval-mozilla-beta", "modification_date": "2015-04-24T23:07:29Z", "type_id": 721, "creation_date": "2015-04-24T20:19:05Z", "id": 1154606, "setter": "abillings@mozilla.com"}, {"status": "+", "name": "approval-mozilla-esr31", "modification_date": "2015-04-24T23:07:29Z", "type_id": 856, "creation_date": "2015-04-24T20:19:05Z", "id": 1154607, "setter": "abillings@mozilla.com"}, {"status": "+", "name": "sec-approval", "modification_date": "2015-04-23T21:38:56Z", "type_id": 799, "creation_date": "2015-04-23T19:01:32Z", "id": 1153570, "setter": "abillings@mozilla.com"}], "content_type": "text/plain", "id": 8592473}, {"creator": "kamiljoz@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/plain", "id": 8599095}], "classification": "Components", "cf_status_firefox39": "verified", "mentors_detail": [], "depends_on": [1272020], "cf_status_b2g_2_0m": "fixed", "cf_has_str": "---", "cf_status_firefox36": "wontfix", "cf_status_firefox37": "wontfix", "cf_user_story": "", "history": [{"changes": [{"removed": "x86", "field_name": "platform", "added": "All"}, {"removed": "Windows 7", "field_name": "op_sys", "added": "All"}], "who": "ugobejishvili@gmail.com", "when": "2015-03-06T20:17:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gijskruitbosch+bugs@gmail.com, ugobejishvili@gmail.com"}, {"removed": "Untriaged", "field_name": "component", "added": "Untriaged"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(ugobejishvili@gmail.com)"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-03-06T20:25:53Z"}, {"changes": [{"removed": "needinfo?(ugobejishvili@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "ugobejishvili@gmail.com", "when": "2015-03-06T20:30:22Z"}, {"changes": [{"removed": "", "field_name": "whiteboard", "added": "waiting on testcase from reporter"}], "who": "benjamin@smedbergs.us", "when": "2015-03-07T13:49:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kjozwiak@mozilla.com"}, {"removed": "", "field_name": "qa_contact", "added": "kjozwiak@mozilla.com"}], "who": "kamiljoz@gmail.com", "when": "2015-03-10T17:41:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "continuation@gmail.com"}], "who": "continuation@gmail.com", "when": "2015-03-10T17:42:09Z"}, {"changes": [{"removed": "Untriaged", "field_name": "component", "added": "XML"}], "who": "continuation@gmail.com", "when": "2015-03-10T17:54:45Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "NEW"}, {"removed": "0", "field_name": "is_confirmed", "added": "1"}, {"removed": "waiting on testcase from reporter", "field_name": "whiteboard", "added": ""}, {"removed": "---", "field_name": "cf_status_firefox36", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox37", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox38", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox39", "added": "affected"}], "who": "kamiljoz@gmail.com", "when": "2015-03-11T18:01:18Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kjozwiak@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2015-03-11T18:11:23Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "peterv@propagandism.org"}], "who": "continuation@gmail.com", "when": "2015-03-11T18:13:01Z"}, {"changes": [{"removed": "needinfo?(kjozwiak@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "kamiljoz@gmail.com", "when": "2015-03-12T17:06:38Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "csectype-bounds, sec-high"}], "who": "continuation@gmail.com", "when": "2015-03-17T17:10:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "erahm@mozilla.com"}], "who": "continuation@gmail.com", "when": "2015-03-17T22:04:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "abillings@mozilla.com"}, {"removed": "affected", "field_name": "cf_status_firefox36", "added": "wontfix"}], "who": "abillings@mozilla.com", "when": "2015-03-18T00:30:40Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(erahm@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2015-04-09T18:12:38Z"}, {"changes": [{"removed": "needinfo?(erahm@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "erahm@mozilla.com", "when": "2015-04-10T20:13:13Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "erahm@mozilla.com"}], "who": "erahm@mozilla.com", "when": "2015-04-10T22:52:11Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(continuation@gmail.com)"}], "who": "erahm@mozilla.com", "when": "2015-04-10T23:00:29Z"}, {"changes": [{"removed": "needinfo?(continuation@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "continuation@gmail.com", "when": "2015-04-14T17:44:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8592473, "added": "review?(peterv@propagandism.org)"}], "who": "erahm@mozilla.com", "when": "2015-04-14T21:36:23Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8591124, "added": "1"}], "who": "erahm@mozilla.com", "when": "2015-04-14T21:36:24Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox37", "added": "wontfix"}, {"removed": "---", "field_name": "cf_status_firefox40", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox_esr31", "added": "affected"}], "who": "continuation@gmail.com", "when": "2015-04-15T22:07:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(peterv@propagandism.org)", "attachment_id": 8592473, "added": "review+"}], "who": "peterv@propagandism.org", "when": "2015-04-22T09:46:52Z"}, {"changes": [{"removed": "sec-high", "field_name": "keywords", "added": "sec-critical"}], "who": "continuation@gmail.com", "when": "2015-04-23T18:51:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8592473, "added": "sec-approval?"}], "who": "erahm@mozilla.com", "when": "2015-04-23T19:01:32Z"}, {"changes": [{"removed": "---", "field_name": "cf_tracking_firefox38", "added": "+"}, {"removed": "---", "field_name": "cf_tracking_firefox39", "added": "+"}, {"removed": "---", "field_name": "cf_tracking_firefox40", "added": "+"}, {"removed": "---", "field_name": "cf_tracking_firefox_esr31", "added": "38+"}], "who": "abillings@mozilla.com", "when": "2015-04-23T21:38:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "sec-approval?", "attachment_id": 8592473, "added": "sec-approval+"}], "who": "abillings@mozilla.com", "when": "2015-04-23T21:38:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8592473, "added": "approval-mozilla-aurora?, approval-mozilla-beta?, approval-mozilla-esr31?"}], "who": "erahm@mozilla.com", "when": "2015-04-24T20:19:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?, approval-mozilla-beta?, approval-mozilla-esr31?", "attachment_id": 8592473, "added": "approval-mozilla-aurora+, approval-mozilla-beta+, approval-mozilla-esr31+"}], "who": "abillings@mozilla.com", "when": "2015-04-24T23:07:29Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "abillings@mozilla.com", "when": "2015-04-24T23:07:39Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "ryanvm@gmail.com", "when": "2015-04-27T14:00:29Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox38", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_firefox39", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_firefox_esr31", "added": "fixed"}, {"removed": "---", "field_name": "cf_status_firefox_esr38", "added": "fixed"}, {"removed": "---", "field_name": "cf_status_b2g_1_4", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_0", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_0m", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_1", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_1_s", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_2", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_master", "added": "affected"}], "who": "ryanvm@gmail.com", "when": "2015-04-27T16:07:43Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla40"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-04-27 12:20:28"}, {"removed": "affected", "field_name": "cf_status_firefox40", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_b2g_master", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2015-04-27T19:20:28Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_b2g_1_4", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_b2g_2_0", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_b2g_2_0m", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_b2g_2_1", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_b2g_2_1_s", "added": "fixed"}, {"removed": "affected", "field_name": "cf_status_b2g_2_2", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2015-04-28T01:21:40Z"}, {"changes": [{"removed": "---", "field_name": "cf_status_firefox38_0_5", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2015-04-28T18:57:31Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(erahm@mozilla.com)"}], "who": "kamiljoz@gmail.com", "when": "2015-04-29T04:48:14Z"}, {"changes": [{"removed": "needinfo?(erahm@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "erahm@mozilla.com", "when": "2015-04-29T22:48:12Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(erahm@mozilla.com)"}], "who": "kamiljoz@gmail.com", "when": "2015-04-30T14:42:45Z"}, {"changes": [{"removed": "needinfo?(erahm@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "erahm@mozilla.com", "when": "2015-04-30T19:10:45Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1161062"}], "who": "kamiljoz@gmail.com", "when": "2015-05-04T15:04:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "florin.mezei@softvisioninc.eu, ioana.chiorean@softvision.ro, otilia.anica@softvisioninc.eu"}], "who": "ioana.chiorean@softvision.ro", "when": "2015-05-05T11:34:32Z"}, {"changes": [{"removed": "", "field_name": "whiteboard", "added": "[adv-main38+][adv-esr31.7+]"}], "who": "abillings@mozilla.com", "when": "2015-05-05T22:48:20Z"}, {"changes": [{"removed": "fixed", "field_name": "cf_status_firefox40", "added": "verified"}], "who": "kamiljoz@gmail.com", "when": "2015-05-05T23:05:16Z"}, {"changes": [{"removed": "", "field_name": "alias", "added": "CVE-2015-2716"}], "who": "abillings@mozilla.com", "when": "2015-05-05T23:22:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bogdan.maris@softvision.ro"}], "who": "florin.mezei@softvisioninc.eu", "when": "2015-05-06T07:22:59Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(erahm@mozilla.com)"}], "who": "bogdan.maris@softvision.ro", "when": "2015-05-06T14:20:28Z"}, {"changes": [{"removed": "needinfo?(erahm@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "erahm@mozilla.com", "when": "2015-05-06T16:47:18Z"}, {"changes": [{"removed": "fixed", "field_name": "cf_status_firefox_esr31", "added": "verified"}, {"removed": "fixed", "field_name": "cf_status_firefox_esr38", "added": "verified"}], "who": "bogdan.maris@softvision.ro", "when": "2015-05-07T07:11:01Z"}, {"changes": [{"removed": "fixed", "field_name": "cf_status_firefox38", "added": "verified"}, {"removed": "fixed", "field_name": "cf_status_firefox39", "added": "verified"}], "who": "kamiljoz@gmail.com", "when": "2015-05-08T16:53:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mark@wolfbeast.com"}], "who": "dveditz@mozilla.com", "when": "2015-05-18T21:45:29Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "sec-bounty?"}], "who": "dveditz@mozilla.com", "when": "2015-05-26T21:01:02Z"}, {"changes": [{"removed": "sec-bounty?", "field_name": "flagtypes.name", "added": "sec-bounty+"}], "who": "abillings@mozilla.com", "when": "2015-06-01T20:25:14Z"}, {"changes": [{"removed": "core-security", "field_name": "groups", "added": "core-security-release"}], "who": "automation@bmo.tld", "when": "2015-09-02T06:59:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mats@mozilla.com"}], "who": "mats@mozilla.com", "when": "2015-09-06T18:54:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "huzaifas@redhat.com, jbryner@mozilla.com"}], "who": "dveditz@mozilla.com", "when": "2015-11-11T18:41:13Z"}, {"changes": [{"removed": "core-security-release", "field_name": "groups", "added": ""}], "who": "dveditz@mozilla.com", "when": "2015-11-12T04:13:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cuoq@trust-in-soft.com"}], "who": "cuoq@trust-in-soft.com", "when": "2016-05-12T19:25:35Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1272020"}], "who": "continuation@gmail.com", "when": "2016-05-12T19:49:17Z"}], "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["csectype-bounds", "sec-critical"], "summary": "Buffer overflow xml parser", "cf_last_resolved": "2015-04-27T19:20:28Z", "cf_status_b2g_master": "fixed", "votes": 0, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_status_firefox38_0_5": "fixed", "cf_has_regression_range": "---", "qa_contact_detail": {"email": "kamiljoz@gmail.com", "id": 455785, "name": "kamiljoz@gmail.com", "real_name": "Kamil Jozwiak [:kjozwiak]"}, "comment_count": 46, "comments": [{"text": "User Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36\n\nSteps to reproduce:\n\nFF last version (last ASAN build)\nhttp://ftp.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-release-linux64-asan/latest/firefox-36.0.1.en-US.linux-x86_64-asan.tar.bz2\n\n\nActual results:\n\n=================================================================\n==30124==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7fff018ba800 at pc 0x45f23c bp 0x7fffffff8970 sp 0x7fffffff8128\nWRITE of size 4718532 at 0x7fff018ba800 thread T0\n    #0 0x45f23b (/home/user/testing/firefox/firefox+0x45f23b)\n    #1 0x7fffedd9dc34 (/home/user/testing/firefox/libxul.so+0x811cc34)\n    #2 0x7fffe86d7e4a (/home/user/testing/firefox/libxul.so+0x2a56e4a)\n    #3 0x7fffe86d9256 (/home/user/testing/firefox/libxul.so+0x2a58256)\n    #4 0x7fffe86e7c59 (/home/user/testing/firefox/libxul.so+0x2a66c59)\n    #5 0x7fffe86e39fd (/home/user/testing/firefox/libxul.so+0x2a629fd)\n    #6 0x7fffe86e8eea (/home/user/testing/firefox/libxul.so+0x2a67eea)\n    #7 0x7fffe73aef5d (/home/user/testing/firefox/libxul.so+0x172df5d)\n    #8 0x7fffe72fe02e (/home/user/testing/firefox/libxul.so+0x167d02e)\n    #9 0x7fffe7650ac1 (/home/user/testing/firefox/libxul.so+0x19cfac1)\n    #10 0x7fffe7279ab4 (/home/user/testing/firefox/libxul.so+0x15f8ab4)\n    #11 0x7fffe7278897 (/home/user/testing/firefox/libxul.so+0x15f7897)\n    #12 0x7fffe70b6a69 (/home/user/testing/firefox/libxul.so+0x1435a69)\n    #13 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #14 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #15 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #16 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #17 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #18 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #19 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #20 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #21 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #22 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #23 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #24 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #25 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #26 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #27 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #28 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #29 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #30 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #31 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #32 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #33 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #34 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #35 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #36 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #37 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #38 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #39 0x7fffe70e7b5e (/home/user/testing/firefox/libxul.so+0x1466b5e)\n    #40 0x7fffe70f3210 (/home/user/testing/firefox/libxul.so+0x1472210)\n    #41 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #42 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #43 0x7fffe7949d99 (/home/user/testing/firefox/libxul.so+0x1cc8d99)\n    #44 0x7fffe78f8d1c (/home/user/testing/firefox/libxul.so+0x1c77d1c)\n    #45 0x7fffebc8ed87 (/home/user/testing/firefox/libxul.so+0x600dd87)\n    #46 0x7fffed667fa8 (/home/user/testing/firefox/libxul.so+0x79e6fa8)\n    #47 0x7fffed753d6e (/home/user/testing/firefox/libxul.so+0x7ad2d6e)\n    #48 0x7fffed754c93 (/home/user/testing/firefox/libxul.so+0x7ad3c93)\n    #49 0x7fffed755b0d (/home/user/testing/firefox/libxul.so+0x7ad4b0d)\n    #50 0x48a2fa (/home/user/testing/firefox/firefox+0x48a2fa)\n    #51 0x7ffff6c0076c (/lib/x86_64-linux-gnu/libc.so.6+0x2176c)\n    #52 0x48975c (/home/user/testing/firefox/firefox+0x48975c)\n\n0x7fff018ba800 is located 0 bytes to the right of 2147237888-byte region [0x7ffe818f6800,0x7fff018ba800)\nallocated by thread T0 here:\n    #0 0x471d71 (/home/user/testing/firefox/firefox+0x471d71)\n    #1 0x7fffedd9ed25 (/home/user/testing/firefox/libxul.so+0x811dd25)\n    #2 0x7fffedd9db81 (/home/user/testing/firefox/libxul.so+0x811cb81)\n    #3 0x7fffe86d7e4a (/home/user/testing/firefox/libxul.so+0x2a56e4a)\n    #4 0x7fffe86d9256 (/home/user/testing/firefox/libxul.so+0x2a58256)\n    #5 0x7fffe86e7c59 (/home/user/testing/firefox/libxul.so+0x2a66c59)\n    #6 0x7fffe86e39fd (/home/user/testing/firefox/libxul.so+0x2a629fd)\n    #7 0x7fffe86e8eea (/home/user/testing/firefox/libxul.so+0x2a67eea)\n    #8 0x7fffe73aef5d (/home/user/testing/firefox/libxul.so+0x172df5d)\n    #9 0x7fffe72fe02e (/home/user/testing/firefox/libxul.so+0x167d02e)\n    #10 0x7fffe7650ac1 (/home/user/testing/firefox/libxul.so+0x19cfac1)\n    #11 0x7fffe7279ab4 (/home/user/testing/firefox/libxul.so+0x15f8ab4)\n    #12 0x7fffe7278897 (/home/user/testing/firefox/libxul.so+0x15f7897)\n    #13 0x7fffe70b6a69 (/home/user/testing/firefox/libxul.so+0x1435a69)\n    #14 0x7fffe70e8bbf (/home/user/testing/firefox/libxul.so+0x1467bbf)\n    #15 0x7fffe714549a (/home/user/testing/firefox/libxul.so+0x14c449a)\n    #16 0x7fffe7949d99 (/home/user/testing/firefox/libxul.so+0x1cc8d99)\n    #17 0x7fffe78f8d1c (/home/user/testing/firefox/libxul.so+0x1c77d1c)\n    #18 0x7fffebc8ed87 (/home/user/testing/firefox/libxul.so+0x600dd87)\n    #19 0x7fffed667fa8 (/home/user/testing/firefox/libxul.so+0x79e6fa8)\n    #20 0x7fffed753d6e (/home/user/testing/firefox/libxul.so+0x7ad2d6e)\n    #21 0x7fffed754c93 (/home/user/testing/firefox/libxul.so+0x7ad3c93)\n    #22 0x7fffed755b0d (/home/user/testing/firefox/libxul.so+0x7ad4b0d)\n    #23 0x48a2fa (/home/user/testing/firefox/firefox+0x48a2fa)\n    #24 0x7ffff6c0076c (/lib/x86_64-linux-gnu/libc.so.6+0x2176c)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ??:0 ??\nShadow bytes around the buggy address:\n  0x10006030f4b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006030f4c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006030f4d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006030f4e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006030f4f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x10006030f500:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x10006030f510: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x10006030f520: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x10006030f530: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x10006030f540: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x10006030f550: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Sta==30124==ABORTING", "author": "ugobejishvili@gmail.com", "id": 9998165, "time": "2015-03-06T20:16:18Z"}, {"text": "Do you have steps to reproduce or a better stack? What makes you say this is an XML parser issue?", "author": "gijskruitbosch+bugs@gmail.com", "id": 9998206, "time": "2015-03-06T20:25:53Z"}, {"text": "(In reply to :Gijs Kruitbosch from comment #1)\n> Do you have steps to reproduce or a better stack? What makes you say this is\n> an XML parser issue?\n\nHi, For Monday i will update the case, and upload testcase / will explain how to reproduce the case.", "author": "ugobejishvili@gmail.com", "id": 9998234, "time": "2015-03-06T20:30:22Z"}, {"text": "Created attachment 8574558\ntestcase\n\nThe testcase which i used to reproduce the crash.", "author": "ugobejishvili@gmail.com", "id": 10002712, "time": "2015-03-09T08:25:34Z"}, {"text": "Thanks for the testcase Ucha!\n\nSTR:\n\n- download the python script from comment # 3\n- sudo python testcase.py in a terminal/cmd prompt\n- wait till you receive \"Serving Requests.\"\n- visit http://localhost:80 from the browser (wait till it eventually crashes, takes anywhere between 5-15 minutes on ASan builds)\n\nReproduced the crash using the following builds:\n\n* http://inbound-archive.pub.build.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-central-linux64-asan/1425992124/\n* http://inbound-archive.pub.build.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-aurora-linux64-asan/1425973348/\n* http://inbound-archive.pub.build.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-beta-linux64-asan/1425964878/\n* http://inbound-archive.pub.build.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-release-linux64-asan/1425726871/\n* Reproduced with esr31 using changeset: 30cd218c32ff (asan)\n\nCrash Reports when using non-asan builds:\n\n* https://crash-stats.mozilla.com/report/index/d34bab48-2ed6-454a-8662-45f112150310 (m-c on OSX)\n* https://crash-stats.mozilla.com/report/index/da51a7a1-c159-485b-ac43-f54df2150310 (m-c on OSX)\n* https://crash-stats.mozilla.com/report/index/f002e453-9883-497d-8799-ef68f2150310 (m-c on Ubuntu)\n* https://crash-stats.mozilla.com/report/index/90191bb6-addc-4e73-82f7-cf2562150310 (m-a on Ubuntu)\n* https://crash-stats.mozilla.com/report/index/8584715e-61b1-4cc4-87f0-ed3ef2150310 (m-a on Ubuntu)\n* https://crash-stats.mozilla.com/report/index/66420b7d-a0fd-4360-ad6c-de0a42150310 (esr31 on Ubuntu)", "author": "kamiljoz@gmail.com", "id": 10016307, "time": "2015-03-11T18:01:18Z"}, {"text": "Could you attach a symbolized ASan crash stack, Kamil?  Thanks.", "author": "continuation@gmail.com", "id": 10016371, "time": "2015-03-11T18:11:23Z"}, {"text": "Built m-c asan using changeset: bc6aeea7229\n\n==75285==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7f4970e08800 at pc 0x433588 bp 0x7fff0a747bf0 sp 0x7fff0a7473b0\nWRITE of size 4718532 at 0x7f4970e08800 thread T0\n    #0 0x433587 in __interceptor_memcpy _asan_rtl_\n    #1 0x7f4a5c974a84 in MOZ_XML_Parse xmlparse.c:1596\n    #2 0x7f4a56669faa in ParseBuffer nsExpatDriver.cpp:1017\n    #3 0x7f4a5666b3b6 in ConsumeToken nsExpatDriver.cpp:1117\n    #4 0x7f4a5667bab9 in Tokenize nsParser.cpp:1943\n    #5 0x7f4a566772ed in ResumeParse nsParser.cpp:1464\n    #6 0x7f4a5667d04a in OnDataAvailable nsParser.cpp:1841\n    #7 0x7f4a54e5994d in do_OnDataAvailable nsHTTPCompressConv.cpp:357\n    #8 0x7f4a54d9739e in OnDataAvailable nsStreamListenerTee.cpp:93\n    #9 0x7f4a55134143 in OnDataAvailable nsHttpChannel.cpp:5737\n    #10 0x7f4a54d0ea1e in OnStateTransfer nsInputStreamPump.cpp:607\n    #11 0x7f4a54d0d6a9 in OnInputStreamReady nsInputStreamPump.cpp:436\n    #12 0x7f4a54b2ab69 in Run nsStreamUtils.cpp:91\n    #13 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #14 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #15 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #16 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #17 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #18 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #19 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #20 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #21 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #22 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #23 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #24 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #25 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #26 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #27 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #28 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #29 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #30 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #31 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #32 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #33 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #34 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #35 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #36 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #37 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #38 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #39 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #40 0x7f4a54b737b0 in apply<nsIThread, nsresult (nsIThread::*)()> nsThreadUtils.h:573\n    #41 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #42 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #43 0x7f4a54b6596e in Shutdown nsThread.cpp:662\n    #44 0x7f4a54b58461 in ShutdownThread LazyIdleThread.cpp:309\n    #45 0x7f4a54b58e7e in Notify LazyIdleThread.cpp:500\n    #46 0x7f4a54b70587 in Fire nsTimerImpl.cpp:634\n    #47 0x7f4a54b711ee in Run nsTimerImpl.cpp:724\n    #48 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #49 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #50 0x7f4a555191f9 in Run MessagePump.cpp:99\n    #51 0x7f4a554981fc in RunInternal message_loop.cc:233\n    #52 0x7f4a5a4fc7f7 in Run nsBaseAppShell.cpp:164\n    #53 0x7f4a5c165648 in Run nsAppStartup.cpp:281\n    #54 0x7f4a5c2636ed in XRE_mainRun nsAppRunner.cpp:4183\n    #55 0x7f4a5c26461d in XRE_main nsAppRunner.cpp:4259\n    #56 0x7f4a5c2654fd in XRE_main nsAppRunner.cpp:4479\n    #57 0x47b1ca in do_main nsBrowserApp.cpp:294\n    #58 0x7f4a6569aec4 in __libc_start_main libc-start.c:287\n    #59 0x47a69a in _start ??:?\n\n0x7f4970e08800 is located 0 bytes to the right of 2147237888-byte region [0x7f48f0e44800,0x7f4970e08800)\nallocated by thread T0 here:\n    #0 0x460f67 in __interceptor_malloc _asan_rtl_\n    #1 0x7f4a5c975b75 in MOZ_XML_GetBuffer xmlparse.c:1698\n    #2 0x7f4a5c9749d1 in MOZ_XML_Parse xmlparse.c:1592\n    #3 0x7f4a56669faa in ParseBuffer nsExpatDriver.cpp:1017\n    #4 0x7f4a5666b3b6 in ConsumeToken nsExpatDriver.cpp:1117\n    #5 0x7f4a5667bab9 in Tokenize nsParser.cpp:1943\n    #6 0x7f4a566772ed in ResumeParse nsParser.cpp:1464\n    #7 0x7f4a5667d04a in OnDataAvailable nsParser.cpp:1841\n    #8 0x7f4a54e5994d in do_OnDataAvailable nsHTTPCompressConv.cpp:357\n    #9 0x7f4a54d9739e in OnDataAvailable nsStreamListenerTee.cpp:93\n    #10 0x7f4a55134143 in OnDataAvailable nsHttpChannel.cpp:5737\n    #11 0x7f4a54d0ea1e in OnStateTransfer nsInputStreamPump.cpp:607\n    #12 0x7f4a54d0d6a9 in OnInputStreamReady nsInputStreamPump.cpp:436\n    #13 0x7f4a54b2ab69 in Run nsStreamUtils.cpp:91\n    #14 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n    #15 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #16 0x7f4a555191f9 in Run MessagePump.cpp:99\n    #17 0x7f4a554981fc in RunInternal message_loop.cc:233\n    #18 0x7f4a5a4fc7f7 in Run nsBaseAppShell.cpp:164\n    #19 0x7f4a5c165648 in Run nsAppStartup.cpp:281\n    #20 0x7f4a5c2636ed in XRE_mainRun nsAppRunner.cpp:4183\n    #21 0x7f4a5c26461d in XRE_main nsAppRunner.cpp:4259\n    #22 0x7f4a5c2654fd in XRE_main nsAppRunner.cpp:4479\n    #23 0x47b1ca in do_main nsBrowserApp.cpp:294\n    #24 0x7f4a6569aec4 in __libc_start_main libc-start.c:287\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ??:0 ??\nShadow bytes around the buggy address:\n  0x0fe9ae1b90b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0fe9ae1b90c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0fe9ae1b90d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0fe9ae1b90e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0fe9ae1b90f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0fe9ae1b9100:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0fe9ae1b9110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0fe9ae1b9120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0fe9ae1b9130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0fe9ae1b9140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0fe9ae1b9150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Sta==75285==ABORTING", "author": "kamiljoz@gmail.com", "id": 10021692, "time": "2015-03-12T17:06:38Z"}, {"text": "(In reply to Kamil Jozwiak [:kjozwiak] from comment #6)\n\n> 0x7f4970e08800 is located 0 bytes to the right of 2147237888-byte region\n> [0x7f48f0e44800,0x7f4970e08800)\n> allocated by thread T0 here:\n>     #0 0x460f67 in __interceptor_malloc _asan_rtl_\n>     #1 0x7f4a5c975b75 in MOZ_XML_GetBuffer xmlparse.c:1698\n\nThat's a pretty sketchy allocation size. If we take a look at |XML_GetBuffer| there's a FIXME comment [1] indicating possible integer overflow. Is it possible that's coming into play here?\n\n[1] https://dxr.mozilla.org/mozilla-central/source/parser/expat/lib/xmlparse.c?from=xmlparse.c&case=true#1667\n\n\n>     #2 0x7f4a5c9749d1 in MOZ_XML_Parse xmlparse.c:1592\n>     #3 0x7f4a56669faa in ParseBuffer nsExpatDriver.cpp:1017\n>     #4 0x7f4a5666b3b6 in ConsumeToken nsExpatDriver.cpp:1117\n>     #5 0x7f4a5667bab9 in Tokenize nsParser.cpp:1943\n>     #6 0x7f4a566772ed in ResumeParse nsParser.cpp:1464\n>     #7 0x7f4a5667d04a in OnDataAvailable nsParser.cpp:1841\n>     #8 0x7f4a54e5994d in do_OnDataAvailable nsHTTPCompressConv.cpp:357\n>     #9 0x7f4a54d9739e in OnDataAvailable nsStreamListenerTee.cpp:93\n>     #10 0x7f4a55134143 in OnDataAvailable nsHttpChannel.cpp:5737\n>     #11 0x7f4a54d0ea1e in OnStateTransfer nsInputStreamPump.cpp:607\n>     #12 0x7f4a54d0d6a9 in OnInputStreamReady nsInputStreamPump.cpp:436\n>     #13 0x7f4a54b2ab69 in Run nsStreamUtils.cpp:91\n>     #14 0x7f4a54b669f4 in ProcessNextEvent nsThread.cpp:855\n>     #15 0x7f4a54bc4d1a in NS_ProcessNextEvent nsThreadUtils.cpp:265\n>     #16 0x7f4a555191f9 in Run MessagePump.cpp:99\n>     #17 0x7f4a554981fc in RunInternal message_loop.cc:233\n>     #18 0x7f4a5a4fc7f7 in Run nsBaseAppShell.cpp:164\n>     #19 0x7f4a5c165648 in Run nsAppStartup.cpp:281\n>     #20 0x7f4a5c2636ed in XRE_mainRun nsAppRunner.cpp:4183\n>     #21 0x7f4a5c26461d in XRE_main nsAppRunner.cpp:4259\n>     #22 0x7f4a5c2654fd in XRE_main nsAppRunner.cpp:4479\n>     #23 0x47b1ca in do_main nsBrowserApp.cpp:294\n>     #24 0x7f4a6569aec4 in __libc_start_main libc-start.c:287\n> \n> SUMMARY: AddressSanitizer: heap-buffer-overflow ??:0 ??\n> Shadow bytes around the buggy address:\n>   0x0fe9ae1b90b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>   0x0fe9ae1b90c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>   0x0fe9ae1b90d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>   0x0fe9ae1b90e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>   0x0fe9ae1b90f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n> =>0x0fe9ae1b9100:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n>   0x0fe9ae1b9110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n>   0x0fe9ae1b9120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n>   0x0fe9ae1b9130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n>   0x0fe9ae1b9140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n>   0x0fe9ae1b9150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n> Shadow byte legend (one shadow byte represents 8 application bytes):\n>   Addressable:           00\n>   Partially addressable: 01 02 03 04 05 06 07\n>   Heap left redzone:       fa\n>   Heap right redzone:      fb\n>   Freed heap region:       fd\n>   Sta==75285==ABORTING", "author": "erahm@mozilla.com", "id": 10042572, "time": "2015-03-17T22:19:48Z"}, {"text": "From visual inspection there's certainly an issue in libexpat, whether it's *this* issue I'll need to research further.\n\nXML_GetBuffer will either reuse an internal buffer if there's enough space, or create a new larger one and copy any existing buffer data into it and return a ptr to after where the existing buffer data was copied. \n\nSo there are a couple of ways for this to go bad:\n\nOption one: \nPass in a negative number. This can happen for instance if the string size is > max(int), it will then get converted to a uint32_t [1] and then an int [2] and will end up a negative number. That will bypass the allocation code [3] in GetBuffer and then we'll copy a gigantic (negative int cast to size_t) size into the existing buffer.\n \n[1] https://hg.mozilla.org/mozilla-central/annotate/04f34e86aee1/parser/htmlparser/nsExpatDriver.cpp#l1105\n[2] https://hg.mozilla.org/mozilla-central/annotate/04f34e86aee1/parser/expat/lib/xmlparse.c#l1654\n[3] https://hg.mozilla.org/mozilla-central/annotate/04f34e86aee1/parser/expat/lib/xmlparse.c#l1666\n\nBut this can happen even if we don't pass in <= max(int):\n\n#1 - If we ask for > max(int), that will get cast down to max(int).\n#2 - If there's anything in the buffer, lets say 2 chars: int neededSize = max(int) + 2 = -a_bunch\n#3 - Then the allocation loop will go through and allocate a larger buffer, in this case we'll just do one iteration because any_positive_number > -a_bunch\n#4 - The leftover portion of the previous buffer gets copied into this slightly larger buffer\n#5 - bufferEnd is returned, which is an offset into a buffer that is *not* large enough to contain len\n#6 - XML_Parse then tries to copy the full buffer of size len into the buffer much smaller than len\n\nThis jibes pretty well with the stacks.\n\nAnnotated and trimmed for simplicity:\n\n>         hg      1:1645: void * XMLCALL\n>         hg      1:1646: XML_GetBuffer(XML_Parser parser, int len) [#1]\n>         hg      1:1647: {\n> \n>         hg      1:1658:   if (len > bufferLim - bufferEnd) {\n>         hg      1:1659:     /* FIXME avoid integer overflow */\n>         hg      1:1660:     int neededSize = len + (int)(bufferEnd - bufferPtr); [#2]\n> \n>         hg      1:1668:     if (neededSize  <= bufferLim - buffer) { // no\n> \n>         hg      1:1681:     }\n>         hg      1:1682:     else { // yes\n>         hg      1:1683:       char *newBuf;\n>         hg      1:1684:       int bufferSize = (int)(bufferLim - bufferPtr);\n>         hg      1:1685:       if (bufferSize == 0)\n>         hg      1:1686:         bufferSize = INIT_BUFFER_SIZE;\n>         hg      1:1687:       do {\n>         hg      1:1688:         bufferSize *= 2;\n>         hg      1:1689:       } while (bufferSize < neededSize); [#3]\n>         hg      1:1690:       newBuf = (char *)MALLOC(bufferSize);\n>         hg      1:1691:       if (newBuf == 0) {\n>         hg      1:1692:         errorCode = XML_ERROR_NO_MEMORY;\n>         hg      1:1693:         return NULL;\n>         hg      1:1694:       }\n>         hg      1:1695:       bufferLim = newBuf + bufferSize;\n> \n>         hg      1:1712:       if (bufferPtr) {\n>         hg      1:1713:         memcpy(newBuf, bufferPtr, bufferEnd - bufferPtr); [#4]\n>         hg      1:1714:         FREE(buffer);\n>         hg      1:1715:       }\n>         hg      1:1716:       bufferEnd = newBuf + (bufferEnd - bufferPtr);\n>         hg      1:1717:       bufferPtr = buffer = newBuf;\n>         \n>         hg      1:1719:     }\n>         hg      1:1720:   }\n>         hg      1:1721:   return bufferEnd; [#5]\n>         hg      1:1722: }", "author": "erahm@mozilla.com", "id": 10048226, "time": "2015-03-18T23:11:44Z"}, {"text": "Any chance you could look into a fix for this, Eric?  Thanks.", "author": "continuation@gmail.com", "id": 10137671, "time": "2015-04-09T18:12:38Z"}, {"text": "I'll take a look at this today.", "author": "erahm@mozilla.com", "id": 10143134, "time": "2015-04-10T20:13:13Z"}, {"text": "Created attachment 8591124\nWIP\n\nThis patch adds various integer overflow sanity checks. Testing against the provided python script results in an out of memory error page. If someone with ASAN skills could test this against an ASAN build that would be helpful.", "author": "erahm@mozilla.com", "id": 10143830, "time": "2015-04-10T22:52:10Z"}, {"text": ":mccr8 can you check this out w/ ASAN?", "author": "erahm@mozilla.com", "id": 10143859, "time": "2015-04-10T23:00:29Z"}, {"text": "I applied the patch from comment # 11 and built an asan m-c. Following the test cases I added in comment # 4, I received the following error page rather than the crash that I was receiving before:\n\nXML Parsing Error: out of memory\nLocation: http://localhost/\nLine Number 1, Column 1:\n\nThe one thing that I did notice is that once you receive the above \"XML Parsing Error: out of memory\" error page, fx will enter into a \"not responding\" mode once you interact with the browser (opening a new tab, switching tabs and especially re-sizing the browser window). After a few minutes of \"not responding\", fx will be restored with the earlier interaction finally completing. I think this is happening because the earlier tab is still connected to the python script that's still serving the large amount of compressed bytes. Once you close that tab, fx performs as expected.\n\n* used the following m-c build: e8b5ab0ce7a6 bug_1140537/qbase/qtip/tip\n\nI'll leave the :mccr8 needinfo in case Andrew sees something that I might have missed. Let me know if this helps Eric!", "author": "kamiljoz@gmail.com", "id": 10154121, "time": "2015-04-14T17:34:46Z"}, {"text": "Thanks, Kamil!  I don't think I need to look at it, too. :)", "author": "continuation@gmail.com", "id": 10154174, "time": "2015-04-14T17:44:39Z"}, {"text": "Created attachment 8592473\nSanity check size calculations\n\nThis is the same patch as before with an updated title. Peter can you take a look at this?", "author": "erahm@mozilla.com", "id": 10155523, "time": "2015-04-14T21:36:23Z"}, {"text": "Comment on attachment 8592473\nSanity check size calculations\n\nReview of attachment 8592473:\n-----------------------------------------------------------------\n\nThe project looks a bit dead but you should submit this at http://sourceforge.net/p/expat/patches/ too.", "author": "peterv@propagandism.org", "id": 10184685, "time": "2015-04-22T09:46:52Z"}, {"text": "Eric said that this would probably be pretty easy to write a bunch off the end of the array with this, so I'm upgrading this to sec-critical.", "author": "continuation@gmail.com", "id": 10192148, "time": "2015-04-23T18:52:07Z"}, {"text": "Comment on attachment 8592473\nSanity check size calculations\n\nNote: as mentioned by Peter, this is a bug in libexpat which is not fixed upstream. It could effect all users of libexpat.\n\n[Security approval request comment]\nHow easily could an exploit be constructed based on the patch?\n\nEasy.\n\nDo comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?\n\nYes, the problem is quite obvious.\n\nWhich older supported branches are affected by this flaw?\n\nAll.\n\nIf not all supported branches, which bug introduced the flaw?\n\nN/A.\n\nDo you have backports for the affected branches? If not, how different, hard to create, and risky will they be?\n\nThis code hasn't changed in a long time, it should cleanly apply.\n\nHow likely is this patch to cause regressions; how much testing does it need?\n\nUnlikely, it just adds sanity checks on buffer sizes.", "author": "erahm@mozilla.com", "id": 10192188, "time": "2015-04-23T19:01:32Z"}, {"text": "sec-approval+ for trunk. We're going to want this on all supported branches though. Please prepare and nominate Aurora, Beta, and ESR31 patches.", "author": "abillings@mozilla.com", "id": 10193024, "time": "2015-04-23T21:38:46Z"}, {"text": "Comment on attachment 8592473\nSanity check size calculations\n\nI have verified this patch applies cleanly to m-c, m-b, m-a, and m-esr31.\n\nApproval Request Comment (Aurora+Beta)\n[Feature/regressing bug #]:\nNone, issue exists upstream.\n[User impact if declined]:\nBuffer overflow.\n[Describe test coverage new/current, TreeHerder]:\nWe don't currently have libexpat tests, but anything that uses XML should exercise this code path. Verified that the attached testcase no longer crashes.\n[Risks and why]: \nNone.\n[String/UUID change made/needed]:\nN/A.\n\n\n[Approval Request Comment (ESR31)]\nIf this is not a sec:{high,crit} bug, please state case for ESR consideration:\nThis is sec-crit.\nUser impact if declined: \nBuffer overflow.\nFix Landed on Version:\nTargeting m-c, m-a, m-b.\nRisk to taking this patch (and alternatives if risky): \nNone.\nString or UUID changes made by this patch: \nN/A\n\nSee https://wiki.mozilla.org/Release_Management/ESR_Landing_Process for more info.", "author": "erahm@mozilla.com", "id": 10197361, "time": "2015-04-24T20:19:05Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/438d9e2a991a", "author": "ryanvm@gmail.com", "id": 10201730, "time": "2015-04-27T14:00:29Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/f628845b9e9f\nhttps://hg.mozilla.org/releases/mozilla-release/rev/a7d6b32a504c\nhttps://hg.mozilla.org/releases/mozilla-esr31/rev/2f3e78643f5c", "author": "ryanvm@gmail.com", "id": 10202368, "time": "2015-04-27T16:07:43Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/438d9e2a991a", "author": "ryanvm@gmail.com", "id": 10203412, "time": "2015-04-27T19:20:28Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-beta/rev/a7d6b32a504c\nhttps://hg.mozilla.org/releases/mozilla-b2g37_v2_2/rev/c7dd12c6199f\nhttps://hg.mozilla.org/releases/mozilla-b2g34_v2_1/rev/800e9ea58ed6\nhttps://hg.mozilla.org/releases/mozilla-b2g34_v2_1s/rev/800e9ea58ed6\nhttps://hg.mozilla.org/releases/mozilla-b2g32_v2_0/rev/58a4823c2353\nhttps://hg.mozilla.org/releases/mozilla-b2g32_v2_0m/rev/58a4823c2353\nhttps://hg.mozilla.org/releases/mozilla-b2g30_v1_4/rev/c48d05987e7a", "author": "ryanvm@gmail.com", "id": 10204940, "time": "2015-04-28T01:21:40Z"}, {"text": "Created attachment 8599095\nmemoryMapError.txt\n\nI keep getting the following asan crash on m-c changeset: 1ad65cbeb2f4 when going through the following:\n\nSTR:\n\n- download the python script from comment # 3\n- sudo python testcase.py in a terminal/cmd prompt\n- wait till you receive \"Serving Requests.\"\n- visit http://localhost:80 from the browser while using e10s\n- wait about 5 minutes and disable e10s via the preferences (this will take a while after selecting \"OK\" on the prompt)\n- wait anywhere between 5-10 minutes until the browser restarts itself in normal mode (no e10s)\n- wait another 5 minutes or so and the browser will eventually crash\n\nI also get a very long memory map dump that I've attached to this ticket (not sure if it's useful). This reproducible pretty much every single time. \n\n==42524==AddressSanitizer CHECK failed: /home/kjozwiak/code/llvm/projects/compiler-rt/lib/sanitizer_common/sanitizer_posix.cc:68 \"((\"unable to mmap\" && 0)) != (0)\" (0x0, 0x0)\n    #0 0x46738d in AsanCheckFailed _asan_rtl_\n    #1 0x46bfe3 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) sanitizer_common.cc:76\n    #2 0x470220 in __sanitizer::MmapOrDie(unsigned long, char const*) sanitizer_posix.cc:68\n    #3 0x41f035 in __sanitizer::LargeMmapAllocator<__asan::AsanMapUnmapCallback>::Allocate(__sanitizer::AllocatorStats*, unsigned long, unsigned long) sanitizer_allocator.h:1011\n    #4 0x41fbd5 in Reallocate asan_allocator2.cc:518\n    #5 0x461046 in __interceptor_realloc _asan_rtl_\n    #6 0x7f431981db01 in Realloc nsSubstring.cpp:246\n    #7 0x7f431982504e in ReplacePrepInternal nsTSubstring.cpp:169\n    #8 0x7f43198280ab in ReplacePrep nsTSubstring.h:1010\n    #9 0x7f431b52f335 in Append nsTSubstring.h:524\n    #10 0x7f431b5326a6 in ConsumeToken nsExpatDriver.cpp:1184\n    #11 0x7f431b542429 in Tokenize nsParser.cpp:1943\n    #12 0x7f431b53dc5d in ResumeParse nsParser.cpp:1464\n    #13 0x7f431b5439ba in OnDataAvailable nsParser.cpp:1841\n    #14 0x7f4319c5ae11 in do_OnDataAvailable nsHTTPCompressConv.cpp:356\n    #15 0x7f4319f3e525 in OnDataAvailable nsHttpChannel.cpp:5785\n    #16 0x7f4319b0c967 in OnStateTransfer nsInputStreamPump.cpp:607\n    #17 0x7f4319b0b727 in OnInputStreamReady nsInputStreamPump.cpp:436\n    #18 0x7f4319924109 in Run nsStreamUtils.cpp:91\n    #19 0x7f43199602c4 in ProcessNextEvent nsThread.cpp:868\n    #20 0x7f43199bdaea in NS_ProcessNextEvent nsThreadUtils.cpp:265\n    #21 0x7f431a338a59 in Run MessagePump.cpp:95\n    #22 0x7f431a289c6c in RunInternal message_loop.cc:233\n    #23 0x7f431f61cce7 in Run nsBaseAppShell.cpp:165\n    #24 0x7f43212a7468 in Run nsAppStartup.cpp:280\n    #25 0x7f43213a8b2c in XRE_mainRun nsAppRunner.cpp:4071\n    #26 0x7f43213a9b4c in XRE_main nsAppRunner.cpp:4151\n    #27 0x7f43213aa9c5 in XRE_main nsAppRunner.cpp:4240\n    #28 0x47b07a in do_main nsBrowserApp.cpp:214\n    #29 0x7f432a8faec4 in __libc_start_main libc-start.c:287\n    #30 0x47a54a in _start ??:?\n\nEric, is this related or something completely different?", "author": "kamiljoz@gmail.com", "id": 10210709, "time": "2015-04-29T04:48:14Z"}, {"text": "This is somewhat different, I don't think we're seeing a buffer overrun in this case. The stack looks a little off though...\n\nConsumeToken nsExpatDriver.cpp:1184 [1]:\n>   HandleError();\nso not a string call. My guess is it's really the append call a few lines up [2]:\n>   mLastLine.Append(Substring(buffer, buffer + endOffset));\n\nWhich indeed could be rather large given the size of the input. TBH, it's not clear to me *why* we're doing this \"find the next newline and append\" logic at all (I guess it's for the error message?)\n\n[1] https://hg.mozilla.org/mozilla-central/annotate/a0787486ecf5/parser/htmlparser/nsExpatDriver.cpp#l1184\n[2] https://hg.mozilla.org/mozilla-central/annotate/a0787486ecf5/parser/htmlparser/nsExpatDriver.cpp#l1175", "author": "erahm@mozilla.com", "id": 10214568, "time": "2015-04-29T22:48:12Z"}, {"text": "If this looks somewhat different than the original buffer overrun that was reported, I'll create a new bug to address comment #25 and continue going through verifications on the other channels.\n\nEric, let me know if this sounds reasonable :)", "author": "kamiljoz@gmail.com", "id": 10217251, "time": "2015-04-30T14:42:45Z"}, {"text": "(In reply to Kamil Jozwiak [:kjozwiak] from comment #27)\n> If this looks somewhat different than the original buffer overrun that was\n> reported, I'll create a new bug to address comment #25 and continue going\n> through verifications on the other channels.\n> \n> Eric, let me know if this sounds reasonable :)\n\nYes a separate follow up sounds fine. In general we need to do a better job of handling large XML streams in nsExpatDriver:\n  - We should limit the amount of data we feed to libexpat (something like 20MiB seems reasonable) and just hand it over in chunks\n  - Any sort of logging should have a size limitation. This includes debug logs and error messages.", "author": "erahm@mozilla.com", "id": 10218652, "time": "2015-04-30T19:10:45Z"}, {"text": "I reproduced the initial issue using an Asan build from 2015-04-14 using steps from comment 4. To verify the fix I used Firefox 38.0 ESR build 1 and 31.7.0 ESR build 2 and did not encounter any crashes, only hangs on Linux and on Mac the browser also hangs if stay on the tab I loaded localhost, and also I get this in that tab: \n\n> XML Parsing Error: Out of memory\n> Location: http://localhost/\n> Line Number 1, Column 1:\n\nIs this expected?", "author": "bogdan.maris@softvision.ro", "id": 10237171, "time": "2015-05-06T14:20:28Z"}, {"text": "(In reply to Bogdan Maris, QA [:bogdan_maris] from comment #29)\n> I reproduced the initial issue using an Asan build from 2015-04-14 using\n> steps from comment 4. To verify the fix I used Firefox 38.0 ESR build 1 and\n> 31.7.0 ESR build 2 and did not encounter any crashes, only hangs on Linux\n> and on Mac the browser also hangs if stay on the tab I loaded localhost, and\n> also I get this in that tab: \n> \n> > XML Parsing Error: Out of memory\n> > Location: http://localhost/\n> > Line Number 1, Column 1:\n> \n> Is this expected?\n\nYes, per comment 11 and comment 13 an out of memory error page is expected.", "author": "erahm@mozilla.com", "id": 10237928, "time": "2015-05-06T16:47:18Z"}, {"text": "(In reply to Eric Rahm [:erahm] from comment #30)\n> (In reply to Bogdan Maris, QA [:bogdan_maris] from comment #29)\n> > I reproduced the initial issue using an Asan build from 2015-04-14 using\n> > steps from comment 4. To verify the fix I used Firefox 38.0 ESR build 1 and\n> > 31.7.0 ESR build 2 and did not encounter any crashes, only hangs on Linux\n> > and on Mac the browser also hangs if stay on the tab I loaded localhost, and\n> > also I get this in that tab: \n> > \n> > > XML Parsing Error: Out of memory\n> > > Location: http://localhost/\n> > > Line Number 1, Column 1:\n> > \n> > Is this expected?\n> \n> Yes, per comment 11 and comment 13 an out of memory error page is expected.\n\nRight, thanks Eric. Marking this as verified on 31.7.0 ESR and 38.0 ESR.", "author": "bogdan.maris@softvision.ro", "id": 10240939, "time": "2015-05-07T07:11:01Z"}, {"text": "(In reply to Eric Rahm [:erahm] from comment #18)\n \n> Note: as mentioned by Peter, this is a bug in libexpat which is not fixed\n> upstream. It could effect all users of libexpat.\n\nHas anyone reported this upstream to the maintainers of libexpat, whomever they are?", "author": "abillings@mozilla.com", "id": 10245420, "time": "2015-05-08T00:20:43Z"}, {"text": "(In reply to Al Billings [:abillings] from comment #32)\n> (In reply to Eric Rahm [:erahm] from comment #18)\n>  \n> > Note: as mentioned by Peter, this is a bug in libexpat which is not fixed\n> > upstream. It could effect all users of libexpat.\n> \n> Has anyone reported this upstream to the maintainers of libexpat, whomever\n> they are?\n\nI have not, a cursory look seems to indicate it's not being actively developed.\n\nThe last release was in 2012 [1], which does seem to indicate there were security fixes. They do seem to have a bug page [2] where some folks have commented on bugs more recently. The best I can tell is that someone named 'Karl Waclawek' is the current maintainer.\n\n[1] http://www.libexpat.org/\n[2] http://sourceforge.net/p/expat/bugs/?source=navbar&page=0", "author": "erahm@mozilla.com", "id": 10245526, "time": "2015-05-08T01:12:43Z"}, {"text": "Because of Bug # 1161062 (I'm assuming that's the cause), you'll eventually crash fx if you reload the poc a few times in the same session. The unfortunate part is that it doesn't generate a crash report :( I've added more details in Bug # 1161062 comment # 1. There's also an image of the crash message that fx displays.\n\nWent through verification using the following builds:\n- https://ftp.mozilla.org/pub/mozilla.org/firefox/candidates/38.0-candidates/build2/linux-x86_64/en-US/\n- https://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2015-05-08-00-40-08-mozilla-aurora/\n\nReceive the \"XML Parsing Error: out of memory\" error rather than crashing.", "author": "kamiljoz@gmail.com", "id": 10248067, "time": "2015-05-08T16:53:32Z"}, {"text": "I think we can open this bug since the issue is public now:\nhttps://codereview.chromium.org/1224303003\nhttp://sourceforge.net/p/expat/bugs/528/\n\nPerhaps hide any STR / PoC first though...", "author": "mats@mozilla.com", "id": 10701056, "time": "2015-09-06T18:54:57Z"}, {"text": "Think so, even POC is published by chromium dev. http://code.google.com/p/chromium/issues/detail?id=492052\nBut it's interesting how reporter got same poc, as i attached here.\n\n(In reply to Mats Palmgren (:mats) from comment #35)\n> I think we can open this bug since the issue is public now:\n> https://codereview.chromium.org/1224303003\n> http://sourceforge.net/p/expat/bugs/528/\n> \n> Perhaps hide any STR / PoC first though...", "author": "ugobejishvili@gmail.com", "id": 10912771, "time": "2015-11-07T09:45:03Z"}, {"text": "(In reply to Ucha Gobejishvili from comment #36)\n> But it's interesting how reporter got same poc, as i attached here.\n\nThat is odd. The test case is exactly the same, character for character.", "author": "continuation@gmail.com", "id": 10924024, "time": "2015-11-11T18:00:16Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #37)\n> (In reply to Ucha Gobejishvili from comment #36)\n> > But it's interesting how reporter got same poc, as i attached here.\n> \n> That is odd. The test case is exactly the same, character for character.\n\nAgree! is it related to bugzilla breach?", "author": "ugobejishvili@gmail.com", "id": 10924087, "time": "2015-11-11T18:17:46Z"}, {"text": "It might be. It appears our compromised account loaded this bug and that testcase once, on May 14, 2015.", "author": "dveditz@mozilla.com", "id": 10924144, "time": "2015-11-11T18:33:13Z"}, {"text": "(In reply to Daniel Veditz [:dveditz] from comment #39)\n> It might be. It appears our compromised account loaded this bug and that\n> testcase once, on May 14, 2015.\n\nWell from my side, i can confirm that only place i submitted testcase, it's here in this thread.", "author": "ugobejishvili@gmail.com", "id": 10924156, "time": "2015-11-11T18:37:06Z"}, {"text": "False alarm. We released the fix for this bug on May 12. It was reported to Google after that date by the RedHat Firefox package maintainer, Huzaifa, who had legitimate access to this testcase.", "author": "dveditz@mozilla.com", "id": 10924176, "time": "2015-11-11T18:41:13Z"}, {"text": "It's a bit unfortunate that information that we haven't disclosed (a PoC in a non-public bug\nin this case) is posted in a public forum (a Chromium bug in this case).\n\nAnyway, I guess we can open this bug now?", "author": "mats@mozilla.com", "id": 10924532, "time": "2015-11-11T20:15:42Z"}, {"text": "Indeed, to both points.", "author": "dveditz@mozilla.com", "id": 10925866, "time": "2015-11-12T04:13:27Z"}, {"text": "For the sake of anyone reading through to comment 44, I should point out that the fix at https://bug1140537.bmoattachments.org/attachment.cgi?id=8592473 relies on signed arithmetic overflows producing 2's complement result. This is fine for the few people who compile with, say, \u201cgcc -fwrapv\u201d, but not for the majority.\n\nHere is a copy of the message I also sent to Sebastian Pipping, with whom I had been discussing expat:\n\n____\n\nPlease look at the following link. It illustrates how counter-intuitive compiler optimizations have become since the late nineties:\n\nhttps://godbolt.org/g/Zl8gdF\n\nStarting from a positive x, GCC knows that multiplying x by 2, x can only stay positive or overflow. Signed overflow is undefined behavior, so the compiler is allowed to fly daemons out of your nose if that happens. In this case, the compiler reserves the daemons but decides to compile the condition \u201cx > 0\u201d to always true and the test \u201cx <= 0\u201d to always false.\n\nThe last two chunks in the patch that was supposed to fix CVE-2015-1283 (https://sourceforge.net/p/expat/bugs/528/ ) assume that overflows in adding two positives numbers or doubling a positive number can be recognized by testing for a negative result. The last chunk in particular is almost exactly like my example. \n\nThe patch to CVE-2015-1283 is extremely dangerous, as a sufficiently smart compiler will recognize that these conditions are only true or only false for undefined signed overflow, and assume in consequence that they do not happen. This has been reported as a compiler bug over and over (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=30475 https://gcc.gnu.org/bugzilla/show_bug.cgi?id=49820 ). Compiler authors do not treat it as a bug and will not change this behavior. This applies to both GCC and Clang.\n\nThe only thing that possibly still prevents current compilers from applying the same transformation in the case of the last chunk, for instance, is if they are not able to infer that bufferSize starts positive. I'm not sure that they aren't able to infer this, and this is subject to change.\n\nA quick fix to these two chunks might look like:\n\ndiff --git a/expat/lib/xmlparse.c b/expat/lib/xmlparse.c\nindex 7586b24..620a820 100644\n--- a/expat/lib/xmlparse.c\n+++ b/expat/lib/xmlparse.c\n@@ -1730,7 +1730,8 @@ XML_GetBuffer(XML_Parser parser, int len)\n #ifdef XML_CONTEXT_BYTES\n     int keep;\n #endif  /* defined XML_CONTEXT_BYTES */\n-    int neededSize = len + (int)(bufferEnd - bufferPtr);\n+    /* Do not invoke signed arithmetic overflow: */\n+    int neededSize = (int) ((unsigned)len + (unsigned)(bufferEnd - bufferPtr));\n     if (neededSize < 0) {\n       errorCode = XML_ERROR_NO_MEMORY;\n       return NULL;\n@@ -1761,7 +1762,8 @@ XML_GetBuffer(XML_Parser parser, int len)\n       if (bufferSize == 0)\n         bufferSize = INIT_BUFFER_SIZE;\n       do {\n-        bufferSize *= 2;\n+        /* Do not invoke signed arithmetic overflow: */\n+        bufferSize = (int) (2U * (unsigned) bufferSize);\n       } while (bufferSize < neededSize && bufferSize > 0);\n       if (bufferSize <= 0) {\n         errorCode = XML_ERROR_NO_MEMORY;", "author": "cuoq@trust-in-soft.com", "id": 11404946, "time": "2016-05-12T19:25:35Z"}, {"text": "Thanks for the explanation. I filed bug 1272020 based on your initial report. We have a CheckedInt class that should probably used liberally in this file.", "author": "continuation@gmail.com", "id": 11404984, "time": "2016-05-12T19:50:10Z"}], "id": 1140537, "priority": "--", "cc": ["abillings@mozilla.com", "bogdan.maris@softvision.ro", "continuation@gmail.com", "cuoq@trust-in-soft.com", "erahm@mozilla.com", "florin.mezei@softvisioninc.eu", "gijskruitbosch+bugs@gmail.com", "huzaifas@redhat.com", "ioana.chiorean@softvision.ro", "jbryner@mozilla.com", "kamiljoz@gmail.com", "mark@wolfbeast.com", "mats@mozilla.com", "otilia.anica@gmail.com", "peterv@propagandism.org", "ugobejishvili@gmail.com"], "cf_crash_signature": "", "version": "36 Branch", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_firefox59": "---", "cf_status_b2g_2_2": "fixed", "cf_tracking_firefox40": "+", "last_change_time": "2017-03-29T07:17:52Z", "status": "RESOLVED", "product": "Core", "cf_fx_iteration": "---", "blocks": [1161062], "qa_contact": "kamiljoz@gmail.com", "cf_tracking_firefox39": "+", "cf_tracking_firefox38": "+", "creation_time": "2015-03-06T20:16:18Z", "cf_status_firefox_esr52": "---", "component": "XML", "assigned_to_detail": {"email": "erahm@mozilla.com", "id": 496127, "name": "erahm@mozilla.com", "real_name": "Eric Rahm [:erahm] (Away until 3/19) (please no mozreview requests)"}, "cf_tracking_firefox_esr31": "38+", "cf_status_firefox_esr31": "verified", "groups": [], "cf_status_firefox60": "---", "cf_status_b2g_2_1_s": "fixed", "cf_status_firefox40": "verified", "cf_status_firefox_esr38": "verified", "target_milestone": "mozilla40", "is_cc_accessible": true, "cf_rank": null, "cf_status_thunderbird_esr52": "---", "cf_status_b2g_1_4": "fixed", "url": "", "resolution": "FIXED", "creator_detail": {"email": "ugobejishvili@gmail.com", "id": 533421, "name": "ugobejishvili@gmail.com", "real_name": "Ucha Gobejishvili"}, "whiteboard": "[adv-main38+][adv-esr31.7+]", "cf_status_b2g_2_1": "fixed", "cf_status_b2g_2_0": "fixed", "cc_detail": [{"email": "abillings@mozilla.com", "id": 280903, "name": "abillings@mozilla.com", "real_name": "Al Billings [:abillings]"}, {"email": "bogdan.maris@softvision.ro", "id": 458188, "name": "bogdan.maris@softvision.ro", "real_name": "Bogdan Maris, QA [:bogdan_maris]"}, {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, {"email": "cuoq@trust-in-soft.com", "id": 571304, "name": "cuoq@trust-in-soft.com", "real_name": ""}, {"email": "erahm@mozilla.com", "id": 496127, "name": "erahm@mozilla.com", "real_name": "Eric Rahm [:erahm] (Away until 3/19) (please no mozreview requests)"}, {"email": "florin.mezei@softvisioninc.eu", "id": 500713, "name": "florin.mezei@softvisioninc.eu", "real_name": "Florin Mezei, QA (:FlorinMezei)"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (under the weather; responses will be slow)"}, {"email": "huzaifas@redhat.com", "id": 331752, "name": "huzaifas@redhat.com", "real_name": "Huzaifa Sidhpurwala"}, {"email": "ioana.chiorean@softvision.ro", "id": 391404, "name": "ioana.chiorean@softvision.ro", "real_name": "Ioana Chiorean"}, {"email": "jbryner@mozilla.com", "id": 479538, "name": "jbryner@mozilla.com", "real_name": "Jeff Bryner [:jeff]  (use NEEDINFO)"}, {"email": "kamiljoz@gmail.com", "id": 455785, "name": "kamiljoz@gmail.com", "real_name": "Kamil Jozwiak [:kjozwiak]"}, {"email": "mark@wolfbeast.com", "id": 364942, "name": "mark@wolfbeast.com", "real_name": "Mark Straver"}, {"email": "mats@mozilla.com", "id": 5168, "name": "mats@mozilla.com", "real_name": "Mats Palmgren (:mats)"}, {"email": "otilia.anica@gmail.com", "id": 421380, "name": "otilia.anica@gmail.com", "real_name": "Otilia Anica"}, {"email": "peterv@propagandism.org", "id": 24295, "name": "peterv@propagandism.org", "real_name": "Peter Van der Beken [:peterv]"}, {"email": "ugobejishvili@gmail.com", "id": 533421, "name": "ugobejishvili@gmail.com", "real_name": "Ucha Gobejishvili"}], "cf_platform_rel": "---", "alias": "CVE-2015-2716", "dupe_of": null, "flags": [{"status": "+", "name": "sec-bounty", "modification_date": "2015-06-01T20:25:14Z", "type_id": 803, "creation_date": "2015-05-26T21:01:02Z", "id": 1175256, "setter": "abillings@mozilla.com"}], "cf_tracking_firefox58": "---", "assigned_to": "erahm@mozilla.com", "is_open": false, "mentors": [], "creator": "ugobejishvili@gmail.com", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}