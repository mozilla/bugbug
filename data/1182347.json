{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bobbyholley@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-07-10T05:38:47Z", "type_id": 4, "creation_date": "2015-07-10T00:23:59Z", "id": 1205698, "setter": "jonas@sicking.cc"}, {"status": "+", "name": "feedback", "modification_date": "2015-07-13T08:08:10Z", "type_id": 607, "creation_date": "2015-07-10T00:23:59Z", "id": 1205699, "setter": "allstars.chh@mozilla.bugs"}], "content_type": "text/plain", "id": 8631905}, {"creator": "bobbyholley@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-07-10T21:26:41Z", "type_id": 4, "creation_date": "2015-07-10T00:24:32Z", "id": 1205700, "setter": "jonas@sicking.cc"}, {"status": "+", "name": "review", "modification_date": "2015-07-13T08:10:55Z", "type_id": 4, "creation_date": "2015-07-10T00:24:32Z", "id": 1205701, "setter": "allstars.chh@mozilla.bugs"}], "content_type": "text/plain", "id": 8631906}, {"creator": "bobbyholley@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-07-10T05:54:48Z", "type_id": 4, "creation_date": "2015-07-10T00:25:13Z", "id": 1205703, "setter": "jonas@sicking.cc"}], "content_type": "text/plain", "id": 8631907}], "classification": "Components", "creator": "bobbyholley@gmail.com", "cc": ["allstars.chh@mozilla.bugs", "angelesoteo@gmail.com", "bugzilla@senglehardt.com", "bzbarsky@mit.edu", "gkrizsanits@mozilla.com", "jgong@mozilla.com", "jonas@sicking.cc", "josh@joshmatthews.net", "noemi.freiredecarlos@telefonica.com", "ptheriault@mozilla.com", "tanvi@mozilla.com"], "depends_on": [1180921, 1182357], "creation_time": "2015-07-10T00:20:15Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Eliminate nsIPrincipal::cookieJar", "id": 1182347, "assigned_to_detail": {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (:bholley)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "bobbyholley@gmail.com", "comment_count": 14, "comments": [{"text": "Jonas and I had a call about this today. The conclusion was that the current design of .cookieJar is too complicated, and we should get rid of it. Rationale is as follows:\n\nThe idea behind .cookieJar was to have every piece of private data in the system be associated with a key, such that we can efficiently clear all private data associated with that key. However, it has two downsides:\n\n(1) It requires extra complication in the database schema of every consumer that stores private data. In order for this to be efficient, the database needs an extra column to store the cookieJar value.\n\n(2) It is very inflexible:\n* We can only wipe data for things that are encoded in .cookieJar. New OriginAttributes don't have this capability by default.\n* To add this capability for a new OriginAttribute, we'd need to change the format of .cookieJar, which potentially involves adding migrations for _every single_ consumer that uses .cookieJar as a key.\n* It is difficult to clear data based on a subset of the attributes encoded in .cookieJar. In the current world, clearing all data associated with a given app involves sending two notifications: one with inBrowser=true and the other with inBrowser=false. This kinda-sorta works, but only because there are only two possible values for inBrowser. For any other data types that we add (strings, ints, etc), this doens't work.\n\nThe idea behind the new scheme is to introduce a new dictionary class called OriginAttributesPattern, which has the same members as OriginAttributes, except that each entry is optional. To clear private data, callers send a JSON-ified object containing the attributes that they want to match - each attribute makes the operation more restrictive. Sending {appId: 42} clears all data associated with app 42, whereas sending {appId: 42, inBrowser: true} clears all data that is associated with app 42 _and also_ is in a mozBrowser.\n\nThis requires consumers to parse the originAttributes for each origin in the database, which could be slow - but we think this operation is infrequent enough that we should be optimizing for simplicity and flexibility, not speed. For the cases where speed matters, the consumer can add extra columns to the database for different originAttributes, and detect when all the attributes in the pattern are available as columns - in that case, it can use a fast-path that matches the results in a single query.\n\nI'm attaching the patches that I have - please let me know what you think. Yoshi, I'm really sorry for switching up the design on you like this, but hopefully this will make it easier and simpler going forward.", "author": "bobbyholley@gmail.com", "id": 10477749, "time": "2015-07-10T00:20:15Z"}, {"text": "Created attachment 8631905\nPart 1 - Implement OriginAttributesPattern. v1", "author": "bobbyholley@gmail.com", "id": 10477770, "time": "2015-07-10T00:23:59Z"}, {"text": "Created attachment 8631906\nPart 2 - Migrate existing code away from .cookieJar. v1", "author": "bobbyholley@gmail.com", "id": 10477771, "time": "2015-07-10T00:24:32Z"}, {"text": "Created attachment 8631907\nPart 3 - Remove nsIPrincipal::cookieJar. v1", "author": "bobbyholley@gmail.com", "id": 10477773, "time": "2015-07-10T00:25:13Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=e3d08b038cf5", "author": "bobbyholley@gmail.com", "id": 10477823, "time": "2015-07-10T00:37:09Z"}, {"text": "Comment on attachment 8631905\nPart 1 - Implement OriginAttributesPattern. v1\n\nReview of attachment 8631905:\n-----------------------------------------------------------------\n\n::: dom/webidl/ChromeUtils.webidl\n@@ +50,5 @@\n> + * (2) Update the methods on mozilla::OriginAttributes, including equality,\n> + *     serialization, and deserialization.\n> + * (3) Update the methods on mozilla::OriginAttributesPattern, including matching.\n> + * (4) Bump the CIDs (_not_ IIDs) of all the principal implementations that\n> + *     use OriginAttributes in their nsISerializable implementations.\n\nI'm curious to know why updating the CID is important. But that's not new so not affecting this review.", "author": "jonas@sicking.cc", "id": 10478438, "time": "2015-07-10T05:38:47Z"}, {"text": "> I'm curious to know why updating the CID is important.\n\nBecause otherwise nsISerializable might create an object that doesn't match the stored data and try writing said data into it.", "author": "bzbarsky@mit.edu", "id": 10478446, "time": "2015-07-10T05:46:46Z"}, {"text": "Comment on attachment 8631906\nPart 2 - Migrate existing code away from .cookieJar. v1\n\nReview of attachment 8631906:\n-----------------------------------------------------------------\n\nlooks good otherwise, but I think it'd be nice to not have to run a full JSON parser to handle this notification?\n\n::: dom/apps/Webapps.jsm\n@@ +4862,2 @@\n>      }\n> +    this._notifyCategoryAndObservers(null, \"clear-origin-data\", JSON.stringify(attributes));\n\nSo this still will require a bunch of C++ callsites to do JSON parsing of the attributes, no?", "author": "jonas@sicking.cc", "id": 10478468, "time": "2015-07-10T05:57:51Z"}, {"text": "(In reply to Jonas Sicking (:sicking) from comment #7)\n> So this still will require a bunch of C++ callsites to do JSON parsing of\n> the attributes, no?\n\nAs noted in the comments, it's implicit in the bindings machinery. The callers just do:\n\nOriginAttributesPattern pattern;\nif (!pattern.Init(aJSONString)) {\n  ... // handle failure.\n}\n\nSo the API is super convenient and safe, and it's just a question of overhead, which doesn't really worry me at all. The alternative would be to make some sort of nsIOriginAttributesPatternWrapper, which could hold onto the underlying object and expose the ability to access it as a jsval or access it as a C++ object. What we have here seems like a much simpler and cleaner solution.", "author": "bobbyholley@gmail.com", "id": 10481254, "time": "2015-07-10T20:47:13Z"}, {"text": "Comment on attachment 8631906\nPart 2 - Migrate existing code away from .cookieJar. v1\n\nReview of attachment 8631906:\n-----------------------------------------------------------------\n\nAh, I missed that comment.\n\nCould you move the comment to be directly above the class and also include the code example. Since the .Init function lives entirely in generated code, it's quite hard to figure out how to use it, or that it exists.", "author": "jonas@sicking.cc", "id": 10481443, "time": "2015-07-10T21:26:41Z"}, {"text": "Comment on attachment 8631905\nPart 1 - Implement OriginAttributesPattern. v1\n\nReview of attachment 8631905:\n-----------------------------------------------------------------\n\n::: dom/webidl/ChromeUtils.webidl\n@@ +28,5 @@\n>    originAttributesToSuffix(optional OriginAttributesDictionary originAttrs);\n> +\n> +  /**\n> +   * Returns true if the members of |originAttrs| match the provided members\n> +   * members of |pattern|.\n\nThere are two occurrences of 'members' here.", "author": "allstars.chh@mozilla.bugs", "id": 10484838, "time": "2015-07-13T08:08:10Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=11a6611adb36", "author": "bobbyholley@gmail.com", "id": 10492277, "time": "2015-07-14T16:10:33Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/696c6303dcd6\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/ea814efe34e9\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/a2995b5458fa", "author": "pulsebot@bots.tld", "id": 10495102, "time": "2015-07-15T02:57:43Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/696c6303dcd6\nhttps://hg.mozilla.org/mozilla-central/rev/ea814efe34e9\nhttps://hg.mozilla.org/mozilla-central/rev/a2995b5458fa", "author": "ryanvm@gmail.com", "id": 10498500, "time": "2015-07-15T17:25:15Z"}], "cf_last_resolved": "2015-07-15T17:25:15Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-07-15T17:25:15Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1165214, 1179985], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Security: CAPS", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox42": "fixed", "target_milestone": "mozilla42", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (:bholley)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "allstars.chh@mozilla.bugs", "id": 434672, "name": "allstars.chh@mozilla.bugs", "real_name": "Yoshi Huang [:allstars.chh], Inactive"}, {"email": "angelesoteo@gmail.com", "id": 434278, "name": "angelesoteo@gmail.com", "real_name": "Maria Angeles Oteo (:oteo)"}, {"email": "bugzilla@senglehardt.com", "id": 541587, "name": "bugzilla@senglehardt.com", "real_name": "Steven Englehardt [:englehardt]"}, {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (no decent commit message means r-)"}, {"email": "gkrizsanits@mozilla.com", "id": 420273, "name": "gkrizsanits@mozilla.com", "real_name": "Gabor Krizsanits (INACTIVE)"}, {"email": "jgong@mozilla.com", "id": 489805, "name": "jgong@mozilla.com", "real_name": "Jean Gong :jgong"}, {"email": "jonas@sicking.cc", "id": 9186, "name": "jonas@sicking.cc", "real_name": "Jonas Sicking (:sicking) No longer reading bugmail consistently"}, {"email": "josh@joshmatthews.net", "id": 241497, "name": "josh@joshmatthews.net", "real_name": "Josh Matthews [:jdm]"}, {"email": "noemi.freiredecarlos@telefonica.com", "id": 469924, "name": "noemi.freiredecarlos@telefonica.com", "real_name": "Noem\u00ed Freire (:noemi)"}, {"email": "ptheriault@mozilla.com", "id": 434339, "name": "ptheriault@mozilla.com", "real_name": "Paul Theriault [:pauljt]"}, {"email": "tanvi@mozilla.com", "id": 430652, "name": "tanvi@mozilla.com", "real_name": "Tanvi Vyas[:tanvi]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8631905, "added": "review?(jonas@sicking.cc), feedback?(allstars.chh@mozilla.com)"}], "who": "bobbyholley@gmail.com", "when": "2015-07-10T00:23:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8631906, "added": "review?(jonas@sicking.cc), review?(allstars.chh@mozilla.com)"}], "who": "bobbyholley@gmail.com", "when": "2015-07-10T00:24:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8631907, "added": "review?(jonas@sicking.cc)"}], "who": "bobbyholley@gmail.com", "when": "2015-07-10T00:25:13Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1182357"}], "who": "bill.mccloskey@gmail.com", "when": "2015-07-10T00:58:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jonas@sicking.cc)", "attachment_id": 8631905, "added": "review+"}], "who": "jonas@sicking.cc", "when": "2015-07-10T05:38:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jonas@sicking.cc)", "attachment_id": 8631907, "added": "review+"}], "who": "jonas@sicking.cc", "when": "2015-07-10T05:54:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "josh@joshmatthews.net"}], "who": "josh@joshmatthews.net", "when": "2015-07-10T06:00:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "senglehardt@mozilla.com"}], "who": "tanvi@mozilla.com", "when": "2015-07-10T06:03:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "oteo@tid.es"}], "who": "angelesoteo@gmail.com", "when": "2015-07-10T06:34:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "noemi.freiredecarlos@telefonica.com"}], "who": "noemi.freiredecarlos@telefonica.com", "when": "2015-07-10T06:55:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jonas@sicking.cc)", "attachment_id": 8631906, "added": "review+"}], "who": "jonas@sicking.cc", "when": "2015-07-10T21:26:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(allstars.chh@mozilla.com)", "attachment_id": 8631905, "added": "feedback+"}], "who": "allstars.chh@mozilla.bugs", "when": "2015-07-13T08:08:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(allstars.chh@mozilla.com)", "attachment_id": 8631906, "added": "review+"}], "who": "allstars.chh@mozilla.bugs", "when": "2015-07-13T08:10:55Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla42"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-07-15 10:25:15"}, {"removed": "---", "field_name": "cf_status_firefox42", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2015-07-15T17:25:15Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}