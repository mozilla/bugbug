{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "sotaro.ikeda.g@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8685325}, {"creator": "sotaro.ikeda.g@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-10T09:21:34Z", "type_id": 4, "creation_date": "2015-11-10T08:44:17Z", "id": 1289550, "setter": "n.nethercote@gmail.com"}], "content_type": "text/plain", "id": 8685326}, {"creator": "sotaro.ikeda.g@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-11T06:58:29Z", "type_id": 4, "creation_date": "2015-11-11T06:58:29Z", "id": 1290350, "setter": "sotaro.ikeda.g@gmail.com"}], "content_type": "text/plain", "id": 8685842}], "classification": "Components", "creator": "n.nethercote@gmail.com", "cc": ["n.nethercote@gmail.com", "sotaro.ikeda.g@gmail.com"], "depends_on": [1251091], "creation_time": "2015-07-23T06:45:10Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Replace nsBaseHashtable::EnumerateRead() calls in image/ with iterators", "id": 1186796, "assigned_to_detail": {"email": "sotaro.ikeda.g@gmail.com", "id": 434202, "name": "sotaro.ikeda.g@gmail.com", "real_name": "Sotaro Ikeda [:sotaro]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_status_firefox45": "fixed", "cf_has_regression_range": "---", "assigned_to": "sotaro.ikeda.g@gmail.com", "comment_count": 7, "comments": [{"text": "Because iterators are so much nicer than enumerate functions.\n\nThere are four occurrences of EnumerateRead() in this directory.\n\nA note to the assignee: to preserve existing behaviour, you should probably use\nnsBaseHashtable::Iterator::UserData() rather than nsBaseHashtable::Iterator::Data(). (The latter should be used when replacing nsBaseHashtable::Enumerate()).", "author": "n.nethercote@gmail.com", "id": 10528139, "time": "2015-07-23T06:45:10Z"}, {"text": "Created attachment 8685325\npatch - Replace nsBaseHashtable::EnumerateRead() calls in image/ with iterators", "author": "sotaro.ikeda.g@gmail.com", "id": 10918478, "time": "2015-11-10T08:33:52Z"}, {"text": "Created attachment 8685326\npatch - Replace nsBaseHashtable::EnumerateRead() calls in image/ with iterators\n\nRemove unnecessary functions.", "author": "sotaro.ikeda.g@gmail.com", "id": 10918488, "time": "2015-11-10T08:39:00Z"}, {"text": "Comment on attachment 8685326\npatch - Replace nsBaseHashtable::EnumerateRead() calls in image/ with iterators\n\nReview of attachment 8685326:\n-----------------------------------------------------------------\n\nr=me with the following comments addressed.\n\n::: image/SurfaceCache.cpp\n@@ -285,5 @@\n>      }\n>  \n>      // There's no perfect match, so find the best match we can.\n>      MatchContext matchContext(aSurfaceKey);\n> -    ForEach(TryToImproveMatch, &matchContext);\n\nYou can remove MatchContext too, now -- just use local variables for its fields.\n\n@@ +714,5 @@\n> +    for (auto iter = cache->ConstIter(); !iter.Done(); iter.Next()) {\n> +      CachedSurface* surface = iter.UserData();\n> +      if (surface->IsPlaceholder() || !surface->IsLocked()) {\n> +        continue;\n> +      }\n\nThis loop is large enough that duplicating it is a shame. I'd prefer it if you factored it out into its own function, e.g. UnlockSurfaces().\n\n@@ +757,5 @@\n>      // small, performance should be good, but if usage patterns change we should\n>      // change the data structure used for mCosts.\n> +    for (auto iter = cache->ConstIter(); !iter.Done(); iter.Next()) {\n> +      CachedSurface* surface = iter.UserData();\n> +      StopTracking(surface);\n\nI would avoid the local variable and just do this: |StopTracking(iter.UserData());|\n\n@@ +865,5 @@\n>      CachedSurface::SurfaceMemoryReport report(aCounters, aMallocSizeOf);\n> +    for (auto iter = cache->ConstIter(); !iter.Done(); iter.Next()) {\n> +      CachedSurface* surface = iter.UserData();\n> +      report.Add(surface);\n> +    }\n\nSame thing here: avoid the the local variable.\n\n::: image/imgLoader.cpp\n@@ +80,5 @@\n> +        imgCacheEntry* entry = iter.UserData();\n> +        RefPtr<imgRequest> req = entry->GetRequest();\n> +        RecordCounterForRequest(req,\n> +                                &chrome,\n> +                                !entry->HasNoProxies());\n\nPut this function call on a single line.\n\n@@ +83,5 @@\n> +                                &chrome,\n> +                                !entry->HasNoProxies());\n> +      }\n> +      for (auto iter = mKnownLoaders[i]->mCache.Iter(); !iter.Done(); iter.Next()) {\n> +       imgCacheEntry* entry = iter.UserData();\n\nIndent this line one more char.\n\n@@ +87,5 @@\n> +       imgCacheEntry* entry = iter.UserData();\n> +        RefPtr<imgRequest> req = entry->GetRequest();\n> +        RecordCounterForRequest(req,\n> +                                &content,\n> +                                !entry->HasNoProxies());\n\nPut this function call on a single line.", "author": "n.nethercote@gmail.com", "id": 10918609, "time": "2015-11-10T09:21:34Z"}, {"text": "Created attachment 8685842\npatch - Replace nsBaseHashtable::EnumerateRead() calls in image/ with iterators\n\nApply the comments. Carry \"r=njn\".", "author": "sotaro.ikeda.g@gmail.com", "id": 10922194, "time": "2015-11-11T06:58:29Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/411f18fdffeb", "author": "pulsebot@bots.tld", "id": 10922214, "time": "2015-11-11T07:08:42Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/411f18fdffeb", "author": "cbook@mozilla.com", "id": 10922828, "time": "2015-11-11T11:47:28Z"}], "cf_last_resolved": "2015-11-11T11:47:28Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-02-25T00:46:46Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1181444], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "ImageLib", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla45", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "n.nethercote@gmail.com", "id": 334849, "name": "n.nethercote@gmail.com", "real_name": "Nicholas Nethercote [:njn]"}, "whiteboard": "[gfx-noted]", "mentors": [], "cc_detail": [{"email": "n.nethercote@gmail.com", "id": 334849, "name": "n.nethercote@gmail.com", "real_name": "Nicholas Nethercote [:njn]"}, {"email": "sotaro.ikeda.g@gmail.com", "id": 434202, "name": "sotaro.ikeda.g@gmail.com", "real_name": "Sotaro Ikeda [:sotaro]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "sotaro.ikeda.g@gmail.com"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "sotaro.ikeda.g@gmail.com"}], "who": "sotaro.ikeda.g@gmail.com", "when": "2015-08-19T14:34:12Z"}, {"changes": [{"removed": "", "field_name": "whiteboard", "added": "[gfx-noted]"}], "who": "sotaro.ikeda.g@gmail.com", "when": "2015-08-19T14:35:02Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8685325, "added": "1"}], "who": "sotaro.ikeda.g@gmail.com", "when": "2015-11-10T08:39:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "n.nethercote@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8685326, "added": "review?(n.nethercote@gmail.com)"}], "who": "sotaro.ikeda.g@gmail.com", "when": "2015-11-10T08:44:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(n.nethercote@gmail.com)", "attachment_id": 8685326, "added": "review+"}], "who": "n.nethercote@gmail.com", "when": "2015-11-10T09:21:34Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8685326, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8685842, "added": "review+"}], "who": "sotaro.ikeda.g@gmail.com", "when": "2015-11-11T06:58:29Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla45"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-11-11 03:47:28"}, {"removed": "---", "field_name": "cf_status_firefox45", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-11-11T11:47:28Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1251091"}], "who": "tnikkel@gmail.com", "when": "2016-02-25T00:46:46Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}