{"status": "VERIFIED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Client Software", "creator": "mak77@bonardo.net", "cc": ["95.5.radio@gmail.com", "adw@mozilla.com", "alice.wyman@verizon.net", "b2g.bonstra@bonstra.fr.eu.org", "bmo@atomike.ninja", "boereck@arcor.de", "bugzilla@trimoon.cloudns.eu", "code@daniel.priv.no", "coffinz@protonmail.com", "combettaworld@gmail.com", "david.olah@softvision.ro", "dev.lukaszpolowczyk@gmail.com", "domoritz@gmail.com", "epang@mozilla.com", "feluchs@web.de", "florian@queze.net", "geoff.j.lawrence@gmail.com", "gijskruitbosch+bugs@gmail.com", "hujq@live.com", "johnmaverick74@mail.com", "jorrete@gmail.com", "jscher2000@gmail.com", "koellner@zew.uni-hannover.de", "leehanxue@gmail.com", "mak77@bonardo.net", "marsjaninzmarsa@gmail.com", "mcastelluccio@mozilla.com", "mozilla@kaply.com", "mstanke@mozilla.cz", "nw9165-3201@yahoo.com", "pascalc@gmail.com", "past@mozilla.com", "quicksaver@gmail.com", "ryanvm@gmail.com", "shilpi@mozilla.com"], "depends_on": [1450125, 1457069, 1449947, 1450294, 1451119], "creation_time": "2015-11-04T14:45:34Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "61+", "platform": "Unspecified", "keywords": [], "summary": "Add search engines discovery to the location bar", "cf_last_resolved": "2018-03-29T09:52:10Z", "attachments": [{"creator": "johnmaverick74@mail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/png", "id": 8911087}, {"creator": "epang@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "application/pdf", "id": 8931531}, {"creator": "adw@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/png", "id": 8948833}, {"creator": "adw@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-28T10:06:24Z", "type_id": 748, "creation_date": "2018-03-27T18:44:00Z", "id": 1735578, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8949631}, {"creator": "adw@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-27T12:34:18Z", "type_id": 748, "creation_date": "2018-03-26T22:59:06Z", "id": 1735116, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8961608}], "assigned_to_detail": {"email": "adw@mozilla.com", "id": 334927, "name": "adw@mozilla.com", "real_name": "Drew Willcoxon :adw"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 137, "comments": [{"text": "", "author": "mak77@bonardo.net", "id": 10902104, "time": "2015-11-04T14:45:34Z"}, {"text": "To be consistent across different search points, we likely want to be able to add a search engine from the location bar.\nVery likely this should be conditioned by the fact the search bar has been removed or not, cause I suppose we don't want multiple visual notifications for the same event.", "author": "mak77@bonardo.net", "id": 10902109, "time": "2015-11-04T14:48:41Z"}, {"text": "This needs UX", "author": "mak77@bonardo.net", "id": 10902148, "time": "2015-11-04T14:52:17Z"}, {"text": "*** Bug 1308458 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 11768018, "time": "2016-10-07T11:54:40Z"}, {"text": "*** Bug 1390904 has been marked as a duplicate of this bug. ***", "author": "past@mozilla.com", "id": 12584554, "time": "2017-08-21T13:40:36Z"}, {"text": "This is planned for 58 or later.", "author": "past@mozilla.com", "id": 12584555, "time": "2017-08-21T13:41:11Z"}, {"text": "> This is planned for 58 or later.\n\nThat's a pretty serious problem if we are going to remove the search bar in 57.", "author": "mozilla@kaply.com", "id": 12584605, "time": "2017-08-21T13:55:01Z"}, {"text": "*** Bug 1398629 has been marked as a duplicate of this bug. ***", "author": "standard8@mozilla.com", "id": 12647132, "time": "2017-09-11T06:08:52Z"}, {"text": "*** Bug 1400893 has been marked as a duplicate of this bug. ***", "author": "yfdyh000@gmail.com", "id": 12677760, "time": "2017-09-18T16:52:45Z"}, {"text": "sorry for the duplicate (i did search, but not for the right words, apparently)...\n\nAbout the feature: it would be great to see the search bar finally go away. To me it's probably the most useless item in FF UI. The only reason for it to be there is to add new search engines. The first UI i've seen from Nightly, without the search bar, was great! The last (with it) is more like \"meh...\"\n\nQuestion really is: with the amount of work \"you\" developers sure have, how much time consuming would this be?", "author": "johnmaverick74@mail.com", "id": 12678116, "time": "2017-09-18T17:58:12Z"}, {"text": "(In reply to johnmaverick74 from comment #9)\n> sorry for the duplicate (i did search, but not for the right words,\n> apparently)...\n> \n> About the feature: it would be great to see the search bar finally go away.\n> To me it's probably the most useless item in FF UI. The only reason for it\n> to be there is to add new search engines. The first UI i've seen from\n> Nightly, without the search bar, was great! The last (with it) is more like\n> \"meh...\"\n> \n> Question really is: with the amount of work \"you\" developers sure have, how\n> much time consuming would this be?\n\nHey John, I'm thinking along the same lines as you.  I've done some UX explorations for this and it's proving tricky to implement without adding clutter and noise to the address bar.  I'm having trouble justifying if this feature should hold the same weight as other items in the address bar such as the privacy lock.  I hoping to get more data on this to see if this is something how many users use this feature.", "author": "epang@mozilla.com", "id": 12689638, "time": "2017-09-21T14:27:49Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #10)\n> (In reply to johnmaverick74 from comment #9)\n> > sorry for the duplicate (i did search, but not for the right words,\n> > apparently)...\n> > \n> > About the feature: it would be great to see the search bar finally go away.\n> > To me it's probably the most useless item in FF UI. The only reason for it\n> > to be there is to add new search engines. The first UI i've seen from\n> > Nightly, without the search bar, was great! The last (with it) is more like\n> > \"meh...\"\n> > \n> > Question really is: with the amount of work \"you\" developers sure have, how\n> > much time consuming would this be?\n> \n> Hey John, I'm thinking along the same lines as you.  I've done some UX\n> explorations for this and it's proving tricky to implement without adding\n> clutter and noise to the address bar.  I'm having trouble justifying if this\n> feature should hold the same weight as other items in the address bar such\n> as the privacy lock.  I hoping to get more data on this to see if this is\n> something how many users use this feature.\n\nHow about adding an entry to the three dot (...) button? \nok, it will loose some visibility when a new search engine is present, but it would not clutter the UI that much. \nAnother option would be the \"Search Engine Icon\" with a \"plus sign\" right beside the search settings button on the location bar dropdown...", "author": "johnmaverick74@mail.com", "id": 12689715, "time": "2017-09-21T14:52:17Z"}, {"text": "Created attachment 8911087\nidea of adding a search engine\n\nButton to add a search engine from the awesome bar", "author": "johnmaverick74@mail.com", "id": 12692594, "time": "2017-09-22T08:59:21Z"}, {"text": "(In reply to johnmaverick74 from comment #11)\n> (In reply to Eric Pang [:epang] UX from comment #10)\n> > (In reply to johnmaverick74 from comment #9)\n> > > sorry for the duplicate (i did search, but not for the right words,\n> > > apparently)...\n> > > \n> > > About the feature: it would be great to see the search bar finally go away.\n> > > To me it's probably the most useless item in FF UI. The only reason for it\n> > > to be there is to add new search engines. The first UI i've seen from\n> > > Nightly, without the search bar, was great! The last (with it) is more like\n> > > \"meh...\"\n> > > \n> > > Question really is: with the amount of work \"you\" developers sure have, how\n> > > much time consuming would this be?\n> > \n> > Hey John, I'm thinking along the same lines as you.  I've done some UX\n> > explorations for this and it's proving tricky to implement without adding\n> > clutter and noise to the address bar.  I'm having trouble justifying if this\n> > feature should hold the same weight as other items in the address bar such\n> > as the privacy lock.  I hoping to get more data on this to see if this is\n> > something how many users use this feature.\n> \n> How about adding an entry to the three dot (...) button? \n> ok, it will loose some visibility when a new search engine is present, but\n> it would not clutter the UI that much. \n\nThanks John, I was thinking the same thing of having it in the page action menu (...)\nI'm working with Michelle Heubusch for the copy since it's not as clear what it does when it loses the context of the other One-Click search engines in the search bar. You're right about the lowered visibility, but I'm not too concerned at this point since we don't have the data for this feature.  If in the future it proves to be of high use we can revise and give it more prominence.\n\n> Another option would be the \"Search Engine Icon\" with a \"plus sign\" right\n> beside the search settings button on the location bar dropdown...\n\nI think this is a great idea for a secondary location to add the one-click search.  I say secondary since the user needs to navigate to the site then re-open the dropdown to see that it's available to be added.  So it's more hidden, but saying that it doesn't hurt to have it in the footer.  I'll work on some mock up for this as well.", "author": "epang@mozilla.com", "id": 12722480, "time": "2017-10-02T20:27:57Z"}, {"text": "Hi Eric,\n\nThanks for the reply!\n\nAnother possibility (that might even get along with the mobile version) would be an \"add this search engine\" entry on the context menu when one \"right-clicks\" on the search engine's search field (again, more or less like what we do to add a search engine on Firefox Mobile...)\n\nWe already have an \"Add a keyword for this search\" on the context menu but, honestly, i always found that very confusing!!! \n\nI never know if it will add a keyword, a search engine or a bookmark... It has a very weird behavior (or maybe it's just me...)\n\ni wish it would be just an \"add this search engine\"...", "author": "johnmaverick74@mail.com", "id": 12725401, "time": "2017-10-03T17:33:38Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #13)\n> (In reply to johnmaverick74 from comment #11)\n> > (In reply to Eric Pang [:epang] UX from comment #10)\n> > > (In reply to johnmaverick74 from comment #9)\n> > > > sorry for the duplicate (i did search, but not for the right words,\n> > > > apparently)...\n> > > > \n> > > > About the feature: it would be great to see the search bar finally go away.\n> > > > To me it's probably the most useless item in FF UI. The only reason for it\n> > > > to be there is to add new search engines. The first UI i've seen from\n> > > > Nightly, without the search bar, was great! The last (with it) is more like\n> > > > \"meh...\"\n> > > > \n> > > > Question really is: with the amount of work \"you\" developers sure have, how\n> > > > much time consuming would this be?\n> > > \n> > > Hey John, I'm thinking along the same lines as you.  I've done some UX\n> > > explorations for this and it's proving tricky to implement without adding\n> > > clutter and noise to the address bar.  I'm having trouble justifying if this\n> > > feature should hold the same weight as other items in the address bar such\n> > > as the privacy lock.  I hoping to get more data on this to see if this is\n> > > something how many users use this feature.\n> > \n> > How about adding an entry to the three dot (...) button? \n> > ok, it will loose some visibility when a new search engine is present, but\n> > it would not clutter the UI that much. \n> \n> Thanks John, I was thinking the same thing of having it in the page action\n> menu (...)\n> I'm working with Michelle Heubusch for the copy since it's not as clear what\n> it does when it loses the context of the other One-Click search engines in\n> the search bar. You're right about the lowered visibility, but I'm not too\n> concerned at this point since we don't have the data for this feature.  If\n> in the future it proves to be of high use we can revise and give it more\n> prominence.\n> \n> > Another option would be the \"Search Engine Icon\" with a \"plus sign\" right\n> > beside the search settings button on the location bar dropdown...\n> \n> I think this is a great idea for a secondary location to add the one-click\n> search.  I say secondary since the user needs to navigate to the site then\n> re-open the dropdown to see that it's available to be added.  So it's more\n> hidden, but saying that it doesn't hurt to have it in the footer.  I'll work\n> on some mock up for this as well.\n\nSorry, forgot to make \"reply\"... reply above :)", "author": "johnmaverick74@mail.com", "id": 12725406, "time": "2017-10-03T17:34:40Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #13)\n> (In reply to johnmaverick74 from comment #11)\n> > (In reply to Eric Pang [:epang] UX from comment #10)\n> > How about adding an entry to the three dot (...) button? \n> > ok, it will loose some visibility when a new search engine is present, but\n> > it would not clutter the UI that much. \n> \n> Thanks John, I was thinking the same thing of having it in the page action\n> menu (...)\n> I'm working with Michelle Heubusch for the copy since it's not as clear what\n> it does when it loses the context of the other One-Click search engines in\n> the search bar. You're right about the lowered visibility, but I'm not too\n> concerned at this point since we don't have the data for this feature.  If\n> in the future it proves to be of high use we can revise and give it more\n> prominence.\n\nBut how will high use ever possibly occur if the typical user is unaware of the option? If we want to aid **discoverability** then I think it would be preferable to default to visible, for example:\n\nHave the + icon appear next to the page actions menu (e.g., with Pocket and Bookmark) when (1) the site has a search engine available AND (2) there is no existing search engine with the identical name AND (3) the search bar is not displayed on the toolbar AND (4) the user has not previously removed the button from the address bar. \n\nIf the user does not find this feature of value, she could right-click > Remove from Address Bar as with other functions on the page actions menu. Then the + action would be enabled on the page actions menu when conditions (1) and (2) are fulfilled.", "author": "jscher2000@gmail.com", "id": 12753816, "time": "2017-10-12T18:34:03Z"}, {"text": "I must say i like a lot of @jscher2000 's solution!!! =)", "author": "johnmaverick74@mail.com", "id": 12756622, "time": "2017-10-13T14:47:15Z"}, {"text": "(In reply to jscher2000 from comment #16)\n> (In reply to Eric Pang [:epang] UX from comment #13)\n> > (In reply to johnmaverick74 from comment #11)\n> > > (In reply to Eric Pang [:epang] UX from comment #10)\n> > > How about adding an entry to the three dot (...) button? \n> > > ok, it will loose some visibility when a new search engine is present, but\n> > > it would not clutter the UI that much. \n> > \n> > Thanks John, I was thinking the same thing of having it in the page action\n> > menu (...)\n> > I'm working with Michelle Heubusch for the copy since it's not as clear what\n> > it does when it loses the context of the other One-Click search engines in\n> > the search bar. You're right about the lowered visibility, but I'm not too\n> > concerned at this point since we don't have the data for this feature.  If\n> > in the future it proves to be of high use we can revise and give it more\n> > prominence.\n> \n> But how will high use ever possibly occur if the typical user is unaware of\n> the option? If we want to aid **discoverability** then I think it would be\n> preferable to default to visible, for example:\n> \n> Have the + icon appear next to the page actions menu (e.g., with Pocket and\n> Bookmark) when (1) the site has a search engine available AND (2) there is\n> no existing search engine with the identical name AND (3) the search bar is\n> not displayed on the toolbar AND (4) the user has not previously removed the\n> button from the address bar. \n> \n> If the user does not find this feature of value, she could right-click >\n> Remove from Address Bar as with other functions on the page actions menu.\n> Then the + action would be enabled on the page actions menu when conditions\n> (1) and (2) are fulfilled.\n\nHi @jscher2000, I'm working on something similar to your suggestion!  I'm also really concerned about discoverability.  The difference is that I'm planning to have the icon behave in the same way as reader mode.  Functionality wise this makes sense since both are actions that appear under the right conditions.  I'm currently exploring the ux and motion to help clarify what this feature does to the user.", "author": "epang@mozilla.com", "id": 12769926, "time": "2017-10-18T14:25:36Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #18)\n> (In reply to jscher2000 from comment #16)\n> > (In reply to Eric Pang [:epang] UX from comment #13)\n> > > (In reply to johnmaverick74 from comment #11)\n> > > > (In reply to Eric Pang [:epang] UX from comment #10)\n> > > > How about adding an entry to the three dot (...) button? \n> > > > ok, it will loose some visibility when a new search engine is present, but\n> > > > it would not clutter the UI that much. \n> > > \n> > > Thanks John, I was thinking the same thing of having it in the page action\n> > > menu (...)\n> > > I'm working with Michelle Heubusch for the copy since it's not as clear what\n> > > it does when it loses the context of the other One-Click search engines in\n> > > the search bar. You're right about the lowered visibility, but I'm not too\n> > > concerned at this point since we don't have the data for this feature.  If\n> > > in the future it proves to be of high use we can revise and give it more\n> > > prominence.\n> > \n> > But how will high use ever possibly occur if the typical user is unaware of\n> > the option? If we want to aid **discoverability** then I think it would be\n> > preferable to default to visible, for example:\n> > \n> > Have the + icon appear next to the page actions menu (e.g., with Pocket and\n> > Bookmark) when (1) the site has a search engine available AND (2) there is\n> > no existing search engine with the identical name AND (3) the search bar is\n> > not displayed on the toolbar AND (4) the user has not previously removed the\n> > button from the address bar. \n> > \n> > If the user does not find this feature of value, she could right-click >\n> > Remove from Address Bar as with other functions on the page actions menu.\n> > Then the + action would be enabled on the page actions menu when conditions\n> > (1) and (2) are fulfilled.\n> \n> Hi @jscher2000, I'm working on something similar to your suggestion!  I'm\n> also really concerned about discoverability.  The difference is that I'm\n> planning to have the icon behave in the same way as reader mode. \n> Functionality wise this makes sense since both are actions that appear under\n> the right conditions.  I'm currently exploring the ux and motion to help\n> clarify what this feature does to the user.\n\n@Eric, is there any hope to see this shipping in FF57?", "author": "johnmaverick74@mail.com", "id": 12804941, "time": "2017-10-31T11:33:29Z"}, {"text": "(In reply to johnmaverick74 from comment #19)\n> @Eric, is there any hope to see this shipping in FF57?\n\nUnlikely. 57 is pretty much closed, only critical changes affecting security or reliability can land.", "author": "mak77@bonardo.net", "id": 12805025, "time": "2017-10-31T12:21:01Z"}, {"text": "*** Bug 1417737 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 12849408, "time": "2017-11-16T17:18:40Z"}, {"text": "*** Bug 1419670 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 12864683, "time": "2017-11-22T08:00:42Z"}, {"text": "Created attachment 8931531\n[SPEC] Add One-Click Search Engines.pdf\n\nHi Marco,\n\nSorry for the delay on this!\n\nAfter going back and forth and discussing this with the UX team we decided to add this feature into the page action menu (and the search drop down as a secondary location).\n\nI explored some more discoverable locations but the current state of the feature doesn't warrant high visibility.  In the future we plan to explore the concept of 1-click search engines more.  At that time with more research and exploration we can make the feature more visible.\n\nI've attached the spec, please NI or ping me if you have any questions!\nThanks!", "author": "epang@mozilla.com", "id": 12869984, "time": "2017-11-23T23:23:14Z"}, {"text": "The only thing still under-specified, is what happens if the user \"Add to the Address Bar\" this entry. Should that be prevented?", "author": "mak77@bonardo.net", "id": 12870703, "time": "2017-11-24T09:22:28Z"}, {"text": "(In reply to Marco Bonardo [::mak] from comment #24)\n> The only thing still under-specified, is what happens if the user \"Add to\n> the Address Bar\" this entry. Should that be prevented?\n\nFor the time being let's prevent this feature from being added to the address bar.  Thanks!", "author": "epang@mozilla.com", "id": 12871329, "time": "2017-11-24T15:31:07Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #23)\n\n> After going back and forth and discussing this with the UX team we decided\n> to add this feature into the page action menu (and the search drop down as a\n> secondary location).\n> \n> I explored some more discoverable locations but the current state of the\n> feature doesn't warrant high visibility.\n\nHi Eric. I like the idea of making this available in the page action menu, but a large part of what we want in this bug is to make open search plugins discoverable, and this doesn't seem to be addressed by the attached spec. In the searchbar there was a green (+) badge above the glass icon when an open search plugin was offered by the page. Could we add something similar above the dots of the page action icon? Or maybe put a small glass icon above the dots instead of the (+) badge?\n\nI'm afraid implementing the UI proposed in the current spec is a lot of work for something very few users will ever notice if we don't make it more discoverable.", "author": "florian@queze.net", "id": 12871425, "time": "2017-11-24T16:25:07Z"}, {"text": "Opinion:\n\nI understand the concerns of discoverability and i also agree there should be some indicator that a search engine is available to be added. \n\nHowever, i believe it is a feature not much used and even if it is, if a user wants to add it, he just need to go to the page actions and see if the plugin is available.\n\nI also believe that, for now, having this implementation is better than having none, so I'm all in favor of landing this asap and then improve it in the near future.\n\n(By the way I'm also concern with: everytime a user visits a page that has a search plugin available, one will have a \"new icon\" hanging on the address bar. It may became annoying and create clutter... or not... Anyway, I can't think of any other way to do it atm...)", "author": "johnmaverick74@mail.com", "id": 12871581, "time": "2017-11-24T17:32:10Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #25)\n> (In reply to Marco Bonardo [::mak] from comment #24)\n> > The only thing still under-specified, is what happens if the user \"Add to\n> > the Address Bar\" this entry. Should that be prevented?\n> \n> For the time being let's prevent this feature from being added to the\n> address bar.  Thanks!\n\nIt seems that every other item on the Page Actions menu allows right-click > Add to Address bar. Why exclude this one? Even if few would use it, I think it would be an unnecessary inconsistency in the UI.\n\nAlso, I hope the icon later can be decorated with a \"+\" and shown/hidden selectively in the address bar when it has a useful function. Preventing the icon from being shown in the address bar would have to be reversed at that point.", "author": "jscher2000@gmail.com", "id": 12872834, "time": "2017-11-25T19:48:00Z"}, {"text": "(In reply to Florian Qu\u00e8ze [:florian] [:flo] from comment #26)\n> (In reply to Eric Pang [:epang] UX from comment #23)\n> \n> > After going back and forth and discussing this with the UX team we decided\n> > to add this feature into the page action menu (and the search drop down as a\n> > secondary location).\n> > \n> > I explored some more discoverable locations but the current state of the\n> > feature doesn't warrant high visibility.\n> \n> Hi Eric. I like the idea of making this available in the page action menu,\n> but a large part of what we want in this bug is to make open search plugins\n> discoverable, and this doesn't seem to be addressed by the attached spec. In\n> the searchbar there was a green (+) badge above the glass icon when an open\n> search plugin was offered by the page. Could we add something similar above\n> the dots of the page action icon? Or maybe put a small glass icon above the\n> dots instead of the (+) badge?\n> \n> I'm afraid implementing the UI proposed in the current spec is a lot of work\n> for something very few users will ever notice if we don't make it more\n> discoverable.\n\nHi Florian, I completely agree and understand your concerns.  But for now it's intentional that we are keeping it more discrete.\nAs John mentioned it doesn't make sense for a niche feature to have such high visual prominence (at least not the way it functions now). For now it's about giving users a way to still use the feature.  The plan is to revisit this in the near future to make it more useful to the user - when it's something we are proud to ship we can give it more visibility.\n\nIn regards to jscher2000 comment.  If it's not too much extra work we can add in the right-click > Add to Address bar.  I don't know how much it will be used so I'm not sure if it's worth the engineering effort. But I like that it adds discoverbility for users who want it. Once added, the icon (with '+') should only appear in the URL bar when there is a One-Click Search Engine available to be added.\n\nThanks!", "author": "epang@mozilla.com", "id": 12877185, "time": "2017-11-27T17:53:23Z"}, {"text": "> In regards to jscher2000 comment.  If it's not too much extra work we can\n> add in the right-click > Add to Address bar.  I don't know how much it will\n> be used so I'm not sure if it's worth the engineering effort. But I like\n> that it adds discoverbility for users who want it. Once added, the icon\n> (with '+') should only appear in the URL bar when there is a One-Click\n> Search Engine available to be added.\n\n\nI think this would be Gold!!! I also - really - want it this way, but I would hate if the implementation would mean delaying the feature for another version (having to wait for FF59)!", "author": "johnmaverick74@mail.com", "id": 12877385, "time": "2017-11-27T18:42:54Z"}, {"text": "Eric, when there's any new development or eta, please drop a line here.\n\nI'm sorry for asking but i'm very curious to test this feature! Tks", "author": "johnmaverick74@mail.com", "id": 12898413, "time": "2017-12-05T14:09:00Z"}, {"text": "*** Bug 1419807 has been marked as a duplicate of this bug. ***", "author": "yfdyh000@gmail.com", "id": 12909448, "time": "2017-12-08T20:46:57Z"}, {"text": "(In reply to Eric Pang [:epang] UX from comment #29)\n\n> In regards to jscher2000 comment.  If it's not too much extra work we can\n> add in the right-click > Add to Address bar.  I don't know how much it will\n> be used so I'm not sure if it's worth the engineering effort. But I like\n> that it adds discoverbility for users who want it. Once added, the icon\n> (with '+') should only appear in the URL bar when there is a One-Click\n> Search Engine available to be added.\n\n\nHow is this coming along Eric?\n\nWill we get it in a next 58 beta? Or will it be postponed?", "author": "johnmaverick74@mail.com", "id": 12936557, "time": "2017-12-26T17:12:41Z"}, {"text": "*** Bug 1431339 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 12978650, "time": "2018-01-18T10:03:55Z"}, {"text": "(In reply to johnmaverick74 from comment #33)\n> (In reply to Eric Pang [:epang] UX from comment #29)\n> \n> > In regards to jscher2000 comment.  If it's not too much extra work we can\n> > add in the right-click > Add to Address bar.  I don't know how much it will\n> > be used so I'm not sure if it's worth the engineering effort. But I like\n> > that it adds discoverbility for users who want it. Once added, the icon\n> > (with '+') should only appear in the URL bar when there is a One-Click\n> > Search Engine available to be added.\n> \n> \n> How is this coming along Eric?\n> \n> Will we get it in a next 58 beta? Or will it be postponed?\n\nPanos, wondering if you can shed more light here.  Do we have an eta on when we'll have someone who can work on this feature?\nThanks!", "author": "epang@mozilla.com", "id": 12980273, "time": "2018-01-18T20:52:52Z"}, {"text": "The plan for this is sometime in Q1, so probably Firefox 60 or 61.", "author": "past@mozilla.com", "id": 12980283, "time": "2018-01-18T20:56:51Z"}, {"text": "I suppose we're talking about jscher2000's suggestion (on comment 28).\nIf so, and if Eric's idea is of more quick implementation, i would like to suggest we go with that implementation (Eric's original plan of having the add search engine on the page action's button) ASAP as a means for users to have a \"temporary way out\" and then on 60 / 61 complete the feature as planned.\n\nEven without  enhanced features is better that nothing for now...\n\nIt really is boring to have to go to options > Search options > Activate search bar > go to page > Add the pretended search engine > go to options again > Search options > and deactivate the search bar again, just to add a new search engine... which is that \"thing\"'s only function now.", "author": "johnmaverick74@mail.com", "id": 12981652, "time": "2018-01-19T12:29:14Z"}, {"text": "*** Bug 1433108 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 12994430, "time": "2018-01-25T13:56:29Z"}, {"text": "*** Bug 1434552 has been marked as a duplicate of this bug. ***", "author": "gingerbread_man@live.com", "id": 13007842, "time": "2018-01-31T10:36:08Z"}, {"text": "*** Bug 1434853 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 13010786, "time": "2018-02-01T10:05:38Z"}, {"text": "Created attachment 8948833\nExample of menu with extension actions\n\nEric, we already add extension page actions to the bottom of the menu, with a separator between them and the built-in actions.  See the attached screenshot for an example.  How/where should the add-engine item appear in relation to them?\n\nIMO there are two options, either between the built-in actions and extension actions, with a separator as necessary; or at the very bottom even when there are extension actions, also with a separator.", "author": "adw@mozilla.com", "id": 13023031, "time": "2018-02-06T23:01:19Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #41)\n> Created attachment 8948833\n> Example of menu with extension actions\n> \n> Eric, we already add extension page actions to the bottom of the menu, with\n> a separator between them and the built-in actions.  See the attached\n> screenshot for an example.  How/where should the add-engine item appear in\n> relation to them?\n> \n> IMO there are two options, either between the built-in actions and extension\n> actions, with a separator as necessary; or at the very bottom even when\n> there are extension actions, also with a separator.\n\nHi Drew, let's put it at the very bottom with a separator.  This will keep location consistency for any users that use this functionality.  Thanks for the NI and working on this!", "author": "epang@mozilla.com", "id": 13024536, "time": "2018-02-07T15:36:10Z"}, {"text": "Created attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview commit: https://reviewboard.mozilla.org/r/218982/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/218982/", "author": "adw@mozilla.com", "id": 13029537, "time": "2018-02-09T02:50:06Z"}, {"text": "Early WIP", "author": "adw@mozilla.com", "id": 13029538, "time": "2018-02-09T02:50:21Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review224698\n\n\nCode analysis found 4 defects in this patch:\n - 4 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:1051\n(Diff revision 1)\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    let engines = gBrowser.selectedBrowser.engines;\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onLocationChange engines.length=${engines ? engines.length : \"(null)\"}\\n`);\n> +    if (!engines || engines.length == 0) {\n\nError: Empty block statement. [eslint: no-empty]\n\n::: browser/base/content/browser.js:3675\n(Diff revision 1)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4691\n(Diff revision 1)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1265\n(Diff revision 1)\n> +//     },\n> +    onShowingInPanel(buttonNode) {\n> +      browserPageActions(buttonNode).addSearchEngine.onShowingInPanel();\n> +    },\n> +  },\n> +  //XXXadw no, no good.  they need to be the same action because consider when\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13029552, "time": "2018-02-09T03:07:07Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/1-2/", "author": "adw@mozilla.com", "id": 13040636, "time": "2018-02-14T02:16:58Z"}, {"text": "More WIP.  I'm modifying PageActions to take into account a couple of new concepts: (1) An action may want to change whether or not it has a subview.  The add-engine action needs to do that because one page may have one engine but another page may have many engines.  (2) An action may want to stick itself to the bottom of the panel, and also hide itself when it's disabled instead of being visible but disabled.\n\nSo it's probably a good idea to split this into two different patches, one doing the things just mentioned, and another adding the new add-engine action.", "author": "adw@mozilla.com", "id": 13040637, "time": "2018-02-14T02:17:30Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review225894\n\n\nCode analysis found 17 defects in this patch:\n - 17 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:499\n(Diff revision 2)\n>        let upper = name[0].toUpperCase() + name.substr(1);\n>        this[`_updateAction${upper}`](action);\n>      }\n>    },\n>  \n> +  //XXXadw nobody calls this.  only _updateActionDisabledInPanel.\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:598\n(Diff revision 2)\n> +  _updateActionWantsSubview(action) {\n> +    let wantsSubview = action.getWantsSubview(window);\n> +    let buttonNode = this.panelButtonNodeForActionID(action.id);\n> +    let panelViewID = this._panelViewNodeIDForActionID(action.id, false);\n> +    let panelViewNode = document.getElementById(panelViewID);\n> +    //XXXadw duplicates code elsewhere when panel button is first created\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:819\n(Diff revision 2)\n>     * @param  event (DOM event, optional)\n>     *         The event that triggers showing the panel. (such as a mouse click,\n>     *         if the user clicked something to open the panel)\n>     */\n>    showPanel(event = null) {\n> -    for (let action of PageActions.actions) {\n> +    //XXX most/all this should probably be done on persistent\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1175\n(Diff revision 2)\n> +    action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel engines.length=${this.engines}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1181\n(Diff revision 2)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1184\n(Diff revision 2)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1219\n(Diff revision 2)\n> +// //     action.subview.removeAllChildren(window);\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1245\n(Diff revision 2)\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n> +    if (!buttonNode.closest(\"panel\")) {\n> +      let manyEngines = this.engines.length > 1;\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n\nError: Unnecessary return statement. [eslint: no-useless-return]\n\n::: browser/base/content/browser-pageActions.js:1248\n(Diff revision 2)\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n> +      }\n> +    }\n> +    \n\nError: Trailing spaces not allowed. [eslint: no-trailing-spaces]\n\n::: browser/base/content/browser.js:3675\n(Diff revision 2)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4691\n(Diff revision 2)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:259\n(Diff revision 2)\n> +      actions.push(...transientActions);\n>      }\n>      return actions;\n>    },\n>  \n> +  //XXXadw should be an actionsInPanel method instead of actions getter?  takes\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:337\n(Diff revision 2)\n> +      bpa.placeAction(action);\n>        if (sep) {\n>          // There are now both built-in and non-built-in actions, so place the\n>          // separator between the two groups.\n> +\n> +        //XXXadw PageActions takes care of adding the separator (here) when an\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:453\n(Diff revision 2)\n>     * @param  action (Action object, required)\n>     *         The action you're inserting.\n>     * @return The ID of the reference action, or null if your action should be\n>     *         appended.\n>     */\n> +  //XXXadw need to update this to take a browser window or something.  or -- are\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:764\n(Diff revision 2)\n>      wantsIframe: false,\n> +    wantsSubview: false,\n>  \n>      // private\n>  \n> +    //XXXadw\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1462\n(Diff revision 2)\n> +  // add search engine\n> +  {\n> +    id: \"addSearchEngine\",\n> +    title: \"XXXadw\",\n> +    _transient: true,\n> +    _transient: true,\n\nError: Duplicate key '_transient'. [eslint: no-dupe-keys]\n\n::: browser/modules/PageActions.jsm:1478\n(Diff revision 2)\n> +    onSubviewShowing(panelViewNode) {\n> +      browserPageActions(panelViewNode).addSearchEngine\n> +        .onSubviewShowing(panelViewNode);\n> +    },\n> +  },\n> +  //XXXadw no, no good.  they need to be the same action because consider when\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13040652, "time": "2018-02-14T02:30:47Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/2-3/", "author": "adw@mozilla.com", "id": 13049284, "time": "2018-02-17T01:54:26Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review227008\n\n\nCode analysis found 15 defects in this patch:\n - 15 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:519\n(Diff revision 3)\n>        let upper = name[0].toUpperCase() + name.substr(1);\n>        this[`_updateAction${upper}`](action);\n>      }\n>    },\n>  \n> +  //XXXadw nobody calls this.  only _updateActionDisabledInPanel.\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:618\n(Diff revision 3)\n> +  _updateActionWantsSubview(action) {\n> +    let wantsSubview = action.getWantsSubview(window);\n> +    let buttonNode = this.panelButtonNodeForActionID(action.id);\n> +    let panelViewID = this._panelViewNodeIDForActionID(action.id, false);\n> +    let panelViewNode = document.getElementById(panelViewID);\n> +    //XXXadw duplicates code elsewhere when panel button is first created\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:806\n(Diff revision 3)\n>     * @param  event (DOM event, optional)\n>     *         The event that triggers showing the panel. (such as a mouse click,\n>     *         if the user clicked something to open the panel)\n>     */\n>    showPanel(event = null) {\n> -    for (let action of PageActions.actions) {\n> +    //XXX most/all this should probably be done on persistent\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1162\n(Diff revision 3)\n> +    action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel engines.length=${this.engines}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1168\n(Diff revision 3)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1171\n(Diff revision 3)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1206\n(Diff revision 3)\n> +// //     action.subview.removeAllChildren(window);\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1232\n(Diff revision 3)\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n> +    if (!buttonNode.closest(\"panel\")) {\n> +      let manyEngines = this.engines.length > 1;\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n\nError: Unnecessary return statement. [eslint: no-useless-return]\n\n::: browser/base/content/browser-pageActions.js:1235\n(Diff revision 3)\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n> +      }\n> +    }\n> +    \n\nError: Trailing spaces not allowed. [eslint: no-trailing-spaces]\n\n::: browser/base/content/browser.js:3672\n(Diff revision 3)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4688\n(Diff revision 3)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:259\n(Diff revision 3)\n> +      actions.push(...transientActions);\n>      }\n>      return actions;\n>    },\n>  \n> +  //XXXadw should be an actionsInPanel method instead of actions getter?  takes\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:453\n(Diff revision 3)\n>     * @param  action (Action object, required)\n>     *         The action you're inserting.\n>     * @return The ID of the reference action, or null if your action should be\n>     *         appended.\n>     */\n> -  nextActionIDInPanel(action) {\n> +  //XXXadw need to update this to take a browser window or something.  or -- are\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:764\n(Diff revision 3)\n>      wantsIframe: false,\n> +    wantsSubview: false,\n>  \n>      // private\n>  \n> +    //XXXadw\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1477\n(Diff revision 3)\n> +    onSubviewShowing(panelViewNode) {\n> +      browserPageActions(panelViewNode).addSearchEngine\n> +        .onSubviewShowing(panelViewNode);\n> +    },\n> +  },\n> +  //XXXadw no, no good.  they need to be the same action because consider when\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13049288, "time": "2018-02-17T02:09:17Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/3-4/", "author": "adw@mozilla.com", "id": 13063098, "time": "2018-02-23T02:26:16Z"}, {"text": "Basically working, need to clean up my mess, fix tests, and split the patch into two for review.", "author": "adw@mozilla.com", "id": 13063099, "time": "2018-02-23T02:26:49Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review228482\n\n\nCode analysis found 18 defects in this patch:\n - 18 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:458\n(Diff revision 4)\n> +        action.onBeforePlacedInWindow(window);\n> +        node = document.getElementById(id);\n> +      }\n> +      if (!node) {\n> +        dump(`+++++++++++++++++XXXadw !!!!!!node action.id=${action.id}\\n`);\n> +        dump((new Error()).stack+\"\\n\\n\");\n\nError: Infix operators must be spaced. [eslint: space-infix-ops]\n\n::: browser/base/content/browser-pageActions.js:589\n(Diff revision 4)\n>        let upper = name[0].toUpperCase() + name.substr(1);\n>        this[`_updateAction${upper}`](action);\n>      }\n>    },\n>  \n> +  //XXXadw nobody calls this.  only _updateActionDisabledInPanel.\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:691\n(Diff revision 4)\n> +      return;\n> +    }\n> +    let wantsSubview = action.getWantsSubview(window);\n> +    let panelViewID = this._panelViewNodeIDForActionID(action.id, false);\n> +    let panelViewNode = document.getElementById(panelViewID);\n> +    //XXXadw duplicates code elsewhere when panel button is first created\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:879\n(Diff revision 4)\n>     * @param  event (DOM event, optional)\n>     *         The event that triggers showing the panel. (such as a mouse click,\n>     *         if the user clicked something to open the panel)\n>     */\n>    showPanel(event = null) {\n> -    for (let action of PageActions.actions) {\n> +    //XXX most/all this should probably be done on persistent\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1235\n(Diff revision 4)\n> +    action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel engines.length=${this.engines}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1241\n(Diff revision 4)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1244\n(Diff revision 4)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1279\n(Diff revision 4)\n> +// //     action.subview.removeAllChildren(window);\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1305\n(Diff revision 4)\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n> +    if (!buttonNode.closest(\"panel\")) {\n> +      let manyEngines = this.engines.length > 1;\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n\nError: Unnecessary return statement. [eslint: no-useless-return]\n\n::: browser/base/content/browser-pageActions.js:1308\n(Diff revision 4)\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n> +      }\n> +    }\n> +    \n\nError: Trailing spaces not allowed. [eslint: no-trailing-spaces]\n\n::: browser/base/content/browser.js:3696\n(Diff revision 4)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4711\n(Diff revision 4)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:60\n(Diff revision 4)\n>      // Now place them all in each window.  Instead of splitting the register and\n>      // place steps, we could simply call addAction, which does both, but doing\n>      // it this way means that all windows initially place their actions the same\n>      // way -- placeAllActions -- regardless of whether they're open when this\n>      // method is called or opened later.\n> +    //XXXadw would be nice not to populate/update panel until it's opened the\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:262\n(Diff revision 4)\n> +      actions.push(...transientActions);\n>      }\n>      return actions;\n>    },\n>  \n> +  //XXXadw should be an actionsInPanel method instead of actions getter?  takes\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:456\n(Diff revision 4)\n>     * @param  action (Action object, required)\n>     *         The action you're inserting.\n>     * @return The ID of the reference action, or null if your action should be\n>     *         appended.\n>     */\n> -  nextActionIDInPanel(action) {\n> +  //XXXadw need to update this to take a browser window or something.  or -- are\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:767\n(Diff revision 4)\n>      wantsIframe: false,\n> +    wantsSubview: false,\n>  \n>      // private\n>  \n> +    //XXXadw\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1480\n(Diff revision 4)\n> +    onSubviewShowing(panelViewNode) {\n> +      browserPageActions(panelViewNode).addSearchEngine\n> +        .onSubviewShowing(panelViewNode);\n> +    },\n> +  },\n> +  //XXXadw no, no good.  they need to be the same action because consider when\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1505\n(Diff revision 4)\n>   *         given object.\n>   */\n>  function browserPageActions(obj) {\n> +  if (!obj) {\n> +    dump(`+++++++++++++++++XXXadw !!!!!!obj\\n`);\n> +    dump((new Error()).stack+\"\\n\\n\");\n\nError: Infix operators must be spaced. [eslint: space-infix-ops]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13063108, "time": "2018-02-23T02:41:49Z"}, {"text": "@Drew \n\nIs there still time to get it into FF59? Or will we have to wait to FF60?", "author": "johnmaverick74@mail.com", "id": 13063750, "time": "2018-02-23T11:54:03Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/4-5/", "author": "adw@mozilla.com", "id": 13065982, "time": "2018-02-24T04:15:28Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review228844\n\n\nCode analysis found 9 defects in this patch:\n - 9 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:1146\n(Diff revision 5)\n> +//     action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel engines.length=${this.engines}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1152\n(Diff revision 5)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1155\n(Diff revision 5)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1190\n(Diff revision 5)\n> +// //     action.subview.removeAllChildren(window);\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. allowed unused vars must match /^cc|ci|cu|cr|exported_symbols/. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1216\n(Diff revision 5)\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n> +    if (!buttonNode.closest(\"panel\")) {\n> +      let manyEngines = this.engines.length > 1;\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n\nError: Unnecessary return statement. [eslint: no-useless-return]\n\n::: browser/base/content/browser-pageActions.js:1219\n(Diff revision 5)\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n> +      }\n> +    }\n> +    \n\nError: Trailing spaces not allowed. [eslint: no-trailing-spaces]\n\n::: browser/base/content/browser.js:3696\n(Diff revision 5)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4711\n(Diff revision 5)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1193\n(Diff revision 5)\n>   *         given object.\n>   */\n>  function browserPageActions(obj) {\n> +  if (!obj) {\n> +    dump(`+++++++++++++++++XXXadw !!!!!!obj\\n`);\n> +    dump((new Error()).stack+\"\\n\\n\");\n\nError: Infix operators must be spaced. [eslint: space-infix-ops]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13065996, "time": "2018-02-24T04:30:25Z"}, {"text": "*** Bug 1440866 has been marked as a duplicate of this bug. ***", "author": "gingerbread_man@live.com", "id": 13066239, "time": "2018-02-24T12:58:48Z"}, {"text": "*** Bug 1444043 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 13113772, "time": "2018-03-08T12:23:31Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/5-6/", "author": "adw@mozilla.com", "id": 13144382, "time": "2018-03-21T01:20:21Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review235318\n\n\nCode analysis found 10 defects in this patch:\n - 10 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:1193\n(Diff revision 6)\n> +    action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel engines.length=${this.engines}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1199\n(Diff revision 6)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1202\n(Diff revision 6)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1237\n(Diff revision 6)\n> +// //     action.subview.removeAllChildren(window);\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1263\n(Diff revision 6)\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n> +    if (!buttonNode.closest(\"panel\")) {\n> +      let manyEngines = this.engines.length > 1;\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n\nError: Unnecessary return statement. [eslint: no-useless-return]\n\n::: browser/base/content/browser-pageActions.js:1266\n(Diff revision 6)\n> +      action.setWantsSubview(manyEngines, window);\n> +      if (manyEngines) {\n> +        return;\n> +      }\n> +    }\n> +    \n\nError: Trailing spaces not allowed. [eslint: no-trailing-spaces]\n\n::: browser/base/content/browser.js:3770\n(Diff revision 6)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4757\n(Diff revision 6)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1145\n(Diff revision 6)\n>   *         given object.\n>   */\n>  function browserPageActions(obj) {\n> +  if (!obj) {\n> +    dump(`+++++++++++++++++XXXadw !!!!!!obj\\n`);\n> +    dump((new Error()).stack+\"\\n\\n\");\n\nError: Infix operators must be spaced. [eslint: space-infix-ops]\n\n::: browser/modules/test/browser/browser_PageActions.js:54\n(Diff revision 6)\n> +  EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> +  await promisePageActionPanelHidden();\n> +\n> +\n>    let initialActions = PageActions.actions;\n> +  let initialNonBuiltInActions = PageActions._nonBuiltInActions.slice();\n\nError: 'initialnonbuiltinactions' is assigned a value but never used. [eslint: no-unused-vars]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13144393, "time": "2018-03-21T01:39:48Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/6-7/", "author": "adw@mozilla.com", "id": 13147349, "time": "2018-03-22T00:59:46Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review235676\n\n\nCode analysis found 13 defects in this patch:\n - 13 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:1209\n(Diff revision 7)\n> +    action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel ${this.engines.length} engines=${this.engines.map(e => e.title)}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1215\n(Diff revision 7)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1218\n(Diff revision 7)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1232\n(Diff revision 7)\n> +                                             [this.engines[0].title], 1) :\n> +      this.stringBundle.GetStringFromName(\"searchAddFoundEngineMenu\");\n> +    this.action.setTitle(title, window);\n> +    this.action.setWantsSubview(this.engines.length > 1, window);\n> +\n> +    //XXX no good -- this means that the urlbar button doesn't have an image\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1274\n(Diff revision 7)\n> +// //     action.subview.removeAllChildren(window);\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser.js:3834\n(Diff revision 7)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4821\n(Diff revision 7)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:136\n(Diff revision 7)\n> +\n> +//   });\n> +// });\n> +\n> +\n> +//XXXadw errors on trying to install.  suffices to declare an engine in the html\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/modules/PageActions.jsm:1145\n(Diff revision 7)\n>   *         given object.\n>   */\n>  function browserPageActions(obj) {\n> +  if (!obj) {\n> +    dump(`+++++++++++++++++XXXadw !!!!!!obj\\n`);\n> +    dump((new Error()).stack+\"\\n\\n\");\n\nError: Infix operators must be spaced. [eslint: space-infix-ops]\n\n::: browser/modules/test/browser/browser_PageActions.js:54\n(Diff revision 7)\n> +  EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> +  await promisePageActionPanelHidden();\n> +\n> +\n>    let initialActions = PageActions.actions;\n> +  let initialNonBuiltInActions = PageActions._nonBuiltInActions.slice();\n\nError: 'initialnonbuiltinactions' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/test/browser/browser_PageActions.js:345\n(Diff revision 7)\n>  \n>  // Tests a non-built-in action with a subview.\n>  add_task(async function withSubview() {\n>    let id = \"test-subview\";\n>  \n>    let onActionCommandCallCount = 0;\n\nError: 'onactioncommandcallcount' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/test/browser/browser_PageActions.js:350\n(Diff revision 7)\n>    let onActionCommandCallCount = 0;\n>    let onActionPlacedInPanelCallCount = 0;\n>    let onActionPlacedInUrlbarCallCount = 0;\n>    let onSubviewPlacedCount = 0;\n>    let onSubviewShowingCount = 0;\n>    let onButtonCommandCallCount = 0;\n\nError: 'onbuttoncommandcallcount' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/test/browser/browser_PageActions.js:1498\n(Diff revision 7)\n>  });\n>  \n>  \n> +// Tests transient actions.\n> +add_task(async function transient() {\n> +  let initialNonBuiltInActions = PageActions._nonBuiltInActions.slice();\n\nError: 'initialnonbuiltinactions' is assigned a value but never used. [eslint: no-unused-vars]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13147353, "time": "2018-03-22T01:01:34Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/7-8/", "author": "adw@mozilla.com", "id": 13149617, "time": "2018-03-22T20:05:26Z"}, {"text": "Feature- and test-complete patch, now need to clean it up and split it up for review.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=3dc6ba873af67859398caaca241c7ebddd2f9ca5", "author": "adw@mozilla.com", "id": 13149626, "time": "2018-03-22T20:08:03Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review235888\n\n\nCode analysis found 15 defects in this patch:\n - 15 defects found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/base/content/browser-pageActions.js:1081\n(Diff revision 8)\n>  \n>    onSubviewPlaced(panelViewNode) {\n>      let bodyNode = panelViewNode.querySelector(\".panel-subview-body\");\n> +\n> +    let notReady = document.createElement(\"toolbarbutton\");\n> +    let panelNode = panelViewNode.closest(\"panel\");\n\nError: 'panelnode' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1214\n(Diff revision 8)\n> +    action.setDisabled(!this.engines.length, window);\n> +  },\n> +\n> +  onShowingInPanel() {\n> +    dump(`****XXXadw BrowserPageActions.addSearchEngine.onShowingInPanel ${this.engines.length} engines=${this.engines.map(e => e.title)}\\n`);\n> +    let visibility = this.engines.length == 0 ? \"collapse\" : \"visible\";\n\nError: 'visibility' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1220\n(Diff revision 8)\n> +    let ids = [\n> +      \"addSearchEngine\",\n> +//       \"addSearchEngineSeparator\",\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n\nError: 'node' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser-pageActions.js:1223\n(Diff revision 8)\n> +    ];\n> +    for (let id of ids) {\n> +      let node = BrowserPageActions.panelButtonNodeForActionID(id);\n> +//       node.style.visibility = visibility;\n> +    }\n> +    //XXX no, onShowingInPanel not the right place to do this because the action\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1237\n(Diff revision 8)\n> +                                             [this.engines[0].title], 1) :\n> +      this.stringBundle.GetStringFromName(\"searchAddFoundEngineMenu\");\n> +    this.action.setTitle(title, window);\n> +    this.action.setWantsSubview(this.engines.length > 1, window);\n> +\n> +    //XXX no good -- this means that the urlbar button doesn't have an image\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser-pageActions.js:1280\n(Diff revision 8)\n> +\n> +//   },\n> +\n> +  onSubviewShowing(panelViewNode) {\n> +    dump(`******* onSubviewShowing\\n`);\n> +    let action = PageActions.actionForID(\"addSearchEngine\");\n\nError: 'action' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/browser.js:3834\n(Diff revision 8)\n>        if (browser == gBrowser.selectedBrowser)\n>          this.updateOpenSearchBadge();\n>      }\n>    },\n>  \n> +  //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/browser.js:4821\n(Diff revision 8)\n>      }\n>    },\n>  \n>    asyncUpdateUI() {\n>      FeedHandler.updateFeeds();\n> +    //XXXadw here probably?\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:308\n(Diff revision 8)\n> +    let button =\n> +      BrowserPageActions.panelButtonNodeForActionID(\"addSearchEngine\");\n> +    Assert.ok(button);\n> +    let viewPromise = promisePageActionViewShown();\n> +    EventUtils.synthesizeMouseAtCenter(button, {});\n> +    let view = await viewPromise;\n\nError: 'view' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:321\n(Diff revision 8)\n> +      promiseEngineAdded(\"page_action_menu_add_search_engine_0\");\n> +    let hiddenPromise = promisePageActionPanelHidden();\n> +    let feedbackPromise = promiseFeedbackPanelHidden();\n> +    EventUtils.synthesizeMouseAtCenter(body.childNodes[0], {});\n> +    await hiddenPromise;\n> +    let engines = [];\n\nError: 'engines' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/PageActions.jsm:1145\n(Diff revision 8)\n>   *         given object.\n>   */\n>  function browserPageActions(obj) {\n> +  if (!obj) {\n> +    dump(`+++++++++++++++++XXXadw !!!!!!obj\\n`);\n> +    dump((new Error()).stack+\"\\n\\n\");\n\nError: Infix operators must be spaced. [eslint: space-infix-ops]\n\n::: browser/modules/test/browser/browser_PageActions.js:54\n(Diff revision 8)\n> +  EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> +  await promisePageActionPanelHidden();\n> +\n> +\n>    let initialActions = PageActions.actions;\n> +  let initialNonBuiltInActions = PageActions._nonBuiltInActions.slice();\n\nError: 'initialnonbuiltinactions' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/test/browser/browser_PageActions.js:345\n(Diff revision 8)\n>  \n>  // Tests a non-built-in action with a subview.\n>  add_task(async function withSubview() {\n>    let id = \"test-subview\";\n>  \n>    let onActionCommandCallCount = 0;\n\nError: 'onactioncommandcallcount' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/test/browser/browser_PageActions.js:350\n(Diff revision 8)\n>    let onActionCommandCallCount = 0;\n>    let onActionPlacedInPanelCallCount = 0;\n>    let onActionPlacedInUrlbarCallCount = 0;\n>    let onSubviewPlacedCount = 0;\n>    let onSubviewShowingCount = 0;\n>    let onButtonCommandCallCount = 0;\n\nError: 'onbuttoncommandcallcount' is assigned a value but never used. [eslint: no-unused-vars]\n\n::: browser/modules/test/browser/browser_PageActions.js:1498\n(Diff revision 8)\n>  });\n>  \n>  \n> +// Tests transient actions.\n> +add_task(async function transient() {\n> +  let initialNonBuiltInActions = PageActions._nonBuiltInActions.slice();\n\nError: 'initialnonbuiltinactions' is assigned a value but never used. [eslint: no-unused-vars]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13149673, "time": "2018-03-22T20:26:39Z"}, {"text": "Created attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview commit: https://reviewboard.mozilla.org/r/230472/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/230472/", "author": "adw@mozilla.com", "id": 13150298, "time": "2018-03-23T00:27:14Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/8-9/", "author": "adw@mozilla.com", "id": 13150299, "time": "2018-03-23T00:27:14Z"}, {"text": "I'm out tomorrow and only working part of the day on Monday, so you may be better off asking e.g. Florian or Jared for a review. Otherwise I will do my best to review this Monday, maybe Tuesday. Sorry!", "author": "gijskruitbosch+bugs@gmail.com", "id": 13150304, "time": "2018-03-23T00:29:36Z"}, {"text": "OK, thanks Gijs.  I do think you would be the best person to look at part 1 at least.\n\nI'll describe the changes for whoever ends up reviewing.\n\nPart 1 is foundational page actions changes/improvements.  The main changes are:\n\n* Transient actions: I invented a new category just for this new add-engine item.  These are actions that stick to the bottom of the panel.  Unlike normal actions, when they're disabled, they disappear from the panel.\n\n* Change action.subview to action.setWantsSubview()/getWantsSubview().  The add-engine action needs to be able to switch between wanting a subview (when there are multiple engines offered) and not (when there's a single engine).  And it needs to do it per window.\n\n* For urlbar buttons, call action.onCommand() even if the action has a subview (before showing the subview panel) so that the action can call setWantsSubview() if it wants.\n\nOther changes that kind of crept in and aren't strictly necessary but are nice:\n\n* Place actions in the panel lazily, when it's opened\n* Remove PageActions.Subview, PageActions.Button -- the only thing using these is the send-to-device action, and it barely uses them.  Don't need them.\n\nPart 2 adds the new add-engine action.  It's straightforward compared to part 1.  It moves some code out of search.xml that's used to update the search bar's add-engine badge, into browser.js's BrowserSearch, so that both the search bar and this new action can rely on it.", "author": "adw@mozilla.com", "id": 13150307, "time": "2018-03-23T00:33:39Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=a977f8510cf0472ee961cba9fb5482e56b45027e", "author": "adw@mozilla.com", "id": 13150309, "time": "2018-03-23T00:38:03Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/9-10/", "author": "adw@mozilla.com", "id": 13152563, "time": "2018-03-23T20:36:03Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/1-2/", "author": "adw@mozilla.com", "id": 13152564, "time": "2018-03-23T20:36:03Z"}, {"text": "Fixes for webcompat and screenshots TV --verify tests.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=3695541c23da1ada58bd2062c1139eae19ce426c", "author": "adw@mozilla.com", "id": 13152573, "time": "2018-03-23T20:41:31Z"}, {"text": "Bug 1446250 bitrotted this and I had no idea about it, nice....", "author": "adw@mozilla.com", "id": 13152644, "time": "2018-03-23T21:04:12Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/10-11/", "author": "adw@mozilla.com", "id": 13153035, "time": "2018-03-24T00:24:51Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/2-3/", "author": "adw@mozilla.com", "id": 13153036, "time": "2018-03-24T00:24:51Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review236318\n\n\nCode analysis found 1 defect in this patch:\n - 1 defect found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/modules/PageActions.jsm:38\n(Diff revision 11)\n>  const PERSISTED_ACTIONS_CURRENT_VERSION = 1;\n>  \n>  // Escapes the given raw URL string, and returns an equivalent CSS url()\n>  // value for it.\n>  function escapeCSSURL(url) {\n> -  return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`;\n> +  return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`; //\"\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13153037, "time": "2018-03-24T00:26:50Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/11-12/", "author": "adw@mozilla.com", "id": 13153040, "time": "2018-03-24T00:27:09Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/3-4/", "author": "adw@mozilla.com", "id": 13153041, "time": "2018-03-24T00:27:09Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nhttps://reviewboard.mozilla.org/r/230472/#review236320\n\n\nCode analysis found 1 defect in this patch:\n - 1 defect found by mozlint\n\nYou can run this analysis locally with:\n - `./mach lint path/to/file` (JS/Python)\n\n\nIf you see a problem in this automated review, please report it here: http://bit.ly/2y9N9Vx\n\n\n::: browser/modules/PageActions.jsm:38\n(Diff revision 3)\n>  const PERSISTED_ACTIONS_CURRENT_VERSION = 1;\n>  \n>  // Escapes the given raw URL string, and returns an equivalent CSS url()\n>  // value for it.\n>  function escapeCSSURL(url) {\n>    return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`; //\"\n\nError: Expected space or tab after '//' in comment. [eslint: spaced-comment]", "author": "jkeromnes+clangbot@mozilla.com", "id": 13153043, "time": "2018-03-24T00:28:21Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=d1e3ace44fe68e25d0ba74e42cff2083f77318a0", "author": "adw@mozilla.com", "id": 13153045, "time": "2018-03-24T00:29:49Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/4-5/", "author": "adw@mozilla.com", "id": 13153499, "time": "2018-03-24T19:02:05Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=938a1e03e2068e39c4457e0ba2af44a32e9317fd", "author": "adw@mozilla.com", "id": 13153623, "time": "2018-03-24T21:17:50Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nhttps://reviewboard.mozilla.org/r/230472/#review236634\n\nWhen I test this on ecosia.org, when adding the search engine the error \"Invalid string label\" is logged to the browser console. I thought it might be an issue with the opensearch markup used by that engine, but I see the same when trying with qwant (qwant.com) . There's no stack or even a source line so I'm not sure how to figure out what's causing it, but hopefully you can have a look.\n\nOtherwise, the below are mostly just nits and this would have been r+ except for the above, which makes me a bit nervous about this patch.\n\n::: browser/base/content/browser.js:3795\n(Diff revision 5)\n> +    switch (data) {\n> +    case \"engine-removed\":\n> +      // An engine was removed from the search service.  If a page is offering\n> +      // the engine, then the engine needs to be added back to the corresponding\n> +      // browser's offered engines.\n> +      this._addMaybeOfferedEngine(engine);\n\nThe only thing the add/hide methods use off the `engine` object is the name, and the only observer notifications this object gets pass an engine (even encoded in the argument names of the method!).\n\nCan we just extract the name inside `observe()` and pass the engine name to the `_add` and `_hideMaybeOfferedEngine` methods?\n\n::: browser/base/content/browser.js:3829\n(Diff revision 5)\n> +    if (selectedBrowserOffersEngine) {\n> +      this.updateOpenSearchBadge();\n> +    }\n> +  },\n> +\n> +  _hideMaybeOfferedEngine(engine) {\n\nPlease make the method names match - either `show/hide` or `add/remove` not `add/hide` which is confusing.\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:4\n(Diff revision 5)\n> +  // Disable panel animations.  They cause intermittent timeouts on Linux when\n> +  // the test tries to synthesize clicks on items in newly opened panels.\n> +  BrowserPageActions._disablePanelAnimations = true;\n> +  registerCleanupFunction(() => {\n> +    BrowserPageActions._disablePanelAnimations = false;\n> +  });\n\nIs this copied from elsewhere? My understanding is that after Paolo's changes to panelmultiview, this shouldn't be necessary anymore. If you haven't, can you check if this is really necessary? And if you have and it's necessary, can you file a follow-up bug to get this fixed?\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:24\n(Diff revision 5)\n> +    EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> +    await promisePageActionPanelHidden();\n> +\n> +    // The action should not be present.\n> +    let actions = PageActions.actionsInPanel(window);\n> +    let action = actions.find(a => a.id == \"addSearchEngine\");\n\nCould just use `.some`\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:28\n(Diff revision 5)\n> +    let actions = PageActions.actionsInPanel(window);\n> +    let action = actions.find(a => a.id == \"addSearchEngine\");\n> +    Assert.ok(!action, \"Action should not be present in panel\");\n> +    let button =\n> +      BrowserPageActions.panelButtonNodeForActionID(\"addSearchEngine\");\n> +    Assert.ok(!button);\n\nNit: please add a message, here and below.\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:35\n(Diff revision 5)\n> +});\n> +\n> +\n> +// Checks a page that offers one engine.\n> +add_task(async function one() {\n> +  let url = \"http://mochi.test:8888/browser/browser/base/content/test/urlbar/page_action_menu_add_search_engine_one.html\";\n\nHere and below, can you use `gTestPath` and friends to avoid hardcoding the entire path?\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:291\n(Diff revision 5)\n> +  return new Promise(resolve => {\n> +    let topic = \"browser-search-engine-modified\";\n> +    Services.obs.addObserver(function obs(engine, t, data) {\n> +      if (\"engine-added\" == data &&\n> +          engine.wrappedJSObject.name == expectedName) {\n> +        Services.obs.removeObserver(obs, topic);\n> +        resolve(engine);\n> +      }\n> +    }, topic);\n> +  });\n\nNit: TestUtils.topicObserved() should make this simpler.\n\n::: browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.js:304\n(Diff revision 5)\n> +    }, topic);\n> +  });\n> +}\n> +\n> +function promiseEngineRemoved(expectedName) {\n> +  return new Promise(resolve => {\n\nDitto", "author": "gijskruitbosch+bugs@gmail.com", "id": 13156465, "time": "2018-03-26T17:47:16Z"}, {"text": "Sorry, still trying to get to grips with the first cset... Going to be tomorrow before I'll be able to finish reviewing it.", "author": "gijskruitbosch+bugs@gmail.com", "id": 13156794, "time": "2018-03-26T19:34:32Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/12-13/", "author": "adw@mozilla.com", "id": 13157340, "time": "2018-03-26T22:59:06Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/5-6/", "author": "adw@mozilla.com", "id": 13157341, "time": "2018-03-26T22:59:06Z"}, {"text": "(In reply to :Gijs from comment #84)\n> When I test this on ecosia.org, when adding the search engine the error\n> \"Invalid string label\" is logged to the browser console.\n\nIt's because of telemetry: I added a new built-in action, and each built-in action has a label in the page-actions histograms, but I didn't add a label for this new action.\n\n> ::: browser/base/content/browser.js:3795\n> (Diff revision 5)\n> > +    switch (data) {\n> > +    case \"engine-removed\":\n> > +      // An engine was removed from the search service.  If a page is offering\n> > +      // the engine, then the engine needs to be added back to the corresponding\n> > +      // browser's offered engines.\n> > +      this._addMaybeOfferedEngine(engine);\n> \n> The only thing the add/hide methods use off the `engine` object is the name,\n> and the only observer notifications this object gets pass an engine (even\n> encoded in the argument names of the method!).\n> \n> Can we just extract the name inside `observe()` and pass the engine name to\n> the `_add` and `_hideMaybeOfferedEngine` methods?\n\nDone\n\n> ::: browser/base/content/browser.js:3829\n> (Diff revision 5)\n> > +    if (selectedBrowserOffersEngine) {\n> > +      this.updateOpenSearchBadge();\n> > +    }\n> > +  },\n> > +\n> > +  _hideMaybeOfferedEngine(engine) {\n> \n> Please make the method names match - either `show/hide` or `add/remove` not\n> `add/hide` which is confusing.\n\nDone\n\n> browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.\n> js:4\n> (Diff revision 5)\n> > +  // Disable panel animations.  They cause intermittent timeouts on Linux when\n> > +  // the test tries to synthesize clicks on items in newly opened panels.\n> > +  BrowserPageActions._disablePanelAnimations = true;\n> > +  registerCleanupFunction(() => {\n> > +    BrowserPageActions._disablePanelAnimations = false;\n> > +  });\n> \n> Is this copied from elsewhere? My understanding is that after Paolo's\n> changes to panelmultiview, this shouldn't be necessary anymore. If you\n> haven't, can you check if this is really necessary? And if you have and it's\n> necessary, can you file a follow-up bug to get this fixed?\n\nRemoved\n\n> browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.\n> js:24\n> (Diff revision 5)\n> > +    EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> > +    await promisePageActionPanelHidden();\n> > +\n> > +    // The action should not be present.\n> > +    let actions = PageActions.actionsInPanel(window);\n> > +    let action = actions.find(a => a.id == \"addSearchEngine\");\n> \n> Could just use `.some`\n\nDone\n\n> browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.\n> js:28\n> (Diff revision 5)\n> > +    let actions = PageActions.actionsInPanel(window);\n> > +    let action = actions.find(a => a.id == \"addSearchEngine\");\n> > +    Assert.ok(!action, \"Action should not be present in panel\");\n> > +    let button =\n> > +      BrowserPageActions.panelButtonNodeForActionID(\"addSearchEngine\");\n> > +    Assert.ok(!button);\n> \n> Nit: please add a message, here and below.\n\nDone\n\n> browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.\n> js:35\n> (Diff revision 5)\n> > +});\n> > +\n> > +\n> > +// Checks a page that offers one engine.\n> > +add_task(async function one() {\n> > +  let url = \"http://mochi.test:8888/browser/browser/base/content/test/urlbar/page_action_menu_add_search_engine_one.html\";\n> \n> Here and below, can you use `gTestPath` and friends to avoid hardcoding the\n> entire path?\n\nDone\n\n> browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.\n> js:291\n> (Diff revision 5)\n> > +  return new Promise(resolve => {\n> > +    let topic = \"browser-search-engine-modified\";\n> > +    Services.obs.addObserver(function obs(engine, t, data) {\n> > +      if (\"engine-added\" == data &&\n> > +          engine.wrappedJSObject.name == expectedName) {\n> > +        Services.obs.removeObserver(obs, topic);\n> > +        resolve(engine);\n> > +      }\n> > +    }, topic);\n> > +  });\n> \n> Nit: TestUtils.topicObserved() should make this simpler.\n\nDone\n\n> browser/base/content/test/urlbar/browser_page_action_menu_add_search_engine.\n> js:304\n> (Diff revision 5)\n> > +    }, topic);\n> > +  });\n> > +}\n> > +\n> > +function promiseEngineRemoved(expectedName) {\n> > +  return new Promise(resolve => {\n> \n> Ditto\n\nDone", "author": "adw@mozilla.com", "id": 13157348, "time": "2018-03-26T23:01:25Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=cdea1f1607338e4ad99c18de9a9cf05f6afcf3fb", "author": "adw@mozilla.com", "id": 13157361, "time": "2018-03-26T23:16:11Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review237012\n\n::: browser/base/content/browser-pageActions.js:52\n(Diff revision 13)\n>     * Inits.  Call to init.\n>     */\n>    init() {\n>      this.placeAllActions();\n> +    this.panelNode.addEventListener(\"popupshowing\", () => {\n> +      this.mainButtonNode.setAttribute(\"open\", \"true\");\n\nDoing this immediately when the item is clicked helps with not having the button state flicker from :hover-> :active -> :hover -> [open] . Can we continue doing that?\n\n::: browser/base/content/browser-pageActions.js:53\n(Diff revision 13)\n>     */\n>    init() {\n>      this.placeAllActions();\n> +    this.panelNode.addEventListener(\"popupshowing\", () => {\n> +      this.mainButtonNode.setAttribute(\"open\", \"true\");\n> +      this._onPanelShowing();\n\nIf we move the `open` attribute setting, then in init you can do something like:\n\n```js\nthis._onPanelShowing = this._onPanelShowing.bind(this);\nthis.panelNode.addEventListener(\"popupshowing\", this._onPanelShowing);\n```\n\nRather than having some code directly in the event listener and some code in the `_onPanelShowing` method that then doesn't have any other callers.\n\n::: browser/base/content/browser-pageActions.js:68\n(Diff revision 13)\n> +      let buttonNode = this.panelButtonNodeForActionID(action.id);\n> +      action.onShowingInPanel(buttonNode);\n> +    }\n>    },\n>  \n> +  _placeLazyActionsInPanelNow() {\n\nAs noted in UITour, I think this should probably be public if we call it from outside here. I also think that the `Now` bit doesn't really add anything - you expect a method called `doThing` to do the thing now, unless it explicitly says `doThingAsync` or `doThingLazy` or whatever.\n\n::: browser/base/content/browser-pageActions.js:89\n(Diff revision 13)\n> -    // Place actions in the urlbar.  Do this in reverse order.  The reason is\n> +    for (let action of urlbarActions) {\n> -    // subtle.  If there were no urlbar nodes already in markup (like the\n> -    // bookmark star button), then doing this in forward order would be fine.\n> -    // Forward order means that the insert-before relationship is always broken:\n> -    // there's never a next-sibling node before which to insert a new node, so\n> -    // node.insertBefore() is always passed null, and nodes are always appended.\n> -    // That will break the position of nodes that should be inserted before\n> -    // nodes that are in markup, which in turn can break other nodes.\n> -    let actionsInUrlbar = PageActions.actionsInUrlbar(window);\n\nWhy do we no longer need to do this in reverse order as this comment indicates? I still see the star-button-box in browser.xul in DXR...\n\n::: browser/base/content/browser-pageActions.js:112\n(Diff revision 13)\n>     *\n>     * @param  action (PageActions.Action, required)\n>     *         The action to place.\n>     */\n>    placeActionInPanel(action) {\n> +    if (this.panelNode.state == \"open\") {\n\nMaybe it'd be safer to have this be `!= \"closed\"` so that we also do this if someone adds an action from a popupshowing handler or similar (when state == \"showing\") ?\n\n::: browser/base/content/browser-pageActions.js:205\n(Diff revision 13)\n> +   *         return the panel button ID.  If you're inserting into the urlbar,\n> +   *         then it should return the urlbar button ID.\n> +   * @return (DOM node, maybe null) The DOM node before which to insert the\n> +   *         given action.  Null if the action should be inserted at the end.\n> +   */\n> +  _insertBeforeNode(action, actionArray, nodeGetterFn) {\n\nThis name implies we're inserting the node - can we name it `getNextNode` or something?\n\nAlso, the node getter function seems overkill - can we just pass a bool or string that indicates whether this is a panel/urlbar node we're looking for? Then push the actual fetching of the id into this method. This would also mean we can push the actionArray getting into this method, because both callsites just fetch that list and then don't do anything with it.\n\n::: browser/base/content/browser-pageActions.js:659\n(Diff revision 13)\n> +      if (panelViewNode) {\n> +        panelViewNode.remove();\n> +      }\n> +      return;\n> -      }\n> +    }\n> -      node.setAttribute(\"tooltiptext\", tooltip || title);\n> +    panelNode.classList.add(\"subviewbutton-nav\");\n\nMove this above the `if (!wantsSubview)` block and just use:\n\n```js\npanelNode.classList.toggle(\"subviewbutton-nav\", wantsSubview);\n```\n\n(and remove the identical call inside the if block)\n\n::: browser/base/content/browser-pageActions.js:688\n(Diff revision 13)\n> -    if (action.subview || action.wantsIframe) {\n> +    if (!aaPanelNode || aaPanelNode.getAttribute(\"actionID\") != action.id) {\n> +      action.onCommand(event, buttonNode);\n> +    }\n\nI'm very confused - how does `onSubviewShowing` still get called if the action's `onCommand` changes its `wantsSubview` property? It looks like that's supposed to happen above this code, and the `togglePanelForAction` code will cause the panel to close and then reopen showing only the relevant subview. I don't think that's what we want.\n\n::: browser/components/uitour/UITour.jsm:161\n(Diff revision 13)\n>          // It would be hidden if toggled off from the urlbar.\n>          let node = aDocument.getElementById(\"pocket-button-box\");\n>          if (node && !node.hidden) {\n>            return node;\n>          }\n> +        aDocument.ownerGlobal.BrowserPageActions._placeLazyActionsInPanelNow();\n\nThis feels a bit like a code smell... At a minimum, it seems like this should be a public method, given it's called from other modules.\n\n::: browser/components/uitour/UITour.jsm:255\n(Diff revision 13)\n>                 aDocument.getElementById(\"pageAction-panel-sendToDevice\");\n>        },\n>      }],\n>      [\"screenshots\", {\n>        query: (aDocument) => {\n> +        aDocument.ownerGlobal.BrowserPageActions._placeLazyActionsInPanelNow();\n\nCan we avoid the duplication here by making this call in whatever place calls these `query` methods?\n\n::: browser/modules/PageActions.jsm:38\n(Diff revision 13)\n>  const PERSISTED_ACTIONS_CURRENT_VERSION = 1;\n>  \n>  // Escapes the given raw URL string, and returns an equivalent CSS url()\n>  // value for it.\n>  function escapeCSSURL(url) {\n> -  return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`;\n> +  return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`; // \"\n\nNit: please remove the added empty comment here.\n\n::: browser/modules/PageActions.jsm:129\n(Diff revision 13)\n>        }\n> -      actions.push(...this.nonBuiltInActions);\n> +      actions.push(...nonBuiltInActions);\n> +    }\n> +    let transientActions =\n> +      this._builtInActions.filter(filterTransient)\n> +      .concat(this._nonBuiltInActions.filter(filterTransient));\n\nDoes it really make sense to have both builtin and non-builtin transient actions? Also, can't we just store the transient actions in a separate list (so have a third array member in addition to `_builtInActions` and `nonBuiltInActions`, avoiding all this runtime processing every time someone asks for the list of actions? This code iterates over each list of actions twice, which seems like it shouldn't be necessary - an action's transient-ness doesn't change, after all...\n\n::: browser/modules/PageActions.jsm:716\n(Diff revision 13)\n>    setTooltip(value, browserWindow = null) {\n>      return this._setProperty(\"tooltip\", value, browserWindow);\n>    },\n>  \n>    /**\n> +   * Whether the action wants a subview (bool, nonnull)\n\nWhat does the (bool, nonnull) mean here?\n\n::: browser/modules/PageActions.jsm:722\n(Diff revision 13)\n> +   */\n> +  getWantsSubview(browserWindow = null) {\n> +    return !!this._getProperties(browserWindow).wantsSubview;\n> +  },\n> +  setWantsSubview(value, browserWindow = null) {\n> +    return this._setProperty(\"wantsSubview\", !!value, browserWindow);\n\nIf we set this to `false`, does the subview node stay in the document? And then won't it not get removed once the action gets removed, because the action's wantsSubview property is then false?\n\n::: browser/modules/PageActions.jsm:1037\n(Diff revision 13)\n> +   * @return True if the action should be shown and false otherwise.  Actions\n> +   *         are always shown in the panel unless they're both transient and\n> +   *         disabled.\n> +   */\n> +  shouldShowInPanel(browserWindow) {\n> +    return !this.__transient || !this.getDisabled(browserWindow);\n\nThere are only 3 callsites, and 2 have specific requirements for `this.__transient` themselves. So I think it would be clearer to just inline this check in the callsites.\n\n::: browser/modules/test/browser/browser_PageActions.js:400\n(Diff revision 13)\n> +  EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> +  await promisePageActionPanelHidden();\n\nYou could just not close the panel here and keep it open until you click the item some 20 lines below?", "author": "gijskruitbosch+bugs@gmail.com", "id": 13158483, "time": "2018-03-27T12:21:47Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nhttps://reviewboard.mozilla.org/r/230472/#review237056\n\nr=me with the telemetry thing sorted\n\n::: toolkit/components/telemetry/Histograms.json:6431\n(Diff revision 6)\n>      \"labels\": [\"bookmark\", \"pocket\", \"screenshots\", \"webcompat\", \"copyURL\", \"emailLink\",\n> -               \"sendToDevice\", \"other\"],\n> +               \"sendToDevice\", \"addSearchEngine\", \"other\"],\n\nI'm not sure this works - the telemetry docs aren't clear on whether you can add labels mid-array or if new items have to go at the end (which would be unfortunate because of course we want 'other' to be the last item). Please get clarification from the telemetry folks on this before shipping.", "author": "gijskruitbosch+bugs@gmail.com", "id": 13158495, "time": "2018-03-27T12:34:18Z"}, {"text": "(In reply to :Gijs from comment #91)\n> Comment on attachment 8961608\n> Bug 1221539 - Add search engine discovery to the page action menu. Part 2:\n> Add the new action.\n> \n> https://reviewboard.mozilla.org/r/230472/#review237056\n> \n> r=me with the telemetry thing sorted\n> \n> ::: toolkit/components/telemetry/Histograms.json:6431\n> (Diff revision 6)\n> >      \"labels\": [\"bookmark\", \"pocket\", \"screenshots\", \"webcompat\", \"copyURL\", \"emailLink\",\n> > -               \"sendToDevice\", \"other\"],\n> > +               \"sendToDevice\", \"addSearchEngine\", \"other\"],\n> \n> I'm not sure this works - the telemetry docs aren't clear on whether you can\n> add labels mid-array or if new items have to go at the end (which would be\n> unfortunate because of course we want 'other' to be the last item). Please\n> get clarification from the telemetry folks on this before shipping.\n\nYeah, this doesn't work - we can't insert before existing items, only append new labels at the end. r=me to either just append or to append two entries, moving \"other\" back to the end, see discussion in:\n\nhttps://mozilla.logbot.info/telemetry/20180327", "author": "gijskruitbosch+bugs@gmail.com", "id": 13158558, "time": "2018-03-27T13:07:58Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/13-14/", "author": "adw@mozilla.com", "id": 13160928, "time": "2018-03-27T18:44:00Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/6-7/", "author": "adw@mozilla.com", "id": 13160929, "time": "2018-03-27T18:44:00Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/14-15/", "author": "adw@mozilla.com", "id": 13160960, "time": "2018-03-27T18:53:06Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/7-8/", "author": "adw@mozilla.com", "id": 13160961, "time": "2018-03-27T18:53:06Z"}, {"text": "(In reply to :Gijs from comment #90)\n> ::: browser/base/content/browser-pageActions.js:52\n> (Diff revision 13)\n> >     * Inits.  Call to init.\n> >     */\n> >    init() {\n> >      this.placeAllActions();\n> > +    this.panelNode.addEventListener(\"popupshowing\", () => {\n> > +      this.mainButtonNode.setAttribute(\"open\", \"true\");\n> \n> Doing this immediately when the item is clicked helps with not having the\n> button state flicker from :hover-> :active -> :hover -> [open] . Can we\n> continue doing that?\n\nDone, added setAttribute(\"open\") back to showPanel\n\n> ::: browser/base/content/browser-pageActions.js:53\n> (Diff revision 13)\n> >     */\n> >    init() {\n> >      this.placeAllActions();\n> > +    this.panelNode.addEventListener(\"popupshowing\", () => {\n> > +      this.mainButtonNode.setAttribute(\"open\", \"true\");\n> > +      this._onPanelShowing();\n> \n> If we move the `open` attribute setting, then in init you can do something\n> like:\n> \n> ```js\n> this._onPanelShowing = this._onPanelShowing.bind(this);\n> this.panelNode.addEventListener(\"popupshowing\", this._onPanelShowing);\n> ```\n> \n> Rather than having some code directly in the event listener and some code in\n> the `_onPanelShowing` method that then doesn't have any other callers.\n\nDone\n\n> ::: browser/base/content/browser-pageActions.js:68\n> (Diff revision 13)\n> > +      let buttonNode = this.panelButtonNodeForActionID(action.id);\n> > +      action.onShowingInPanel(buttonNode);\n> > +    }\n> >    },\n> >  \n> > +  _placeLazyActionsInPanelNow() {\n> \n> As noted in UITour, I think this should probably be public if we call it\n> from outside here. I also think that the `Now` bit doesn't really add\n> anything - you expect a method called `doThing` to do the thing now, unless\n> it explicitly says `doThingAsync` or `doThingLazy` or whatever.\n\nDone\n\n> ::: browser/base/content/browser-pageActions.js:89\n> (Diff revision 13)\n> > -    // Place actions in the urlbar.  Do this in reverse order.  The reason is\n> > +    for (let action of urlbarActions) {\n> > -    // subtle.  If there were no urlbar nodes already in markup (like the\n> > -    // bookmark star button), then doing this in forward order would be fine.\n> > -    // Forward order means that the insert-before relationship is always broken:\n> > -    // there's never a next-sibling node before which to insert a new node, so\n> > -    // node.insertBefore() is always passed null, and nodes are always appended.\n> > -    // That will break the position of nodes that should be inserted before\n> > -    // nodes that are in markup, which in turn can break other nodes.\n> > -    let actionsInUrlbar = PageActions.actionsInUrlbar(window);\n> \n> Why do we no longer need to do this in reverse order as this comment\n> indicates? I still see the star-button-box in browser.xul in DXR...\n\nPreviously, insertBeforeNode() was a method on PageActions, and all it did was return the ID of the action after a given action in either the panel or urlbar array.  It didn't check to see whether that next action was actually present in the DOM.  _getNextNode on the other hand does check whether the next action is in the DOM.  In fact it returns the ID of the next closest action that's in the DOM.  So there's no longer any danger of nodes ending up in the wrong order.\n\n> ::: browser/base/content/browser-pageActions.js:112\n> (Diff revision 13)\n> >     *\n> >     * @param  action (PageActions.Action, required)\n> >     *         The action to place.\n> >     */\n> >    placeActionInPanel(action) {\n> > +    if (this.panelNode.state == \"open\") {\n> \n> Maybe it'd be safer to have this be `!= \"closed\"` so that we also do this if\n> someone adds an action from a popupshowing handler or similar (when state ==\n> \"showing\") ?\n\nDone\n\n> ::: browser/base/content/browser-pageActions.js:205\n> (Diff revision 13)\n> > +   *         return the panel button ID.  If you're inserting into the urlbar,\n> > +   *         then it should return the urlbar button ID.\n> > +   * @return (DOM node, maybe null) The DOM node before which to insert the\n> > +   *         given action.  Null if the action should be inserted at the end.\n> > +   */\n> > +  _insertBeforeNode(action, actionArray, nodeGetterFn) {\n> \n> This name implies we're inserting the node - can we name it `getNextNode` or\n> something?\n\nDone, _getNextNode\n\n> Also, the node getter function seems overkill - can we just pass a bool or\n> string that indicates whether this is a panel/urlbar node we're looking for?\n> Then push the actual fetching of the id into this method. This would also\n> mean we can push the actionArray getting into this method, because both\n> callsites just fetch that list and then don't do anything with it.\n\nDone\n\n> ::: browser/base/content/browser-pageActions.js:659\n> (Diff revision 13)\n> > +      if (panelViewNode) {\n> > +        panelViewNode.remove();\n> > +      }\n> > +      return;\n> > -      }\n> > +    }\n> > -      node.setAttribute(\"tooltiptext\", tooltip || title);\n> > +    panelNode.classList.add(\"subviewbutton-nav\");\n> \n> Move this above the `if (!wantsSubview)` block and just use:\n> \n> ```js\n> panelNode.classList.toggle(\"subviewbutton-nav\", wantsSubview);\n> ```\n> \n> (and remove the identical call inside the if block)\n\nDone\n\n> ::: browser/base/content/browser-pageActions.js:688\n> (Diff revision 13)\n> > -    if (action.subview || action.wantsIframe) {\n> > +    if (!aaPanelNode || aaPanelNode.getAttribute(\"actionID\") != action.id) {\n> > +      action.onCommand(event, buttonNode);\n> > +    }\n> \n> I'm very confused - how does `onSubviewShowing` still get called if the\n> action's `onCommand` changes its `wantsSubview` property? It looks like\n> that's supposed to happen above this code, and the `togglePanelForAction`\n> code will cause the panel to close and then reopen showing only the relevant\n> subview. I don't think that's what we want.\n\nThe part above this code handles the subview-showing case for actions in the panel.  This code here handles the case for actions in the urlbar.  togglePanelForAction ensures that onSubviewShowing is called for such actions.\n\n> ::: browser/components/uitour/UITour.jsm:161\n> (Diff revision 13)\n> >          // It would be hidden if toggled off from the urlbar.\n> >          let node = aDocument.getElementById(\"pocket-button-box\");\n> >          if (node && !node.hidden) {\n> >            return node;\n> >          }\n> > +        aDocument.ownerGlobal.BrowserPageActions._placeLazyActionsInPanelNow();\n> \n> This feels a bit like a code smell... At a minimum, it seems like this\n> should be a public method, given it's called from other modules.\n\nMade public (the only thing this is doing is forcing the panel to update itself non-lazily, which is necessary in this one case because UITour gets the nodes it needs to highlight before it actually opens the panel)\n\n> ::: browser/components/uitour/UITour.jsm:255\n> (Diff revision 13)\n> >                 aDocument.getElementById(\"pageAction-panel-sendToDevice\");\n> >        },\n> >      }],\n> >      [\"screenshots\", {\n> >        query: (aDocument) => {\n> > +        aDocument.ownerGlobal.BrowserPageActions._placeLazyActionsInPanelNow();\n> \n> Can we avoid the duplication here by making this call in whatever place\n> calls these `query` methods?\n\nNot really because query() is called for all kinds of things, not only the page action panel, so it's really the right thing to do to call this in each of these methods\n\n> ::: browser/modules/PageActions.jsm:38\n> (Diff revision 13)\n> >  const PERSISTED_ACTIONS_CURRENT_VERSION = 1;\n> >  \n> >  // Escapes the given raw URL string, and returns an equivalent CSS url()\n> >  // value for it.\n> >  function escapeCSSURL(url) {\n> > -  return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`;\n> > +  return `url(\"${url.replace(/[\\\\\\s\"]/g, encodeURIComponent)}\")`; // \"\n> \n> Nit: please remove the added empty comment here.\n\nDone\n\n> ::: browser/modules/PageActions.jsm:129\n> (Diff revision 13)\n> >        }\n> > -      actions.push(...this.nonBuiltInActions);\n> > +      actions.push(...nonBuiltInActions);\n> > +    }\n> > +    let transientActions =\n> > +      this._builtInActions.filter(filterTransient)\n> > +      .concat(this._nonBuiltInActions.filter(filterTransient));\n> \n> Does it really make sense to have both builtin and non-builtin transient\n> actions? Also, can't we just store the transient actions in a separate list\n> (so have a third array member in addition to `_builtInActions` and\n> `nonBuiltInActions`, avoiding all this runtime processing every time someone\n> asks for the list of actions? This code iterates over each list of actions\n> twice, which seems like it shouldn't be necessary - an action's\n> transient-ness doesn't change, after all...\n\nDone, now we have three arrays\n\n> ::: browser/modules/PageActions.jsm:716\n> (Diff revision 13)\n> >    setTooltip(value, browserWindow = null) {\n> >      return this._setProperty(\"tooltip\", value, browserWindow);\n> >    },\n> >  \n> >    /**\n> > +   * Whether the action wants a subview (bool, nonnull)\n> \n> What does the (bool, nonnull) mean here?\n\nThis property is a bool that will never be nonnull.  Some properties for example can be null even though their primary type is, like, a string or something.  Anyway I removed all these nonnull/nullable things\n\n> ::: browser/modules/PageActions.jsm:722\n> (Diff revision 13)\n> > +   */\n> > +  getWantsSubview(browserWindow = null) {\n> > +    return !!this._getProperties(browserWindow).wantsSubview;\n> > +  },\n> > +  setWantsSubview(value, browserWindow = null) {\n> > +    return this._setProperty(\"wantsSubview\", !!value, browserWindow);\n> \n> If we set this to `false`, does the subview node stay in the document? And\n> then won't it not get removed once the action gets removed, because the\n> action's wantsSubview property is then false?\n\nNo, the node is removed in BrowserPageActions via the updateAction and _updateActionWantsSubview path\n\n> ::: browser/modules/PageActions.jsm:1037\n> (Diff revision 13)\n> > +   * @return True if the action should be shown and false otherwise.  Actions\n> > +   *         are always shown in the panel unless they're both transient and\n> > +   *         disabled.\n> > +   */\n> > +  shouldShowInPanel(browserWindow) {\n> > +    return !this.__transient || !this.getDisabled(browserWindow);\n> \n> There are only 3 callsites, and 2 have specific requirements for\n> `this.__transient` themselves. So I think it would be clearer to just inline\n> this check in the callsites.\n\nI left this as is because the shouldShowInPanel determination depends on both action._transient and action.getDisabled() (and because the two callsites you mention are rewritten/gone), and there's an analogous shouldShowInUrlbar, and one caller is in BrowserPageActions, so I think it makes more sense to have this\n\n> ::: browser/modules/test/browser/browser_PageActions.js:400\n> (Diff revision 13)\n> > +  EventUtils.synthesizeMouseAtCenter(BrowserPageActions.mainButtonNode, {});\n> > +  await promisePageActionPanelHidden();\n> \n> You could just not close the panel here and keep it open until you click the\n> item some 20 lines below?\n\nDone", "author": "adw@mozilla.com", "id": 13160967, "time": "2018-03-27T18:55:18Z"}, {"text": "(In reply to :Gijs from comment #92)\n> Yeah, this doesn't work - we can't insert before existing items, only append\n> new labels at the end. r=me to either just append or to append two entries,\n> moving \"other\" back to the end, see discussion in:\n> \n> https://mozilla.logbot.info/telemetry/20180327\n\nI moved the new label to the end, thanks for catching this", "author": "adw@mozilla.com", "id": 13160969, "time": "2018-03-27T18:56:00Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #97)\n> > ::: browser/components/uitour/UITour.jsm:255\n> > (Diff revision 13)\n> > >                 aDocument.getElementById(\"pageAction-panel-sendToDevice\");\n> > >        },\n> > >      }],\n> > >      [\"screenshots\", {\n> > >        query: (aDocument) => {\n> > > +        aDocument.ownerGlobal.BrowserPageActions._placeLazyActionsInPanelNow();\n> > \n> > Can we avoid the duplication here by making this call in whatever place\n> > calls these `query` methods?\n> \n> Not really because query() is called for all kinds of things, not only the\n> page action panel,\n\nSure, but we could just make the callsite of query() call this when the target is any of screenshots/pocket/pageAction* . Anyway, I guess this is fine... it's just a bit ugly, but that goes for a lot of UITour...", "author": "gijskruitbosch+bugs@gmail.com", "id": 13162802, "time": "2018-03-28T10:05:50Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nhttps://reviewboard.mozilla.org/r/218982/#review237446", "author": "gijskruitbosch+bugs@gmail.com", "id": 13162806, "time": "2018-03-28T10:06:24Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/15-16/", "author": "adw@mozilla.com", "id": 13164008, "time": "2018-03-28T17:08:57Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/8-9/", "author": "adw@mozilla.com", "id": 13164009, "time": "2018-03-28T17:08:57Z"}, {"text": "Rebased on current tree, fixed a few failures in browser_PageActions.js due to the addition of PageActions._transientActions in the previous patch.  One more push to try before landing.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=b921db4da3abcafe0b9955eeb703e987fbefc79e", "author": "adw@mozilla.com", "id": 13164023, "time": "2018-03-28T17:12:30Z"}, {"text": "Comment on attachment 8949631\nBug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/218982/diff/16-17/", "author": "adw@mozilla.com", "id": 13164355, "time": "2018-03-28T18:30:40Z"}, {"text": "Comment on attachment 8961608\nBug 1221539 - Add search engine discovery to the page action menu. Part 2: Add the new action.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/230472/diff/9-10/", "author": "adw@mozilla.com", "id": 13164356, "time": "2018-03-28T18:30:40Z"}, {"text": "Forgot to update a method name in UITour.jsm.  I'll land this now.", "author": "adw@mozilla.com", "id": 13164357, "time": "2018-03-28T18:31:31Z"}, {"text": "Pushed by dwillcoxon@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/88abb5bd6790\nAdd search engine discovery to the page action menu. Part 1: Page action changes. r=Gijs\nhttps://hg.mozilla.org/integration/autoland/rev/c6c9e8f68dd8\nAdd search engine discovery to the page action menu. Part 2: Add the new action. r=Gijs", "author": "pulsebot@bots.tld", "id": 13164373, "time": "2018-03-28T18:39:26Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/88abb5bd6790\nhttps://hg.mozilla.org/mozilla-central/rev/c6c9e8f68dd8", "author": "dluca@mozilla.com", "id": 13166069, "time": "2018-03-29T09:52:10Z"}, {"text": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0\n\nDon't know if this is already fixed in the bug fix mentioned in comment 103, but in the current nightly, if i go to the \npage actions > right click on the search engine > and choose \"Add to Address Bar\" \ni get a blank space/button on the address bar, instead of the icon to add a new search engine.\nIf i click on it, nothing happens", "author": "johnmaverick74@mail.com", "id": 13166510, "time": "2018-03-29T13:57:36Z"}, {"text": "(In reply to Maverick from comment #109)\n> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101\n> Firefox/61.0\n> \n> Don't know if this is already fixed in the bug fix mentioned in comment 103,\n> but in the current nightly, if i go to the \n> page actions > right click on the search engine > and choose \"Add to Address\n> Bar\" \n> i get a blank space/button on the address bar, instead of the icon to add a\n> new search engine.\n> If i click on it, nothing happens\n\nPlease file a separate bug, and indicate what site you're seeing this behaviour on.", "author": "gijskruitbosch+bugs@gmail.com", "id": 13166572, "time": "2018-03-29T14:22:17Z"}, {"text": "(In reply to :Gijs from comment #110)\n> (In reply to Maverick from comment #109)\n> > Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101\n> > Firefox/61.0\n> > \n> > Don't know if this is already fixed in the bug fix mentioned in comment 103,\n> > but in the current nightly, if i go to the \n> > page actions > right click on the search engine > and choose \"Add to Address\n> > Bar\" \n> > i get a blank space/button on the address bar, instead of the icon to add a\n> > new search engine.\n> > If i click on it, nothing happens\n> \n> Please file a separate bug, and indicate what site you're seeing this\n> behaviour on.\n\nAdded as bug 1449947\nScreenshot attached", "author": "johnmaverick74@mail.com", "id": 13166617, "time": "2018-03-29T14:42:42Z"}, {"text": "Drew, since this is a visible change in the UI for users, could you please nominate this bug for release note addition? Thanks", "author": "pascalc@gmail.com", "id": 13168660, "time": "2018-03-30T09:26:00Z"}, {"text": "Please add dot on \"Page action\" button, when in this menu is someting not a permanent menuitem.\n\nThis may refer not only to \"add search engine\" but each  not a permanent menuitem added from eextenisons to \"Page action menu\".\n\nWhat do you think?", "author": "dev.lukaszpolowczyk@gmail.com", "id": 13173356, "time": "2018-04-02T10:09:58Z"}, {"text": "(In reply to \u0141ukasz from comment #113)\n> Please add dot on \"Page action\" button, when in this menu is someting not a\n> permanent menuitem.\n> \n> This may refer not only to \"add search engine\" but each  not a permanent\n> menuitem added from eextenisons to \"Page action menu\".\n> \n> What do you think?\n\nImho, while i understand the idea, in this particular case (adding a new search engine), when you have one available you can just right-click it and choose \"Add to address bar\". \nThis will imply that everytime a new search engine is available to be added an icon for it will show up on the address bar.\n\n(this is also available for other not-permanent item features)\n\nStill, if believed that a badge from the 3 dot's is needed i would recommend adding other badge that is not a dot (because then you'll have 4), or paint one of the 3 in a different color... but i believe it's important to keep the 3 dots \"image\"", "author": "johnmaverick74@mail.com", "id": 13173700, "time": "2018-04-02T10:55:45Z"}, {"text": "Release Note Request (optional, but appreciated)\n[Why is this notable]:\nBefore this bug, the only way to install OpenSearch plugins offered by web pages was via the search bar.  If you hid your search bar (and all new profiles have the search bar hidden by default), then there was no way for you to install new search engines offered by web pages.  With this bug, OpenSearch plugins are now offered in the page action menu (in addition to the search bar, as before).\n\n[Affects Firefox for Android]:\nNo\n\n[Suggested wording]:\nOpenSearch plugins offered by web pages can now be added from the page action menu.\n\n[Links (documentation, blog post, etc)]:\nNone", "author": "adw@mozilla.com", "id": 13175122, "time": "2018-04-02T23:29:01Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #115)\n> [Suggested wording]:\n> OpenSearch plugins offered by web pages can now be added from the page\n> action menu.\n\nThank you, this was added to Nightly release notes. For beta and final release notes, our release managers will decide on the integration and wording.", "author": "pascalc@gmail.com", "id": 13175746, "time": "2018-04-03T09:00:59Z"}, {"text": "(In reply to Maverick from comment #114)\n> Still, if believed that a badge from the 3 dot's is needed i would recommend\n> adding other badge that is not a dot (because then you'll have 4), or paint\n> one of the 3 in a different color... but i believe it's important to keep\n> the 3 dots \"image\"\n\nThe last dot could be slightly enlarged. Or have an extra border. Anything.", "author": "dev.lukaszpolowczyk@gmail.com", "id": 13176062, "time": "2018-04-03T12:23:47Z"}, {"text": "(In reply to \u0141ukasz from comment #117)\n> The last dot could be slightly enlarged. Or have an extra border. Anything.\n\nI filed bug 1451119 for a badge or other kind of indicator on the primary page action button.", "author": "adw@mozilla.com", "id": 13177810, "time": "2018-04-03T20:54:53Z"}, {"text": "I opened Bug 1452700 as a followup.  The green pop up isn't providing enough context to the location of the new search engine.", "author": "epang@mozilla.com", "id": 13192664, "time": "2018-04-09T17:46:54Z"}, {"text": "While we are working on the opensearch integration... Someone should fix the automated updating of opensearch documents. For some time I observed that documents (opensearch) that are long outdated dont get automatically updated by firefox.\n\nIt is extremely annoying for users if you've added a search but it does not work. Since there is currently no interface (known to me) that allows a websites (owners) to force an update of opensearch documents, it must/should be handeled internally by firefox, while it is part of the opensearch standard.\n\nAND a better documentation on the update behavior must be added.\n\n..... Please correct me if I missed something", "author": "feluchs@web.de", "id": 13202034, "time": "2018-04-12T20:14:08Z"}, {"text": "Please file a new bug", "author": "adw@mozilla.com", "id": 13202043, "time": "2018-04-12T20:15:03Z"}, {"text": "> Someone should fix the automated updating of opensearch documents.\n\nWe already have support for this if the engine specifies an UpdateURL.\n\nhttps://searchfox.org/mozilla-central/source/toolkit/components/search/nsSearchService.js#1980", "author": "mozilla@kaply.com", "id": 13202066, "time": "2018-04-12T20:22:17Z"}, {"text": "(In reply to Mike Kaply [:mkaply] from comment #122)\n> > Someone should fix the automated updating of opensearch documents.\n> \n> We already have support for this if the engine specifies an UpdateURL.\n> \n> https://searchfox.org/mozilla-central/source/toolkit/components/search/\n> nsSearchService.js#1980\n\nThank you. I have not worked on firefox so far. Had not found this code yet. Unfortunately could observe any updates so far.", "author": "feluchs@web.de", "id": 13202112, "time": "2018-04-12T20:35:31Z"}, {"text": "Hi Drew, Is this a qe-verify bug or needs a test plan? Can you raise the appropriate flag for action?\n\nThanks!", "author": "shilpi@mozilla.com", "id": 13213251, "time": "2018-04-17T18:24:44Z"}, {"text": "In the \"Page actions\" dropdown, for any search engine, the text shown is: Add Search Engine (without the name of the engine or any more information - not as in the specs). The icon of the engine is correctly shown, but I also tried Amazon for different countries and only one engine appears at a time (can't make it to appear more engines in the drop down). For the same case with Amazon, if I add country x to the list and then I visit Amazon from another country y, I cannot add y to the list (so only from one country can be added).\n\nMarco, my question is: regarding what I wrote above, is the objective of the issue completed and the things that are not working as expected will be fixed in other issues?", "author": "david.olah@softvision.ro", "id": 13228772, "time": "2018-04-24T07:15:39Z"}, {"text": "Also:\n\n- there are search engines that don't appear in the \"Page actions\" dropdown. Ex: dogpile, google\n- when a new engine appears in the \"Page actions\", and it is being added to the list by clicking on it, it remains in the \"Page actions\" and can be selected again (even if in this case a popup appears with the message: Nightly could not install the search plugin from \u201chttps://ro.search.yahoo.com/opensearch.xml\u201d because an engine with the same name already exists.)", "author": "david.olah@softvision.ro", "id": 13229558, "time": "2018-04-24T14:08:10Z"}, {"text": "(In reply to David Olah from comment #126)\n> Also:\n> \n> - there are search engines that don't appear in the \"Page actions\" dropdown.\n> Ex: dogpile, google\n\nOnly search engines that are semantically linked from the page can show up (neither dogpile nor google do this).\n\n> - when a new engine appears in the \"Page actions\", and it is being added to\n> the list by clicking on it, it remains in the \"Page actions\" and can be\n> selected again (even if in this case a popup appears with the message:\n> Nightly could not install the search plugin from\n> \u201chttps://ro.search.yahoo.com/opensearch.xml\u201d because an engine with the same\n> name already exists.)\n\nThis seems like a bug. Please file a new bug as a dependency, provide full steps to reproduce from a clean profile, and ni me or :adw there.", "author": "gijskruitbosch+bugs@gmail.com", "id": 13230086, "time": "2018-04-24T16:46:21Z"}, {"text": "(In reply to :Gijs (he/him) from comment #127)\n> This seems like a bug. Please file a new bug as a dependency, provide full\n> steps to reproduce from a clean profile, and ni me or :adw there.\n\nYahoo is a special case.  The name of the engine in the opensearch plugin doesn't match the final name that the engine gets installed with, so Firefox can't currently tell that they're the same engine.  It happens with the search bar, too.  IIRC there's a bug on file for fixing that problem in general.", "author": "adw@mozilla.com", "id": 13230104, "time": "2018-04-24T16:50:08Z"}, {"text": "(In reply to David Olah from comment #125)\n> In the \"Page actions\" dropdown, for any search engine, the text shown is:\n> Add Search Engine (without the name of the engine or any more information -\n> not as in the specs).\n\nThis was changed in bug 1450294 so it's expected.\n\n> The icon of the engine is correctly shown, but I also\n> tried Amazon for different countries and only one engine appears at a time\n> (can't make it to appear more engines in the drop down). For the same case\n> with Amazon, if I add country x to the list and then I visit Amazon from\n> another country y, I cannot add y to the list (so only from one country can\n> be added).\n\nWe identify search engines by title, so if all the amazon search engines have the same title then I don't think this is surprising. Looking at the source code of amazon.co.uk, amazon.com and amazon.de, all of the pages point to the same engine file ( https://d2lo25i6d3q8zm.cloudfront.net/browser-plugins/AmazonSearchSuggestionsOSD.Firefox.xml - search for 'opensearch' in view-source to check) and so AFAICT all of these pages advertise the exact same search engine. Are you seeing something else? If so, please provide more detailed steps in a separate follow-up bug.", "author": "gijskruitbosch+bugs@gmail.com", "id": 13230105, "time": "2018-04-24T16:51:09Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #128)\n> (In reply to :Gijs (he/him) from comment #127)\n> > This seems like a bug. Please file a new bug as a dependency, provide full\n> > steps to reproduce from a clean profile, and ni me or :adw there.\n> \n> Yahoo is a special case.  The name of the engine in the opensearch plugin\n> doesn't match the final name that the engine gets installed with, so Firefox\n> can't currently tell that they're the same engine.  It happens with the\n> search bar, too.  IIRC there's a bug on file for fixing that problem in\n> general.\n\nHuh. There's bug 1222107 and bug 1352445 but nothing that really match this that I can find... would be good to hook that up to this bug as a 'see also' issue, though I fully agree that it doesn't really change anything given the search bar has the same issue.", "author": "gijskruitbosch+bugs@gmail.com", "id": 13230119, "time": "2018-04-24T16:54:54Z"}, {"text": "Yeah, Florian's https://bugzilla.mozilla.org/show_bug.cgi?id=1222107#c5 addresses it, and it seems to be what bug 351441 is about, but it was wontfixed. :-/  We should revisit that...  I'm not sure if there's another bug or not.\n\n(And my description of the problem was wrong.  It's when the title in the HTML <link> doesn't match the title in the opensearch xml.)", "author": "adw@mozilla.com", "id": 13230141, "time": "2018-04-24T16:59:10Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #131)\n> Yeah, Florian's https://bugzilla.mozilla.org/show_bug.cgi?id=1222107#c5\n> addresses it, and it seems to be what bug 351441 is about, but it was\n> wontfixed. :-/  We should revisit that...  I'm not sure if there's another\n> bug or not.\n> \n> (And my description of the problem was wrong.  It's when the title in the\n> HTML <link> doesn't match the title in the opensearch xml.)\n\nSo, finally I should create a new bug with the issue from comment 127, wright?", "author": "david.olah@softvision.ro", "id": 13231894, "time": "2018-04-25T08:20:11Z"}, {"text": "(In reply to David Olah from comment #132)\n> (In reply to Drew Willcoxon :adw from comment #131)\n> > Yeah, Florian's https://bugzilla.mozilla.org/show_bug.cgi?id=1222107#c5\n> > addresses it, and it seems to be what bug 351441 is about, but it was\n> > wontfixed. :-/  We should revisit that...  I'm not sure if there's another\n> > bug or not.\n> > \n> > (And my description of the problem was wrong.  It's when the title in the\n> > HTML <link> doesn't match the title in the opensearch xml.)\n> \n> So, finally I should create a new bug with the issue from comment 127,\n> wright?\n\nI'm not sure - Drew, can you confirm?", "author": "gijskruitbosch+bugs@gmail.com", "id": 13232003, "time": "2018-04-25T09:30:39Z"}, {"text": "Yes, could you please file a bug, David?  The only way to fix it afaict would be to prefetch opensearch xml.  (Which would also let us fix a similar bug were the favicons don't match.)", "author": "adw@mozilla.com", "id": 13233654, "time": "2018-04-25T20:36:24Z"}, {"text": "Sure I can. here is Bug 1457069 that I created for this.", "author": "david.olah@softvision.ro", "id": 13234643, "time": "2018-04-26T07:48:44Z"}, {"text": "As Bug 1457069 from Comment 135 was created, I am marking this issue as verified.", "author": "david.olah@softvision.ro", "id": 13237613, "time": "2018-04-27T08:20:05Z"}], "id": 1221539, "priority": "P1", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox62": "---", "cf_platform_rel": "---", "product": "Firefox", "cf_status_firefox_esr52": "---", "blocks": [1212397, 1452700], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Address Bar", "votes": 11, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "verified", "cf_status_firefox60": "---", "target_milestone": "Firefox 61", "is_cc_accessible": true, "cf_rank": null, "groups": [], "url": "", "creator_detail": {"email": "mak77@bonardo.net", "id": 240353, "name": "mak77@bonardo.net", "real_name": "Marco Bonardo [::mak]"}, "whiteboard": "[consistency][fxsearch]", "mentors": [], "cc_detail": [{"email": "95.5.radio@gmail.com", "id": 612645, "name": "95.5.radio@gmail.com", "real_name": ""}, {"email": "adw@mozilla.com", "id": 334927, "name": "adw@mozilla.com", "real_name": "Drew Willcoxon :adw"}, {"email": "alice.wyman@verizon.net", "id": 268217, "name": "alice.wyman@verizon.net", "real_name": "Alice Wyman"}, {"email": "b2g.bonstra@bonstra.fr.eu.org", "id": 561350, "name": "b2g.bonstra@bonstra.fr.eu.org", "real_name": "Bonstra"}, {"email": "bmo@atomike.ninja", "id": 580762, "name": "bmo@atomike.ninja", "real_name": "Leetha"}, {"email": "boereck@arcor.de", "id": 605781, "name": "boereck@arcor.de", "real_name": ""}, {"email": "bugzilla@trimoon.cloudns.eu", "id": 581376, "name": "bugzilla@trimoon.cloudns.eu", "real_name": "\u00a9TriMoon\u2122"}, {"email": "code@daniel.priv.no", "id": 484068, "name": "code@daniel.priv.no", "real_name": "Daniel"}, {"email": "coffinz@protonmail.com", "id": 610657, "name": "coffinz@protonmail.com", "real_name": "coffinz"}, {"email": "combettaworld@gmail.com", "id": 609825, "name": "combettaworld@gmail.com", "real_name": "In"}, {"email": "david.olah@softvision.ro", "id": 613144, "name": "david.olah@softvision.ro", "real_name": "David Olah"}, {"email": "dev.lukaszpolowczyk@gmail.com", "id": 550217, "name": "dev.lukaszpolowczyk@gmail.com", "real_name": "\u0141ukasz"}, {"email": "domoritz@gmail.com", "id": 596977, "name": "domoritz@gmail.com", "real_name": "Dominik Moritz"}, {"email": "epang@mozilla.com", "id": 452598, "name": "epang@mozilla.com", "real_name": "Eric Pang [:epang] UX"}, {"email": "feluchs@web.de", "id": 608472, "name": "feluchs@web.de", "real_name": ""}, {"email": "florian@queze.net", "id": 149052, "name": "florian@queze.net", "real_name": "Florian Qu\u00e8ze [:florian]"}, {"email": "geoff.j.lawrence@gmail.com", "id": 166916, "name": "geoff.j.lawrence@gmail.com", "real_name": "Geoff Lawrence"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (he/him)"}, {"email": "hujq@live.com", "id": 538286, "name": "hujq@live.com", "real_name": ""}, {"email": "johnmaverick74@mail.com", "id": 578285, "name": "johnmaverick74@mail.com", "real_name": "Maverick"}, {"email": "jorrete@gmail.com", "id": 473577, "name": "jorrete@gmail.com", "real_name": ""}, {"email": "jscher2000@gmail.com", "id": 565766, "name": "jscher2000@gmail.com", "real_name": ""}, {"email": "koellner@zew.uni-hannover.de", "id": 611138, "name": "koellner@zew.uni-hannover.de", "real_name": "Freddy K."}, {"email": "leehanxue@gmail.com", "id": 425530, "name": "leehanxue@gmail.com", "real_name": "Lee Hanxue"}, {"email": "mak77@bonardo.net", "id": 240353, "name": "mak77@bonardo.net", "real_name": "Marco Bonardo [::mak]"}, {"email": "marsjaninzmarsa@gmail.com", "id": 470481, "name": "marsjaninzmarsa@gmail.com", "real_name": "Kuba Niewiarowski"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mozilla@kaply.com", "id": 7313, "name": "mozilla@kaply.com", "real_name": "Mike Kaply [:mkaply]"}, {"email": "mstanke@mozilla.cz", "id": 402548, "name": "mstanke@mozilla.cz", "real_name": "Michal Stanke (Mozilla.cz) [:MikkCZ][:mstanke] (use needinfo)"}, {"email": "nw9165-3201@yahoo.com", "id": 536235, "name": "nw9165-3201@yahoo.com", "real_name": "N. W."}, {"email": "pascalc@gmail.com", "id": 24572, "name": "pascalc@gmail.com", "real_name": "Pascal Chevrel:pascalc"}, {"email": "past@mozilla.com", "id": 363318, "name": "past@mozilla.com", "real_name": "Panos Astithas [:past] (please ni?)"}, {"email": "quicksaver@gmail.com", "id": 420205, "name": "quicksaver@gmail.com", "real_name": "Lu\u00eds Miguel [:quicksaver] (not reading bugmail)"}, {"email": "ryanvm@gmail.com", "id": 75935, "name": "ryanvm@gmail.com", "real_name": "Ryan VanderMeulen [:RyanVM]"}, {"email": "shilpi@mozilla.com", "id": 570648, "name": "shilpi@mozilla.com", "real_name": "Shilpi Gupta [:shilpi]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-02T12:31:00Z", "cf_status_firefox_esr60": "---", "assigned_to": "adw@mozilla.com", "is_open": false, "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "history": [{"changes": [{"removed": "--", "field_name": "priority", "added": "P2"}, {"removed": "", "field_name": "cc", "added": "mak77@bonardo.net"}, {"removed": "Implement search engines discovery in the location bar", "field_name": "summary", "added": "Add search engines discovery to the location bar"}], "who": "mak77@bonardo.net", "when": "2015-11-04T14:48:41Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1212397"}], "who": "mak77@bonardo.net", "when": "2015-11-04T14:49:12Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "uiwanted"}, {"removed": "", "field_name": "whiteboard", "added": "[consistency][fxsearch]"}], "who": "mak77@bonardo.net", "when": "2015-11-04T14:52:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mar.castelluccio@studenti.unina.it"}], "who": "mcastelluccio@mozilla.com", "when": "2015-11-04T15:27:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "quicksaver@gmail.com"}], "who": "quicksaver@gmail.com", "when": "2016-01-26T10:11:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jorrete@gmail.com"}], "who": "mak77@bonardo.net", "when": "2016-10-07T11:54:40Z"}, {"changes": [{"removed": "P2", "field_name": "priority", "added": "P3"}], "who": "mak77@bonardo.net", "when": "2017-02-10T16:13:38Z"}, {"changes": [{"removed": "P3", "field_name": "priority", "added": "P2"}], "who": "mak77@bonardo.net", "when": "2017-06-08T16:52:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "marsjaninzmarsa@gmail.com"}], "who": "marsjaninzmarsa@gmail.com", "when": "2017-08-11T23:35:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mozilla@kaply.com"}], "who": "past@mozilla.com", "when": "2017-08-21T13:40:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "past@mozilla.com"}], "who": "past@mozilla.com", "when": "2017-08-21T13:41:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hujq@live.com"}], "who": "hujq@live.com", "when": "2017-08-29T06:39:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "b2g.bonstra@bonstra.fr.eu.org"}], "who": "standard8@mozilla.com", "when": "2017-09-11T06:08:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "firefox@atomike.ninja"}], "who": "bmo@atomike.ninja", "when": "2017-09-17T14:35:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "johnmaverick74@mail.com"}], "who": "yfdyh000@gmail.com", "when": "2017-09-18T16:52:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "epang@mozilla.com"}], "who": "epang@mozilla.com", "when": "2017-09-21T14:27:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "florian@queze.net"}], "who": "florian@queze.net", "when": "2017-10-03T22:11:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jscher2000@gmail.com"}], "who": "jscher2000@gmail.com", "when": "2017-10-12T18:34:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "boereck@arcor.de"}], "who": "boereck@arcor.de", "when": "2017-11-15T13:23:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sascha.kurowski@rwth-aachen.de"}], "who": "sascha.kurowski@rwth-aachen.de", "when": "2017-11-16T12:40:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nw9165-3201@yahoo.com"}], "who": "mak77@bonardo.net", "when": "2017-11-16T17:18:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mstanke@mozilla.cz"}], "who": "mak77@bonardo.net", "when": "2017-11-22T08:00:42Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mak77@bonardo.net)"}], "who": "epang@mozilla.com", "when": "2017-11-23T23:23:14Z"}, {"changes": [{"removed": "needinfo?(mak77@bonardo.net)", "field_name": "flagtypes.name", "added": "needinfo?(epang@mozilla.com)"}], "who": "mak77@bonardo.net", "when": "2017-11-24T09:22:28Z"}, {"changes": [{"removed": "needinfo?(epang@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "epang@mozilla.com", "when": "2017-11-24T15:31:07Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(epang@mozilla.com)"}], "who": "florian@queze.net", "when": "2017-11-24T16:25:07Z"}, {"changes": [{"removed": "needinfo?(epang@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "epang@mozilla.com", "when": "2017-11-27T17:53:23Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "adw@mozilla.com"}], "who": "adw@mozilla.com", "when": "2017-11-28T23:16:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "etienne.pouget@outlook.com"}], "who": "yfdyh000@gmail.com", "when": "2017-12-08T20:46:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "feluchs@web.de"}], "who": "feluchs@web.de", "when": "2017-12-18T12:28:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "combettaworld@gmail.com"}], "who": "mak77@bonardo.net", "when": "2018-01-18T10:03:55Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(past@mozilla.com)"}], "who": "epang@mozilla.com", "when": "2018-01-18T20:52:52Z"}, {"changes": [{"removed": "needinfo?(past@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "past@mozilla.com", "when": "2018-01-18T20:56:51Z"}, {"changes": [{"removed": "P2", "field_name": "priority", "added": "P1"}], "who": "past@mozilla.com", "when": "2018-01-22T20:13:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "coffinz@protonmail.com"}], "who": "mak77@bonardo.net", "when": "2018-01-25T13:56:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "leehanxue@gmail.com"}], "who": "leehanxue@gmail.com", "when": "2018-01-27T04:32:32Z"}, {"changes": [{"removed": "uiwanted", "field_name": "keywords", "added": ""}], "who": "past@mozilla.com", "when": "2018-01-29T20:13:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugzilla@trimoon.cloudns.eu"}], "who": "gingerbread_man@live.com", "when": "2018-01-31T10:36:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "koellner@zew.uni-hannover.de"}], "who": "mak77@bonardo.net", "when": "2018-02-01T10:05:38Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(epang@mozilla.com)"}], "who": "adw@mozilla.com", "when": "2018-02-06T23:01:19Z"}, {"changes": [{"removed": "needinfo?(epang@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "epang@mozilla.com", "when": "2018-02-07T15:36:10Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "adw@mozilla.com"}], "who": "adw@mozilla.com", "when": "2018-02-08T01:43:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "code@daniel.priv.no"}], "who": "code@daniel.priv.no", "when": "2018-02-12T13:06:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "geoff.j.lawrence@gmail.com"}], "who": "geoff.j.lawrence@gmail.com", "when": "2018-02-12T19:50:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "95.5.radio@gmail.com"}], "who": "gingerbread_man@live.com", "when": "2018-02-24T12:58:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "domoritz@gmail.com"}], "who": "mak77@bonardo.net", "when": "2018-03-08T12:23:31Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "alice.wyman@verizon.net"}], "who": "alice.wyman@verizon.net", "when": "2018-03-09T17:34:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8961608, "added": "review?(gijskruitbosch+bugs@gmail.com)"}, {"field_name": "attachments.description", "removed": "Bug 1221539 - Add search engines discovery to the location bar.", "attachment_id": 8949631, "added": "Bug 1221539 - Add search engine discovery to the page action menu. Part 1: Page action changes."}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8949631, "added": "review?(gijskruitbosch+bugs@gmail.com)"}, {"removed": "", "field_name": "cc", "added": "gijskruitbosch+bugs@gmail.com"}], "who": "adw@mozilla.com", "when": "2018-03-23T00:27:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8961608, "added": ""}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-26T17:47:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8961608, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "adw@mozilla.com", "when": "2018-03-26T22:59:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8949631, "added": ""}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-27T12:21:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8961608, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-27T12:34:18Z"}, {"changes": [{"removed": "sascha.kurowski@rwth-aachen.de", "field_name": "cc", "added": ""}], "who": "sascha.kurowski@rwth-aachen.de", "when": "2018-03-27T13:32:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rubencapiau@gmail.com"}], "who": "rubencapiau@gmail.com", "when": "2018-03-27T15:56:51Z"}, {"changes": [{"removed": "rubencapiau@gmail.com", "field_name": "cc", "added": ""}], "who": "rubencapiau@gmail.com", "when": "2018-03-27T15:57:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8949631, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "adw@mozilla.com", "when": "2018-03-27T18:44:00Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8949631, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-28T10:06:24Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "Firefox 61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-03-29 09:52:10"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "dluca@mozilla.com", "when": "2018-03-29T09:52:10Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(johnmaverick74@mail.com)"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-29T14:22:17Z"}, {"changes": [{"removed": "needinfo?(johnmaverick74@mail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "johnmaverick74@mail.com", "when": "2018-03-29T14:42:42Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1449947"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-29T14:51:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "zhenya.zny@gmail.com"}], "who": "zhenya.zny@gmail.com", "when": "2018-03-29T15:23:47Z"}, {"changes": [{"removed": "zhenya.zny@gmail.com", "field_name": "cc", "added": ""}], "who": "zhenya.zny@gmail.com", "when": "2018-03-29T15:23:49Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1450125"}], "who": "adw@mozilla.com", "when": "2018-03-29T21:38:13Z"}, {"changes": [{"removed": "etienne.pouget@outlook.com", "field_name": "cc", "added": ""}], "who": "etienne.pouget@outlook.com", "when": "2018-03-30T08:26:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "pascalc@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(adw@mozilla.com)"}], "who": "pascalc@gmail.com", "when": "2018-03-30T09:26:00Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1450294"}], "who": "francesco.lodolo@gmail.com", "when": "2018-03-30T16:44:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dev.lukaszpolowczyk@gmail.com"}], "who": "dev.lukaszpolowczyk@gmail.com", "when": "2018-04-02T10:09:58Z"}, {"changes": [{"removed": "needinfo?(adw@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"removed": "---", "field_name": "cf_tracking_firefox_relnote", "added": "?"}], "who": "adw@mozilla.com", "when": "2018-04-02T23:29:01Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jan@ikenmeyer.eu"}], "who": "jan@ikenmeyer.eu", "when": "2018-04-03T10:43:34Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1451119"}], "who": "adw@mozilla.com", "when": "2018-04-03T20:53:58Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1452700"}], "who": "mak77@bonardo.net", "when": "2018-04-11T12:30:21Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(adw@mozilla.com)"}], "who": "feluchs@web.de", "when": "2018-04-12T20:14:08Z"}, {"changes": [{"removed": "needinfo?(adw@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "adw@mozilla.com", "when": "2018-04-12T20:15:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "shilpi@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(adw@mozilla.com)"}], "who": "shilpi@mozilla.com", "when": "2018-04-17T18:24:44Z"}, {"changes": [{"removed": "needinfo?(adw@mozilla.com)", "field_name": "flagtypes.name", "added": "qe-verify+"}], "who": "adw@mozilla.com", "when": "2018-04-17T23:26:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "david.olah@softvision.ro"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mak77@bonardo.net)"}], "who": "david.olah@softvision.ro", "when": "2018-04-24T07:15:39Z"}, {"changes": [{"removed": "needinfo?(mak77@bonardo.net)", "field_name": "flagtypes.name", "added": ""}], "who": "adw@mozilla.com", "when": "2018-04-24T16:50:08Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(david.olah@softvision.ro)"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-04-24T16:51:09Z"}, {"changes": [{"removed": "jan@ikenmeyer.eu", "field_name": "cc", "added": ""}], "who": "jan@ikenmeyer.eu", "when": "2018-04-24T16:51:26Z"}, {"changes": [{"removed": "needinfo?(david.olah@softvision.ro)", "field_name": "flagtypes.name", "added": ""}], "who": "david.olah@softvision.ro", "when": "2018-04-25T08:20:11Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(adw@mozilla.com)"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-04-25T09:30:39Z"}, {"changes": [{"removed": "needinfo?(adw@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "adw@mozilla.com", "when": "2018-04-25T20:36:24Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1457069"}], "who": "david.olah@softvision.ro", "when": "2018-04-26T07:44:47Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "qe-verify+", "field_name": "flagtypes.name", "added": ""}], "who": "david.olah@softvision.ro", "when": "2018-04-27T08:20:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ryanvm@gmail.com"}, {"removed": "?", "field_name": "cf_tracking_firefox_relnote", "added": "61+"}], "who": "ryanvm@gmail.com", "when": "2018-04-28T20:04:09Z"}, {"changes": [{"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}], "who": "david.olah@softvision.ro", "when": "2018-05-02T12:31:00Z"}]}