{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2016-07-07T19:38:01Z", "type_id": 4, "creation_date": "2016-07-07T15:47:08Z", "id": 1420014, "setter": "tbsaunde+mozbugs@tbsaunde.org"}], "content_type": "text/plain", "id": 8768827}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769236}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769239}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769253}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769258}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-18T14:29:11Z", "type_id": 4, "creation_date": "2016-07-11T17:22:32Z", "id": 1421610, "setter": "yzenevich@mozilla.com"}], "content_type": "text/plain", "id": 8769768}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769798}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769823}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769825}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8769830}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-18T15:12:14Z", "type_id": 4, "creation_date": "2016-07-12T20:23:48Z", "id": 1422440, "setter": "yzenevich@mozilla.com"}], "content_type": "text/plain", "id": 8770278}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-18T15:18:31Z", "type_id": 4, "creation_date": "2016-07-12T20:26:17Z", "id": 1422443, "setter": "yzenevich@mozilla.com"}], "content_type": "text/plain", "id": 8770279}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-18T16:02:56Z", "type_id": 4, "creation_date": "2016-07-18T16:02:56Z", "id": 1425223, "setter": "michael.li11702@gmail.com"}], "content_type": "text/plain", "id": 8772019}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8772021}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-18T16:44:19Z", "type_id": 4, "creation_date": "2016-07-18T16:44:19Z", "id": 1425255, "setter": "michael.li11702@gmail.com"}], "content_type": "text/plain", "id": 8772030}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-21T15:33:21Z", "type_id": 4, "creation_date": "2016-07-19T15:41:43Z", "id": 1425928, "setter": "yzenevich@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8772434}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-21T15:47:47Z", "type_id": 4, "creation_date": "2016-07-21T14:59:43Z", "id": 1427226, "setter": "yzenevich@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8772435}, {"creator": "michael.li11702@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-21T15:54:16Z", "type_id": 4, "creation_date": "2016-07-21T14:59:43Z", "id": 1427227, "setter": "yzenevich@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8772436}], "classification": "Components", "creator": "michael.li11702@gmail.com", "cc": ["surkov.alexander@gmail.com", "tbsaunde+mozbugs@tbsaunde.org", "yzenevich@mozilla.com"], "depends_on": [1295396], "creation_time": "2016-07-07T15:41:30Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Add functionality in ARIAMap to use integer index instead of a raw pointer for role map entries, and change the Accessible class to use this index for its role map entry variable", "id": 1285272, "cf_status_firefox50": "fixed", "assigned_to_detail": {"email": "michael.li11702@gmail.com", "id": 574623, "name": "michael.li11702@gmail.com", "real_name": "Michael Li"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "michael.li11702@gmail.com", "comment_count": 45, "comments": [{"text": "", "author": "michael.li11702@gmail.com", "id": 11531048, "time": "2016-07-07T15:41:30Z"}, {"text": "Created attachment 8768827\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries, and change the Accessible class to use this index for its role map entry variable", "author": "michael.li11702@gmail.com", "id": 11531062, "time": "2016-07-07T15:47:08Z"}, {"text": "I don't need the extra \n>#include \"ARIAMap.h\"\nin accessible/html/HTMLSelectAccessible.cpp, I forgot to take that out in the patch.", "author": "michael.li11702@gmail.com", "id": 11531095, "time": "2016-07-07T15:57:35Z"}, {"text": "Could you put here some reasoning behind the work please? I'm sure you were discussing that offline, but it's worth to have a bug description for the record.", "author": "surkov.alexander@gmail.com", "id": 11531125, "time": "2016-07-07T16:07:31Z"}, {"text": "The Accessible class was using a const pointer to store the address of its role map entry, but we don't use that pointer to access anything else other than what it's set to in Accessible::SetRoleMapEntry(), i.e., we never use the bracket operator or something similar with the pointer. So, we can replace the pointer with an integer index, which causes less issues in terms of memory management.", "author": "michael.li11702@gmail.com", "id": 11531167, "time": "2016-07-07T16:23:31Z"}, {"text": "Comment on attachment 8768827\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries, and change the Accessible class to use this index for its role map entry variable\n\nthis is big enough and contains somewhat separate things so it would be good to break it into pieces.\n\nThe part that replaces accesses of mRoleMapEntry with a local variable and a member function seems mostly ok, so split that out first I guess.\n\n>diff --git a/accessible/base/ARIAMap.cpp b/accessible/base/ARIAMap.cpp\n>index 3a21725..bdcdf56 100644\n>--- a/accessible/base/ARIAMap.cpp\n>+++ b/accessible/base/ARIAMap.cpp\n>@@ -882,16 +882,57 @@ aria::GetRoleMap(dom::Element* aEl)\n>     }\n>   }\n> \n>   // Always use some entry if there is a non-empty role string\n>   // To ensure an accessible object is created\n>   return &sLandmarkRoleMap;\n> }\n> \n>+uint8_t\n>+aria::GetRoleMapIndex(dom::Element* aEl)\n\nyou should use this in GetRoleMap() to reduce dupplication.\n\n>+const nsRoleMapEntry*\n>+aria::GetRoleMapFromIndex(uint8_t aRoleMapIndex) {\n\n{ on next line\n\n>+++ b/accessible/base/nsAccessibilityService.cpp\n>+    document->BindToDocument(newAcc, aria::GetRoleMapIndex(content->AsElement()));\n>     return newAcc;\n>   }\n> \n>   const nsRoleMapEntry* roleMapEntry = aria::GetRoleMap(content->AsElement());\n>+  uint8_t roleMapEntryIndex = aria::GetRoleMapIndex(content->AsElement());\n\nits not great to dupplicate the roleMap stuff that's already here.  One option might be to keep passing a pointer to Accessible::SetRoleMapEntry() and just allow translating a pointer to a index, or you might think of something else reasonable, but it should be possible to do something better than this.\n\n>+bool \n>+Accessible::HasARIARole() const {\n>+  return mRoleMapEntryIndex != aria::NO_ROLE_MAP_ENTRY_INDEX;\n\nwhy are you uninlining it? it seems short enough it should still be inline.\n\n>+Accessible::ARIARoleMap() const {\n>+  return aria::GetRoleMapFromIndex(mRoleMapEntryIndex);\n\nsame\n\n>   /**\n>-   * Non-null indicates author-supplied role; possibly state & value as well\n>+   * Non-NO_ROLE_MAP_ENTRY_INDEX indicates author-supplied role; possibly state\n>+   * & value as well\n>    */\n>-  const nsRoleMapEntry* mRoleMapEntry;\n>+  uint8_t mRoleMapEntryIndex;\n\nit would be good to move it next to the bitfields to get better packing, but you can do that separately after making it an index.\n\n>       mListAccessible = new HTMLComboboxListAccessible(mParent, mContent, mDoc);\n>-      Document()->BindToDocument(mListAccessible, nullptr);\n>+      Document()->BindToDocument(mListAccessible, mozilla::a11y::aria::NO_ROLE_MAP_ENTRY_INDEX);\n\nmozilla::a11y:: shouldn't be needed here, and in several other spots.", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11531832, "time": "2016-07-07T19:38:01Z"}, {"text": "Created attachment 8769236\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11534356, "time": "2016-07-08T15:58:12Z"}, {"text": "Created attachment 8769239\nChange the Accessible class to use an index instead of raw pointer to store its role map entry variable. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11534368, "time": "2016-07-08T16:01:10Z"}, {"text": "Created attachment 8769253\nChange DocAccessible::BindToDocument to use an index for the role map entry. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11534423, "time": "2016-07-08T16:18:35Z"}, {"text": "Created attachment 8769258\nChange various classes to use new definitions of ARIARoleMap(), BindToDocument(), and SetRoleMap(). r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11534451, "time": "2016-07-08T16:26:04Z"}, {"text": "So, in general it looks like some of these patches still do multiple things that can be broken into their own steps.  Also patches should only depend on previous patches, not any future patches, and I'm pretty sure this series doesn't do that.\n\nnot all parts apply, but https://github.com/git/git/blob/master/Documentation/SubmittingPatches is a worthwhile read.", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11535047, "time": "2016-07-08T20:00:34Z"}, {"text": "Comment on attachment 8769239\nChange the Accessible class to use an index instead of raw pointer to store its role map entry variable. r?tbsaunde\n\n>bug 1285272 - Change the Accessible class to use an index instead of raw pointer to store its role map entry variable. r?tbsaunde\n\nSo, this is basically two things first replace a number of direct uses of mRoleMapEntry with calls to ARIARoleMap() then after this and any other preparatory steps change mRoleMapEntry to a uint8_t.\n\n>+inline bool \n>+Accessible::HasARIARole() const {\n\n{ on next line\n\n>+inline const nsRoleMapEntry* \n>+Accessible::ARIARoleMap() const {\n\nsame", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11535082, "time": "2016-07-08T20:18:57Z"}, {"text": "Comment on attachment 8769258\nChange various classes to use new definitions of ARIARoleMap(), BindToDocument(), and SetRoleMap(). r?tbsaunde\n\n>@@ -1122,32 +1122,34 @@ nsAccessibilityService::CreateAccessible(nsINode* aNode,\n>                                               frame->GetParent()).IsEmpty()) {\n>       if (aIsSubtreeHidden)\n>         *aIsSubtreeHidden = true;\n> \n>       return nullptr;\n>     }\n> \n>     newAcc = new HyperTextAccessibleWrap(content, document);\n>-    document->BindToDocument(newAcc, aria::GetRoleMap(content->AsElement()));\n>+    document->BindToDocument(newAcc, aria::GetRoleMapIndex(content->AsElement()));\n>     return newAcc;\n>   }\n> \n>-  const nsRoleMapEntry* roleMapEntry = aria::GetRoleMap(content->AsElement());\n>+  uint8_t roleMapEntryIndex = aria::GetRoleMapIndex(content->AsElement());\n>+  const nsRoleMapEntry* roleMapEntry =\n>+    aria::GetRoleMapFromIndex(roleMapEntryIndex);\n\nhmm, so now roleMapEntry and roleMapEntryIdx start out equal but then they can diverge when roleMapEntryIdx is changed, but roleMapEntry isn't.  That might be ok, though its at least rather dangerous, and quiet possibly buggy.\n\nIt seems like its tricky to completely switch away from pointers here, so I'm tempted to say the best route is to keep passing a nsRoleMapEntry* to bindToDocument() and then convert that to an integer in SetRoleMapEntry().  Its not ideal, but should be a smaller patch and will certainly work.  However I'm not sure there aren't alternatives so you can try to think of one if you want.", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11535129, "time": "2016-07-08T20:38:35Z"}, {"text": "Created attachment 8769768\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries. r?tbsaunde Also add functionality to convert between raw pointers and indexes for role map entries.", "author": "michael.li11702@gmail.com", "id": 11539026, "time": "2016-07-11T17:22:32Z"}, {"text": "Created attachment 8769798\nPrepare to change Accessible's role map entry variable from a raw pointer to an index. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11539233, "time": "2016-07-11T18:19:48Z"}, {"text": "Created attachment 8769823\nReplace use of mRoleMapEntry with calls to ARIARoleMap(). r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11539356, "time": "2016-07-11T18:55:20Z"}, {"text": "Created attachment 8769825\nChange BindToDocument() to use a role map entry index instead of raw pointer. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11539371, "time": "2016-07-11T19:01:55Z"}, {"text": "Created attachment 8769830\nChange various classes to use new role map index functions and updated BindToDocument function. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11539397, "time": "2016-07-11T19:08:14Z"}, {"text": "Comment on attachment 8769825\nChange BindToDocument() to use a role map entry index instead of raw pointer. r?tbsaunde\n\n>   void BindToDocument(Accessible* aAccessible,\n>-                      const nsRoleMapEntry* aRoleMapEntry);\n>+                      uint8_t aRoleMapEntryIndex);\n\nI'm pretty sure this won't work independent of the later patches.  DId you my previous comment on that subject / did you check that this patch builds without the following ones?", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11539587, "time": "2016-07-11T20:13:32Z"}, {"text": "Comment on attachment 8769823\nReplace use of mRoleMapEntry with calls to ARIARoleMap(). r?tbsaunde\n\n>+Accessible::HasARIARole() const\n>+{\n>+  return mRoleMapEntryIndex != aria::NO_ROLE_MAP_ENTRY_INDEX;\n\nthis isn't related to the subject of the patch.", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11539638, "time": "2016-07-11T20:27:30Z"}, {"text": "Comment on attachment 8769798\nPrepare to change Accessible's role map entry variable from a raw pointer to an index. r?tbsaunde\n\n># HG changeset patch\n># User Michael Li <michael.li11702@gmail.com>\n>\n>bug 1285272 - Prepare to change Accessible's role map entry variable from a raw pointer to an index. r?tbsaunde\n\nthis patch doesn't prepare, it actually does it.\n\nI haven't carefully looked over this version in full, but I've got to head out for a while.\n\nI'm not sure if you do, but you should try and look over patches carefully before posting them to save yourself time.", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11539649, "time": "2016-07-11T20:30:15Z"}, {"text": "I did read your previous comment, I just didn't realize each patch had to build on their own, my bad.", "author": "michael.li11702@gmail.com", "id": 11539735, "time": "2016-07-11T20:54:05Z"}, {"text": "Created attachment 8770278\nReplace direct use of mRoleMapEntry with calls to ARIARoleMap(). r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11543046, "time": "2016-07-12T20:23:48Z"}, {"text": "Created attachment 8770279\nChange Accessible's role map entry variable from a raw pointer to an index. r?tbsaunde", "author": "michael.li11702@gmail.com", "id": 11543055, "time": "2016-07-12T20:26:17Z"}, {"text": "Attachment 8769768 is still the first patch of the series, I didn't make any changes to it.", "author": "michael.li11702@gmail.com", "id": 11543061, "time": "2016-07-12T20:27:32Z"}, {"text": "Comment on attachment 8769768\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries. r?tbsaunde Also add functionality to convert between raw pointers and indexes for role map entries.\n\n>+const nsRoleMapEntry*\n>+aria::GetRoleMapFromIndex(uint8_t aRoleMapIndex) {\n\n{ on next line", "author": "tbsaunde+mozbugs@tbsaunde.org", "id": 11546095, "time": "2016-07-13T19:17:45Z"}, {"text": "Comment on attachment 8769768\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries. r?tbsaunde Also add functionality to convert between raw pointers and indexes for role map entries.\n\nReview of attachment 8769768:\n-----------------------------------------------------------------\n\nlooks good with some nits.\n\n::: accessible/base/ARIAMap.h\n@@ +202,5 @@\n>   */\n>  extern nsRoleMapEntry gEmptyRoleMap;\n>  \n>  /**\n> + * Constants for the role map entry index to indicate that the role map entry \n\nnit: whitespace at the end of the line\n\n@@ +221,5 @@\n>   */\n>  const nsRoleMapEntry* GetRoleMap(dom::Element* aEl);\n>  \n>  /**\n> + * Get the role map entry pointer's index for a given DOM node. This will use \n\nNit: whitespace at the end.\n\n@@ +233,5 @@\n> +uint8_t GetRoleMapIndex(dom::Element* aEl);\n> +\n> +/**\n> + * Get the role map entry pointer for a given role map entry index.\n> + * \n\nnit: here and below - whitespace.", "author": "yzenevich@mozilla.com", "id": 11555080, "time": "2016-07-18T14:29:11Z"}, {"text": "(In reply to Trevor Saunders (:tbsaunde) from comment #25)\n> Comment on attachment 8769768\n> Add functionality in ARIAMap to use integer index instead of a raw pointer\n> for role map entries. r?tbsaunde Also add functionality to convert between\n> raw pointers and indexes for role map entries.\n> \n> >+const nsRoleMapEntry*\n> >+aria::GetRoleMapFromIndex(uint8_t aRoleMapIndex) {\n> \n> { on next line\n\nNote also this comment.", "author": "yzenevich@mozilla.com", "id": 11555084, "time": "2016-07-18T14:29:56Z"}, {"text": "Comment on attachment 8770278\nReplace direct use of mRoleMapEntry with calls to ARIARoleMap(). r?tbsaunde\n\nReview of attachment 8770278:\n-----------------------------------------------------------------\n\nthis looks good but could you re-base it as it does not apply for me:\n\nerror: patch failed: accessible/generic/Accessible-inl.h:12\nerror: accessible/generic/Accessible-inl.h: patch does not apply", "author": "yzenevich@mozilla.com", "id": 11555279, "time": "2016-07-18T15:12:14Z"}, {"text": "Comment on attachment 8770279\nChange Accessible's role map entry variable from a raw pointer to an index. r?tbsaunde\n\nReview of attachment 8770279:\n-----------------------------------------------------------------\n\nlooks good thanks!\n\n::: accessible/generic/Accessible-inl.h\n@@ +23,5 @@\n>  \n>    return ARIATransformRole(roleMapEntry->role);\n>  }\n>  \n> +inline bool \n\nnit: whitespace\n\n@@ +59,5 @@\n>  \n>    return ARIATransformRole(roleMapEntry->role);\n>  }\n>  \n> +inline void \n\nnit: whitespace", "author": "yzenevich@mozilla.com", "id": 11555299, "time": "2016-07-18T15:18:31Z"}, {"text": "Created attachment 8772019\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries.", "author": "michael.li11702@gmail.com", "id": 11555484, "time": "2016-07-18T16:02:56Z"}, {"text": "Created attachment 8772021\nReplace direct use of mRoleMapEntry with calls to ARIARoleMap().", "author": "michael.li11702@gmail.com", "id": 11555519, "time": "2016-07-18T16:13:32Z"}, {"text": "Created attachment 8772030\nChange Accessible's role map entry variable from a raw pointer to an index.", "author": "michael.li11702@gmail.com", "id": 11555646, "time": "2016-07-18T16:44:19Z"}, {"text": "Hi Michael, I now can't apply the \"Add functionality in ARIAMap to use integer index instead of a raw pointer for role map entries.\" patch. Could you check that you're up to date with the latest trunk?", "author": "yzenevich@mozilla.com", "id": 11556318, "time": "2016-07-18T19:48:33Z"}, {"text": "Created attachment 8772434\nbug 1285272 - Add functionality in ARIAMap to use integer index instead of a raw pointer for role map entries.\n\nReview commit: https://reviewboard.mozilla.org/r/65244/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/65244/", "author": "michael.li11702@gmail.com", "id": 11558802, "time": "2016-07-19T15:36:48Z"}, {"text": "Created attachment 8772435\nbug 1285272 - Replace direct use of mRoleMapEntry with calls to ARIARoleMap().\n\nReview commit: https://reviewboard.mozilla.org/r/65246/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/65246/", "author": "michael.li11702@gmail.com", "id": 11558803, "time": "2016-07-19T15:36:48Z"}, {"text": "Created attachment 8772436\nbug 1285272 - Change Accessible's role map entry variable from a raw pointer to an index.\n\nReview commit: https://reviewboard.mozilla.org/r/65248/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/65248/", "author": "michael.li11702@gmail.com", "id": 11558804, "time": "2016-07-19T15:36:48Z"}, {"text": "Comment on attachment 8772434\nbug 1285272 - Add functionality in ARIAMap to use integer index instead of a raw pointer for role map entries.\n\nhttps://reviewboard.mozilla.org/r/65244/#review62926\n\nlooks good thanks", "author": "yzenevich@mozilla.com", "id": 11565503, "time": "2016-07-21T15:33:21Z"}, {"text": "Comment on attachment 8772435\nbug 1285272 - Replace direct use of mRoleMapEntry with calls to ARIARoleMap().\n\nhttps://reviewboard.mozilla.org/r/65246/#review62928\n\nlooks good", "author": "yzenevich@mozilla.com", "id": 11565562, "time": "2016-07-21T15:47:47Z"}, {"text": "Comment on attachment 8772436\nbug 1285272 - Change Accessible's role map entry variable from a raw pointer to an index.\n\nhttps://reviewboard.mozilla.org/r/65248/#review62930\n\nthanks. Make sure that all commits have r=yzen at the end before checking in.", "author": "yzenevich@mozilla.com", "id": 11565581, "time": "2016-07-21T15:54:16Z"}, {"text": "Comment on attachment 8772434\nbug 1285272 - Add functionality in ARIAMap to use integer index instead of a raw pointer for role map entries.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/65244/diff/1-2/", "author": "michael.li11702@gmail.com", "id": 11565645, "time": "2016-07-21T16:10:30Z"}, {"text": "Comment on attachment 8772435\nbug 1285272 - Replace direct use of mRoleMapEntry with calls to ARIARoleMap().\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/65246/diff/1-2/", "author": "michael.li11702@gmail.com", "id": 11565646, "time": "2016-07-21T16:10:30Z"}, {"text": "Comment on attachment 8772436\nbug 1285272 - Change Accessible's role map entry variable from a raw pointer to an index.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/65248/diff/1-2/", "author": "michael.li11702@gmail.com", "id": 11565647, "time": "2016-07-21T16:10:30Z"}, {"text": "Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/e4c219897749\nAdd functionality in ARIAMap to use integer index instead of a raw pointer for role map entries. r=yzen\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d03640d31c5f\nReplace direct use of mRoleMapEntry with calls to ARIARoleMap(). r=yzen\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/3baa895f4402\nChange Accessible's role map entry variable from a raw pointer to an index. r=yzen", "author": "pulsebot@bots.tld", "id": 11565812, "time": "2016-07-21T17:01:31Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/e4c219897749\nhttps://hg.mozilla.org/mozilla-central/rev/d03640d31c5f\nhttps://hg.mozilla.org/mozilla-central/rev/3baa895f4402", "author": "cbook@mozilla.com", "id": 11567959, "time": "2016-07-22T10:02:55Z"}], "cf_last_resolved": "2016-07-22T10:02:55Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-08-16T02:37:32Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Disability Access APIs", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla50", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "michael.li11702@gmail.com", "id": 574623, "name": "michael.li11702@gmail.com", "real_name": "Michael Li"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "surkov.alexander@gmail.com", "id": 88369, "name": "surkov.alexander@gmail.com", "real_name": "alexander :surkov"}, {"email": "tbsaunde+mozbugs@tbsaunde.org", "id": 401086, "name": "tbsaunde+mozbugs@tbsaunde.org", "real_name": "Trevor Saunders (:tbsaunde)"}, {"email": "yzenevich@mozilla.com", "id": 458165, "name": "yzenevich@mozilla.com", "real_name": "Yura Zenevich [:yzen]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "mili@mozilla.com"}], "who": "michael.li11702@gmail.com", "when": "2016-07-07T15:43:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8768827, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}, {"removed": "", "field_name": "cc", "added": "tbsaunde+mozbugs@tbsaunde.org"}], "who": "michael.li11702@gmail.com", "when": "2016-07-07T15:47:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "surkov.alexander@gmail.com"}], "who": "surkov.alexander@gmail.com", "when": "2016-07-07T16:07:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8768827, "added": "review-"}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-07T19:38:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769236, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-08T15:58:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769239, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-08T16:01:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769253, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-08T16:18:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769258, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-08T16:26:04Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8768827, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-08T16:26:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769239, "added": ""}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-08T20:18:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769258, "added": ""}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-08T20:38:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769768, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T17:22:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769798, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T18:19:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769823, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T18:55:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769825, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T19:01:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8769830, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T19:08:14Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769258, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T19:10:57Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769253, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769253, "added": ""}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T19:11:21Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769239, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T19:11:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769236, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769236, "added": ""}], "who": "michael.li11702@gmail.com", "when": "2016-07-11T19:12:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769825, "added": ""}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-11T20:13:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769823, "added": ""}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-11T20:27:30Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769798, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769798, "added": ""}], "who": "michael.li11702@gmail.com", "when": "2016-07-12T20:20:15Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769823, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-12T20:20:46Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769825, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-12T20:21:04Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769830, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769830, "added": ""}], "who": "michael.li11702@gmail.com", "when": "2016-07-12T20:21:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8770278, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-12T20:23:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8770279, "added": "review?(tbsaunde+mozbugs@tbsaunde.org)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-12T20:26:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yzenevich@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8770279, "added": "review?(yzenevich@mozilla.com)"}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-13T19:15:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8770278, "added": "review?(yzenevich@mozilla.com)"}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-13T19:16:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(tbsaunde+mozbugs@tbsaunde.org)", "attachment_id": 8769768, "added": "review?(yzenevich@mozilla.com)"}], "who": "tbsaunde+mozbugs@tbsaunde.org", "when": "2016-07-13T19:17:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8769768, "added": "review+"}], "who": "yzenevich@mozilla.com", "when": "2016-07-18T14:29:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8770278, "added": "review+"}], "who": "yzenevich@mozilla.com", "when": "2016-07-18T15:12:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8770279, "added": "review+"}], "who": "yzenevich@mozilla.com", "when": "2016-07-18T15:18:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8772019, "added": "review+"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T16:02:56Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8769768, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T16:02:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8772021, "added": "review+"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T16:13:32Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8770278, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T16:13:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8772030, "added": "review+"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T16:44:19Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8770279, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T16:44:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8772021, "added": "review?(yzenevich@mozilla.com)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-18T17:34:28Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mili@mozilla.com)"}], "who": "yzenevich@mozilla.com", "when": "2016-07-18T19:48:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8772434, "added": "review?(yzenevich@mozilla.com)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-19T15:41:43Z"}, {"changes": [{"removed": "needinfo?(mili@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "michael.li11702@gmail.com", "when": "2016-07-20T14:34:34Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8772019, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-21T14:57:30Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8772030, "added": "1"}], "who": "michael.li11702@gmail.com", "when": "2016-07-21T14:58:11Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8772021, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8772021, "added": ""}], "who": "michael.li11702@gmail.com", "when": "2016-07-21T14:58:36Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8772435, "added": "review?(yzenevich@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8772436, "added": "review?(yzenevich@mozilla.com)"}], "who": "michael.li11702@gmail.com", "when": "2016-07-21T14:59:43Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8772434, "added": "review+"}], "who": "yzenevich@mozilla.com", "when": "2016-07-21T15:33:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8772435, "added": "review+"}], "who": "yzenevich@mozilla.com", "when": "2016-07-21T15:47:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(yzenevich@mozilla.com)", "attachment_id": 8772436, "added": "review+"}], "who": "yzenevich@mozilla.com", "when": "2016-07-21T15:54:16Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "michael.li11702@gmail.com", "when": "2016-07-21T16:13:21Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2016-07-21T17:01:31Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla50"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-07-22 10:02:55"}, {"removed": "---", "field_name": "cf_status_firefox50", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-07-22T10:02:55Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1295396"}], "who": "ashiue@mozilla.com", "when": "2016-08-16T02:37:32Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}