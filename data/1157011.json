{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "jruderman@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/html", "id": 8595610}, {"creator": "jruderman@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/plain", "id": 8595611}, {"creator": "xidorn+moz@upsuper.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-04-22T05:06:03Z", "type_id": 4, "creation_date": "2015-04-21T23:24:58Z", "id": 1151816, "setter": "dholbert@mozilla.com"}], "content_type": "text/plain", "id": 8595638}], "classification": "Components", "creator": "jruderman@gmail.com", "cc": ["dholbert@mozilla.com", "xidorn+moz@upsuper.org"], "depends_on": [], "creation_time": "2015-04-21T22:34:45Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["assertion", "testcase"], "summary": "Assertion failure: \"Shouldn't have prev lines\" with ruby", "id": 1157011, "assigned_to_detail": {"email": "xidorn+moz@upsuper.org", "id": 373403, "name": "xidorn+moz@upsuper.org", "real_name": "Xidorn Quan [:xidorn] UTC+10"}, "severity": "critical", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "xidorn+moz@upsuper.org", "comment_count": 12, "comments": [{"text": "Created attachment 8595610\ntestcase", "author": "jruderman@gmail.com", "id": 10182989, "time": "2015-04-21T22:34:45Z"}, {"text": "Created attachment 8595611\nstack", "author": "jruderman@gmail.com", "id": 10182990, "time": "2015-04-21T22:34:59Z"}, {"text": "Assertion failure: data.prevLines == 0 (Shouldn't have prev lines), at layout/generic/nsRubyBaseContainerFrame.cpp:142", "author": "jruderman@gmail.com", "id": 10183023, "time": "2015-04-21T22:44:12Z"}, {"text": "Created attachment 8595638\npatch", "author": "xidorn+moz@upsuper.org", "id": 10183201, "time": "2015-04-21T23:24:58Z"}, {"text": "Comment on attachment 8595638\npatch\n\n>Bug 1157011 - Check line break suppression of BR frame from its parent frame.\n\nCommit message should probably mention Ruby. Maybe something like:\nBug 1157011 - Check BR's parent frame when determining whether to suppress line-breaks due to ruby.\n\n>diff --git a/layout/generic/nsBRFrame.cpp b/layout/generic/nsBRFrame.cpp\n>   // Only when the BR is operating in a line-layout situation will it\n>   // behave like a BR. BR is suppressed when it is inside ruby frames.\n>   nsLineLayout* ll = aReflowState.mLineLayout;\n>-  if (ll && !StyleContext()->ShouldSuppressLineBreak()) {\n>+  // Check whether this BR should be suppressed. Check the bit of its\n>+  // parent instead of itself because a BR tag with ruby container box\n>+  // display type may escape from this flag.\n>+  if (ll && !GetParent()->StyleContext()->ShouldSuppressLineBreak()) {\n\nThis new comment should probably be merged with the comment above it, since both are talking about this same \"if\" check. (There isn't any logical separation in the lines-of-code being described between the two comments).  Moreover, here you're just expanding on the second ruby-specific half of the if-check, rather than documenting the if-check in general, so it's clearer IMO if it's a footnote tied to the main comment rather than a standalone thing.\n\nSuggested combined (& clarified) comment\n  // Only when the BR is operating in a line-layout situation will it behave\n  // like a BR. Additionally, we suppress breaks from BR inside of ruby frames.\n  // To determine if we're inside ruby, we have to rely on the *parent's*\n  // ShouldSuppressLineBreak() method, instead of our own, because we may have\n  // a custom \"display\" value that makes ShouldSuppressLineBreak() return false.\n\n>+++ b/layout/style/nsStyleContext.cpp\n>+  // Note that, when certain HTML tags, e.g. form controls, have ruby\n>+  // container display type, they could also escape from this flag while\n\n\"ruby container display type\" sounds like \"display:ruby\" to me. But I don't think that's what you mean here.\n\nI think you mean to say \"ruby-[text|base]-container display type\"?\n\n(Unless \"ruby container display type\" already has the meaning you're going for -- but I suspect it's ambiguous.)\n\n>+  // 1. either they have no descendant, or their children are not\n>+  //    reflowed by the same line layout; and\n>+  // 2. their display types, the ruby container types, are inline-\n>+  //    outside, so that ib-split won't happen; and\n\nI'm unclear on what you're talking about here, regarding ib-splits, & how that impacts this 3-part \"it is generally fine\" explanation. Could you clarify? (here or in the code-comment)\n\n>+  // So that they usually won't break the assertion that no line break\n>+  // inside ruby content.\n\nTypo -- I think you want to say:\n \"the assertion that no lines break\"\n(s/line/lines/)", "author": "dholbert@mozilla.com", "id": 10183546, "time": "2015-04-22T00:53:34Z"}, {"text": "The revised comment in nsStyleContext:\n\n  // Note that, when certain HTML tags, e.g. form controls, have ruby\n  // level container display type, they could also escape from this flag\n  // while they shouldn't. However, it is generally fine since they\n  // won't usually break the assertion that there is no line break\n  // inside ruby, because:\n  // 1. their display types, the ruby level container types, are inline-\n  //    outside, which means they won't cause any force line break; and\n  // 2. they never start an inline span, which means their children, if\n  //    any, won't be able to break the line its ruby ancestor lays; and\n  // 3. their parent frame is always a ruby content frame, which makes\n  //    line layout suppress any optional line break around this frame.\n  // However, there is one special case which is BR tag, because it\n  // directly affects the line layout. This case is handled by the BR\n  // frame which checks the flag of its parent frame instead of itself.\n\nIs it clearer now?", "author": "xidorn+moz@upsuper.org", "id": 10183613, "time": "2015-04-22T01:23:25Z"}, {"text": "Yup, this is clearer - thanks! Just two nits:\n\n(In reply to Xidorn Quan [:xidorn] (UTC+12) from comment #5)\n>   // 1. their display types, the ruby level container types, are inline-\n>   //    outside, which means they won't cause any force line break; and\n\ns/force/forced/\n\n>   // 3. their parent frame is always a ruby content frame, which makes\n>   //    line layout suppress any optional line break around this frame.\n\nAfter \"always a ruby content frame\", add a parenthetical like: \"(due to anonymous ruby box generation)\" or \"(due to ruby parent fixup)\"\n\nOr something along those lines. (I'm assuming that's how we know this?)", "author": "dholbert@mozilla.com", "id": 10184088, "time": "2015-04-22T05:05:22Z"}, {"text": "Comment on attachment 8595638\npatch\n\nr=me with comments 4 & 6 addressed.", "author": "dholbert@mozilla.com", "id": 10184090, "time": "2015-04-22T05:06:03Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/bf12603338ff", "author": "pulsebot@bots.tld", "id": 10188496, "time": "2015-04-23T01:36:05Z"}, {"text": "(In reply to Daniel Holbert [:dholbert] from comment #4)\n> Comment on attachment 8595638\n> patch\n> \n> >Bug 1157011 - Check line break suppression of BR frame from its parent frame.\n> \n> Commit message should probably mention Ruby. Maybe something like:\n> Bug 1157011 - Check BR's parent frame when determining whether to suppress\n> line-breaks due to ruby.\n\nI just found I forgot to address this, sorry :(", "author": "xidorn+moz@upsuper.org", "id": 10188704, "time": "2015-04-23T03:32:22Z"}, {"text": "That's all right, it was just a suggestion anyway -- no big deal. Thanks!", "author": "dholbert@mozilla.com", "id": 10188733, "time": "2015-04-23T03:47:14Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/bf12603338ff", "author": "cbook@mozilla.com", "id": 10190525, "time": "2015-04-23T13:43:14Z"}], "cf_last_resolved": "2015-04-23T13:43:14Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-04-23T13:43:14Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [306939, 1156227], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Layout", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox40": "fixed", "target_milestone": "mozilla40", "is_cc_accessible": true, "cf_status_firefox46": "---", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "jruderman@gmail.com", "id": 11608, "name": "jruderman@gmail.com", "real_name": "Jesse Ruderman"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, {"email": "xidorn+moz@upsuper.org", "id": 373403, "name": "xidorn+moz@upsuper.org", "real_name": "Xidorn Quan [:xidorn] UTC+10"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "dholbert@mozilla.com"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "quanxunzhen@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8595638, "added": "review?(dholbert@mozilla.com)"}], "who": "xidorn+moz@upsuper.org", "when": "2015-04-21T23:24:58Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dholbert@mozilla.com)"}], "who": "xidorn+moz@upsuper.org", "when": "2015-04-22T01:23:25Z"}, {"changes": [{"removed": "needinfo?(dholbert@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dholbert@mozilla.com", "when": "2015-04-22T05:05:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8595638, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2015-04-22T05:06:03Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1156227"}], "who": "dholbert@mozilla.com", "when": "2015-04-22T06:09:10Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla40"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-04-23 06:43:14"}, {"removed": "affected", "field_name": "cf_status_firefox40", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-04-23T13:43:14Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}