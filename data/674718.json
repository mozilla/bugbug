{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "cjones.bugs@gmail.com", "mentors_detail": [], "depends_on": [680326, 749344, 948803, 949215], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "keywords": ["feature"], "cc_detail": [{"email": "7raivis@inbox.lv", "id": 402178, "name": "7raivis@inbox.lv", "real_name": "Binyamin"}, {"email": "akligman@mozilla.com", "id": 458396, "name": "akligman@mozilla.com", "real_name": "Alan K [:ack]"}, {"email": "alan.kligman@gmail.com", "id": 421493, "name": "alan.kligman@gmail.com", "real_name": "Alan Kligman"}, {"email": "alexander.salas@gmail.com", "id": 444190, "name": "alexander.salas@gmail.com", "real_name": "Alexander Salas Bastidas"}, {"email": "annevk@annevk.nl", "id": 102998, "name": "annevk@annevk.nl", "real_name": "Anne (:annevk)"}, {"email": "antoine.mozilla@gmail.com", "id": 333996, "name": "antoine.mozilla@gmail.com", "real_name": "Antoine Turmel [:GeekShadow]"}, {"email": "asmodeusme@yahoo.com", "id": 420570, "name": "asmodeusme@yahoo.com", "real_name": "Willy_ Foo_Foo"}, {"email": "a_unger@gmx.de", "id": 465956, "name": "a_unger@gmx.de", "real_name": ""}, {"email": "balbif@gmail.com", "id": 419238, "name": "balbif@gmail.com", "real_name": "Felipe Balbi"}, {"email": "baptiste.millemathias@gmail.com", "id": 443083, "name": "baptiste.millemathias@gmail.com", "real_name": "Baptiste Mille-Mathias"}, {"email": "bdahl@mozilla.com", "id": 425126, "name": "bdahl@mozilla.com", "real_name": "Brendan Dahl [:bdahl]"}, {"email": "ben.vanik@gmail.com", "id": 364340, "name": "ben.vanik@gmail.com", "real_name": "Ben Vanik"}, {"email": "benjamin.c.kuo@gmail.com", "id": 512619, "name": "benjamin.c.kuo@gmail.com", "real_name": "BenjaminKuo"}, {"email": "benjamin@smedbergs.us", "id": 7044, "name": "benjamin@smedbergs.us", "real_name": "Benjamin Smedberg"}, {"email": "bent.mozilla@gmail.com", "id": 200444, "name": "bent.mozilla@gmail.com", "real_name": "Ben Turner (not reading bugmail, use the needinfo flag!)"}, {"email": "bfrancis@mozilla.com", "id": 428667, "name": "bfrancis@mozilla.com", "real_name": "Ben Francis [:benfrancis]"}, {"email": "blue119@gmail.com", "id": 460102, "name": "blue119@gmail.com", "real_name": "Yao-Po Wang"}, {"email": "brendan@mozilla.org", "id": 1214, "name": "brendan@mozilla.org", "real_name": "Brendan Eich [:brendan]"}, {"email": "bugzilla@flaki.hu", "id": 449932, "name": "bugzilla@flaki.hu", "real_name": "Szmozs\u00e1nszky Istv\u00e1n [:flaki]"}, {"email": "bugzilla@mikeh.zone", "id": 436993, "name": "bugzilla@mikeh.zone", "real_name": "Mike Habicher [:mikeh] (high bugzilla latency)"}, {"email": "cdiehl@mozilla.com", "id": 368570, "name": "cdiehl@mozilla.com", "real_name": "Christoph Diehl [:posidron]"}, {"email": "changyihsin@gmail.com", "id": 433034, "name": "changyihsin@gmail.com", "real_name": "Vincent Chang[:vchang][changyihsin]"}, {"email": "ckjboy2003@gmail.com", "id": 476803, "name": "ckjboy2003@gmail.com", "real_name": "Sam Lin[:neopleo]"}, {"email": "cpeterson@mozilla.com", "id": 430528, "name": "cpeterson@mozilla.com", "real_name": "Chris Peterson [:cpeterson]"}, {"email": "crosser@average.org", "id": 367119, "name": "crosser@average.org", "real_name": "Eugene Crosser"}, {"email": "curtisk@mozilla.com", "id": 406847, "name": "curtisk@mozilla.com", "real_name": "Curtis Koenig [:curtisk-use curtis.koenig+bzATgmail.com]]"}, {"email": "david.herman@gmail.com", "id": 368424, "name": "david.herman@gmail.com", "real_name": "Dave Herman [:dherman]"}, {"email": "david.humphrey@senecacollege.ca", "id": 250232, "name": "david.humphrey@senecacollege.ca", "real_name": "David Humphrey (:humph)"}, {"email": "davida@mozillafoundation.org", "id": 288265, "name": "davida@mozillafoundation.org", "real_name": "David Ascher (:davida)"}, {"email": "deprecationmail@gmail.com", "id": 346332, "name": "deprecationmail@gmail.com", "real_name": "d"}, {"email": "dhylands@mozilla.com", "id": 437955, "name": "dhylands@mozilla.com", "real_name": "Dave Hylands [:dhylands]"}, {"email": "dietrich@mozilla.com", "id": 213632, "name": "dietrich@mozilla.com", "real_name": "Dietrich Ayala (:dietrich)"}, {"email": "diogo.gmt@gmail.com", "id": 428690, "name": "diogo.gmt@gmail.com", "real_name": "Diogo Golovanevsky Monteiro [:diogogmt]"}, {"email": "dmarcos@mozilla.com", "id": 477051, "name": "dmarcos@mozilla.com", "real_name": "Diego Marcos [:dmarcos]"}, {"email": "dolske@mozilla.com", "id": 27780, "name": "dolske@mozilla.com", "real_name": "Justin Dolske [:Dolske]"}, {"email": "doug.turner@gmail.com", "id": 302291, "name": "doug.turner@gmail.com", "real_name": "Doug Turner (:dougt)"}, {"email": "dpreston@mozilla.com", "id": 421499, "name": "dpreston@mozilla.com", "real_name": "Donovan Preston [:fzzzy]"}, {"email": "ehsan@mozilla.com", "id": 251051, "name": "ehsan@mozilla.com", "real_name": ":Ehsan Akhgari"}, {"email": "ein.hacker@gmail.com", "id": 552171, "name": "ein.hacker@gmail.com", "real_name": ""}, {"email": "ekr@rtfm.com", "id": 35667, "name": "ekr@rtfm.com", "real_name": "Eric Rescorla (:ekr)"}, {"email": "eldan@transmitsecurity.com", "id": 615389, "name": "eldan@transmitsecurity.com", "real_name": ""}, {"email": "elin@mozilla.com", "id": 464914, "name": "elin@mozilla.com", "real_name": ""}, {"email": "fabrice@desre.org", "id": 390071, "name": "fabrice@desre.org", "real_name": "[:fabrice] Fabrice Desr\u00e9"}, {"email": "fb+mozdev@quantumedia.de", "id": 413779, "name": "fb+mozdev@quantumedia.de", "real_name": "Florian Bender"}, {"email": "fredy@fredy.gr", "id": 411231, "name": "fredy@fredy.gr", "real_name": "Alfredos-Panagiotis Damkalis [:fredy]"}, {"email": "fscholz@mozilla.com", "id": 374863, "name": "fscholz@mozilla.com", "real_name": "Florian Scholz [:fscholz] (MDN)"}, {"email": "gavin.sharp@gmail.com", "id": 103593, "name": "gavin.sharp@gmail.com", "real_name": ":Gavin Sharp [email: gavin@gavinsharp.com]"}, {"email": "gh4ck3r@gmail.com", "id": 466515, "name": "gh4ck3r@gmail.com", "real_name": "gh4ck3r@gmail.com"}, {"email": "giles@thaumas.net", "id": 170965, "name": "giles@thaumas.net", "real_name": "Ralph Giles (:rillian) | needinfo me"}, {"email": "henrique.latorre@geraestec.com.br", "id": 616301, "name": "henrique.latorre@geraestec.com.br", "real_name": "Henrique Latorre"}, {"email": "hsivonen@hsivonen.fi", "id": 5490, "name": "hsivonen@hsivonen.fi", "real_name": "Henri Sivonen (:hsivonen)"}, {"email": "ignisvulpis@gmail.com", "id": 305128, "name": "ignisvulpis@gmail.com", "real_name": "Axel Nennker"}, {"email": "ivan.enderlin@hoa-project.net", "id": 295410, "name": "ivan.enderlin@hoa-project.net", "real_name": "Ivan Enderlin"}, {"email": "jho@mozilla.com", "id": 426342, "name": "jho@mozilla.com", "real_name": "James Ho"}, {"email": "jmathies@mozilla.com", "id": 279663, "name": "jmathies@mozilla.com", "real_name": "Jim Mathies [:jimm]"}, {"email": "joeking11829@gmail.com", "id": 488184, "name": "joeking11829@gmail.com", "real_name": "Joe Young"}, {"email": "jorendorff@mozilla.com", "id": 281791, "name": "jorendorff@mozilla.com", "real_name": "Jason Orendorff [:jorendorff]"}, {"email": "jose@cognilab.com", "id": 525646, "name": "jose@cognilab.com", "real_name": ""}, {"email": "josh@joshmatthews.net", "id": 241497, "name": "josh@joshmatthews.net", "real_name": "Josh Matthews [:jdm]"}, {"email": "jrburke@gmail.com", "id": 343071, "name": "jrburke@gmail.com", "real_name": "James Burke [:jrburke]"}, {"email": "jryans@gmail.com", "id": 282978, "name": "jryans@gmail.com", "real_name": "J. Ryan Stinnett [:jryans] (use ni?)"}, {"email": "jscinoz@jscinoz.so", "id": 534987, "name": "jscinoz@jscinoz.so", "real_name": "Jack Coulter"}, {"email": "jstenback+bmo@gmail.com", "id": 12352, "name": "jstenback+bmo@gmail.com", "real_name": "Johnny Stenback  (:jst)"}, {"email": "kaichih.hu@gmail.com", "id": 440607, "name": "kaichih.hu@gmail.com", "real_name": "Kai-Chih Hu [:khu]"}, {"email": "kairo@kairo.at", "id": 5189, "name": "kairo@kairo.at", "real_name": "Robert Kaiser"}, {"email": "kevin+bugzilla@grandon.org", "id": 456525, "name": "kevin+bugzilla@grandon.org", "real_name": "Kevin Grandon :kgrandon"}, {"email": "kg@luminance.org", "id": 339458, "name": "kg@luminance.org", "real_name": "K. Gadd (:kael)"}, {"email": "kyle@nonpolynomial.com", "id": 424719, "name": "kyle@nonpolynomial.com", "real_name": "Kyle Machulis [:qdot] [:kmachulis] (if a patch has no decent commit message, automatic r-)"}, {"email": "lancelot@quantum.com.na", "id": 471996, "name": "lancelot@quantum.com.na", "real_name": "Lancelot Nyachoto"}, {"email": "laszlo@karolyi.hu", "id": 474309, "name": "laszlo@karolyi.hu", "real_name": "L\u00e1szl\u00f3 K\u00e1rolyi"}, {"email": "lhansen@mozilla.com", "id": 499633, "name": "lhansen@mozilla.com", "real_name": "Lars T Hansen [:lth]"}, {"email": "loic@cuguen.org", "id": 522490, "name": "loic@cuguen.org", "real_name": ""}, {"email": "maks@manichord.com", "id": 442760, "name": "maks@manichord.com", "real_name": "Maksim Lin"}, {"email": "markcapella@twcny.rr.com", "id": 433343, "name": "markcapella@twcny.rr.com", "real_name": "Mark Capella [:capella]"}, {"email": "martin.thomson@gmail.com", "id": 438654, "name": "martin.thomson@gmail.com", "real_name": "Martin Thomson [:mt:]"}, {"email": "matjk7@gmail.com", "id": 383067, "name": "matjk7@gmail.com", "real_name": "Matheus Kerschbaum"}, {"email": "mcaceres@mozilla.com", "id": 470081, "name": "mcaceres@mozilla.com", "real_name": "Marcos Caceres [:marcosc]"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "megabyte@kontek.net", "id": 18085, "name": "megabyte@kontek.net", "real_name": "Aaron Kaluszka"}, {"email": "mkmelin+mozilla@iki.fi", "id": 101158, "name": "mkmelin+mozilla@iki.fi", "real_name": "Magnus Melin"}, {"email": "mounir@lamouri.fr", "id": 342786, "name": "mounir@lamouri.fr", "real_name": "Mounir Lamouri (:mounir)"}, {"email": "moz@jeka.info", "id": 129809, "name": "moz@jeka.info", "real_name": "j.j."}, {"email": "mozilla@bryankaplan.com", "id": 539986, "name": "mozilla@bryankaplan.com", "real_name": "bryankaplan"}, {"email": "mozilla@stefan-neufeind.de", "id": 310061, "name": "mozilla@stefan-neufeind.de", "real_name": "Stefan Neufeind"}, {"email": "mrbkap@mozilla.com", "id": 69426, "name": "mrbkap@mozilla.com", "real_name": "Blake Kaplan (:mrbkap)"}, {"email": "mszpak@wp.pl", "id": 114005, "name": "mszpak@wp.pl", "real_name": "Marcin Zajaczkowski"}, {"email": "mwu.code@gmail.com", "id": 246518, "name": "mwu.code@gmail.com", "real_name": "Michael Wu [:mwu]"}, {"email": "myk@mykzilla.org", "id": 27300, "name": "myk@mykzilla.org", "real_name": "Myk Melez [:myk] [@mykmelez]"}, {"email": "ngm+mozilla@google.com", "id": 292890, "name": "ngm+mozilla@google.com", "real_name": "Nagendra Modadugu"}, {"email": "nhoj62003@gmail.com", "id": 566885, "name": "nhoj62003@gmail.com", "real_name": "Chin"}, {"email": "nuno.ponte@multicert.com", "id": 53608, "name": "nuno.ponte@multicert.com", "real_name": "Nuno Ponte"}, {"email": "olivier@labapart.com", "id": 550219, "name": "olivier@labapart.com", "real_name": "Olivier M"}, {"email": "overholt@mozilla.com", "id": 442218, "name": "overholt@mozilla.com", "real_name": "Andrew Overholt [:overholt]"}, {"email": "pawel+mozilla@kraszewscy.net", "id": 550839, "name": "pawel+mozilla@kraszewscy.net", "real_name": "Pawel Kraszewski"}, {"email": "philipp@weitershausen.de", "id": 216770, "name": "philipp@weitershausen.de", "real_name": "Philipp von Weitershausen [:philikon]"}, {"email": "ratsbane@gmail.com", "id": 421477, "name": "ratsbane@gmail.com", "real_name": "Doug Sims"}, {"email": "rdrgwtrs@gmail.com", "id": 462228, "name": "rdrgwtrs@gmail.com", "real_name": "Rodrigo Silva"}, {"email": "reda.housnialaoui@gmail.com", "id": 604324, "name": "reda.housnialaoui@gmail.com", "real_name": ""}, {"email": "reillyg@chromium.org", "id": 550242, "name": "reillyg@chromium.org", "real_name": "Reilly Grant"}, {"email": "rene.olivo33@gmail.com", "id": 617405, "name": "rene.olivo33@gmail.com", "real_name": ""}, {"email": "robin@berjon.com", "id": 71243, "name": "robin@berjon.com", "real_name": "Robin Berjon"}, {"email": "robink@creosotehill.org", "id": 365904, "name": "robink@creosotehill.org", "real_name": "Robin Kauffman"}, {"email": "saurabhanandiit@gmail.com", "id": 440668, "name": "saurabhanandiit@gmail.com", "real_name": "Saurabh Anand [:sawrubh]"}, {"email": "sciguyryan@gmail.com", "id": 217429, "name": "sciguyryan@gmail.com", "real_name": "Ryan Jones [:sciguyryan]"}, {"email": "sean@yak.net", "id": 552396, "name": "sean@yak.net", "real_name": ""}, {"email": "sonny.piers@gmail.com", "id": 325572, "name": "sonny.piers@gmail.com", "real_name": "Sonny Piers [:sonny]"}, {"email": "sotaro.ikeda.g@gmail.com", "id": 434202, "name": "sotaro.ikeda.g@gmail.com", "real_name": "Sotaro Ikeda [:sotaro]"}, {"email": "spectre@floodgap.com", "id": 101070, "name": "spectre@floodgap.com", "real_name": "Cameron Kaiser [:spectre]"}, {"email": "sthugo@gmail.com", "id": 431414, "name": "sthugo@gmail.com", "real_name": "StevenLee[:slee]"}, {"email": "stick@gk2.sk", "id": 342043, "name": "stick@gk2.sk", "real_name": "Pavol Rusnak"}, {"email": "support@toremote.com", "id": 422043, "name": "support@toremote.com", "real_name": ""}, {"email": "syoichi@outlook.com", "id": 448618, "name": "syoichi@outlook.com", "real_name": "Syoichi Tsuyuhara"}, {"email": "taz@dattaz.fr", "id": 496800, "name": "taz@dattaz.fr", "real_name": "dattaz"}, {"email": "ted@mielczarek.org", "id": 39022, "name": "ted@mielczarek.org", "real_name": "Ted Mielczarek [:ted.mielczarek]"}, {"email": "thinker.li@gmail.com", "id": 427371, "name": "thinker.li@gmail.com", "real_name": "Thinker Li [:sinker]"}, {"email": "tikkanen@iki.fi", "id": 42201, "name": "tikkanen@iki.fi", "real_name": "Tuomo Tikkanen"}, {"email": "ttaubert@mozilla.com", "id": 402526, "name": "ttaubert@mozilla.com", "real_name": "Tim Taubert [:ttaubert] (inactive)"}, {"email": "u4710984@gmail.com", "id": 507451, "name": "u4710984@gmail.com", "real_name": ""}, {"email": "u471321@disabled.tld", "id": 471321, "name": "u471321@disabled.tld", "real_name": ""}, {"email": "u494301@disabled.tld", "id": 494301, "name": "u494301@disabled.tld", "real_name": ""}, {"email": "u540843@disabled.tld", "id": 540843, "name": "u540843@disabled.tld", "real_name": ""}, {"email": "vicamo@gmail.com", "id": 434284, "name": "vicamo@gmail.com", "real_name": "Vicamo Yang [:vicamo][:vyang]"}, {"email": "waldron.rick@gmail.com", "id": 404097, "name": "waldron.rick@gmail.com", "real_name": "Rick Waldron [:rwaldron]"}, {"email": "webmaster@keryx.se", "id": 298919, "name": "webmaster@keryx.se", "real_name": "Lars Gunther"}, {"email": "william.wyliang@gmail.com", "id": 482900, "name": "william.wyliang@gmail.com", "real_name": "William Liang"}, {"email": "willyaranda@mozilla-hispano.org", "id": 200980, "name": "willyaranda@mozilla-hispano.org", "real_name": "Guillermo L\u00f3pez :willyaranda (probably SLOW response)"}, {"email": "xtc4uall@gmail.com", "id": 104905, "name": "xtc4uall@gmail.com", "real_name": "(mostly gone) XtC4UaLL [:xtc4uall]"}], "cf_last_resolved": "2017-08-11T10:25:49Z", "attachments": [{"creator": "gal@uci.edu", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 549550}, {"creator": "gal@uci.edu", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 549555}, {"creator": "gal@uci.edu", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 550369}, {"creator": "kg@luminance.org", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 557666}, {"creator": "bdahl@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8345646}, {"creator": "ckjboy2003@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8506753}, {"creator": "jeff.cy.chuang@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/gif", "id": 8739344}], "votes": 24, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 118, "comments": [{"text": "Per discussion\n - offer an interface like window.addUSBHandler(matchClass, matchVendor, matchDevice) that allows content to \"steal\" a USB device when it's connected.  The match* arguments specify which devices the handler is interested in.  They might be \"*\" or undefined to mean \"everything\", otherwise specific device classes or IDs.\n - when the page first loads, or a new USB device is connected, throw a doorhanger-style popup to let the page bind the USB device.  (One option would be \"Always allow\".)\n\nFrom here the details are a bit murkier ... when permission is granted by the user, content will receive a notification of some sort giving it the option of binding itself to the device.  The device would be represented by an abstraction like USBDevice, exposing (i) byte-buffer send/recv and (ii) control-message send/recv functionality.  (Ignoring reserved-bandwidth transfers for now.)  Both send and recv will be non-blocking.\n\nIt seems to make sense to make the WebUSB send/recv API match the WebSockets API as much as possible.", "author": "cjones.bugs@gmail.com", "id": 5617875, "time": "2011-07-27T21:45:47Z"}, {"text": "Let the bikeshedding begin!\n\n(In reply to comment #0)\n> Per discussion\n>  - offer an interface like window.addUSBHandler(matchClass, matchVendor,\n> matchDevice)\n\nWould probably be better to offer addHandler(matchObj), where matchObj might be { class: \"foo\", vendor: \"blah\" }, etc.", "author": "cjones.bugs@gmail.com", "id": 5617877, "time": "2011-07-27T21:47:16Z"}, {"text": "Yeah, here is what my current implementation sketch does:\n\nvar usb = new USBManager(); // I don't want to stick more stuff on window\nusb.onclaim = ...\nusb.claimDevice({ class: subclass: protocol: idVendor: idProduct: })\n\nonclaim gets called if a device is found and the user agrees\n\nUSB has a pretty well known standard set if idioms and APIs. I would stick to those for modeling the USBDevice class.", "author": "gal@uci.edu", "id": 5617889, "time": "2011-07-27T21:52:04Z"}, {"text": "Another interesting implementation detail of this is to whether we want to use XPCOM or JSAPI. I started writing a proper XPCOM component for this, but I spent 4 hours just making the basic idl and C++ glue and uuidgen and fml. Then I got tired of that and switched to a simple JSAPI extension (similar to CTypes) and got something discovering devices and running claim handlers on them within 30 minutes. I think I am leaning to the latter now. The only drawback is that C++ code won't be able to use this as efficiently, but I think I am ok with that.", "author": "gal@uci.edu", "id": 5617943, "time": "2011-07-27T22:07:18Z"}, {"text": "(In reply to comment #2)\n> Yeah, here is what my current implementation sketch does:\n> \n> var usb = new USBManager(); // I don't want to stick more stuff on window\n> usb.onclaim = ...\n> usb.claimDevice({ class: subclass: protocol: idVendor: idProduct: })\n> \n> onclaim gets called if a device is found and the user agrees\n\nSo the onclaim handler returns true or false to indicate whether it wants to steal the device?  What happens after it returns true?  How does it get a handle to the USBDevice so that it can attach recv handlers etc.?  (Don't need to solve this ASAP, just want to make sure the problem is clear.)  It would be nice to pass a USBDevice handle to the onclaim handler, but the problem is there's no way to do a \"const reference\" in JS, so if the onclaim decides not to take the device, it's free to mutate the USBDevice however it wants before returning false, which sucks.\n\n> USB has a pretty well known standard set if idioms and APIs. I would stick\n> to those for modeling the USBDevice class.\n\nMaybe ... but if they're idioms because of historical accident instead of an underlying fundamental difference from say sockets, we would need to carefully think whether we're better off targeting old-time USB devs used to libusb, or web authors used to other saner APIs.  I can see arguments for both.  Not something we need to resolve for a v0 prototype.", "author": "cjones.bugs@gmail.com", "id": 5617970, "time": "2011-07-27T22:15:09Z"}, {"text": "(In reply to comment #3)\n> Another interesting implementation detail of this is to whether we want to\n> use XPCOM or JSAPI. I started writing a proper XPCOM component for this, but\n> I spent 4 hours just making the basic idl and C++ glue and uuidgen and fml.\n> Then I got tired of that and switched to a simple JSAPI extension (similar\n> to CTypes) and got something discovering devices and running claim handlers\n> on them within 30 minutes. I think I am leaning to the latter now. The only\n> drawback is that C++ code won't be able to use this as efficiently, but I\n> think I am ok with that.\n\nThere's a lot of googunk with IDL stuff, but Gecko people speak that as a second language.  I think Gecko folks in general are less likely to speak JSAPI extension, so the experience for a Gecko person might be the opposite of yours.\n\nWhat are the deeper tradeoffs?  I don't know JSAPI extensions well, so this is a question for you and others.  Which will be faster to maintain and evolve, all other things being equal (experience level with both approaches).  Which is less tied to SM internals.\n\nAgree about not caring about C++ callers, for this API and all new ones from now on TBH.", "author": "cjones.bugs@gmail.com", "id": 5617980, "time": "2011-07-27T22:20:13Z"}, {"text": "If we don't care about C++, JSAPI is the way to go. The API is much cleaner. We don't have a way to generate JSAPI from idl for now, but we are working on that for the new DOM bindings. For small API surfaces this shouldn't make a difference.", "author": "gal@uci.edu", "id": 5618005, "time": "2011-07-27T22:32:53Z"}, {"text": "What kind of C++ interface would be generated \"under\" the JSAPI?  If it's clean and sane and real C++ (like actual return values and so forth), I think everyone on the Gecko side would move to this system like yesterday.", "author": "cjones.bugs@gmail.com", "id": 5618024, "time": "2011-07-27T22:41:12Z"}, {"text": "Somewhat related: bug 604039. I'm putting together a prototype patch to expose joystick events to content, but it's much higher level than this.", "author": "ted@mielczarek.org", "id": 5618950, "time": "2011-07-28T11:17:57Z"}, {"text": "Created attachment 549550\npatch\n\nWIP. MacOSX only for now. Allow creation of a USBManager object that can be used to claim USB devices:\n\nvar usb = new USBManager();\nusb.claimDevice(class, subClass, protocol, vendor, product)\n\nIf a matching device is found (and later on if security policies permit), fire usb.onattachdevice, handing in a device object.\n\nThe device object is not done yet. This isn't working yet. Just a code dump.", "author": "gal@uci.edu", "id": 5623454, "time": "2011-07-30T05:41:38Z"}, {"text": "(In reply to comment #2)\n> Yeah, here is what my current implementation sketch does:\n> \n> var usb = new USBManager(); // I don't want to stick more stuff on window\n\nYou are sticking at least USBManager in window.\n\nI can't believe it took 4 hours to do XPIDL/XPCOM stuff. That's either first-time startup cost or sandbagging.\n\nWe should not rush and then have to redo this. We have three big issues to get right:\n\n1. Security model. Right now you're assuming a permission model as described in roc's blog? If so we could use some safe-by-default design, instead of hooking up powerful code and risking forgetting or messing up the call out to the permission manager.\n\n2. API design, USB precedent vs. WebSockets vs. ? We are aiming at WebDevs first, so I lean toward the latter but it's just a starting bias, not decisive.\n\n3. XPCOM vs. JSAPI. Gecko DOM hackers should weigh in. If we really want JSAPI glue from XPIDL (it can pile up to sizeable code footprint) let's do that now, instead of spending 30 minutes on handcoding. That will add up over time and risk bugs.\n\nThere may be another angle here: module system or no module system.\n\nLet's take at least a weekend to get to some agreement.\n\n/be", "author": "brendan@mozilla.org", "id": 5623467, "time": "2011-07-30T06:41:36Z"}, {"text": "> You are sticking at least USBManager in window.\n\nOr window.navigator, still trying to decide.\n\n> \n> We should not rush and then have to redo this. We have three big issues to\n> get right:\n> \n> 1. Security model. Right now you're assuming a permission model as described\n> in roc's blog? If so we could use some safe-by-default design, instead of\n> hooking up powerful code and risking forgetting or messing up the call out\n> to the permission manager.\n\nNot sure what you mean. The permission model I have in mind is that you claim a very specific device and if that exists, a doorhanger lets the user approve the action.\n\n> 2. API design, USB precedent vs. WebSockets vs. ? We are aiming at WebDevs\n> first, so I lean toward the latter but it's just a starting bias, not\n> decisive.\n\nI think most USB drivers on the web will be written by USB devs, but I don't think the API would look much different either way.\n\n> 3. XPCOM vs. JSAPI. Gecko DOM hackers should weigh in. If we really want\n> JSAPI glue from XPIDL (it can pile up to sizeable code footprint) let's do\n> that now, instead of spending 30 minutes on handcoding. That will add up\n> over time and risk bugs.\n> \n> There may be another angle here: module system or no module system.\n> \n> Let's take at least a weekend to get to some agreement.\n\nI went with XPCOM/XPConnect for now. A partical JSAPIIDL solution causes instanceof mismatches along the proto chain (EventTarget is needed in both worlds, one XPCOM thing and one via JSAPI). Not worth the hassle for now.\n\n> \n> /be", "author": "gal@uci.edu", "id": 5623468, "time": "2011-07-30T06:47:04Z"}, {"text": "(In reply to comment #11)\n> > You are sticking at least USBManager in window.\n> \n> Or window.navigator, still trying to decide.\n\nFWIW, Jonas, Ben and I were thinking of using navigator for the WebAPI objects.", "author": "mounir@lamouri.fr", "id": 5623484, "time": "2011-07-30T07:28:22Z"}, {"text": "I have no strong opinion either way. I think there is some value of not further cluttering window.", "author": "gal@uci.edu", "id": 5623485, "time": "2011-07-30T07:34:22Z"}, {"text": "Created attachment 549555\npatch\n\nlinks, untested", "author": "gal@uci.edu", "id": 5623497, "time": "2011-07-30T08:12:33Z"}, {"text": "I'm going to do some research into what it'll take to do this stuff on Win32. I *think* it should all be possible in user-space but I'm not certain.", "author": "kg@luminance.org", "id": 5626365, "time": "2011-08-01T21:56:09Z"}, {"text": "I believe there's a libusb port for windows too that might be of use here.", "author": "jstenback+bmo@gmail.com", "id": 5626403, "time": "2011-08-01T22:08:50Z"}, {"text": "libusb is GPL, so we can't use that", "author": "gal@uci.edu", "id": 5626414, "time": "2011-08-01T22:11:54Z"}, {"text": "(In reply to comment #17)\n> libusb is GPL, so we can't use that\n\nAccording to http://libusb.org/ libusb is LGPL.", "author": "mounir@lamouri.fr", "id": 5626431, "time": "2011-08-01T22:19:30Z"}, {"text": "Neither is compatible with the MPL.", "author": "cjones.bugs@gmail.com", "id": 5626474, "time": "2011-08-01T22:33:22Z"}, {"text": "libusb's synchronous interface is a bad match anyway, we don't want that", "author": "gal@uci.edu", "id": 5626490, "time": "2011-08-01T22:37:50Z"}, {"text": "What we've done elsewhere is to run the synchronous API on a separate thread which then sends events to the main thread.\n\nOf course, if we can get to an asynchronous API directly instead, that's better.", "author": "jonas@sicking.cc", "id": 5626661, "time": "2011-08-01T23:46:16Z"}, {"text": "What use cases is this API meant to address? Why wouldn't those use cases be better addressed by a collection of bus-independent device class-specific APIs?\n\nIf a Web app is programmed to capture USB devices of class foo and I have a device of class foo but using Bluetooth (or a yet unknown future bus type), I'd be pretty annoyed for being excluded due to using a different bus than the one the app author expected.\n\nAlso, it seems to me that there's a risk of Web app developers choosing to capture the whole USB device in cases where a higher-level API exists and using the higher-level API would be friendlier to other browser tabs and to non-browser apps on the same operating system. (Consider USB pointing device capture compared to using the existing DOM mouse events.)", "author": "hsivonen@hsivonen.fi", "id": 5627223, "time": "2011-08-02T08:35:20Z"}, {"text": "(In reply to comment #22)\n> What use cases is this API meant to address? Why wouldn't those use cases be\n> better addressed by a collection of bus-independent device class-specific\n> APIs?\n\nThose APIs are not mutually exclusive. A low-level USB API allows you to talk to anything USB, including devices with vendor-specific protocols (which are unfortunately very frequent). You _can_ use this interface to talk to a webcam, for example, but the preferred method will be to use the webcam interface which works with USB cameras and built-in ones. In some edges cases webapps might prefer USB after all because maybe its a specific camera that has additional functionality that is not exposed through the general interface (i.e. stereo camera or whatever).\n\n> \n> If a Web app is programmed to capture USB devices of class foo and I have a\n> device of class foo but using Bluetooth (or a yet unknown future bus type),\n> I'd be pretty annoyed for being excluded due to using a different bus than\n> the one the app author expected.\n\nBluetooth and USB device classes are not generally compatible. Trying to handle them uniformly would require us to spend a lot of effort create a uniform model on top of WebUSB and WebBluetooth. I would rather let web library authors innovate here. We offer the low-level API, and people can write javascript libraries with nice abstractions (i.e. PTP.js that can transfer pictures via usb and bluetooth).\n\n> \n> Also, it seems to me that there's a risk of Web app developers choosing to\n> capture the whole USB device in cases where a higher-level API exists and\n> using the higher-level API would be friendlier to other browser tabs and to\n> non-browser apps on the same operating system. (Consider USB pointing device\n> capture compared to using the existing DOM mouse events.)\n\nThere is always a risk of people using inferior APIs for a task. You can use canvas to display text instead of HTML and CSS, and you use accessibility etc. I don't think we can stop that. There will be a specific and particularly loud warning if you try to talk to devices that are supported by the kernel (i.e. Mouse or block device). We will have to decide whether we ever allow to disconnect those from the kernel driver. For the primary mouse I would for example argue that we don't want to permit that. The same with mounted block device drivers. We can figure this stuff out along the way.", "author": "gal@uci.edu", "id": 5627576, "time": "2011-08-02T14:00:04Z"}, {"text": "Created attachment 550369\npatch\n\nAdded some goop with bz's help to register the constructor for the USBManager. You can actually instantiate it now. Weeee.", "author": "gal@uci.edu", "id": 5630291, "time": "2011-08-03T13:55:14Z"}, {"text": "(In reply to comment #23)\n> (In reply to comment #22)\n> > What use cases is this API meant to address? Why wouldn't those use cases be\n> > better addressed by a collection of bus-independent device class-specific\n> > APIs?\n> \n> Those APIs are not mutually exclusive. A low-level USB API allows you to\n> talk to anything USB, including devices with vendor-specific protocols\n> (which are unfortunately very frequent). You _can_ use this interface to\n> talk to a webcam, for example, but the preferred method will be to use the\n> webcam interface which works with USB cameras and built-in ones. In some\n> edges cases webapps might prefer USB after all because maybe its a specific\n> camera that has additional functionality that is not exposed through the\n> general interface (i.e. stereo camera or whatever).\n\nIsn't interfacing with a specific camera against the device-independent nature of the Web, though?\n\nI guess having an USB API would allow Web apps to be innovative with a new hit device (like a Kinect level of hit device) before browsers and operating systems catch up with higher-level APIs for a new device class, but it seems bad if Web apps are able to create lock-in on the level of requiring a particular device from a particular vendor. Then anyone wishing to compete with that device needs to emulate it on the USB level.\n\n> > If a Web app is programmed to capture USB devices of class foo and I have a\n> > device of class foo but using Bluetooth (or a yet unknown future bus type),\n> > I'd be pretty annoyed for being excluded due to using a different bus than\n> > the one the app author expected.\n> \n> Bluetooth and USB device classes are not generally compatible. Trying to\n> handle them uniformly would require us to spend a lot of effort create a\n> uniform model on top of WebUSB and WebBluetooth. I would rather let web\n> library authors innovate here. We offer the low-level API, and people can\n> write javascript libraries with nice abstractions (i.e. PTP.js that can\n> transfer pictures via usb and bluetooth).\n\nI wasn't suggesting that Bluetooth and USB were compatible. Rather, they don't need to be compatible if Web apps are working with higher-level APIs.\n\n> > Also, it seems to me that there's a risk of Web app developers choosing to\n> > capture the whole USB device in cases where a higher-level API exists and\n> > using the higher-level API would be friendlier to other browser tabs and to\n> > non-browser apps on the same operating system. (Consider USB pointing device\n> > capture compared to using the existing DOM mouse events.)\n> \n> There is always a risk of people using inferior APIs for a task. You can use\n> canvas to display text instead of HTML and CSS, and you use accessibility\n> etc. I don't think we can stop that.\n\nThere is a way and you mention it immediately: Preventing Web apps from using this API to capture a device that belongs to a class that already has (or can Real Soon Now have) higher-level APIs for it (pointing devices, keyboards, storage devices, webcams, microphones).\n\nIf you hand Web authors a footgun, the footgun will go off in wrong places. OTOH, banning apps from taking over mice or storage devices has a relatively small penalty on innovation (mainly preventing things like http://bellard.org/jslinux/ from offering generic USB bridging).\n\n> There will be a specific and\n> particularly loud warning if you try to talk to devices that are supported\n> by the kernel (i.e. Mouse or block device). We will have to decide whether\n> we ever allow to disconnect those from the kernel driver. For the primary\n> mouse I would for example argue that we don't want to permit that. The same\n> with mounted block device drivers. We can figure this stuff out along the\n> way.", "author": "hsivonen@hsivonen.fi", "id": 5630392, "time": "2011-08-03T14:39:27Z"}, {"text": "> Isn't interfacing with a specific camera against the device-independent\n> nature of the Web, though?\n\nThere will always be a tension between innovation and standard abstractions. You mentioned kinect yourself. Its very very very hard (read: impossible) to design APIs that take into account future device innovation. We should enable the web to immediately take advantage of such devices, and quickly backfill with better high-level device abstractions. USB is painful to use. People won't rely on it as long there are better alternatives.\n\n> I wasn't suggesting that Bluetooth and USB were compatible. Rather, they\n> don't need to be compatible if Web apps are working with higher-level APIs.\n\nDefinitely. We want higher level APIs for common device classes. I just don't think its mutually exclusive.\n\n> There is a way and you mention it immediately: Preventing Web apps from\n> using this API to capture a device that belongs to a class that already has\n> (or can Real Soon Now have) higher-level APIs for it (pointing devices,\n> keyboards, storage devices, webcams, microphones).\n> If you hand Web authors a footgun, the footgun will go off in wrong places.\n> OTOH, banning apps from taking over mice or storage devices has a relatively\n> small penalty on innovation (mainly preventing things like\n> http://bellard.org/jslinux/ from offering generic USB bridging).\n\nI think this is a valid view-point (I mostly agree with mice, a bit less with storage devices, but I am open to negotiations). We should discuss security policies in more detail once the basic driver functionality works.", "author": "gal@uci.edu", "id": 5630414, "time": "2011-08-03T14:46:40Z"}, {"text": "Created attachment 557666\nPartial windows implementation\n\nFinally managed to get most of the pieces in place and working for device detection. Right now, any time you call ClaimDevice, or any time a physical device is connected/disconnected from your machine, it'll run EnumConnectedDevices to rescan all your USB ports.\n\nLeft to do here:\nTake out the debugging printfs\nFigure out the correct way to add the link libraries it needs\nStart firing the attach/detach DOM events correctly\n\nNote that this patch won't work without bug 680326, at present.", "author": "kg@luminance.org", "id": 5694886, "time": "2011-09-01T22:07:17Z"}, {"text": "Awwwww yeaaaaah! I've been idly poking at libusb for a while as a side project to do exactly this. Never spent enough time to bring it to fruition, though!\n\nRelevant to the discussion at hand: class-specific devices work great when they exist, and are probably the preferred way to access some things. But there are a number of devices that don't really adhere to that, otherwise require custom drivers, and this make \"use this device with the web\" a rather painful experience. (Yes, that's largely due to OS-FAIL, but here we are.).\n\nA few examples: a ambient \"you've got mail\" notification device, a toy rocket launcher (bug 683056), Arduino. I own all 3, and would like them to work with my browser regardless of OS.", "author": "dolske@mozilla.com", "id": 5753294, "time": "2011-10-03T01:51:51Z"}, {"text": "How about a mini-iTunes-like add-on that downloads Fennec and syncs it to your Android phone? We want bundling/distro in mobile -- why not use our desktop Firefox channel?\n\n/be", "author": "brendan@mozilla.org", "id": 5901277, "time": "2011-12-08T18:30:21Z"}, {"text": "Does the scope of this API allow a user agent to act as both a USB host and a USB client?\n\nWhat I'm thinking is that a web app like a photo gallery may want to act as both depending on the user agent hardware. When you run the gallery app on a desktop PC, you might want to be able to transfer files from a USB client like a digital camera or media player using USB MSC, PTP or MTP. Conversely, when you run the app on a smartphone you might want the device to act as a USB client in order to transfer media files to/from a USB host.\n\nOne of the unresolved use cases for the Gallery app on B2G is how to transfer media files on and off the device using USB, Bluetooth etc. so an MTP.js implementation could be a route to achieving this.", "author": "bfrancis@mozilla.com", "id": 6013987, "time": "2012-01-27T12:00:20Z"}, {"text": "I believe WebUSB is going to handle the USB host case and \"USB file reading\" is going to handle the USB client part. At least that seems to be Jonas' plan currently.", "author": "mounir@lamouri.fr", "id": 6014098, "time": "2012-01-27T13:36:05Z"}, {"text": "Is there any one try to make a patch for B2G gonk?", "author": "thinker.li@gmail.com", "id": 6022966, "time": "2012-01-31T17:14:02Z"}, {"text": "I think Jim Straus (jstraus on IRC) was looking at it a bit back in early December? That's the last I heard.", "author": "kyle@nonpolynomial.com", "id": 6023080, "time": "2012-01-31T17:47:52Z"}, {"text": "Not yet, there are many other high priority items for MWC so we are focusing on that for now. We will cycle back to this after february.", "author": "gal@uci.edu", "id": 6023426, "time": "2012-01-31T19:30:32Z"}, {"text": "Also, when we come back to this work, we shouldn't need any gonk-specific code, in theory.", "author": "cjones.bugs@gmail.com", "id": 6023595, "time": "2012-01-31T20:26:17Z"}, {"text": "A couple of questions\u2026\n\n1) is there anyone working on this?\n\n2) if (1==false) && is the priority low on this?\n\nthen:\n\nI could work on this API for my final university thesis.", "author": "willyaranda@mozilla-hispano.org", "id": 6114480, "time": "2012-03-05T17:00:24Z"}, {"text": "assinged to me for sec action to schedule a meeting", "author": "curtisk@mozilla.com", "id": 6179673, "time": "2012-03-28T21:18:39Z"}, {"text": "It looks like this API is targeted at the smartphone being the USB Host, but in most cases, the Smartphone is a USB device connected to the PC as a Mass Storage Device or MTP and so on. Are there any proposed APIs for when the device is attached to a PC Host ? In most cases, you would like to allow users to choose the mode of operation. I also would like to know what kind of interfaces you guys would like to have from the linux kernel Gadget Framework (which I maintain) so we can make sure to have all that on the upcoming releases.\n\nI have been thinking of a generic way to notify about cable/device status (disconnected, connected, suspending, suspended, resuming, enumerated, etc) so that USB charging can be implemented fairly easily, too.", "author": "balbif@gmail.com", "id": 6378210, "time": "2012-06-09T20:55:58Z"}, {"text": "#38 USB mounting is already sort of done for B2G, check out bug 737153. Most of the interaction for options will happen via the settings API. WebUSB itself is mostly concerned with host mode support.", "author": "kyle@nonpolynomial.com", "id": 6378492, "time": "2012-06-10T04:18:29Z"}, {"text": "#39 fair enough. Just thought that since this is targeting a smartphone (B2G), you ought to have a USB Peripheral-side API. Never mind then ;-)", "author": "balbif@gmail.com", "id": 6378998, "time": "2012-06-10T19:42:25Z"}, {"text": "Is this API still under development? I've been experimenting with Chrome's chrome.usb API and it's really fun. I'd love to see this land in Firefox, especially if it was accesible from the drive-by web (instead of just apps, as it is in Chrome).\n\n(Oculus Rift driver using chrome.usb: https://github.com/benvanik/vr.js/tree/master/experimental/usb-driver)", "author": "ben.vanik@gmail.com", "id": 7388165, "time": "2013-05-04T21:54:21Z"}, {"text": "Unfortunately I don't believe this been touched in a long time, and will need some pretty serious overhauls since it's bitrotted a fair amount (especially now that we'll also need to worry about WebIDL, electrolysis, etc...). That said, the idea is still alive, it just needs some implementation resources.\n\nFrom what I remember, our major blocker on the first iteration of this was the ability to detach and reattach devices on windows. I vaguely remember hearing that outside of that, it was ready to at least be reviewed, though I don't know how much \"working\" that was. With all the work the games team is doing lately and the attention it's getting, hopefully we can get some traction soon.", "author": "kyle@nonpolynomial.com", "id": 7388272, "time": "2013-05-04T23:48:14Z"}, {"text": "Yeah, my understanding from extensive research (and consulting lots of windows driver/kernel development experts) is that the windows USB stack is explicitly not designed for this kind of thing.\n\nDriver signing and other mechanisms also interfere (it's possible to do user mode drivers on Windows, but it's limited in ways that make it difficult to use that stack directly for these purposes). In practice, this feature requires writing a kernel-mode filter that intercepts potentially all USB traffic, or building something elaborate that installs a custom driver signing cert and then generates signed 'drivers' for each device on demand so that JS content can interact with it. (This is what the libusb stuff available on windows does.) I'm also not certain it is possible for this to work unless you are running as Administrator, which limits its usefulness (probably for good reason, though).\n\nAnyone who looks into this can feel free to ping me for advice or information (though I'm only an 'expert' to the extent that I was stuck doing research on this for a couple months...)", "author": "kg@luminance.org", "id": 7388375, "time": "2013-05-05T02:36:34Z"}, {"text": "This would also be useful to enable using a FxOS device as a controller for an arduino. \n\nIn Node, this:\nhttps://github.com/voodootikigod/node-serialport\nis used by:\nhttps://github.com/rwldrn/johnny-five/\n\nand then JS programs can drive an arduino. \n\nAt a nodebots hack day, there was a proof of concept that used Chrome's Serial API to do something similar, so it just needed the chrome browser to work:\nhttp://developer.chrome.com/apps/serial.html\n\nIf FxOS could do this, the FxOS devices are small enough to be attached to the arduino to allow more portable arduino setups. Right now, a laptop connected via USB is needed.\n\nI tried a shot at updating the patch, but the bitrot and unfamiliarity with the changes in the codebase since initial patch meant I was not able to complete it on the arduino hack day. I was using the mozilla-b2g18 branch of gecko.\n\nWhere I got stuck was updating the nsUSBManager code: nsDOMEventTargetWrapperCache no longer exists. I was looking at the WebSocket.h/cpp as maybe a guide, but I am mostly just using pattern matching to do the patch update, and I think I have reached the limit of that without really understanding how the code should be worked.\n\nSo if there are some easy hints to give to a beginner that is new to the code, feel free to let me know. I expect there are not easy hints, and in that case, I am happy to provide feedback on any updated patch by trying it out on an FxOS device to see if it can be used to drive an arduino, as long at the patch could work with mozilla-b2g18.\n\nWhile I can see windows support as being difficult, perhaps as a start it could just be for FxOS devices.", "author": "jrburke@gmail.com", "id": 7481615, "time": "2013-05-30T21:38:25Z"}, {"text": "Yeah, not sure an FxOS port would be classified as easy. We don't have a libusbhost backend yet (unless that happened on android while I wasn't looking), so on top of unbitrotting, this requires integration with the base system all the way up through the DOM.", "author": "kyle@nonpolynomial.com", "id": 7481856, "time": "2013-05-30T22:46:42Z"}, {"text": "Are there any objections to using libusb since our license policy now allows for LGPL code to be dynamically linked?", "author": "bdahl@mozilla.com", "id": 7850609, "time": "2013-09-11T20:52:54Z"}, {"text": "Thats a question for the license wrangler. Gerv, how does LGPL work for us?", "author": "gal@uci.edu", "id": 7850743, "time": "2013-09-11T21:24:46Z"}, {"text": "I was basing the above on Gerv's comment:\nhttps://groups.google.com/d/msg/mozilla.dev.platform/-xTei5rYThU/9q4tstT6BBsJ\nand\nhttp://www.mozilla.org/MPL/license-policy.html", "author": "bdahl@mozilla.com", "id": 7850987, "time": "2013-09-11T22:22:14Z"}, {"text": "LGPL works for us as long as the code is in a discrete dynamically-linked library. If you want to do something other than that, at the very least it would require more analysis.\n\nGerv", "author": "gerv@mozilla.org", "id": 7852820, "time": "2013-09-12T09:52:52Z"}, {"text": "Is this project still ongoing? I am interested in joining the development of WebUSB.", "author": "ckjboy2003@gmail.com", "id": 8176643, "time": "2013-12-10T09:12:17Z"}, {"text": "(In reply to Sam Lin from comment #50)\n> Is this project still ongoing?\n\nhttp://whatwg.github.io/serial/ seems relevant.", "author": "hsivonen@hsivonen.fi", "id": 8176954, "time": "2013-12-10T11:17:47Z"}, {"text": "Is there any one who also like to contribute on this bug?  Sam had told to me that he would like to contribute his spare time on this bug.  Since this bug is not on the list of our milestone and not schedule stressing, I suggest to let Sam start implement this for b2g and Linux desktop along the road started by Andreas if no one have concern.", "author": "thinker.li@gmail.com", "id": 8177320, "time": "2013-12-10T13:50:09Z"}, {"text": "I'm willing to spend time on this. I work on the gaia side of things but been following this bug for a while. Who is the proper person to mentor this bug?", "author": "dmarcos@mozilla.com", "id": 8177757, "time": "2013-12-10T15:39:37Z"}, {"text": "I can mentor this one. That said, there are a LOT of decisions to be made here before work begins, because I don't really get the general direction of this API at the moment.\n\nWe haven't had any decisions on the types of USB messages we're interested in handling, whether this should just ship bulk/interrupt messages, resembling a reduced driver like WinUSB, or whether we want class compliancy, what platforms we'll be supporting first, etc. We need some good use cases first before we can start on this. The security on it is going to be a very special nightmare too.\n\nWhile many people use serial USB adapters these days, I don't think WebSerial and WebUSB overlap.", "author": "kyle@nonpolynomial.com", "id": 8178281, "time": "2013-12-10T17:25:02Z"}, {"text": "I have interest on this bug for a specific use case. I want to be able to talk to this kind of boards from JavaScript:\n\nhttp://www.adafruit.com/products/563#Description\n\nMy goal is to port to Firefox OS a hardware accessory I developed for Android.\n\nKyle where do you suggest me to start looking to make this happen?", "author": "dmarcos@mozilla.com", "id": 8178397, "time": "2013-12-10T17:43:12Z"}, {"text": "Diego, check out http://github.com/whatwg/serial. It's not a panacea, but the project idea was borne out of \"I wanna javascript my arduino\"\n\nThe question of what arduino is going to look like is interesting since I believe they're using the HID raw report hack on their newer boards to bypass things like ftdi driver installation. That's not really serial anymore, heh.\n\nThat said, supporting the arduino would be supporting descriptor parsing and certain interrupt packets to deal with HID raw report reading, which is not \"supporting USB\", it's \"supporting a tiny subset of USB\". That's why I'm wanting better definitions of exactly what WebUSB is supposed to be before people run off to start coding.", "author": "kyle@nonpolynomial.com", "id": 8178441, "time": "2013-12-10T17:55:17Z"}, {"text": "For those interested in WebSerial (which as :qdot points out may not be the same work as WebUSB), related discussion for more background:\n\nhttps://groups.google.com/forum/#!topic/mozilla.dev.webapi/wykkibp6BKo/discussion", "author": "jrburke@gmail.com", "id": 8178475, "time": "2013-12-10T18:02:44Z"}, {"text": "A big problem you have to address is how your goals for an API like WebUSB interact with platform constraints. If you're not interested in supporting Windows users (this seems unlikely), you have a lot more options because the OS X USB stack (Based on what Andreas Gal told me, at least) is extremely flexible and you can easily use libusb on Linux-based devices. The Windows USB model is extremely restrictive (especially if you are trying to work from user-mode) and each new Windows release makes driver signing a bigger headache. The kernel model for USB drivers and device driver installation, etc. is not designed to make WebUSB or something like it easy to implement. In practice you may end up having to write a USB filter driver that filters all USB traffic in order to be able to interact with a given device. IIRC this is already done by VMs for Windows (virtualbox, vmware, etc.), but it is not particularly well documented and you will not find any help on NT kernel development lists or MSDN.\n\nIf you're willing to constrain the API in particular ways you might be able to make it a relatively simple challenge. For example, if the model is closer to 'install this website as a driver for this physical device', I believe it would be fairly simple to implement that on all major platforms.", "author": "kg@luminance.org", "id": 8180740, "time": "2013-12-11T00:38:45Z"}, {"text": "(In reply to Diego Marcos from comment #53)\n> I'm willing to spend time on this. I work on the gaia side of things but\n> been following this bug for a while. Who is the proper person to mentor this\n> bug?\n\nWould you also work on gecko side, or just gaia side apps?\nJust like Kyle had mentioned, this bug is not for specific application of USB.  If you expect to work on serial connection between devices, you should go to WebSerial bug.\n\nSam would start this bug and I will mentor since we are at the same city.  He will start by exposing attach/detach and devices info messages.  Then, expose more information and APIs.  The target is to expose an API for implementing gadgets and device drivers.  This bug should be a meta bug.  I will open more bugs to bite them piece by piece.  So, people is easy to contribute their spare time on this subject.", "author": "thinker.li@gmail.com", "id": 8180963, "time": "2013-12-11T01:36:47Z"}, {"text": "(In reply to Thinker Li [:sinker] from comment #59)\n> (In reply to Diego Marcos from comment #53)\n> > I'm willing to spend time on this. I work on the gaia side of things but\n> > been following this bug for a while. Who is the proper person to mentor this\n> > bug?\n> \n> Would you also work on gecko side, or just gaia side apps?\n> Just like Kyle had mentioned, this bug is not for specific application of\n> USB.  If you expect to work on serial connection between devices, you should\n> go to WebSerial bug.\n> \n> Sam would start this bug and I will mentor since we are at the same city. \n> He will start by exposing attach/detach and devices info messages.  Then,\n> expose more information and APIs.  The target is to expose an API for\n> implementing gadgets and device drivers.  This bug should be a meta buIg.  I\n> will open more bugs to bite them piece by piece.  So, people is easy to\n> contribute their spare time on this subject.\n\nI can work wherever is needed. Gecko/Gaia/Gonk. My goal is having a gaia app talking to my hardware accesssory. I just want to better understand what are the misssing pieces and find a starting point. Which one is the WebSerial bug?", "author": "dmarcos@mozilla.com", "id": 8180974, "time": "2013-12-11T01:43:47Z"}, {"text": "Created attachment 8345646\nlibusb.patch\n\nI'm not actively working on this, but I hacked up a quick proof of concept using libusb that could be useful.  Currently all it does is print the list of connected devices to the terminal when you call USB.getDevices().  The libusb code comes from chromium's libusb and I ported over the bare minimum of their gyp file to our moz build system to get it to build on OSX. If you're on another platform you'll need to port more.\n\nOne thing I didn't realize at the time of creating this, is that libusb does not provide a way to notify you when a device is connected. We'd either have to poll or (ideally)hook into the various platform specific notifications.", "author": "bdahl@mozilla.com", "id": 8181020, "time": "2013-12-11T02:04:36Z"}, {"text": "I will start working on this bug. Since Thinker will be a mentor and he will divide this bug to some pieces, I will do this step by step.", "author": "ckjboy2003@gmail.com", "id": 8181280, "time": "2013-12-11T03:46:04Z"}, {"text": "Ok, you're using FxOS terms, not Firefox Desktop terms, so it sounds like you want to do a FxOS USB implementation. That's a whole different deal, especially since it needs to deal with gadget/OTG stuff.\n\nCan you make a FxOS USB API metabug that blocks this then? There's a ton of history about cross platform USB here already, I'd rather not see this bug hijacked for a single platform that didn't even really exist when the bug was started.", "author": "kyle@nonpolynomial.com", "id": 8181781, "time": "2013-12-11T07:39:21Z"}, {"text": "(In reply to Kyle Machulis [:kmachulis] [:qdot] from comment #63)\n> Ok, you're using FxOS terms, not Firefox Desktop terms, so it sounds like\n> you want to do a FxOS USB implementation. That's a whole different deal,\n> especially since it needs to deal with gadget/OTG stuff.\n> \n> Can you make a FxOS USB API metabug that blocks this then? There's a ton of\n> history about cross platform USB here already, I'd rather not see this bug\n> hijacked for a single platform that didn't even really exist when the bug\n> was started.\n\nI created a new bug to track USB API work specific to Firefox OS\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=949215\n\nWho are the experts in the room that could give me some directions to get started?", "author": "dmarcos@mozilla.com", "id": 8185383, "time": "2013-12-11T23:04:40Z"}, {"text": "(In reply to K. Gadd (:kael) from comment #58)\n> The Windows\n> USB model is extremely restrictive (especially if you are trying to work\n> from user-mode) and each new Windows release makes driver signing a bigger\n> headache.\n\nVirtualBox has generic USB bridging from a Windows 8.1 host to a Linux guest. How does that work? Can we use whatever mechanism VirtualBox uses on Windows (not the same GPL code but the same approach to Windows APIs)?", "author": "hsivonen@hsivonen.fi", "id": 8192611, "time": "2013-12-13T08:46:49Z"}, {"text": "I believe VirtualBox uses a filter driver like I described, but the last time I looked I was unable to find the source for it in their repository. As long as you manage to sign the filter and make sure it's stable, it would be an adequate solution for most WebUSB use cases, I think.", "author": "kg@luminance.org", "id": 8192975, "time": "2013-12-13T11:02:05Z"}, {"text": "I think USB support is only part of their \"extension\" which bundles proprietary stuff. They are not willing or cannot release the USB driver source code.", "author": "fb+mozdev@quantumedia.de", "id": 8193211, "time": "2013-12-13T12:50:36Z"}, {"text": "Any news about this?", "author": "mte90net@gmail.com", "id": 8888899, "time": "2014-06-05T13:47:30Z"}, {"text": "Yes, I am acturally working on this and hopefully could submit a quick patch in a couple of weeks.", "author": "ckjboy2003@gmail.com", "id": 8920570, "time": "2014-06-12T08:32:19Z"}, {"text": "WOW i cheering for you!\nI need this API for a project about Open Web Apps and Arduino!", "author": "mte90net@gmail.com", "id": 8921517, "time": "2014-06-12T13:21:30Z"}, {"text": "(In reply to Sam Lin from comment #69)\n> Yes, I am acturally working on this and hopefully could submit a quick patch\n> in a couple of weeks.\n\nAre you working on this on github or moz hg? Would love to see what you've got going so far.", "author": "kyle@nonpolynomial.com", "id": 8923110, "time": "2014-06-12T17:40:12Z"}, {"text": "(In reply to Sam Lin from comment #69)\n> Yes, I am acturally working on this and hopefully could submit a quick patch\n> in a couple of weeks.\n\nBTW, you may want to post an intent to implement to the dev-platform and dev-webapi mailing lists, as many people that've worked on this before may be interested in commenting or helping. See the template email at:\n\nhttps://wiki.mozilla.org/WebAPI/ExposureGuidelines", "author": "kyle@nonpolynomial.com", "id": 8933098, "time": "2014-06-16T07:24:34Z"}, {"text": "One obstacle to this feature that's important to keep in mind: Windows is the most difficult platform to implement this on, due to the signing & device support architecture it uses. Signed 'device for anything' drivers are very difficult (if not impossible) to implement, which means that the best solution might actually be a USB filter driver. USB filter drivers are *very* tricky to implement correctly and when I worked on this I was not able to find any open source examples of a functioning (let alone reliable) USB filter driver for Win32 that would work on modern (Win7, Win8, etc) Windows kernels.\n\nImplementing this feature on Linux and MacOS may be enough to solve a subset of user challenges but it's worth making sure your design and approach will be possible to implement on Windows.\n\nIf memory serves, the best candidate for a Windows solution was to install a custom signing key for drivers that Firefox would use to sign a custom driver for each device that WebUSB was going to manipulate. IIRC the windows variant of libusb (used by various utilities like custom Android device flashing tools) does something like this, where it custom-signs a version of the libusb driver that targets a specific device - and if memory serves, we couldn't use windows libusb due to a license conflict.\n\nGlad to answer questions and discuss design issues with anyone working on this.", "author": "kg@luminance.org", "id": 8933124, "time": "2014-06-16T07:32:41Z"}, {"text": "Is there still an intention to make this accessible via driveby?", "author": "ekr@rtfm.com", "id": 9135361, "time": "2014-08-03T23:05:50Z"}, {"text": "Yes, there is. I was expecting to submit a patch to here a month ago. However, due to some unexpected difficulties, the schedule is postponed. I will submit a patch to here as soon as I can.", "author": "ckjboy2003@gmail.com", "id": 9135458, "time": "2014-08-04T01:25:47Z"}, {"text": "(In reply to Sam Lin[:neopleo] from comment #75)\n> Yes, there is. I was expecting to submit a patch to here a month ago.\n> However, due to some unexpected difficulties, the schedule is postponed. I\n> will submit a patch to here as soon as I can.\n\nEnabling USB access via driveby seems quite dangerous. It's not really practical\nto explain to the user what the security impact of directly accessing random USB\ndevices is. This feature needs real security analysis before it lands.\n\nDoug, can you help arrange?", "author": "ekr@rtfm.com", "id": 9135538, "time": "2014-08-04T02:39:42Z"}, {"text": "Further reading:\nhttps://jscholarship.library.jhu.edu/bitstream/handle/1774.2/36569/camera.pdf", "author": "ekr@rtfm.com", "id": 9135550, "time": "2014-08-04T02:49:14Z"}, {"text": "Sorry that I misunderstood the meaning of \"driveby\".\n\nThe way that I implement WebUSB is folliwng the link \n\nhttps://wiki.mozilla.org/WebAPI/WebUSB which is probably not the way you mention in comment#74.", "author": "ckjboy2003@gmail.com", "id": 9135558, "time": "2014-08-04T02:54:19Z"}, {"text": "What I mean by \"driveby\" is that the API is accessible from the Web rather\nthan from installed apps (albeit ones written in JS). I don't see anything\non the page you link to about what kinds of JS would be able to access this\nAPI.", "author": "ekr@rtfm.com", "id": 9135594, "time": "2014-08-04T03:14:24Z"}, {"text": "there exists some NPAPI plugins who's sole purpose is to interact with USB devices.  I think that this API is probably a good thing as it allows us to kill of plugins (which is always a good thing).\n\nHOWEVER, exposing this to the web assumes that you can figure out the how to build a safe system that keeps the user in control and safe.  Big assumption.  I also think that figuring that part out is a lot harder then the plumbing.\n\nMoreover, the API you have listed in the bug and on our wiki is not enough.  Please take a look at what Google does for the ChromeBook:  https://developer.chrome.com/apps/usb.", "author": "doug.turner@gmail.com", "id": 9135735, "time": "2014-08-04T04:49:50Z"}, {"text": "One consistently terrifying thing here is that even if you have a\npermissions opt-in for 'USB', it's hard to present the breadth and\nrisk level of that USB opt-in to the user, because all you have is\nvendor/product IDs (as shown in the manifest part of Google's\ndocumentation) - one ID looks the same as another to the user. If you\nrequire confirmation you can at least try to display the device\ninformation there, but it's possible you won't have detailed enough\ninfo - many devices on a given USB bus will have innocuous/confusing\nnames, like how my webcam actually shows up as a generic USB hub, with\nthe important USB devices under it.\n\nAn attacker could easily request access to my webcam's hub (which\nwould just show up as 'generic usb hub'), and by claiming it, gain\naccess to my camera and microphone. I wouldn't notice unless I were\nalready using them at the time. Once the attacker had access they\ncould use some of the known-in-the-wild attacks that allow modifying\nor replacing a usb device's firmware in order to have control over my\nmachine long-term. Spooky.\n\nInterestingly Google's API doesn't appear to provide notifications to\ntell you that new devices have been connected, just an API to query\nexisting devices. That's something the API proposal on the mozilla\nwiki gets mostly right (though I'd argue that their 'enumerate then\nclaim' API is still superior - you do absolutely want notifications\ninstead of polling or looping, though.)", "author": "kg@luminance.org", "id": 9135749, "time": "2014-08-04T05:07:01Z"}, {"text": "(In reply to K. Gadd (:kael) from comment #81)\n> One consistently terrifying thing here is that even if you have a\n> permissions opt-in for 'USB', it's hard to present the breadth and\n> risk level of that USB opt-in to the user, because all you have is\n> vendor/product IDs (as shown in the manifest part of Google's\n> documentation) - one ID looks the same as another to the user. If you\n> require confirmation you can at least try to display the device\n> information there, but it's possible you won't have detailed enough\n> info - many devices on a given USB bus will have innocuous/confusing\n> names, like how my webcam actually shows up as a generic USB hub, with\n> the important USB devices under it.\n> \n> An attacker could easily request access to my webcam's hub (which\n> would just show up as 'generic usb hub'), and by claiming it, gain\n> access to my camera and microphone. I wouldn't notice unless I were\n> already using them at the time. Once the attacker had access they\n> could use some of the known-in-the-wild attacks that allow modifying\n> or replacing a usb device's firmware in order to have control over my\n> machine long-term. Spooky.\n\nI think this last is the important point. You might *intend* to grant\naccess to your WebCAM and *actually* grant access to your WebCam but\nthen find that the attacker has reprogrammed it and now has log\nterm access. Until we resolve this issue, I think allowing driveby\naccess is a nonstarter. Rather, this should be treated like installing\na new app.\n\n\n\n> Interestingly Google's API doesn't appear to provide notifications to\n> tell you that new devices have been connected, just an API to query\n> existing devices. That's something the API proposal on the mozilla\n> wiki gets mostly right (though I'd argue that their 'enumerate then\n> claim' API is still superior - you do absolutely want notifications\n> instead of polling or looping, though.)", "author": "ekr@rtfm.com", "id": 9137194, "time": "2014-08-04T14:28:57Z"}, {"text": "any news for this?", "author": "mte90net@gmail.com", "id": 9412063, "time": "2014-10-07T09:28:29Z"}, {"text": "I've done the git pull in my local source and got some unexpected errors.\n\nI will fix these and upload a patch.", "author": "ckjboy2003@gmail.com", "id": 9412424, "time": "2014-10-07T10:19:22Z"}, {"text": "The latest Nightly can be built but can not be launched normally.\nHence, I can merge my code to the latest build and create a patch as soon as it get fixed.", "author": "ckjboy2003@gmail.com", "id": 9423766, "time": "2014-10-09T06:16:47Z"}, {"text": "I've followed the spec defined in the following link to create this API.\n\nhttps://wiki.mozilla.org/WebAPI/WebUSB\n\nThe implementation is still buggy so apply this patch at your own risk. : )\n\n=======================================================\nThe working environment:\n\nOS: Ubuntu 12.10 64 bit\nThe commit number I did the git pull last time: 9764e19e067e8e5 (10/5)\n=======================================================\n\n=======================================================\nWhen you launch the Nightly,\n\n\nCurrent status:\n\nThe system can listen to the usb product ID. \nWhen you attach the usb device to the host, you can find out the console shows the ProductID: xxxx\n\n1. You can create an object. \n   var usbm = new MozUSBManager();\n\n2. Once you know your usb product id, you can do:\n   usbm.claimDevice(\"xxxx\"); which xxxx is your product id.\n   If it is matched, you will see some messages shown on your console.\n\n3. I've added part of addEventListener callback to the source but not yet fully implment that function.\n   So DO NOT try the callback for now.\n========================================================\n\nTODOs:\n\n1. Multi processes can listen to different usb devices.\n\n2. Callback function implementation. (attach, detach)\n\n3. Adding the descriptor as an argument in claimDevice function.", "author": "ckjboy2003@gmail.com", "id": 9460877, "time": "2014-10-17T08:57:24Z"}, {"text": "Created attachment 8506753\n0001-WebUSB-v1.patch\n\nI've followed the spec defined in the following link to create this API.\n\nhttps://wiki.mozilla.org/WebAPI/WebUSB\n\nThe implementation is still buggy so apply this patch at your own risk. : )\n\n=======================================================\nThe working environment:\n\nOS: Ubuntu 12.10 64 bit\nThe commit number I did the git pull last time: 9764e19e067e8e5 (10/5)\n=======================================================\n\n=======================================================\nWhen you launch the Nightly,\n\n\nCurrent status:\n\nThe system can listen to the usb product ID. \nWhen you attach the usb device to the host, you can find out the console shows the ProductID: xxxx\n\n1. You can create an object. \n   var usbm = new MozUSBManager();\n\n2. Once you know your usb product id, you can do:\n   usbm.claimDevice(\"xxxx\"); which xxxx is your product id.\n   If it is matched, you will see some messages shown on your console.\n\n3. I've added part of addEventListener callback to the source but not yet fully implment that function.\n   So DO NOT try the callback for now.\n========================================================\n\nTODOs:\n\n1. Multi processes can listen to different usb devices.\n\n2. Callback function implementation. (attach, detach)\n\n3. Adding the descriptor as an argument in claimDevice function.", "author": "ckjboy2003@gmail.com", "id": 9460884, "time": "2014-10-17T08:59:32Z"}, {"text": "any news for this API?", "author": "mte90net@gmail.com", "id": 10401488, "time": "2015-06-17T19:35:11Z"}, {"text": "FYI, I have been working on a Unofficial Draft Specification for something like this:\n\nhttps://reillyeon.github.io/webusb/\n\nIt is currently being implemented (behind a flag) in Chromium. Comments on the design are welcome and can be submitted through the GitHub issue tracker. Of note is the \"Device Requirements\" section which describes a protocol for devices to describe something akin to Content Security Policy which I hope will mitigate the concerns over drive-by attacks mentioned above.\n\nThe Windows driver loading issue can be resolved on Windows 8.1 and above by using Microsoft OS 2.0 Descriptors: http://go.microsoft.com/fwlink/p/?linkid=306681", "author": "reillyg@chromium.org", "id": 10757074, "time": "2015-09-21T19:51:10Z"}, {"text": "So looking at: https://reillyeon.github.io/webusb/ in section 3 it says:\n\n\"To be supported by a page using this API a USB device MUST provide information to the UA about the origins authorized to connect to it and MAY also provide a landing page that the UA MAY direct the user to navigate to in order to interact with the device.\"\n\nSo can this information also come from someplace other than the device itself? Otherwise it seems kind of difficult to connect to anything that wasn't specifically designed to be accessed by the the \"web\".\n\nI guess I'd like to be able to specify somehow that any device on my local network is allowed to access the USB device attached to this computer without the device having to be aware of the fact.", "author": "dhylands@mozilla.com", "id": 10758406, "time": "2015-09-22T01:10:55Z"}, {"text": "That is intentional. Devices shipping today are not secure enough to be accessed by the web. As mentioned in comment 81 user prompting for arbitrary devices is just not sufficient to mitigate the security risk.\n\nFor testing purposes the UA could provide a settings UI that overrides the WebUSB Descriptors (or lack there of) returned by a device. I'm still concerned malicious sites could social engineer their way around this.\n\nFor manufacturers who want to opt in the idea of a \"public device registry\" is that the owner of the vendor ID (which are assigned by the USB-IF) could provide mapping from vendor ID/product ID pairs to allowed origins. How such a registry would be managed is to be determined.", "author": "reillyg@chromium.org", "id": 10758439, "time": "2015-09-22T01:25:07Z"}, {"text": "(In reply to Reilly Grant from comment #91)\n> For testing purposes the UA could provide a settings UI that overrides the\n> WebUSB Descriptors (or lack there of) returned by a device. I'm still\n> concerned malicious sites could social engineer their way around this.\n\nSocial engineering is a perfectly valid concern, but making this process overly complicated and/or obscure could seriously hurt adoption of the technology (as early devices definitely won't be shipping with built in WebUSB support, and all the devices out there obviously won't have any, either).\n\nI can imagine a kind of add-on plug for the connector (as in, physical hardware, an inexpensive add-on between the device and the host machine) that could be used to serve the appropriate headers, and results in an express consent from the user side (basically a physical http://crossorigin.me/-equivalent). This would, on the other hand similarly hurt early adoption, and since this device would have to be either created (which requires skills) or ordered by the user, could also pose other security issues (MITM/spyware/rootkit code hiding in the firmware of the plug).\n\nTL;DR: I think early platform adopters should be provided a sufficiently unconvoluted way to use their existing devices on the web for the technology to be able to gain traction and other security-related practices (like the public device registry mentioned above) to be viable & needed.", "author": "bugzilla@flaki.hu", "id": 11143766, "time": "2016-02-06T12:32:40Z"}, {"text": "Renamed this bug, as it's confusing people who are looking for the W3C version of this API. Also, can we close this as \"won't fix\" or is the community going to keep working on this?", "author": "mcaceres@mozilla.com", "id": 11254039, "time": "2016-03-17T02:10:18Z"}, {"text": "The implementation of the W3C version have a ticket?\nAs i can see for the Firefox OS api there is another ticket https://bugzilla.mozilla.org/show_bug.cgi?id=949215", "author": "mte90net@gmail.com", "id": 11254925, "time": "2016-03-17T10:57:45Z"}, {"text": "*** Bug 949215 has been marked as a duplicate of this bug. ***", "author": "mcaceres@mozilla.com", "id": 11262679, "time": "2016-03-21T06:59:39Z"}, {"text": "(In reply to Daniele \"Mte90\" Scasciafratte from comment #94)\n> The implementation of the W3C version have a ticket?\n\nNo, as we don't (yet) have any plans to implement it. We need to evaluate the privacy/security aspects, but given that we are not doing bluetooth because of those concerns... it seems pretty unlikely that we will do USB.  \n\n> As i can see for the Firefox OS api there is another ticket\n> https://bugzilla.mozilla.org/show_bug.cgi?id=949215\n\nClosed as dup of this one.", "author": "mcaceres@mozilla.com", "id": 11262680, "time": "2016-03-21T07:00:01Z"}, {"text": "(In reply to Marcos Caceres [:marcosc] from comment #96)\n> (In reply to Daniele \"Mte90\" Scasciafratte from comment #94)\n> > The implementation of the W3C version have a ticket?\n> \n> No, as we don't (yet) have any plans to implement it. We need to evaluate\n> the privacy/security aspects, but given that we are not doing bluetooth\n> because of those concerns... it seems pretty unlikely that we will do USB.  \n\nMarcos, is there a bug or thread about the bluetooth decision? And where will any conversation/decisions about USB will happen? Thanks!", "author": "dietrich@mozilla.com", "id": 11263910, "time": "2016-03-21T15:53:58Z"}, {"text": "(In reply to Dietrich Ayala (:dietrich) from comment #97)\n> (In reply to Marcos Caceres [:marcosc] from comment #96)\n> > (In reply to Daniele \"Mte90\" Scasciafratte from comment #94)\n> > > The implementation of the W3C version have a ticket?\n> > \n> > No, as we don't (yet) have any plans to implement it. We need to evaluate\n> > the privacy/security aspects, but given that we are not doing bluetooth\n> > because of those concerns... it seems pretty unlikely that we will do USB.  \n> \n> Marcos, is there a bug or thread about the bluetooth decision?\n\nNo. It's verbal per Johnny Stenback.\n\n\n>  And where\n> will any conversation/decisions about USB will happen? Thanks!", "author": "ekr@rtfm.com", "id": 11264003, "time": "2016-03-21T16:15:06Z"}, {"text": "> No. It's verbal per Johnny Stenback.\n\n\nWhat ekr said :)", "author": "mcaceres@mozilla.com", "id": 11265699, "time": "2016-03-22T00:10:59Z"}, {"text": "Tried to apply attachment 4 on Gecko 37 but failed. I have 2 questions:\n1.Could anyone tell me which branch the patches work on? I can't find the parent commit of attachment 4 in Gecko 37.\n2.attachment 4 seems updated to include previous patches excpet attachment 3 and I can ignore attachment 1 and attachment 2. Am I right?\nAppreciate for any suggestion.", "author": "jeff.cy.chuang@gmail.com", "id": 11266020, "time": "2016-03-22T04:03:01Z"}, {"text": "(In reply to Jeff Chuang from comment #100)\n> Tried to apply attachment 4 on Gecko 37 but\n> failed. I have 2 questions:\n> 1.Could anyone tell me which branch the patches work on? I can't find the\n> parent commit of attachment 4 in Gecko 37.\nIt was my mistake and the parent commit could be found on master branch.", "author": "jeff.cy.chuang@gmail.com", "id": 11266784, "time": "2016-03-22T10:26:46Z"}, {"text": "Hi Sam Lin,\nI have tried the patch, 0001-WebUSB-v1.patch, but I can't found the file \"libudev.so.0\u0000\" which is listed in the patch.\nDo you have any comment\uff1f\uff1f", "author": "u4710984@gmail.com", "id": 11292833, "time": "2016-04-01T01:26:39Z"}, {"text": "The size of libudev.so.0 created by the patch is zero. I found an android repository of libudev and may help on this: https://github.com/chombourger/android-udev", "author": "jeff.cy.chuang@gmail.com", "id": 11303336, "time": "2016-04-06T01:29:39Z"}, {"text": "Created attachment 8739344\nSoftware structure of 0001-WebUSB-v1.patch\n\nI draw it to represent the relationship of modules in Sam's implementations and I am not sure whether I misunderstood it or not. I can't figure out the following points yet:\n1.How the function UsbThreadImpl::Observe() is invoked?\n2.What role does nsLayoutModule play in this implementation?\n3.Where to find the information/reference codes about how to add the implementation of the function addListener()?\nAppreciate for any suggestions!", "author": "jeff.cy.chuang@gmail.com", "id": 11310381, "time": "2016-04-08T08:23:16Z"}, {"text": "Closing as WONTFIX since FxOS is no more.", "author": "annevk@annevk.nl", "id": 12557447, "time": "2017-08-11T10:25:49Z"}, {"text": "*** Bug 711613 has been marked as a duplicate of this bug. ***", "author": "annevk@annevk.nl", "id": 12557450, "time": "2017-08-11T10:26:17Z"}, {"text": "Chrome WebUSB support will be released in next version (61). Is there a plan to add this into Firefox too? This is really important for Smartcard, scanner etc usb devices:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=492204&desc=2", "author": "support@toremote.com", "id": 12558155, "time": "2017-08-11T14:52:39Z"}, {"text": "No such plan exists. We do plan to implement https://w3c.github.io/webauthn/ which is tracked elsewhere.", "author": "annevk@annevk.nl", "id": 12558170, "time": "2017-08-11T14:58:36Z"}, {"text": "It'll be really great if Firefox can support web usb too. Our application (HTML5 RDP) need this for Smartcard and other USB devices redirection.\n\nThis is also probably the last thing we need to replace the OS with browser.", "author": "support@toremote.com", "id": 12558449, "time": "2017-08-11T16:17:19Z"}, {"text": "+1\n\nguys, let's get this rolled out. it'll be a huge help for devs struggling with USB devices and workarounds.", "author": "laszlo@karolyi.hu", "id": 12629206, "time": "2017-09-05T12:02:33Z"}, {"text": "Please reconsider adding WebUSB to Firefox. Not adding it will hurt Firefox adoption rate similarly as hesitating to add U2F support in the past.", "author": "stick@gk2.sk", "id": 12911862, "time": "2017-12-10T21:08:59Z"}, {"text": "I totally agree with Pavol.\n\nToday people workaround this by deploying local modules.\nThose modules will never meet the highest security standards and are a huge burden on developers shoulders.\n\nMoreover, I don't see what is the issue (except a resource issue maybe) since chrome adopted the spec.\nWe are more and more tempted to encourage our user base to use Chrome instead of Firefox because of this.", "author": "reda.housnialaoui@gmail.com", "id": 12914192, "time": "2017-12-11T18:41:15Z"}, {"text": "+1 for this.\nWebUSB in Chrome is very convenient, if you have an USB device and you don't want to pack desktop apps for multiple platforms.", "author": "peter@pkuhar.com", "id": 13060217, "time": "2018-02-22T06:03:43Z"}, {"text": "+1 for this.", "author": "eldan@transmitsecurity.com", "id": 13178541, "time": "2018-04-04T05:11:56Z"}, {"text": "+1 for this.\n\nPlease reconsider adding WebUSB to Firefox.\n\nWebUSB is now available as default in Chrome and is about to be an essential feature as many traditional platform dependent aplications are urging to enter the realm of Web apps.\n\nToday developers strugle with terrible plugin based hardware interfaces and Chrome's WebUSB is working like a charm. The need of costum plugins to intarface with USB in Firefox is a NO-GO for most applications.", "author": "henrique.latorre@geraestec.com.br", "id": 13221517, "time": "2018-04-20T14:39:36Z"}, {"text": "Please add this feature to make WebUSB a reality, if they do the other implementers will join. In Chorme it is already enabled by default.", "author": "rene.olivo33@gmail.com", "id": 13271128, "time": "2018-05-11T16:19:14Z"}, {"text": "Per the guidelines in https://bugzilla.mozilla.org/page.cgi?id=restrict_comments_guidelines.html we are restricting comments for this bug to people in the EDITBUGS group.\n\nMultiple \"Me Too!\" comments in bugs only add noise and will not affect triage decisions regarding the bug. Please see https://bugzilla.mozilla.org/page.cgi?id=etiquette.html.\n\nWith respect to WebUSB, see the discussion at https://github.com/mozilla/standards-positions/issues/58\n\nThank you, \n\nEmma Humphries, EPM Firefox/Bugmaster", "author": "ehumphries@mozilla.com", "id": 13272113, "time": "2018-05-12T00:06:37Z"}], "id": 674718, "priority": "--", "cc": ["7raivis@inbox.lv", "akligman@mozilla.com", "alan.kligman@gmail.com", "alexander.salas@gmail.com", "annevk@annevk.nl", "antoine.mozilla@gmail.com", "asmodeusme@yahoo.com", "a_unger@gmx.de", "balbif@gmail.com", "baptiste.millemathias@gmail.com", "bdahl@mozilla.com", "ben.vanik@gmail.com", "benjamin.c.kuo@gmail.com", "benjamin@smedbergs.us", "bent.mozilla@gmail.com", "bfrancis@mozilla.com", "blue119@gmail.com", "brendan@mozilla.org", "bugzilla@flaki.hu", "bugzilla@mikeh.zone", "cdiehl@mozilla.com", "changyihsin@gmail.com", "ckjboy2003@gmail.com", "cpeterson@mozilla.com", "crosser@average.org", "curtisk@mozilla.com", "david.herman@gmail.com", "david.humphrey@senecacollege.ca", "davida@mozillafoundation.org", "deprecationmail@gmail.com", "dhylands@mozilla.com", "dietrich@mozilla.com", "diogo.gmt@gmail.com", "dmarcos@mozilla.com", "dolske@mozilla.com", "doug.turner@gmail.com", "dpreston@mozilla.com", "ehsan@mozilla.com", "ein.hacker@gmail.com", "ekr@rtfm.com", "eldan@transmitsecurity.com", "elin@mozilla.com", "fabrice@desre.org", "fb+mozdev@quantumedia.de", "fredy@fredy.gr", "fscholz@mozilla.com", "gavin.sharp@gmail.com", "gh4ck3r@gmail.com", "giles@thaumas.net", "henrique.latorre@geraestec.com.br", "hsivonen@hsivonen.fi", "ignisvulpis@gmail.com", "ivan.enderlin@hoa-project.net", "jho@mozilla.com", "jmathies@mozilla.com", "joeking11829@gmail.com", "jorendorff@mozilla.com", "jose@cognilab.com", "josh@joshmatthews.net", "jrburke@gmail.com", "jryans@gmail.com", "jscinoz@jscinoz.so", "jstenback+bmo@gmail.com", "kaichih.hu@gmail.com", "kairo@kairo.at", "kevin+bugzilla@grandon.org", "kg@luminance.org", "kyle@nonpolynomial.com", "lancelot@quantum.com.na", "laszlo@karolyi.hu", "lhansen@mozilla.com", "loic@cuguen.org", "maks@manichord.com", "markcapella@twcny.rr.com", "martin.thomson@gmail.com", "matjk7@gmail.com", "mcaceres@mozilla.com", "mcastelluccio@mozilla.com", "megabyte@kontek.net", "mkmelin+mozilla@iki.fi", "mounir@lamouri.fr", "moz@jeka.info", "mozilla@bryankaplan.com", "mozilla@stefan-neufeind.de", "mrbkap@mozilla.com", "mszpak@wp.pl", "mwu.code@gmail.com", "myk@mykzilla.org", "ngm+mozilla@google.com", "nhoj62003@gmail.com", "nuno.ponte@multicert.com", "olivier@labapart.com", "overholt@mozilla.com", "pawel+mozilla@kraszewscy.net", "philipp@weitershausen.de", "ratsbane@gmail.com", "rdrgwtrs@gmail.com", "reda.housnialaoui@gmail.com", "reillyg@chromium.org", "rene.olivo33@gmail.com", "robin@berjon.com", "robink@creosotehill.org", "saurabhanandiit@gmail.com", "sciguyryan@gmail.com", "sean@yak.net", "sonny.piers@gmail.com", "sotaro.ikeda.g@gmail.com", "spectre@floodgap.com", "sthugo@gmail.com", "stick@gk2.sk", "support@toremote.com", "syoichi@outlook.com", "taz@dattaz.fr", "ted@mielczarek.org", "thinker.li@gmail.com", "tikkanen@iki.fi", "ttaubert@mozilla.com", "u4710984@gmail.com", "u471321@disabled.tld", "u494301@disabled.tld", "u540843@disabled.tld", "vicamo@gmail.com", "waldron.rick@gmail.com", "webmaster@keryx.se", "william.wyliang@gmail.com", "willyaranda@mozilla-hispano.org", "xtc4uall@gmail.com"], "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [673923, 711613], "qa_contact": "", "creation_time": "2011-07-27T21:45:47Z", "cf_status_firefox_esr52": "---", "component": "DOM: Device Interfaces", "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "cf_blocking_basecamp": "-", "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "cjones.bugs@gmail.com", "id": 336288, "name": "cjones.bugs@gmail.com", "real_name": "Chris Jones [:cjones] inactive; ni?/f?/r? if you need me"}, "whiteboard": "", "mentors": [], "summary": "FirefoxOS USB", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"status": "?", "name": "sec-review", "modification_date": "2014-10-21T20:34:48Z", "type_id": 791, "creation_date": "2012-08-15T23:38:34Z", "id": 541848, "setter": "dveditz@mozilla.com"}], "last_change_time": "2018-05-12T00:06:37Z", "assigned_to": "nobody@mozilla.org", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "sciguyryan@gmail.com"}], "who": "sciguyryan@gmail.com", "when": "2011-07-27T21:49:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ask@swva.net"}], "who": "megabyte@kontek.net", "when": "2011-07-27T21:55:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "matjk7@gmail.com"}], "who": "matjk7@gmail.com", "when": "2011-07-27T21:57:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bent.mozilla@gmail.com, brendan@mozilla.org, jonas@sicking.cc, jst@mozilla.org, mrbkap@gmail.com"}], "who": "cjones.bugs@gmail.com", "when": "2011-07-27T22:20:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cdiehl@mozilla.com"}], "who": "cdiehl@mozilla.com", "when": "2011-07-27T22:58:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mounir@lamouri.fr"}, {"removed": "x86_64", "field_name": "platform", "added": "All"}, {"removed": "Linux", "field_name": "op_sys", "added": "All"}], "who": "mounir@lamouri.fr", "when": "2011-07-27T23:41:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fabrice@mozilla.com"}], "who": "fabrice@desre.org", "when": "2011-07-28T02:42:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "xtc4uall@gmail.com"}], "who": "xtc4uall@gmail.com", "when": "2011-07-28T11:02:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ted.mielczarek@gmail.com"}], "who": "ted@mielczarek.org", "when": "2011-07-28T11:17:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "geekshadow@gmail.com"}], "who": "antoine.mozilla@gmail.com", "when": "2011-07-29T19:04:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dherman@mozilla.com"}], "who": "brendan@mozilla.org", "when": "2011-07-30T06:41:36Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 549550, "added": "1"}], "who": "gal@uci.edu", "when": "2011-07-30T08:12:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gavin.sharp@gmail.com"}], "who": "gavin.sharp@gmail.com", "when": "2011-08-01T21:40:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kevin.gadd@gmail.com"}], "who": "kg@luminance.org", "when": "2011-08-01T21:56:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hsivonen@iki.fi"}], "who": "hsivonen@hsivonen.fi", "when": "2011-08-02T08:35:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jorendorff@mozilla.com"}], "who": "jorendorff@mozilla.com", "when": "2011-08-02T15:37:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ratsbane@gmail.com"}], "who": "ratsbane@gmail.com", "when": "2011-08-02T15:42:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "david.humphrey@senecac.on.ca"}], "who": "david.humphrey@senecacollege.ca", "when": "2011-08-02T16:06:42Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 549555, "added": "1"}], "who": "gal@uci.edu", "when": "2011-08-03T13:55:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "webmaster@keryx.se"}], "who": "webmaster@keryx.se", "when": "2011-08-05T10:09:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugzilla@zirro.se"}], "who": "deprecationmail@gmail.com", "when": "2011-08-11T14:19:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jmathies@mozilla.com"}], "who": "jmathies@mozilla.com", "when": "2011-08-16T19:30:22Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "680326"}], "who": "kg@luminance.org", "when": "2011-08-19T03:51:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "robin@berjon.com"}], "who": "robin@berjon.com", "when": "2011-08-25T15:18:16Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed"}, {"removed": "", "field_name": "cc", "added": "moz@jeka.info"}], "who": "moz@jeka.info", "when": "2011-09-30T23:30:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dolske@mozilla.com"}], "who": "dolske@mozilla.com", "when": "2011-10-03T01:51:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "giles@xiph.org"}], "who": "giles@thaumas.net", "when": "2011-10-03T04:53:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "philipp@weitershausen.de"}], "who": "philipp@weitershausen.de", "when": "2011-10-11T03:02:36Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "711613"}], "who": "jstraus@mozilla.com", "when": "2011-12-16T22:44:20Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "715784"}], "who": "cjones.bugs@gmail.com", "when": "2012-01-06T04:13:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "spectre@armory.com"}], "who": "spectre@floodgap.com", "when": "2012-01-17T18:07:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ben@krellian.com"}], "who": "bfrancis@mozilla.com", "when": "2012-01-27T12:00:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kyle@nonpolynomial.com"}], "who": "kyle@nonpolynomial.com", "when": "2012-01-27T20:42:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "thinker@codemud.net"}], "who": "thinker.li@gmail.com", "when": "2012-01-31T17:01:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "diogo.gmt@gmail.com"}], "who": "diogo.gmt@gmail.com", "when": "2012-02-09T04:41:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "slee@mozilla.com"}], "who": "sthugo@gmail.com", "when": "2012-03-05T03:44:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jho@mozilla.com"}], "who": "jho@mozilla.com", "when": "2012-03-05T04:06:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "willyaranda@mozilla-hispano.org"}], "who": "willyaranda@mozilla-hispano.org", "when": "2012-03-05T17:00:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "vyang@mozilla.com"}], "who": "vicamo@gmail.com", "when": "2012-03-08T02:29:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "vchang@mozilla.com"}], "who": "changyihsin@gmail.com", "when": "2012-03-13T09:13:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "atilag@gmail.com"}], "who": "atilag@gmail.com", "when": "2012-03-20T17:23:27Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "sec-review-needed"}], "who": "dveditz@mozilla.com", "when": "2012-03-21T23:18:22Z"}, {"changes": [{"removed": "", "field_name": "whiteboard", "added": "[secr:curtisk]"}], "who": "curtisk@mozilla.com", "when": "2012-03-28T21:18:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ivan.enderlin@hoa-project.net"}], "who": "ivan.enderlin@hoa-project.net", "when": "2012-04-04T14:38:30Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "749344"}], "who": "curtisk@mozilla.com", "when": "2012-04-26T20:31:48Z"}, {"changes": [{"removed": "[secr:curtisk]", "field_name": "whiteboard", "added": "[sec-assigned:curtisk:749344]"}], "who": "curtisk@mozilla.com", "when": "2012-04-26T20:32:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "khu@mozilla.com"}], "who": "kaichih.hu@gmail.com", "when": "2012-05-15T07:38:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dietrich@mozilla.com"}, {"removed": "715784", "field_name": "blocks", "added": ""}, {"removed": "[sec-assigned:curtisk:749344]", "field_name": "whiteboard", "added": "[sec-assigned:curtisk:749344][b2g:blocking-]"}], "who": "dietrich@mozilla.com", "when": "2012-05-29T20:29:37Z"}, {"changes": [{"removed": "---", "field_name": "cf_blocking_basecamp", "added": "-"}, {"removed": "[sec-assigned:curtisk:749344][b2g:blocking-]", "field_name": "whiteboard", "added": "[sec-assigned:curtisk:749344]"}], "who": "dietrich@mozilla.com", "when": "2012-05-31T18:24:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "balbif@gmail.com"}], "who": "balbif@gmail.com", "when": "2012-06-09T20:55:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sonny.piers@gmail.com"}], "who": "sonny.piers@gmail.com", "when": "2012-07-15T17:43:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "saurabhanandiit@gmail.com"}], "who": "saurabhanandiit@gmail.com", "when": "2012-07-17T18:55:20Z"}, {"changes": [{"removed": "sec-review-needed", "field_name": "keywords", "added": ""}, {"removed": "", "field_name": "cc", "added": "curtisk@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "sec-review?(curtisk@mozilla.com)"}], "who": "dveditz@mozilla.com", "when": "2012-08-15T23:38:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ikesodayo@gmail.com"}], "who": "sotaro.ikeda.g@gmail.com", "when": "2012-08-28T00:28:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "alexander.salas@gmail.com"}], "who": "alexander.salas@gmail.com", "when": "2012-09-11T13:36:31Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kairo@kairo.at"}], "who": "kairo@kairo.at", "when": "2012-09-17T14:33:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bezaleel360@gmail.com"}], "who": "asmodeusme@yahoo.com", "when": "2012-10-24T12:44:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fredy@freemail.gr"}], "who": "fredy@fredy.gr", "when": "2012-12-29T01:11:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mar.castelluccio@studenti.unina.it"}], "who": "mcastelluccio@mozilla.com", "when": "2013-02-02T02:51:04Z"}, {"changes": [{"removed": "", "field_name": "alias", "added": "webusb"}], "who": "cjones.bugs@gmail.com", "when": "2013-02-28T05:22:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mhabicher@mozilla.com"}], "who": "bugzilla@mikeh.zone", "when": "2013-02-28T21:28:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "akligman@mozilla.com"}], "who": "akligman@mozilla.com", "when": "2013-02-28T21:29:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dhylands@mozilla.com"}], "who": "dhylands@mozilla.com", "when": "2013-03-13T17:34:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dpreston@mozilla.com"}], "who": "dpreston@mozilla.com", "when": "2013-03-14T17:01:57Z"}, {"changes": [{"removed": "[sec-assigned:curtisk:749344]", "field_name": "whiteboard", "added": ""}], "who": "curtisk@mozilla.com", "when": "2013-04-08T20:55:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ehsan@mozilla.com"}], "who": "ehsan@mozilla.com", "when": "2013-04-13T22:09:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "a_unger@gmx.de"}], "who": "a_unger@gmx.de", "when": "2013-04-27T16:31:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ben.vanik@gmail.com"}], "who": "ben.vanik@gmail.com", "when": "2013-05-04T21:50:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jrburke@gmail.com"}], "who": "jrburke@gmail.com", "when": "2013-05-30T21:38:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "waldron.rick@gmail.com"}], "who": "waldron.rick@gmail.com", "when": "2013-05-31T03:42:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kgrandon@mozilla.com"}], "who": "kevin+bugzilla@grandon.org", "when": "2013-06-28T16:37:21Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "myk@mozilla.org"}], "who": "myk@mykzilla.org", "when": "2013-08-19T15:47:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "maks@manichord.com"}], "who": "maks@manichord.com", "when": "2013-08-28T02:18:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bdahl@mozilla.com"}], "who": "bdahl@mozilla.com", "when": "2013-09-11T18:31:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gerv@mozilla.org"}], "who": "gal@uci.edu", "when": "2013-09-11T21:24:46Z"}, {"changes": [{"removed": "gerv@mozilla.org", "field_name": "cc", "added": ""}], "who": "gerv@mozilla.org", "when": "2013-09-12T09:52:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dmarcos@mozilla.com"}], "who": "dmarcos@mozilla.com", "when": "2013-10-10T17:58:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fb+mozdev@quantumedia.de"}], "who": "fb+mozdev@quantumedia.de", "when": "2013-10-16T15:37:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ckjboy2003@gmail.com"}], "who": "ckjboy2003@gmail.com", "when": "2013-12-10T09:12:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mcaceres@mozilla.com"}], "who": "hsivonen@hsivonen.fi", "when": "2013-12-10T11:17:47Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kyle@nonpolynomial.com)"}], "who": "dmarcos@mozilla.com", "when": "2013-12-10T17:43:12Z"}, {"changes": [{"removed": "needinfo?(kyle@nonpolynomial.com)", "field_name": "flagtypes.name", "added": ""}], "who": "kyle@nonpolynomial.com", "when": "2013-12-10T17:55:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "benjamin@smedbergs.us"}], "who": "benjamin@smedbergs.us", "when": "2013-12-10T18:20:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "josh@joshmatthews.net"}], "who": "josh@joshmatthews.net", "when": "2013-12-10T20:00:20Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "948803"}], "who": "thinker.li@gmail.com", "when": "2013-12-11T06:00:02Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "949215"}], "who": "dmarcos@mozilla.com", "when": "2013-12-11T23:04:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "blue119@gmail.com"}], "who": "blue119@gmail.com", "when": "2013-12-19T12:46:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ttaubert@mozilla.com"}], "who": "ttaubert@mozilla.com", "when": "2013-12-21T20:20:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mte90net@gmail.com"}], "who": "mte90net@gmail.com", "when": "2014-06-05T13:47:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "davida@mozillafoundation.org"}], "who": "davida@mozillafoundation.org", "when": "2014-06-16T08:11:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "lhansen@mozilla.com"}], "who": "lhansen@mozilla.com", "when": "2014-06-16T08:26:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "william.wyliang@gmail.com"}], "who": "ckjboy2003@gmail.com", "when": "2014-06-16T09:17:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jeff.cy.chuang@gmail.com, u4710984@gmail.com"}], "who": "william.wyliang@gmail.com", "when": "2014-06-16T09:38:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ader.cch@gmail.com"}], "who": "ckjboy2003@gmail.com", "when": "2014-06-23T02:01:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "lancelot@quantum.com.na"}], "who": "lancelot@quantum.com.na", "when": "2014-07-09T15:47:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ekr@rtfm.com"}], "who": "ekr@rtfm.com", "when": "2014-07-15T21:31:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dougt@mozilla.com, martin.thomson@gmail.com"}], "who": "ekr@rtfm.com", "when": "2014-08-03T23:05:50Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dougt@mozilla.com)"}], "who": "ekr@rtfm.com", "when": "2014-08-04T02:39:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "syoichi@outlook.com"}], "who": "syoichi@outlook.com", "when": "2014-08-04T03:14:07Z"}, {"changes": [{"removed": "needinfo?(dougt@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "doug.turner@gmail.com", "when": "2014-08-04T04:49:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "overholt@mozilla.com"}], "who": "overholt@mozilla.com", "when": "2014-08-22T17:08:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "7raivis@inbox.lv"}], "who": "7raivis@inbox.lv", "when": "2014-09-14T18:08:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "joeking11829@gmail.com"}], "who": "ckjboy2003@gmail.com", "when": "2014-10-17T09:30:28Z"}, {"changes": [{"removed": "sec-review?(curtisk@mozilla.com)", "field_name": "flagtypes.name", "added": "sec-review?"}], "who": "curtisk@mozilla.com", "when": "2014-10-21T20:34:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rdrgwtrs@gmail.com"}], "who": "rdrgwtrs@gmail.com", "when": "2014-10-22T12:19:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mkmelin+mozilla@iki.fi"}], "who": "mkmelin+mozilla@iki.fi", "when": "2014-10-28T19:10:55Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "alan.kligman@gmail.com"}], "who": "akligman@mozilla.com", "when": "2014-11-27T01:56:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jose@cognilab.com"}], "who": "jose@cognilab.com", "when": "2014-12-07T00:27:37Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1029961"}], "who": "rdaub@mozilla.com", "when": "2014-12-17T07:18:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "loic@cuguen.org"}], "who": "loic@cuguen.org", "when": "2014-12-18T23:37:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mwu@mozilla.com"}], "who": "mwu.code@gmail.com", "when": "2014-12-19T23:54:32Z"}, {"changes": [{"removed": "1029961", "field_name": "blocks", "added": ""}], "who": "yfdyh000@gmail.com", "when": "2015-01-01T23:40:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "vmerlet@april.org"}], "who": "vmerlet@april.org", "when": "2015-01-07T13:47:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "taz@dattaz.fr"}], "who": "taz@dattaz.fr", "when": "2015-02-14T14:21:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gh4ck3r@gmail.com"}], "who": "gh4ck3r@gmail.com", "when": "2015-02-15T23:24:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "robink@creosotehill.org"}], "who": "robink@creosotehill.org", "when": "2015-03-01T03:58:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "azasypkin@mozilla.com"}], "who": "aleh.zasypkin@gmail.com", "when": "2015-03-18T11:10:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ngm+mozilla@google.com"}], "who": "ngm+mozilla@google.com", "when": "2015-03-23T22:29:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ignisvulpis@gmail.com"}], "who": "ignisvulpis@gmail.com", "when": "2015-04-05T09:53:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "elin@mozilla.com"}], "who": "elin@mozilla.com", "when": "2015-04-23T04:24:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "reillyg@chromium.org"}], "who": "reillyg@chromium.org", "when": "2015-09-21T19:51:10Z"}, {"changes": [{"removed": "ader.cch@gmail.com", "field_name": "cc", "added": ""}], "who": "ader.cch@gmail.com", "when": "2015-09-23T13:30:30Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "feature"}, {"removed": "", "field_name": "cc", "added": "cpeterson@mozilla.com"}, {"removed": "General", "field_name": "component", "added": "DOM: Device Interfaces"}, {"removed": "gal@uci.edu", "field_name": "assigned_to", "added": "nobody@mozilla.org"}], "who": "cpeterson@mozilla.com", "when": "2015-09-24T19:30:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mozilla@stefan-neufeind.de"}], "who": "mozilla@stefan-neufeind.de", "when": "2015-10-07T23:53:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ripleymj@jmu.edu"}], "who": "ripleymj@jmu.edu", "when": "2015-10-12T23:48:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jryans@gmail.com"}], "who": "jryans@gmail.com", "when": "2015-10-12T23:52:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sean@yak.net"}], "who": "sean@yak.net", "when": "2015-10-13T00:57:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "baptiste.millemathias@gmail.com"}], "who": "baptiste.millemathias@gmail.com", "when": "2015-10-13T01:52:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "pawel+mozilla@kraszewscy.net"}], "who": "pawel+mozilla@kraszewscy.net", "when": "2015-10-13T04:55:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "crosser@average.org"}], "who": "crosser@average.org", "when": "2015-10-13T07:59:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kaplan.bryan+mozilla@gmail.com"}], "who": "mozilla@bryankaplan.com", "when": "2015-10-13T17:34:07Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tikkanen@iki.fi"}], "who": "tikkanen@iki.fi", "when": "2015-10-13T21:57:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "olivier@labapart.com"}], "who": "olivier@labapart.com", "when": "2015-10-14T22:06:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rylee@rylee.me"}], "who": "u540843@disabled.tld", "when": "2015-10-19T03:14:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ein.hacker@gmail.com"}], "who": "ein.hacker@gmail.com", "when": "2015-10-20T02:10:31Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jscinoz@jscinoz.so"}], "who": "jscinoz@jscinoz.so", "when": "2015-10-20T03:55:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mszpak@wp.pl"}], "who": "mszpak@wp.pl", "when": "2015-10-22T16:01:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nuno.ponte@multicert.com"}], "who": "nuno.ponte@multicert.com", "when": "2015-10-23T08:50:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "simon@kegtux.org"}], "who": "u494301@disabled.tld", "when": "2015-10-30T10:03:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "contact@emersion.fr"}], "who": "contact@emersion.fr", "when": "2015-10-30T10:06:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "support@toremote.com"}], "who": "support@toremote.com", "when": "2015-11-24T13:51:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "samuel@samuelmoraes.com"}], "who": "u471321@disabled.tld", "when": "2015-11-28T14:47:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "markcapella@twcny.rr.com"}], "who": "markcapella@twcny.rr.com", "when": "2016-01-01T20:02:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugzilla@flaki.hu"}], "who": "bugzilla@flaki.hu", "when": "2016-02-06T12:05:06Z"}, {"changes": [{"removed": "WebUSB", "field_name": "summary", "added": "FirefoxOS USB"}], "who": "mcaceres@mozilla.com", "when": "2016-03-17T02:10:18Z"}, {"changes": [{"removed": "jonas@sicking.cc", "field_name": "cc", "added": ""}], "who": "jonas@sicking.cc", "when": "2016-03-17T03:52:15Z"}, {"changes": [{"removed": "contact@emersion.fr", "field_name": "cc", "added": ""}], "who": "contact@emersion.fr", "when": "2016-03-17T16:16:03Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcaceres@mozilla.com)"}], "who": "dietrich@mozilla.com", "when": "2016-03-21T15:54:25Z"}, {"changes": [{"removed": "needinfo?(mcaceres@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcaceres@mozilla.com", "when": "2016-03-22T00:10:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nhoj62003@gmail.com"}], "who": "nhoj62003@gmail.com", "when": "2016-03-22T07:41:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "benjamin.c.kuo@gmail.com"}], "who": "benjamin.c.kuo@gmail.com", "when": "2016-03-25T07:01:36Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(ckjboy2003@gmail.com)"}], "who": "u4710984@gmail.com", "when": "2016-04-01T01:26:39Z"}, {"changes": [{"removed": "jgomez@mozilla.com", "field_name": "cc", "added": ""}], "who": "atilag@gmail.com", "when": "2016-08-24T08:56:34Z"}, {"changes": [{"removed": "jeff.cy.chuang@gmail.com", "field_name": "cc", "added": ""}], "who": "jeff.cy.chuang@gmail.com", "when": "2017-03-06T01:58:00Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "cc", "added": "annevk@annevk.nl"}, {"removed": "", "field_name": "resolution", "added": "WONTFIX"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2017-08-11 10:25:49"}], "who": "annevk@annevk.nl", "when": "2017-08-11T10:25:49Z"}, {"changes": [{"removed": "mte90net@gmail.com", "field_name": "cc", "added": ""}], "who": "mte90net@gmail.com", "when": "2017-08-11T10:27:23Z"}, {"changes": [{"removed": "dev-doc-needed", "field_name": "keywords", "added": ""}, {"removed": "", "field_name": "cc", "added": "fscholz@mozilla.com"}], "who": "fscholz@mozilla.com", "when": "2017-08-11T11:19:08Z"}, {"changes": [{"removed": "webusb", "field_name": "alias", "added": ""}], "who": "annevk@annevk.nl", "when": "2017-08-11T14:58:58Z"}, {"changes": [{"removed": "ripleymj@jmu.edu", "field_name": "cc", "added": ""}], "who": "ripleymj@jmu.edu", "when": "2017-08-11T14:59:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "laszlo@karolyi.hu"}], "who": "laszlo@karolyi.hu", "when": "2017-09-05T12:02:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "stick@gk2.sk"}], "who": "stick@gk2.sk", "when": "2017-12-10T21:08:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "reda.housnialaoui@gmail.com"}], "who": "reda.housnialaoui@gmail.com", "when": "2017-12-11T18:41:15Z"}, {"changes": [{"removed": "vmerlet@april.org", "field_name": "cc", "added": ""}], "who": "vmerlet@april.org", "when": "2017-12-15T18:13:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "eldan@transmitsecurity.com"}], "who": "eldan@transmitsecurity.com", "when": "2018-04-04T05:11:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "henrique.latorre@geraestec.com.br"}], "who": "henrique.latorre@geraestec.com.br", "when": "2018-04-20T14:39:36Z"}, {"changes": [{"removed": "aleh.zasypkin@gmail.com", "field_name": "cc", "added": ""}], "who": "aleh.zasypkin@gmail.com", "when": "2018-04-20T21:46:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rene.olivo33@gmail.com"}], "who": "rene.olivo33@gmail.com", "when": "2018-05-11T16:19:14Z"}, {"changes": [{"removed": "", "field_name": "restrict_comments", "added": "1"}, {"removed": "needinfo?(ckjboy2003@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "ehumphries@mozilla.com", "when": "2018-05-12T00:06:37Z"}], "resolution": "WONTFIX", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}