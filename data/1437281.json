{"cf_tracking_thunderbird_esr52": "---", "status": "VERIFIED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "mikeyt@mac.com", "mentors_detail": [], "depends_on": [1448764], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "x86", "cf_status_firefox59": "---", "keywords": ["regression"], "cc_detail": [{"email": "alanzrx-bug@yahoo.com", "id": 614529, "name": "alanzrx-bug@yahoo.com", "real_name": ""}, {"email": "apple.macintosh.farm@gmail.com", "id": 388323, "name": "apple.macintosh.farm@gmail.com", "real_name": "Ryo"}, {"email": "bogdan.maris@softvision.ro", "id": 458188, "name": "bogdan.maris@softvision.ro", "real_name": "Bogdan Maris [:bogdan_maris], Release Desktop QA"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "chyi.zhao@gmail.com", "id": 512031, "name": "chyi.zhao@gmail.com", "real_name": "chyiz"}, {"email": "haftandilian@mozilla.com", "id": 558190, "name": "haftandilian@mozilla.com", "real_name": "Haik Aftandilian [:haik]"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mikeyt@mac.com", "id": 611802, "name": "mikeyt@mac.com", "real_name": "Michael"}, {"email": "nika@thelayzells.com", "id": 534482, "name": "nika@thelayzells.com", "real_name": ":Nika Layzell"}, {"email": "oana.botisan@softvision.ro", "id": 599255, "name": "oana.botisan@softvision.ro", "real_name": "Oana Botisan"}, {"email": "spohl.mozilla.bugs@gmail.com", "id": 456485, "name": "spohl.mozilla.bugs@gmail.com", "real_name": "Stephen A Pohl [:spohl]"}, {"email": "toneyvr@gmail.com", "id": 395129, "name": "toneyvr@gmail.com", "real_name": "Tony"}, {"email": "yodolphe@gmail.com", "id": 612389, "name": "yodolphe@gmail.com", "real_name": ""}], "cf_last_resolved": "2018-04-03T22:00:32Z", "attachments": [{"creator": "mikeyt@mac.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "image/jpeg", "id": 8949974}, {"creator": "haftandilian@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-23T18:58:38Z", "type_id": 4, "creation_date": "2018-03-15T15:14:06Z", "id": 1730032, "setter": "nika@thelayzells.com"}, {"status": "+", "name": "approval-mozilla-beta", "modification_date": "2018-04-12T12:09:46Z", "type_id": 721, "creation_date": "2018-04-10T16:03:37Z", "id": 1741814, "setter": "jcristau@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8955324}], "votes": 1, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 67, "comments": [{"text": "Created attachment 8949974\nScreen Shot 2018-02-10 at 12.33.03.jpg\n\nUser Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:58.0) Gecko/20100101 Firefox/58.0\nBuild ID: 20180128191252\n\nSteps to reproduce:\n\nSelect a JPG file on the desktop (OSX 10.10.5). Select GET INFO. File association shows \"Open with: Photoshop.app\"\n\nGo to firefox, drag image (jpg) from a website to tge desktop. Select GET INFO on the new file. File association now shows \"Open with: Preview.app\".\n\n\nActual results:\n\nBy dragging the file to the desktop from Firefox the file associations (for ALL jpg files) are changed to open in Apple Preview, overriding any saved settings in OSX. \n\nIncidentally, it also causes the file association for Photoshop PSD files to change so Adobe Illustrator instead of Photoshop.\n\nUsing fsevents I can see that when dragging the file to the desktop, a change is made to the com.apple.launchservices-1070501.csstore (stored in Private/Var/Folder/51/xxxxxx/C folder) so I assume that this is responsible for the OSX file associations being changed.\n\n\nExpected results:\n\nFirefox should not be overriding and permanently changing OSX file associations. This does not happen when using OSX 10.12.5", "author": "mikeyt@mac.com", "id": 13032736, "time": "2018-02-10T12:14:23Z"}, {"text": "Further comments. This issue also happens in OSX 10.9, but does not occur in OSX 10.12 or 10.13. Unknown as to 10.11.", "author": "mikeyt@mac.com", "id": 13032910, "time": "2018-02-10T16:21:21Z"}, {"text": "This sounds like a macOS bug that was fixed in 10.12, possibly 10.11. Could you run mozregression[1] to see if this is a regression in Firefox? If you have never run mozregression before, simply run these three commands in a Terminal window:\n\nsudo easy_install pip\nsudo pip2 install -U mozregression\nmozregression\n\nA number of Firefox versions will open in succession to narrow down when this started occurring. Simply type \"good\" or \"bad\" in Terminal based on whether or not a build reproduces the bug.\n\n[1] https://mozilla.github.io/mozregression/", "author": "spohl.mozilla.bugs@gmail.com", "id": 13032977, "time": "2018-02-10T17:54:40Z"}, {"text": "I can confirm this issue happening also with \nmacOS 10.13.3 (17D47) and FF 58.0.2", "author": "yodolphe@gmail.com", "id": 13054591, "time": "2018-02-20T15:45:39Z"}, {"text": "There is a discussion regarding this issue on the apple discussion boards - seems that many people are having this problem with Firefox 58 on all versions of OSX. The only solution so far seems to be removing and not using FF any more.\n\nhttps://discussions.apple.com/message/33052869?", "author": "mikeyt@mac.com", "id": 13054832, "time": "2018-02-20T17:00:16Z"}, {"text": "I don't have Photoshop installed. Does this reproduce if files are set to open in any other app? Or does this only affect Adobe products? I have been unable to reproduce this with apps such as Paintbrush, for example. If files are set to open in Paintbrush, they continue to be opened by Paintbrush after images are dragged from Firefox to the desktop.", "author": "spohl.mozilla.bugs@gmail.com", "id": 13055089, "time": "2018-02-20T18:21:31Z"}, {"text": "I can confirm the following changes to file type associations happening:\n\n.jpg Association \nBEFORE drag to desktop  ---> AFTER\n-----------------------------------\nAdobe Photoshop CS5.app ---> Apple Preview.app\n-----------------------------------\nAdobe Photoshop CS5.app ---> Adobe Illustrator CS5.app\n(has happend also, i don't know if under special circumstances):\nand also \n-----------------------------------\nAdobe Photoshop CS5.app ---> Adobe Fireworks CS5.app\nhas occured.\n-----------------------------------\n\nNotably, also at least .png files had their association changed to Apple Preview.app (formerly also Photoshop CS5.app), though only a .jpg has been dragged from FF to the desktop.\n\nHope these observations are helpful, though not systematic.", "author": "yodolphe@gmail.com", "id": 13057438, "time": "2018-02-21T13:10:56Z"}, {"text": "Thanks! Could you try setting the .jpg association to Paintbrush.app and see if it changes after dragging an image to the desktop?", "author": "spohl.mozilla.bugs@gmail.com", "id": 13057762, "time": "2018-02-21T14:31:39Z"}, {"text": "Yes, .jpg association also changes\nfrom Paintbrush.app to Apple Preview.app \nafter dragging an image to the desktop.\n\nNo Adobe involved here!?", "author": "yodolphe@gmail.com", "id": 13057886, "time": "2018-02-21T15:09:22Z"}, {"text": "Oh, and probably also worth noting:\nThese weird association changes all revert back to their inital settings after rebooting or logging out and back in macOS. \nSo these changes are only \"temporary\". macOS seems to remember the actual settings.", "author": "yodolphe@gmail.com", "id": 13057907, "time": "2018-02-21T15:16:13Z"}, {"text": "The fact that the change is only temporary is supported by the fact that when dragging a file to the desktop a change is made to a temporary file, namely: com.apple.launchservices-1070501.csstore stored in Private/Var/Folder/51/xxxxxx/C folder (the 1070501 is different for each user) rather than the com.apple.launchservices.plist in user/Library/Preferences which is permanent.", "author": "mikeyt@mac.com", "id": 13058540, "time": "2018-02-21T17:59:55Z"}, {"text": "Are you able to reproduce on a system without Adobe products installed, if you have one available to test this on?\nAre you able to reproduce in a new Firefox profile?\nAre you able to reproduce with a different macOS user account?\nCan you run older versions of Firefox to see if this worked before? You may choose to use mozregression for this (see comment 2).", "author": "spohl.mozilla.bugs@gmail.com", "id": 13060052, "time": "2018-02-22T03:02:37Z"}, {"text": "I am *NOT* able to reproduce with FF 58 on macOS 10.12 system with no Adobe products at all.\nNo issues here. jpgs files dragged to desktop stay associated with Paintbrush.app respectively Preview.app, whatever the setting was.\n\nI am *able* to reproduce with FF 58 on macOS 10.11 (with Adobe CS 5 installed) with a clean fresh Firefox profile. \nSame issue, file association losst after dragging to desktop (Adobe Photoshop.app \u2014> Adobe Fireworks.app)\n\nI am *able* to reproduce with FF 58 on macOS 10.11 (with Adobe CS 5 installed) with a different user accout (\u201eGuest\u201c). \nSame issue, file association losst after dragging to desktop (Preview.app \u2014> Adobe Fireworks.app)\n\nRegarding older Firefox version, i can just report that this behaviour did not occur before Quantum.", "author": "yodolphe@gmail.com", "id": 13069654, "time": "2018-02-26T17:01:22Z"}, {"text": "Thank you for the extra info!\n\n(In reply to yodolphe from comment #12)\n> Regarding older Firefox version, i can just report that this behaviour did\n> not occur before Quantum.\n\nWould you be able and willing to use mozregression (see comment 2) to check when this started happening? It would be great to figure out if there was a point in time when code changed in Firefox that made this issue surface, or if there was an update to Adobe CS 5 which triggered this issue. The fix might still come as a fix to Firefox, but using mozregression would help us figure this out. Thanks in advance!", "author": "spohl.mozilla.bugs@gmail.com", "id": 13069668, "time": "2018-02-26T17:05:44Z"}, {"text": "I have now discovered that as well as this issue being caused when dragging a file to the desktop, the same problem with file associations being changed happens when I upload an image to a website that I use. The image upload is done via an upload button on the website homepage at https://www.vivyxprinting.com (big blue button that says UPLOAD IMAGES. \n\nEvery time I upload a jpeg file to that website all file associations are changed for jpeg and psd documents. It's a html5 button which calls a .js to upload the file. I've only noticed this issue with this upload button on that specific website. Doesn't happen on any other websites I use, but I assume they use different methods for uploading files. \n\nThis behaviour did not happen with any versions of Firefox previous to Quantum.\n\nI use Adobe CS6 products. There have been no updates to CS5 or CS6 products for a number of years so any updates to those products can be ruled out as a cause of the issues.\n\nI'll hopefully be able to do a mozregression test in the next couple of days, but anecdotally this only started with Firefox Quantum, did not happen with any Firefox 56 and below.", "author": "mikeyt@mac.com", "id": 13070158, "time": "2018-02-26T19:34:04Z"}, {"text": "Further investigation shows that when I use the upload button on the website previously mentioned, Firefox makes a change to the  com.apple.launcheservices-107501.csstore file - this is the same temp system file that gets changed when dragging an image to the desktop. File location is in: /private/var/folders/51/xxxxxxxxxxxxx/0/\n\nThe file does not get changed, for example, when uploading an image via google image search image upload.\n\nThe vivyx website uses a javascript uploader called plupload.js so Firefox interaction with this .js appears to be causing the same behaviour as dragging a file to the desktop in changing the above temp file for file association.", "author": "mikeyt@mac.com", "id": 13071647, "time": "2018-02-27T06:59:10Z"}, {"text": "I've noticed this problem under OSX 10.13.3/FF 58 using right click > Save Image As...  Under OSX 10.12.6 the problem is not there. Both Macbook Pros are Mid 2012 models.\n\nIt's a very random thing and I will notice Preview.app instead of Photoshop CC 2018 as the default.\n\nOnly by not launching FireFox have I kept Photoshop as the default \"Open With\" for images.\n\nI've had Firefox for as long as I can remember and really don't use Chrome or Safari except as backup. this problem is killing a very valuable tool in my workflow.", "author": "g3gene@gmail.com", "id": 13071707, "time": "2018-02-27T07:49:29Z"}, {"text": "I have found a workaround by installing an OSX preference pane called MAGIC LAUNCH. This app allows you to set rules to what opens JPG and PSD files. Once done, the JPG and PSD files in the GET INFO show MAGIC LAUNCH as the application to open the files. For whatever reason, it then stops FF from changing the file associations of those files when they are dragged/save as/uploaded.\n\nWhen MAGIC LAUNCH is actiavted, no change is made by FF to the temporary file: com.apple.launcheservices-107501.csstore", "author": "mikeyt@mac.com", "id": 13071769, "time": "2018-02-27T08:32:54Z"}, {"text": "Thanks, I will look into that.", "author": "g3gene@gmail.com", "id": 13071795, "time": "2018-02-27T08:52:32Z"}, {"text": "Ok, I can *not* reproduce the problem when just using right click > Save Image As..., here on FF 58 on macOS 10.12. It only happens when dragging out from FF.\nThanks for workaround tip!", "author": "yodolphe@gmail.com", "id": 13071810, "time": "2018-02-27T09:06:06Z"}, {"text": "MOZREGRESSION RESULTS:\n\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=ba8db0fbc00605d6d097dde0b7e034297f55c1ec&tochange=6b101438c684bff925471edbfe593e500bcb3a03\n\n\n17:50.20 INFO: Narrowed inbound regression window from [ba8db0fb, db5209b5] (3 builds) to [ba8db0fb, 6b101438] (2 builds) (~1 steps left)\n17:50.20 INFO: No more inbound revisions, bisection finished.\n17:50.20 INFO: Last good revision: ba8db0fbc00605d6d097dde0b7e034297f55c1ec\n17:50.20 INFO: First bad revision: 6b101438c684bff925471edbfe593e500bcb3a03\n17:50.20 INFO: Pushlog:\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=ba8db0fbc00605d6d097dde0b7e034297f55c1ec&tochange=6b101438c684bff925471edbfe593e500bcb3a03", "author": "mikeyt@mac.com", "id": 13072248, "time": "2018-02-27T12:43:57Z"}, {"text": "Haik, any thoughts?", "author": "spohl.mozilla.bugs@gmail.com", "id": 13072347, "time": "2018-02-27T13:25:07Z"}, {"text": "(In reply to Stephen A Pohl [:spohl] from comment #21)\n> Haik, any thoughts?\n\nThis sounds a lot like bug 1391186 \"Thunderbird loses setting as default email client when \"mailto\" triggered by Firefox 56/57\" where a call to LSGetApplicationForURL() from a sandboxed process calls the OS to reset the URL handler back to the default. That was fixed in 57 and the fix was not specific to mail. See https://bugzilla.mozilla.org/show_bug.cgi?id=1391186#c16 for some more details.\n\nThis is probably a variation of that same problem where just looking up the target application from content causes the handler to revert to the default. I'll work on getting this addressed ASAP.", "author": "haftandilian@mozilla.com", "id": 13072942, "time": "2018-02-27T17:01:44Z"}, {"text": "Michael,\n\nFor a workaround, browsing to about:config and setting \"security.sandbox.content.level\" to 2 (instead of the current default value of 3) and then restarting your browser may work. This makes the security sandbox more permissive, but doesn't completely disable it. I haven't reproduced the problem so I can't confirm if this works around the problem or not. I've tried on 10.13 and will test on some other versions.", "author": "haftandilian@mozilla.com", "id": 13072963, "time": "2018-02-27T17:10:30Z"}, {"text": "I can confirm that changing that setting to 2 works on 10.10.5 and the file associations are no longer changed when dragging.", "author": "mikeyt@mac.com", "id": 13073006, "time": "2018-02-27T17:21:26Z"}, {"text": "Thank you guys!\nCan confirm too, setting \"security.sandbox.content.level\" to 2 prevents that problem from occuring in macOS 10.11.6, FF 58.0.2 \nWill this change from default setting persist in future updates to FF?", "author": "yodolphe@gmail.com", "id": 13073212, "time": "2018-02-27T18:29:55Z"}, {"text": "Great. Thank you both for testing the workaround. The setting should persist across updates. Keep in mind that the setting is a temporary workaround and once we have the fix in the browser it should be reverted.", "author": "haftandilian@mozilla.com", "id": 13073449, "time": "2018-02-27T19:45:54Z"}, {"text": "tl;dr, drag-and-drop triggers a call to LSCopyApplicationForMIMEType()[1] to lookup the handler application for a given MIME type. That fails when called from our sandboxed content processes due to filesystem restrictions which has a side effect of reverting the assigned handler to the default. We shouldn't call LSCopyApplicationForMIMEType() from content processes because it depends on file system access. We need to e10s-ify this.\n\nI was able to reproduce this on 10.13.3 and found that the call we make to LSCopyApplicationForMIMEType()[1] fails with kLSApplicationNotFoundErr (-10814) and causes the association for the MIME type to be wiped out. I tested with a JPG file displayed in a content process and saw that private LaunchServices code was trying to read from the application bundle (I had configured JPG files to be opened by a third party app installed in /Applications). The reads from /Applications fail because the content process does not have read access to the /Applications directory. The failing call to LSCopyApplicationForMIMEType() has a side effect of wiping out the default association which I confirmed by stepping through our code in the debugger. I had to manually reset the association after attempting the drag and drop. I did not test rebooting.\n\nAs soon as a drag is started for an image displayed in a content process, we call LSCopyApplicationForMIMEType() with the stack below. I edited out most of the stack for brevity.\n\nWe need to refactor how we get the default application for a given MIME type because we prevent content processes from accessing the filesystem for security/isolation and apparently that breaks this call. I tested with /Applications added to our sandbox profile and could not reproduce the problem. In this case, it seems not entirely unreasonable to allow access to /Applications (it would just allow a compromised content process to learn which applications are installed). However, there is no requirement that applications be installed in /Applications and a user could have applications in their home directory which we wouldn't want to allow access to.\n\n(lldb) bt\n* thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1\n  * frame #0 LaunchServices`LSCopyApplicationForMIMEType() \n    frame #1 XUL`nsOSHelperAppService::GetMIMEInfoFromOS() at nsOSHelperAppService.mm:338\n    frame #2 XUL`nsExternalHelperAppService::GetFromTypeAndExtension() at nsExternalHelperAppService.cpp:2562\n    frame #3 XUL`nsOSHelperAppService::GetFromTypeAndExtension() at nsOSHelperAppService.mm:221\n    frame #4 XUL`non-virtual thunk to nsOSHelperAppService::GetFromTypeAndExtension(...)() at nsOSHelperAppService.mm:0\n    frame #5 XUL`DragDataProducer::Produce() at nsContentAreaDragDrop.cpp:588\n    frame #6 XUL`nsContentAreaDragDrop::GetDragData() at nsContentAreaDragDrop.cpp:132\n    ...\n    frame #19 XUL`mozilla::dom::TabChild::HandleRealMouseButtonEvent() at TabChild.cpp:1734\n    frame #20 XUL`mozilla::dom::TabChild::ProcessPendingCoalescedMouseDataAndDispatchEvents() at TabChild.cpp:1576\n    frame #21 XUL`mozilla::dom::CoalescedMouseMoveFlusher::WillRefresh() at CoalescedMouseData.cpp:77\n    frame #22 XUL`nsRefreshDriver::Tick() at nsRefreshDriver.cpp:1886\n    ...\n    frame #60 plugin-container`content_process_main() at plugin-container.cpp:50\n    frame #61 plugin-container`main() at MozillaRuntimeMain.cpp:25\n    frame #62 plugin-container`start()\n    \n1. https://developer.apple.com/documentation/coreservices/1448586-lscopyapplicationformimetype?language=objc\n   Note: LSCopyApplicationForMIMEType is marked as deprecated, but its recommended replacement LSCopyDefaultApplicationURLForContentType is not available on 10.9 which we still support.", "author": "haftandilian@mozilla.com", "id": 13074188, "time": "2018-02-28T00:21:12Z"}, {"text": "(In reply to yodolphe from comment #19)\n> Ok, I can *not* reproduce the problem when just using right click > Save\n> Image As..., here on FF 58 on macOS 10.12. It only happens when dragging out\n> from FF.\n> Thanks for workaround tip!\n\nThat is correct. The context menu \"save image as\" problem does not show up in my 10.12.6 mid 2012 MBP using Photoshop CC 2018.\nI do not drag images outside of FF, because I need the Save dialog to direct saved images to folders and cloud services.\n\nThe problem shows up in my mid-2012 MBP running 10.13.3 \n\nI've changed \"security.sandbox.content.level\" to 2 and I will see if my image file associations will hold to CC 2018 using \"Ctrl + click > Save Image as method.\n\nI hope to find out if that works, but it will take an average of two daays to know if the problem repeats even with that setting.\n\nThanks for everyone's hard work on this. I simply know something is wrong, but not exactly why.\n\nGene", "author": "g3gene@gmail.com", "id": 13074321, "time": "2018-02-28T01:19:42Z"}, {"text": "The replacement for the deprecated LSCopyApplicationForMIMEType() is LSCopyDefaultApplicationURLForContentType() (10.10+). I tested using LSCopyDefaultApplicationURLForContentType() but it also caused the side effect of wiping out the registered application handler.\n\nI'm testing a different fix that changes drag-and-drop code in DragDataProducer::Produce() in nsContentAreaDragDrop.cpp. The fix introduces a sync message to be used on Mac to ask the parent to a) check if the filename extension corresponds to the MIME type and b) return the MIME primary extension.", "author": "haftandilian@mozilla.com", "id": 13080908, "time": "2018-03-01T20:15:18Z"}, {"text": "Created attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview commit: https://reviewboard.mozilla.org/r/224166/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/224166/", "author": "haftandilian@mozilla.com", "id": 13081387, "time": "2018-03-01T22:16:12Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/1-2/", "author": "haftandilian@mozilla.com", "id": 13082180, "time": "2018-03-02T07:22:38Z"}, {"text": "The posted fix addresses the problem by avoiding calling nsIMIMEInfo::GetFromTypeAndExtension() on Mac from DragDataProducer::Produce(). There are other callers of nsIMIMEInfo::GetFromTypeAndExtension() in the codebase that also call GetFromTypeAndExtension() and this fix only addresses the problem for the drag-and-drop case. The fix adds a new sync message that allows Mac content processes to check if an extension is associated with a given MIME type as well as get the primary extension for the MIME type.\n\nFor a general fix, we need to refactor the Mac version of nsOSHelperAppService to not call LSCopyApplicationForMIMEType, LSGetApplicationForInfo, and probably CFBundleCopyInfoDictionaryForURL. This bug is a problem for users now so I think we should make the minimal fix that addresses the drag-and-drop case and follow up with the more general fix in another bug.", "author": "haftandilian@mozilla.com", "id": 13084495, "time": "2018-03-02T19:18:39Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=3fe914faed57dacc66da2a53fd67c326df449ee6\n\nI manually tested this on Linux to make sure the changed code gets executed. I ran into an existing problem where dragging an image out of Firefox into a Nautilus window or the desktop (on Ubuntu 17.10) causes the browser to hang (bug 1431663), but I was able to verify DragDataProducer::Produce() was executed.", "author": "haftandilian@mozilla.com", "id": 13085075, "time": "2018-03-02T19:26:05Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nCancelling the review request while I explore moving the MIME extension check to the parent.", "author": "haftandilian@mozilla.com", "id": 13106507, "time": "2018-03-05T22:24:42Z"}, {"text": "(In reply to g3gene from comment #28)\n> (In reply to yodolphe from comment #19)\n> > Ok, I can *not* reproduce the problem when just using right click > Save\n> > Image As..., here on FF 58 on macOS 10.12. It only happens when dragging out\n> > from FF.\n> > Thanks for workaround tip!\n> \n> That is correct. The context menu \"save image as\" problem does not show up\n> in my 10.12.6 mid 2012 MBP using Photoshop CC 2018.\n> I do not drag images outside of FF, because I need the Save dialog to direct\n> saved images to folders and cloud services.\n> \n> The problem shows up in my mid-2012 MBP running 10.13.3 \n> \n> I've changed \"security.sandbox.content.level\" to 2 and I will see if my\n> image file associations will hold to CC 2018 using \"Ctrl + click > Save\n> Image as method.\n> \n> I hope to find out if that works, but it will take an average of two daays\n> to know if the problem repeats even with that setting.\n> \n> Thanks for everyone's hard work on this. I simply know something is wrong,\n> but not exactly why.\n> \n> Gene\n\nUpdate. The sandbox setting of 2 has clearly ended this problem, although it's \"right-click and save\" and not \"drag\" as others have experienced. 10.13.3 was affected, but not 10.12.6 for some reason.\n\nGene", "author": "g3gene@gmail.com", "id": 13109311, "time": "2018-03-06T20:50:54Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/2-3/", "author": "haftandilian@mozilla.com", "id": 13112737, "time": "2018-03-07T23:27:15Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/3-4/", "author": "haftandilian@mozilla.com", "id": 13112815, "time": "2018-03-08T00:05:48Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nsmaug, given that you worked on the e10s support for drag-and-drop, would you be able to give me some feedback on these changes? Or recommend someone? Thanks.", "author": "haftandilian@mozilla.com", "id": 13112822, "time": "2018-03-08T00:07:50Z"}, {"text": "I could, but possibly next week.\nNica and Enn might recall this stuff too.", "author": "bugs@pettay.fi", "id": 13113000, "time": "2018-03-08T01:16:25Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review232430\n\n::: dom/base/nsContentAreaDragDrop.cpp:280\n(Diff revision 4)\n> +    // extension is compatible with the OS's handler for this type.\n> +    // If it isn't, or is missing, replace the extension with the\n> +    // primary extension. Do this in the parent process because\n> +    // sandboxing may block access to MIME-handler info from content\n> +    // processes.\n> +    if (XRE_IsParentProcess()) {\n\nPerhaps we should emit a warning or similar if you try to read the filename of a dragged image from the content process, because it won't be accurate?\n\n::: dom/base/nsContentAreaDragDrop.cpp\n(Diff revision 4)\n> -\n> -              // pass out the image source string\n\nnit: Why delete this comment?\n\n::: dom/base/nsContentAreaDragDrop.cpp\n(Diff revision 4)\n> -                NS_ENSURE_SUCCESS(rv, rv);\n> -              }\n> -\n> -              nsAutoCString fileName;\n> +            nsAutoCString fileName;\n> -              imgUrl->GetFileName(fileName);\n> +            imgUrl->GetFileName(fileName);\n> -\n\nnit: why delete this line and the other spacing lines below?\n\n::: dom/base/nsContentAreaDragDrop.cpp:887\n(Diff revision 4)\n> +    AddString(aDataTransfer, NS_LITERAL_STRING(kImageRequestMime),\n> +              mImageRequestMime, principal);\n\nThis exposes this information to the web. AddString() calls SetDataWithPrincipal, which will add the data in a web-visible way.\n\nFor unfortunate legacy reasons, `_moz_htmlcontext` and `_moz_htmlinfo` are web-exposed right now, but I'd rather not add to that list. If we need to attach it to the DataTransfer, there's a \"aHidden\" argument to the inner SetDataWithPrincipal call (https://searchfox.org/mozilla-central/rev/588d8120aa11738657da93e09a03378bcd1ba8ec/dom/events/DataTransfer.cpp#1345) which could be exposed here, and used to hide this information from the web.\n\nIf we have somewhere else we can put this data, that would be preferable.\n\n(see also bug 1345591)\n\n::: widget/nsITransferable.idl:43\n(Diff revision 4)\n>  // that some parent structure and style can be preserved. kHTMLContext\n>  // contains the serialized ancestor elements, whereas kHTMLInfo are numbers\n>  // identifying where in the context the fragment was from.\n> -#define kHTMLContext   \"text/_moz_htmlcontext\"\n> -#define kHTMLInfo      \"text/_moz_htmlinfo\"\n> +#define kHTMLContext                \"text/_moz_htmlcontext\"\n> +#define kHTMLInfo                   \"text/_moz_htmlinfo\"\n> +#define kImageRequestMime           \"text/_moz_requestmime\"\n\nIf you decide to add this format, please also add it to knownFormats: https://searchfox.org/mozilla-central/rev/588d8120aa11738657da93e09a03378bcd1ba8ec/dom/events/DataTransfer.cpp#1026-1032\n\n::: widget/nsITransferable.idl:47\n(Diff revision 4)\n> -#define kHTMLInfo      \"text/_moz_htmlinfo\"\n> +#define kHTMLInfo                   \"text/_moz_htmlinfo\"\n> +#define kImageRequestMime           \"text/_moz_requestmime\"\n>  \n>  // the source URL for a file promise\n>  #define kFilePromiseURLMime         \"application/x-moz-file-promise-url\"\n> +// the source URL for a file promise\n\nWhy did you add this comment?", "author": "nika@thelayzells.com", "id": 13117781, "time": "2018-03-09T20:11:04Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/4-5/", "author": "haftandilian@mozilla.com", "id": 13118048, "time": "2018-03-09T21:39:02Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review232430\n\nThanks for taking a look, Nika.\n\nThe comment and whitespace removals are fixed. They were bits I neglected to clean up after refactoring. Sorry about that.\n\nI'll look into passing the MIME type to the parent using some other mechanism and failing that will use the hiding approach you mentioned.", "author": "haftandilian@mozilla.com", "id": 13118074, "time": "2018-03-09T21:47:43Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/5-6/", "author": "haftandilian@mozilla.com", "id": 13129716, "time": "2018-03-15T00:37:45Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review232430\n\n> Perhaps we should emit a warning or similar if you try to read the filename of a dragged image from the content process, because it won't be accurate?\n\nThe filename from the image URI would only differ from the actual file after it was dragged out of the browser. Which seems equivalent to the user performing a File->Save As... If content is displaying an image that was dragged in, the extension overwriting doesn't occur. So I'm not sure a warning applies, but I may have misunderstood.\n\n> This exposes this information to the web. AddString() calls SetDataWithPrincipal, which will add the data in a web-visible way.\n> \n> For unfortunate legacy reasons, `_moz_htmlcontext` and `_moz_htmlinfo` are web-exposed right now, but I'd rather not add to that list. If we need to attach it to the DataTransfer, there's a \"aHidden\" argument to the inner SetDataWithPrincipal call (https://searchfox.org/mozilla-central/rev/588d8120aa11738657da93e09a03378bcd1ba8ec/dom/events/DataTransfer.cpp#1345) which could be exposed here, and used to hide this information from the web.\n> \n> If we have somewhere else we can put this data, that would be preferable.\n> \n> (see also bug 1345591)\n\nI looked into trying to pass the MIME type outside of the DataTransfer and came to the conclusion that storing the MIME as a chrome-only field in the DataTransfer was the most natural approach since the MIME type is needed at the same time as the filename in order to overwrite or add the extension. So I've gone with that approach.\n\n> If you decide to add this format, please also add it to knownFormats: https://searchfox.org/mozilla-central/rev/588d8120aa11738657da93e09a03378bcd1ba8ec/dom/events/DataTransfer.cpp#1026-1032\n\nDone.", "author": "haftandilian@mozilla.com", "id": 13129767, "time": "2018-03-15T01:09:00Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/6-7/", "author": "haftandilian@mozilla.com", "id": 13143489, "time": "2018-03-20T19:22:55Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review235188\n\n::: dom/base/nsContentAreaDragDrop.cpp:201\n(Diff revision 6)\n> +{\n> +  nsresult rv;\n> +\n> +  nsCOMPtr<nsIMIMEService> mimeService =\n> +    do_GetService(\"@mozilla.org/mime;1\", &rv);\n> +  NS_ENSURE_SUCCESS(rv, rv);\n\nnit: Please just use:\n\n```\nnsCOMPtr<nsIMIMEService> mimeService = do_GetService(\"@mozilla.org/mime;1\");\nif (NS_WARN_IF(!mimeService)) {\n  return NS_ERROR_FAILURE;\n}\n```\n\n::: dom/base/nsContentAreaDragDrop.cpp:281\n(Diff revision 6)\n> +    // extension is compatible with the OS's handler for this type.\n> +    // If it isn't, or is missing, replace the extension with the\n> +    // primary extension. Do this in the parent process because\n> +    // sandboxing may block access to MIME-handler info from content\n> +    // processes.\n> +    if (XRE_IsParentProcess()) {\n\nIs this method ever called in the content process? It seems like SaveFileToURI wouldn't work great if called from the content process...\n\n::: dom/base/nsContentAreaDragDrop.cpp:282\n(Diff revision 6)\n> +      aTransferable->GetTransferData(kImageRequestMime,\n> +                                     getter_AddRefs(tmp), &dataSize);\n> +      supportsString = do_QueryInterface(tmp);\n> +      if (!supportsString)\n> +        return NS_ERROR_FAILURE;\n> +\n> +      nsAutoString imageRequestMime;\n> +      supportsString->GetData(imageRequestMime);\n\nnsITransferable is really miserable to work with, isn't it >.<\n\n::: dom/base/nsContentAreaDragDrop.cpp:293\n(Diff revision 6)\n> +        // Build a URL to get the filename extension\n> +        nsCOMPtr<nsIURI> imageURI;\n> +        rv = NS_NewURI(getter_AddRefs(imageURI), sourceURLString);\n\nI feel like we should be checking the targetFilename for its extension here rather than pulling it out of the source URL.\n\nIt feels weird to compute that information in the content process, and then discard it when we get to the parent & recompute it. Perhaps we should stop sending down the targetFile alltogether and exclusively compute it here?\n\n---\n\nWe also re-parse this URL in SaveURLToFile, so perhaps we can parse it outside of the XRE_IsParentProcess block, and pass it down to avoid parsing the URI more times than we need to.\n\n::: dom/base/nsContentAreaDragDrop.cpp:317\n(Diff revision 6)\n> +          rv = NS_MutateURI(imageURL)\n> +            .Apply(NS_MutatorMethod(&nsIURLMutator::SetFileExtension,\n> +                                    primaryExtension, nullptr))\n> +            .Finalize(imageURL);\n\nLet's avoid needing to mutate the URI here, by just pulling out GetFileBaseName(...) to get the filename - the extension, and then append '.' + primaryExtension.\n\n::: dom/base/nsContentAreaDragDrop.cpp:354\n(Diff revision 6)\n>      file->Append(targetFilename);\n>  \n>      bool isPrivate;\n>      aTransferable->GetIsPrivateData(&isPrivate);\n>  \n>      rv = SaveURIToFile(sourceURLString, file, isPrivate);\n\nThis method constructs a nsIURI from the string internally.\n\nPlease change this method to take an nsIURI and pass in the already parsed one which you're making now so we can avoid parsing twice.\n\n::: dom/base/nsContentAreaDragDrop.cpp:678\n(Diff revision 6)\n> -        // Fix the file extension in the URL if necessary\n> -        if (imgRequest && mimeService) {\n>            nsCOMPtr<nsIURI> imgUri;\n>            imgRequest->GetURI(getter_AddRefs(imgUri));\n>  \n>            nsCOMPtr<nsIURL> imgUrl(do_QueryInterface(imgUri));\n\nnit: While you're here can you remove this unnecessary queryinterface call?\n\n::: dom/base/nsContentAreaDragDrop.cpp:694\n(Diff revision 6)\n> -              nsAutoCString fileName;\n> +            nsAutoCString fileName;\n> -              imgUrl->GetFileName(fileName);\n> +            imgUrl->GetFileName(fileName);\n>  \n> -              NS_UnescapeURL(fileName);\n> +            NS_UnescapeURL(fileName);\n>  \n> -              // make the filename safe for the filesystem\n> +            // make the filename safe for the filesystem\n> -              fileName.ReplaceChar(FILE_PATH_SEPARATOR FILE_ILLEGAL_CHARACTERS,\n> +            fileName.ReplaceChar(FILE_PATH_SEPARATOR FILE_ILLEGAL_CHARACTERS,\n> -                                   '-');\n> +                                 '-');\n>  \n> -              CopyUTF8toUTF16(fileName, mImageDestFileName);\n> +            CopyUTF8toUTF16(fileName, mImageDestFileName);\n\nLet's not bother doing this here if we're just gonna re-do it in the parent process.\n\n::: widget/nsITransferable.idl:41\n(Diff revision 6)\n>  \n>  // These are used to indicate the context for a fragment of HTML source, such\n>  // that some parent structure and style can be preserved. kHTMLContext\n>  // contains the serialized ancestor elements, whereas kHTMLInfo are numbers\n>  // identifying where in the context the fragment was from.\n> -#define kHTMLContext   \"text/_moz_htmlcontext\"\n> +#define kHTMLContext                \"text/_moz_htmlcontext\"\n\nCan we avoid changing the indentation here?", "author": "nika@thelayzells.com", "id": 13144013, "time": "2018-03-20T22:24:16Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/7-8/", "author": "haftandilian@mozilla.com", "id": 13150395, "time": "2018-03-23T01:58:56Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review235188\n\n> Is this method ever called in the content process? It seems like SaveFileToURI wouldn't work great if called from the content process...\n\nIt is called from the content process when we serialize the transferable to send over IPC. We don't hit a SaveURIToFile() failure because kFilePromiseDirectoryMime is never added to the transfer in the child process and therefore we don't call SaveURIToFile(). Sandboxing would block the content process from trying to write the file. (There are a few directories content processes can write to on some platforms. On Mac, as of build 60, no filesystem writes are allowed.)\n\nTo clean that up a bit, I've moved the SaveURIToFile() call to within the XRE_IsParentProcess() block which would mean it would still be called if e10s is disabled.\n\n> nsITransferable is really miserable to work with, isn't it >.<\n\nIt's not my favorite thing. :)\n\n> I feel like we should be checking the targetFilename for its extension here rather than pulling it out of the source URL.\n> \n> It feels weird to compute that information in the content process, and then discard it when we get to the parent & recompute it. Perhaps we should stop sending down the targetFile alltogether and exclusively compute it here?\n> \n> ---\n> \n> We also re-parse this URL in SaveURLToFile, so perhaps we can parse it outside of the XRE_IsParentProcess block, and pass it down to avoid parsing the URI more times than we need to.\n\nAgreed that is a bit unnatural. I think it would be an improvement to not put the filename in the transferrable in content, but kFilePromiseDestFilename is referenced in a few other files and I'd prefer to keep this minimal and lower risk. (I'm going to request uplift to Beta after the fix has had some test time in Nightly.) And these changes are breaking the symmetry in a sense by adding per-process-type logic and maybe that could be done better. Would you accept addressing that in a follow-on bug?\n\nI've updated SaveURIToFile() to take the URI and avoid the double parsing issue.\n\n> nit: While you're here can you remove this unnecessary queryinterface call?\n\nIs there a better way to do the cast from nsIURI to nsIURL?", "author": "haftandilian@mozilla.com", "id": 13150412, "time": "2018-03-23T02:23:51Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review236208\n\n::: dom/base/nsContentAreaDragDrop.cpp:188\n(Diff revision 8)\n> + */\n> +nsresult\n> +CheckAndGetExtensionForMime(const nsCString& aExtension,\n> +                            const nsCString& aMimeType,\n> +                            bool* aIsValidExtension,\n> +                            nsCString* aPrimaryExtension)\n\nPlease change this outparameter to a nsACString& aPrimaryExtension", "author": "nika@thelayzells.com", "id": 13152340, "time": "2018-03-23T18:58:38Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/8-9/", "author": "haftandilian@mozilla.com", "id": 13152682, "time": "2018-03-23T21:26:53Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nhttps://reviewboard.mozilla.org/r/224166/#review236208\n\n> Please change this outparameter to a nsACString& aPrimaryExtension\n\nDone.", "author": "haftandilian@mozilla.com", "id": 13152684, "time": "2018-03-23T21:27:31Z"}, {"text": "Pushed by haftandilian@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/608119812c07\nOSX dragging image to desktop changes OSX File associations r=mystor", "author": "pulsebot@bots.tld", "id": 13153585, "time": "2018-03-24T20:38:21Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/608119812c07", "author": "shindli@mozilla.com", "id": 13153921, "time": "2018-03-25T09:47:12Z"}, {"text": "Backed out changeset 608119812c07 (bug 1437281) on request from haik a=backout", "author": "ccoroiu@mozilla.com", "id": 13157027, "time": "2018-03-26T20:55:20Z"}, {"text": "Backout by ccoroiu@mozilla.com:\nhttps://hg.mozilla.org/mozilla-central/rev/3189f213343f\nBacked out changeset 608119812c07 on request from haik a=backout", "author": "pulsebot@bots.tld", "id": 13157051, "time": "2018-03-26T21:03:35Z"}, {"text": "I asked for this to be backed out because it regressed the file-renaming-on-drag-out functionality on Windows. I didn't realize Windows used different code paths in the parent. My manual tests found this after landing the fix. On Windows, we use code from widget/windows/nsDataObj.cpp, specifically GetDownloadDetails(), to pull out the image information. Changing this on Windows is more involved. Since the bug being fixed here only applies to Mac, I'm going to change the fix to only apply to Mac. We have bug 1446549 filed to address how we use the MIME service from content processes.\n\nAnd I've filed bug 1449310 - \"Need automated tests for dragging image out of browser and renaming file\".", "author": "haftandilian@mozilla.com", "id": 13161213, "time": "2018-03-27T20:19:15Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/9-10/", "author": "haftandilian@mozilla.com", "id": 13162274, "time": "2018-03-28T04:54:39Z"}, {"text": "*** Bug 1448161 has been marked as a duplicate of this bug. ***", "author": "haftandilian@mozilla.com", "id": 13170203, "time": "2018-03-31T00:23:02Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224166/diff/10-11/", "author": "haftandilian@mozilla.com", "id": 13173021, "time": "2018-04-02T07:11:48Z"}, {"text": "Pushed by haftandilian@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/69964a79c66a\nOSX dragging image to desktop changes OSX File associations r=mystor", "author": "pulsebot@bots.tld", "id": 13177516, "time": "2018-04-03T19:17:14Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/69964a79c66a", "author": "aciure@mozilla.com", "id": 13178004, "time": "2018-04-03T22:00:32Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nApproval Request Comment\n[Feature/Bug causing the regression]:\nBug 1332190, level 3 Filesystem Sandboxing on Mac.\n\n[User impact if declined]:\nDragging an image in the browser can cause OS X file associations (i.e., the configuration of which apps open which file types) to be reset to the system default which is very frustrating for users.\n\n[Is this code covered by automated tests?]:\nNo\n\n[Has the fix been verified in Nightly?]:\nOnly manually.\n\n[Needs manual test from QE? If yes, steps to reproduce]: \nYes. See description. The description uses Photoshop.app, but any non-default App that can open JPG's should be sufficient (such as a browser.)\n\n[List of other uplifts needed for the feature/fix]:\nNone\n\n[Is the change risky?]:\nNo.\n\n[Why is the change risky/not risky?]:\nThe changes are limited to Mac OS via #ifdefs and pretty self contained.\n\n[String changes made/needed]:\nNone", "author": "haftandilian@mozilla.com", "id": 13195267, "time": "2018-04-10T16:03:37Z"}, {"text": "Comment on attachment 8955324\nBug 1437281 - OSX dragging image to desktop changes OSX File associations\n\nfix a regression from mac sandboxing, approved for 60.0b12", "author": "jcristau@mozilla.com", "id": 13200565, "time": "2018-04-12T12:09:46Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-beta/rev/5c9ecfe21944", "author": "aryx.bugmail@gmx-topmail.de", "id": 13201212, "time": "2018-04-12T15:47:43Z"}, {"text": "I managed to reproduce the bug using macOS 10.12 and Mac OS 10.10.5 on an older version of Nightly (2018-02-10).\n\nI retested everything using latest Nightly 61.0a1 and beta 60.0b12 on Mac OS 10.10, Mac OS 10.11 and macOS 10.12, but the bug is not reproducing anymore.", "author": "oana.botisan@softvision.ro", "id": 13209393, "time": "2018-04-16T12:43:02Z"}, {"text": "*** Bug 1454028 has been marked as a duplicate of this bug. ***", "author": "spohl.mozilla.bugs@gmail.com", "id": 13218558, "time": "2018-04-19T14:07:14Z"}], "id": 1437281, "priority": "P3", "cc": ["alanzrx-bug@yahoo.com", "apple.macintosh.farm@gmail.com", "bogdan.maris@softvision.ro", "bugs@pettay.fi", "chyi.zhao@gmail.com", "haftandilian@mozilla.com", "mcastelluccio@mozilla.com", "mikeyt@mac.com", "nika@thelayzells.com", "oana.botisan@softvision.ro", "spohl.mozilla.bugs@gmail.com", "toneyvr@gmail.com", "yodolphe@gmail.com"], "cf_crash_signature": "", "version": "58 Branch", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1446549", "https://bugzilla.mozilla.org/show_bug.cgi?id=1448374", "https://bugzilla.mozilla.org/show_bug.cgi?id=1452278"], "cf_tracking_firefox59": "---", "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1332190], "qa_contact": "", "creation_time": "2018-02-10T12:14:23Z", "cf_status_firefox_esr52": "---", "component": "Security: Process Sandboxing", "assigned_to_detail": {"email": "haftandilian@mozilla.com", "id": 558190, "name": "haftandilian@mozilla.com", "real_name": "Haik Aftandilian [:haik]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "verified", "cf_status_firefox60": "verified", "target_milestone": "mozilla61", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "mikeyt@mac.com", "id": 611802, "name": "mikeyt@mac.com", "real_name": "Michael"}, "whiteboard": "", "mentors": [], "summary": "OSX dragging image to desktop changes OSX File associations", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-04-27T11:09:39Z", "assigned_to": "haftandilian@mozilla.com", "is_open": false, "history": [{"changes": [{"removed": "Untriaged", "field_name": "component", "added": "Widget: Cocoa"}, {"removed": "Unspecified", "field_name": "platform", "added": "x86"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}, {"removed": "Unspecified", "field_name": "op_sys", "added": "Mac OS X"}], "who": "yfdyh000@gmail.com", "when": "2018-02-10T17:43:50Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}, {"removed": "", "field_name": "cc", "added": "spohl.mozilla.bugs@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mikeyt@mac.com)"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-02-10T17:54:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yodolphe@gmail.com"}], "who": "yodolphe@gmail.com", "when": "2018-02-20T15:45:39Z"}, {"changes": [{"removed": "needinfo?(mikeyt@mac.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mikeyt@mac.com", "when": "2018-02-20T17:00:16Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(yodolphe@gmail.com), needinfo?(mikeyt@mac.com)"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-02-20T18:21:31Z"}, {"changes": [{"removed": "needinfo?(yodolphe@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "yodolphe@gmail.com", "when": "2018-02-21T13:10:56Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(yodolphe@gmail.com)"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-02-21T14:31:39Z"}, {"changes": [{"removed": "needinfo?(mikeyt@mac.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mikeyt@mac.com", "when": "2018-02-21T17:59:55Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mikeyt@mac.com)"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-02-22T03:02:37Z"}, {"changes": [{"removed": "needinfo?(yodolphe@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "yodolphe@gmail.com", "when": "2018-02-26T17:01:22Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(yodolphe@gmail.com)"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-02-26T17:05:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mikeyt@mac.com"}, {"removed": "needinfo?(mikeyt@mac.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mikeyt@mac.com", "when": "2018-02-26T19:34:04Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "g3gene@gmail.com"}], "who": "g3gene@gmail.com", "when": "2018-02-27T07:49:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "haftandilian@mozilla.com"}, {"removed": "", "field_name": "blocks", "added": "1332190"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(haftandilian@mozilla.com)"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-02-27T13:25:07Z"}, {"changes": [{"removed": "needinfo?(yodolphe@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "yodolphe@gmail.com", "when": "2018-02-27T13:46:58Z"}, {"changes": [{"removed": "Widget: Cocoa", "field_name": "component", "added": "Security: Process Sandboxing"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "haftandilian@mozilla.com"}, {"removed": "needinfo?(haftandilian@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "haftandilian@mozilla.com", "when": "2018-02-27T17:01:44Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mikeyt@mac.com)"}], "who": "haftandilian@mozilla.com", "when": "2018-02-27T17:10:30Z"}, {"changes": [{"removed": "needinfo?(mikeyt@mac.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mikeyt@mac.com", "when": "2018-02-27T17:21:26Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1439680"}], "who": "haftandilian@mozilla.com", "when": "2018-02-27T19:45:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugs@pettay.fi"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8955324, "added": "review?(bugs@pettay.fi)"}], "who": "haftandilian@mozilla.com", "when": "2018-03-02T19:19:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8955324, "added": ""}], "who": "haftandilian@mozilla.com", "when": "2018-03-05T22:24:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "chyi.zhao@gmail.com"}], "who": "chyi.zhao@gmail.com", "when": "2018-03-06T05:23:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8955324, "added": "feedback?(bugs@pettay.fi)"}], "who": "haftandilian@mozilla.com", "when": "2018-03-08T00:07:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(bugs@pettay.fi)", "attachment_id": 8955324, "added": ""}], "who": "haftandilian@mozilla.com", "when": "2018-03-09T21:39:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8955324, "added": "review?(nika@thelayzells.com)"}, {"removed": "", "field_name": "cc", "added": "nika@thelayzells.com"}], "who": "haftandilian@mozilla.com", "when": "2018-03-15T00:37:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(nika@thelayzells.com)", "attachment_id": 8955324, "added": ""}], "who": "haftandilian@mozilla.com", "when": "2018-03-15T00:41:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8955324, "added": "review?(nika@thelayzells.com)"}], "who": "haftandilian@mozilla.com", "when": "2018-03-15T15:14:06Z"}, {"changes": [{"removed": "https://bugzilla.mozilla.org/show_bug.cgi?id=1439680", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1446549"}], "who": "haftandilian@mozilla.com", "when": "2018-03-20T18:16:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(nika@thelayzells.com)", "attachment_id": 8955324, "added": "review-"}], "who": "nika@thelayzells.com", "when": "2018-03-20T22:24:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review-", "attachment_id": 8955324, "added": "review?(nika@thelayzells.com)"}], "who": "haftandilian@mozilla.com", "when": "2018-03-23T01:58:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(nika@thelayzells.com)", "attachment_id": 8955324, "added": "review+"}], "who": "nika@thelayzells.com", "when": "2018-03-23T18:58:38Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-03-25 09:47:12"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "shindli@mozilla.com", "when": "2018-03-25T09:47:12Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1448764"}], "who": "haftandilian@mozilla.com", "when": "2018-03-26T16:51:51Z"}, {"changes": [{"removed": "0", "field_name": "is_confirmed", "added": "1"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(haftandilian@mozilla.com)"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "---"}, {"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "FIXED", "field_name": "resolution", "added": ""}, {"removed": "mozilla61", "field_name": "target_milestone", "added": "---"}], "who": "ccoroiu@mozilla.com", "when": "2018-03-26T20:55:20Z"}, {"changes": [{"removed": "g3gene@gmail.com", "field_name": "cc", "added": ""}], "who": "g3gene@gmail.com", "when": "2018-03-26T23:12:50Z"}, {"changes": [{"removed": "needinfo?(haftandilian@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "haftandilian@mozilla.com", "when": "2018-03-27T20:19:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "apple.macintosh.farm@gmail.com"}], "who": "apple.macintosh.farm@gmail.com", "when": "2018-03-28T12:25:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "alanzrx-bug@yahoo.com"}], "who": "haftandilian@mozilla.com", "when": "2018-03-31T00:23:02Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1448374"}], "who": "haftandilian@mozilla.com", "when": "2018-04-03T18:09:30Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "2018-03-25 09:47:12", "field_name": "cf_last_resolved", "added": "2018-04-03 22:00:32"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "aciure@mozilla.com", "when": "2018-04-03T22:00:32Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1452278"}], "who": "haftandilian@mozilla.com", "when": "2018-04-06T22:58:40Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8955324, "added": "approval-mozilla-beta?"}], "who": "haftandilian@mozilla.com", "when": "2018-04-10T16:03:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8955324, "added": "approval-mozilla-beta+"}], "who": "jcristau@mozilla.com", "when": "2018-04-12T12:09:46Z"}, {"changes": [{"removed": "---", "field_name": "cf_status_firefox60", "added": "fixed"}], "who": "aryx.bugmail@gmx-topmail.de", "when": "2018-04-12T15:47:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bogdan.maris@softvision.ro"}, {"removed": "", "field_name": "flagtypes.name", "added": "qe-verify+"}], "who": "bogdan.maris@softvision.ro", "when": "2018-04-13T06:25:49Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "", "field_name": "cc", "added": "oana.botisan@softvision.ro"}, {"removed": "qe-verify+", "field_name": "flagtypes.name", "added": ""}, {"removed": "fixed", "field_name": "cf_status_firefox60", "added": "verified"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}], "who": "oana.botisan@softvision.ro", "when": "2018-04-16T12:43:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "toneyvr@gmail.com"}], "who": "spohl.mozilla.bugs@gmail.com", "when": "2018-04-19T14:07:14Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-27T11:09:39Z"}], "resolution": "FIXED", "op_sys": "Mac OS X", "cf_fx_points": "---", "cf_blocking_fennec": "---"}