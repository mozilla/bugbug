{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-07-20T21:57:00Z", "type_id": 4, "creation_date": "2015-07-20T21:32:21Z", "id": 1214006, "setter": "jonas@sicking.cc"}], "content_type": "text/plain", "id": 8636235}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-10-13T23:37:31Z", "type_id": 4, "creation_date": "2015-10-13T23:37:31Z", "id": 1271680, "setter": "ckerschb@christophkerschbaumer.com"}], "content_type": "text/plain", "id": 8673405}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2015-10-15T00:45:45Z", "type_id": 607, "creation_date": "2015-10-15T00:06:39Z", "id": 1272545, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8673988}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2015-10-21T21:50:25Z", "type_id": 4, "creation_date": "2015-10-19T22:48:40Z", "id": 1275353, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8675936}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-10T21:51:49Z", "type_id": 4, "creation_date": "2015-11-10T00:01:59Z", "id": 1289325, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8685164}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2015-11-11T22:11:16Z", "type_id": 607, "creation_date": "2015-11-10T00:05:47Z", "id": 1289330, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8685166}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-16T21:58:22Z", "type_id": 4, "creation_date": "2015-11-16T21:38:26Z", "id": 1293469, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/plain", "id": 8688089}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8688095}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-19T02:34:59Z", "type_id": 4, "creation_date": "2015-11-19T00:03:22Z", "id": 1295345, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8689247}, {"creator": "ckerschb@christophkerschbaumer.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-20T09:43:32Z", "type_id": 4, "creation_date": "2015-11-20T03:16:54Z", "id": 1296320, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/plain", "id": 8689879}], "classification": "Components", "creator": "ckerschb@christophkerschbaumer.com", "cc": ["abillings@mozilla.com", "bzbarsky@mit.edu", "cbook@mozilla.com", "ckerschb@christophkerschbaumer.com", "dtownsend@mozilla.com", "franziskuskiefer@gmail.com", "gaubugzilla@palant.de", "gijskruitbosch+bugs@gmail.com", "jld@mozilla.com", "jorge@mozilla.com", "jstenback+bmo@gmail.com", "mwobensmith@mozilla.com", "noemi.freiredecarlos@telefonica.com", "peterv@propagandism.org", "tanvi@mozilla.com"], "depends_on": [1228117, 1226823, 1226869, 1227554, 1227981, 1228116], "creation_time": "2015-07-10T17:03:56Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["addon-compat", "csectype-disclosure", "privacy", "sec-moderate"], "summary": "Use channel->asyncOpen2 in parser/htmlparser/nsExpatDriver.cpp", "id": 1182546, "assigned_to_detail": {"email": "ckerschb@christophkerschbaumer.com", "id": 363267, "name": "ckerschb@christophkerschbaumer.com", "real_name": "Christoph Kerschbaumer [:ckerschb]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_status_firefox45": "fixed", "cf_has_regression_range": "---", "assigned_to": "ckerschb@christophkerschbaumer.com", "comment_count": 42, "comments": [{"text": "", "author": "ckerschb@christophkerschbaumer.com", "id": 10480378, "time": "2015-07-10T17:03:56Z"}, {"text": "Created attachment 8636235\nbug_1182546_asyncopen2_nsexpatdriver.patch", "author": "ckerschb@christophkerschbaumer.com", "id": 10516384, "time": "2015-07-20T21:32:21Z"}, {"text": "Comment on attachment 8636235\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nReview of attachment 8636235:\n-----------------------------------------------------------------\n\n::: dom/security/nsContentSecurityManager.cpp\n@@ +138,5 @@\n> +      {\n> +        if (requestingContext) {\n> +          nsCOMPtr<nsIDocument> doc = do_QueryInterface(requestingContext);\n> +          MOZ_ASSERT(doc != nullptr,\n> +                     \"type_dtd requires requestingContext of type doc\");\n\nSomething like MOZ_ASSERT(requestingContext->NodeType() == nsIDOMNode::DOCUMENT_TYPE) would be smaller/faster.", "author": "jonas@sicking.cc", "id": 10516512, "time": "2015-07-20T21:57:00Z"}, {"text": "Comment on attachment 8636235\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nReview of attachment 8636235:\n-----------------------------------------------------------------\n\n::: parser/htmlparser/nsExpatDriver.cpp\n@@ +788,5 @@\n>  \n>    CopyUTF8toUTF16(absURL, aAbsURL);\n>  \n>    nsCOMPtr<nsIChannel> channel;\n>    if (doc) {\n\nWe should do the same as in nsPluginHost, we could add something like:\nNS_ENSURE_TRUE(doc, NS_ERROR_FAILURE);\nand eliminate that if-else branch, because a nullPrincipal is most likely not going to pass any security checks.", "author": "ckerschb@christophkerschbaumer.com", "id": 10521961, "time": "2015-07-22T00:02:38Z"}, {"text": "Within nsExpatDriver.cpp there was no call to CheckLoadURIWithPrincipal(), now that we are adding the flag SEC_ALLOW_CROSS_ORIGIN_DATA_INHERITS we are performing a CheckLoadURIWithPrincipal() within the securityManager [1] which fails.\n\nOne of the tests that is failing [2] uses the following arguments for CheckLoadURIWithPrincipal().\n  loadingPrincipal: about:feeds\n  aURI: resource://gre/res/dtd/htmlmathml-f.ent\n\nNote sure how we can fix that problem, because we have to set one of the 5 securityFlags defined in LoadInfo.\nJonas, any suggestions?\n\n[1] http://mxr.mozilla.org/mozilla-central/source/dom/security/nsContentSecurityManager.cpp#72\n[2] browser/base/content/test/general/test_bug364677.html", "author": "ckerschb@christophkerschbaumer.com", "id": 10521978, "time": "2015-07-22T00:07:43Z"}, {"text": "If we don't want to do any security checks, then we should simply use the systemPrincipal as loadingPrincipal.\n\nI think there is some other code somewhere that disables DTD loading almost everywhere. That might be enough, though we'd need to find where that code is. Peterv might know.\n\nAnother option is if we can configure things such that the resource://gre/res/dtd/htmlmathml-f.ent URL is loadable from web content. I think the chrome registry has the ability to tell web-accessible URLs from non-web-accessible ones. I don't know if we have something similar for resource URLs. I don't know who knows this part of the code. Jst maybe.", "author": "jonas@sicking.cc", "id": 10522019, "time": "2015-07-22T00:25:57Z"}, {"text": "(In reply to Jonas Sicking (:sicking) from comment #5)\n> If we don't want to do any security checks, then we should simply use the\n> systemPrincipal as loadingPrincipal.\n\nWe could do that, which obviously works.\n\n> I think there is some other code somewhere that disables DTD loading almost\n> everywhere. That might be enough, though we'd need to find where that code\n> is. Peterv might know.\n\nPeter, do you happen to know where that code is?", "author": "ckerschb@christophkerschbaumer.com", "id": 10527021, "time": "2015-07-22T23:13:03Z"}, {"text": "Created attachment 8673405\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nThis bug has been lying around for quite some time now. Let's keep that moving again. Rebased the patch. Carrying over r+ from Jonas and cancelling the needinfo for peterv.", "author": "ckerschb@christophkerschbaumer.com", "id": 10835580, "time": "2015-10-13T23:37:31Z"}, {"text": "Comment on attachment 8673405\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nJohnny, probably you can help us out here: Can we use the Systemprincipal as the loadingPrincipal within nsExpatDriver? Please see also comment 5 from Jonas.", "author": "ckerschb@christophkerschbaumer.com", "id": 10835586, "time": "2015-10-13T23:39:17Z"}, {"text": "cc:ing bholley and bz who likely know more about this than I do.", "author": "jstenback+bmo@gmail.com", "id": 10835868, "time": "2015-10-14T01:56:51Z"}, {"text": "Looking at this function, we do the load in two cases:\n\n1)  aURLStr led to a chrome:// URI.  \n  or\n2)  We managed to map aFPIStr to a known local DTD url.\n\nHere we're falling into the second case.\n\nBut this whole thing looks totally broken to me.  Consider this XML file:\n\n  <!DOCTYPE window [\n  <!ENTITY % brandDTD SYSTEM \"chrome://branding/locale/brand.dtd\" >\n  %brandDTD;\n  ]>\n  <window>&brandShorterName;</window>\n\nWhen I load that from some random website, that website gets to sync-load that DTD and then can see what &brandShorterName; resolves to in it.  This seems totally broken to me.\n\nI tracked this back a bit and this \"allow all loads for chrome:// dtd files\" fates back to revision 3.1 of nsExpatDriver.cpp, back in 2002 (patch by harishd, r=heikki, very old times).\n\nIt looks like we added the content policy call in bug 418119 but no CheckLoadURI call...\n\nSo I think what we should do is only treat the loading principal as system in the \"known local DTD url\" case: those DTDs are basically specified in various web standards.  In the other cases, we should be using the principal of the document, or the null principal if there is no document (assuming that can happen at all).  And we should probably replace that misleading isChrome check with a check for the UI_RESOURCE or LOCAL_RESOURCE flag, since it's really just checking that it's OK to syncload from that URI.", "author": "bzbarsky@mit.edu", "id": 10835901, "time": "2015-10-14T02:23:15Z"}, {"text": "(In reply to Christoph Kerschbaumer [:ckerschb] from comment #6)\n> (In reply to Jonas Sicking (:sicking) from comment #5)\n> > I think there is some other code somewhere that disables DTD loading almost\n> > everywhere. That might be enough, though we'd need to find where that code\n> > is. Peterv might know.\n> \n> Peter, do you happen to know where that code is?\n\nSorry, missed this needinfo. I don't really understand what code you're looking for. nsExpatDriver::OpenInputStreamFromExternalDTD is the code that loads external DTDs, what else do you need?", "author": "peterv@propagandism.org", "id": 10837257, "time": "2015-10-14T12:32:05Z"}, {"text": "Created attachment 8673988\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nBoris, is this patch doing what you had in mind or are we missing something?", "author": "ckerschb@christophkerschbaumer.com", "id": 10839947, "time": "2015-10-15T00:06:39Z"}, {"text": "(In reply to Peter Van der Beken [:peterv] from comment #11)\n> (In reply to Christoph Kerschbaumer [:ckerschb] from comment #6)\n> > (In reply to Jonas Sicking (:sicking) from comment #5)\n> > > I think there is some other code somewhere that disables DTD loading almost\n> > > everywhere. That might be enough, though we'd need to find where that code\n> > > is. Peterv might know.\n> > \n> > Peter, do you happen to know where that code is?\n> \n> Sorry, missed this needinfo. I don't really understand what code you're\n> looking for. nsExpatDriver::OpenInputStreamFromExternalDTD is the code that\n> loads external DTDs, what else do you need?\n\nSorry Peter, I just realized I accidentally cleared the needinfo flag earlier this afternoon. That was not my intention. I think Boris is having a clear vision of what we should do within this patch, so solely relying on the systemPrincipal as proposed in comment 5 is not an option anymore.", "author": "ckerschb@christophkerschbaumer.com", "id": 10839953, "time": "2015-10-15T00:09:09Z"}, {"text": "Comment on attachment 8673988\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nAll the things that are UI_RESOURCE are also LOCAL_RESOURCE, so there is no point in checking both flags.  Pick one or the other, depending on what semantics we want to enforce here.  UI_RESOURCE is likely better, since it's more restrictive.\n\nHowever returning NS_ERROR_FAILURE if not UI_RESOURCE is wrong, because the stuff that LookupCatalogData needs to get passed to it is not UI_RESOURCE; it's http:// URIs.  So what you want to do is if not UI_RESOURCE do the LookupCatalogData thing.\n\nApart from that this looks reasonable, I think.", "author": "bzbarsky@mit.edu", "id": 10840023, "time": "2015-10-15T00:45:45Z"}, {"text": "Created attachment 8675936\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nHey Boris, here is an updated version. Please note that I added 'nsILoadInfo::SEC_ALLOW_CHROME' as a securityflag within the else branch. Reason is, when running test [1] we are loading:\n> channelURI: chrome://global/locale/global.dtd\n> loadingPrincipal: about:feeds\n> triggeringPrincipal: about:feeds\n> contentPolicyType: 13\n\nwhich would fail the CheckLoadURIWithPrincipal() check within the contentSecurityManager [2]. I suppose that's the right thing to do, but I would like you to confirm. Anything else we missed here?\n\n[1] browser/base/content/test/general/test_bug364677.html\n[2] http://mxr.mozilla.org/mozilla-central/source/dom/security/nsContentSecurityManager.cpp#57", "author": "ckerschb@christophkerschbaumer.com", "id": 10853142, "time": "2015-10-19T22:48:40Z"}, {"text": "Comment on attachment 8675936\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nSo the new behavior is that if !isUIResource we try to GetLocalDTDURI and if that fails we still do the load, no?\n\nThat's wrong.  The whole point of the existing checks here is that if !isUIResource and !localURI then we should not do the load.  Please add tests as needed, since clearly we have poor test coverage here.", "author": "bzbarsky@mit.edu", "id": 10861410, "time": "2015-10-21T21:50:25Z"}, {"text": "Comment on attachment 8675936\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nOh, and the ALLOW_CHROME bit is probably OK as long as that restricts to exposed chrome packages.  I can't tell from the documentation in nsILoadInfo.idl what the flag actually does, so can't comment intelligently on its use.  :(", "author": "bzbarsky@mit.edu", "id": 10861416, "time": "2015-10-21T21:52:18Z"}, {"text": "Created attachment 8685164\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nBoris, I added back that check:\n> if (!localURI) {\n>   return NS_ERROR_NOT_IMPLEMENTED;\n> }\nso that the load is denied if !isUIResource and !localURI.", "author": "ckerschb@christophkerschbaumer.com", "id": 10917624, "time": "2015-11-10T00:01:59Z"}, {"text": "Created attachment 8685166\nbug_1182546_nsexpatdriver_tests.patch\n\nI am not sure if I am testing the right thing here, so please let me know if I am mistaken. My guess would have been that ALLOW_CHROME allows to pass CheckLoadURIWithPrincipal() but then the load gets denied because \"chrome://branding/locale/brand.dtd\" is not accessible to content. In other words, I don't see 'contentaccessible=yes' here [1].\n\nThe test currently fails because the current setup allows loading \"chrome://branding/locale/brand.dtd\". I am not sure how to proceed at this point. Am I missing something?\n\n[1] http://mxr.mozilla.org/mozilla-central/source/browser/branding/nightly/locales/jar.mn#10", "author": "ckerschb@christophkerschbaumer.com", "id": 10917639, "time": "2015-11-10T00:05:47Z"}, {"text": "Comment on attachment 8685164\nbug_1182546_asyncopen2_nsexpatdriver.patch\n\nr=me.  Here's hoping I didn't miss anything....", "author": "bzbarsky@mit.edu", "id": 10920999, "time": "2015-11-10T21:51:49Z"}, {"text": "Comment on attachment 8685166\nbug_1182546_nsexpatdriver_tests.patch\n\n> The test currently fails\n\nCurrently as in on tip right now, or currently as in with the AsyncOpen2 patch?", "author": "bzbarsky@mit.edu", "id": 10921014, "time": "2015-11-10T21:53:40Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #21)\n> > The test currently fails\n> \n> Currently as in on tip right now, or currently as in with the AsyncOpen2\n> patch?\n\nSorry for not being precise. With 'currently' I meant: With the asyncopen2()-patch from this bug applied the test fails. In other words, we are allowing to access \"chrome://branding/locale/brand.dtd\" even though we shouldn't so that browserShortName translates into 'Nightly'.\n\nRunning the test without the asyncOpen2() patch from this bug applied, we get the same result, the test fails and we are allowing to access \"chrome://branding/locale/brand.dtd\" even though we shouldn't.", "author": "ckerschb@christophkerschbaumer.com", "id": 10922002, "time": "2015-11-11T04:21:28Z"}, {"text": "Comment on attachment 8685166\nbug_1182546_nsexpatdriver_tests.patch\n\nThis test looks reasonable to me.  I don't understand why it fails.  Per IRC discussion, Christoph will try to figure that out.", "author": "bzbarsky@mit.edu", "id": 10924953, "time": "2015-11-11T22:11:16Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #23)\n> This test looks reasonable to me.  I don't understand why it fails.  Per IRC\n> discussion, Christoph will try to figure that out.\n\nAs discussed on IRC the test is failing because %content/branding/ is indeed contentAccessible [1]. Only removing contentaccessible=yes from [1] is not doing the trick though. I don't know where that package lives and [2] confuses me even more :-(.\n\nAnyway, you were right, we are creating the new channel in the 'else' branch where we pass 'SEC_ALLOW_CHROME' as a securityFlag. Here are the important values of the loadinfo:\n> channelURI: chrome://branding/locale/brand.dtd\n> loadingPrincipal: http://mochi.test:8888/tests/browser/base/content/test/general/bug_1182546.xml\n> triggeringPrincipal: http://mochi.test:8888/tests/browser/base/content/test/general/bug_1182546.xml\n> contentPolicyType: 13\n\nSince the package is content accessible, the function CheckLoadURIWithPrincipal() returns true here [3] and allows the load.\n\nYou suggested we could file a bug to make %content/branding not accessible to content. Would you like that to happen within this bug? File a separate bug and make it block this one? Or would you like to rewrite the test to rely on a different URI?\n\n\n[1] http://mxr.mozilla.org/mozilla-central/source/browser/branding/nightly/content/jar.mn#6\n[2] http://mxr.mozilla.org/mozilla-central/search?string=%25content%2Fbranding%2F&find=&findi=&filter=%5E%5B%5E%5C0%5D*%24&hitlimit=&tree=mozilla-central\n[3] http://mxr.mozilla.org/mozilla-central/source/caps/nsScriptSecurityManager.cpp#814", "author": "ckerschb@christophkerschbaumer.com", "id": 10928973, "time": "2015-11-13T00:50:14Z"}, {"text": "For purposes of this bug, pick a different URI.  And file a separate bug, depending on this one, to move the DTD out of the content-exposed stuff.  Unless the Firefox folks are OK with pages reading all the stuff in that DTD, of course.", "author": "bzbarsky@mit.edu", "id": 10929173, "time": "2015-11-13T02:01:39Z"}, {"text": "Boris, by now I had quite so many attempts to make that test work, but I can't seem to find any URI that is not accessible from content, see some of my attempts underneath:\n\n%---test1---\n<!DOCTYPE html [\n  <!ENTITY % aboutDTD SYSTEM \"chrome://global/locale/about.dtd\">\n  %aboutDTD;\n]>\n<window>&about.credits.beforeLink;</window>\n\n\n%---test2----\n<!DOCTYPE window [\n  <!ENTITY % canvasDebuggerDTD SYSTEM \"chrome://devtools/locale/canvasdebugger.dtd\">\n\t%canvasDebuggerDTD;\n]>\n<window>&canvasDebuggerUI.recordSnapshot.tooltip;</window>\n\n\n%---test3----\n<!DOCTYPE window [\n<!ENTITY % brandDTD SYSTEM \"chrome://branding/locale/brand.dtd\" >\n  %brandDTD;\n]>\n<window>&brandShorterName;</window>\n\n\nThe good news is that the patch works correctly; if I remove the contentaccessible=yes from unofficial/content/jar.mn [1] then the *.dtd gets blocked correctly with the patch applied but loads without the patch applied.\n\nAny suggestions on what URI we could use?\n\n\n[1] http://mxr.mozilla.org/mozilla-central/source/browser/branding/unofficial/content/jar.mn#6", "author": "ckerschb@christophkerschbaumer.com", "id": 10929444, "time": "2015-11-13T05:09:17Z"}, {"text": "I have to admit that I don't understand why the contentaccessible annotation for content/branding affects a dtd in branding/locale...  Given that, I'm really nor sure how to tell which dtds are not contentaccessible.  Gijs, do you have any idea?", "author": "bzbarsky@mit.edu", "id": 10929468, "time": "2015-11-13T05:21:52Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #27)\n> I have to admit that I don't understand why the contentaccessible annotation\n> for content/branding affects a dtd in branding/locale...  Given that, I'm\n> really nor sure how to tell which dtds are not contentaccessible.  Gijs, do\n> you have any idea?\n\nThis is expected behaviour per https://developer.mozilla.org/en/docs/Chrome_Registration#contentaccessible , specifically:\n\n> The contentaccessible flag applies only to content packages: it is not\n> recognized for locale or skin registration. However, the matching locale\n> and skin packages will also be exposed to content.\n\n\nFor the test, really the most stable thing to do would be to register your own bootstrapped manifest and remove it again when you're done. The tests for the chrome registry ( https://dxr.mozilla.org/mozilla-central/source/chrome/test ) can probably help with figuring out how to do this. Specifically, https://dxr.mozilla.org/mozilla-central/source/chrome/test/unit/head_crtestutils.js#9 when used from an xpcshell test should work. Because autoRegister persists for the remainder of the executable's lifetime, you probably want to use this method instead if you're using mochitests: https://dxr.mozilla.org/mozilla-central/source/xpcom/components/nsIComponentManager.idl#81 .\n\nI realize this is more work, but I broke the tree the other day because we have tests in caps that rely on arbitrary details of how we package firefox (specifically, on a file called chrome://global/skin/passwordmgr/key.png or something actually existing), and Android is now fighting those same tests again as they move to \"finally\" remove a bunch of unused XUL/CSS from the fennec packaging. I'd really really really prefer not to exacerbate this problem.\n\nIf this is somehow completely impossible, if you look at the toolkit manifest the build system generates:\n\nhttps://dxr.mozilla.org/mozilla-central/source/obj-x86_64-unknown-linux-gnu/dist/bin/chrome/toolkit.manifest#5\n\nIt seems like a locale file from any of the (corresponding locale) packages without contentaccessible=yes should get the job done.", "author": "gijskruitbosch+bugs@gmail.com", "id": 10929832, "time": "2015-11-13T09:01:47Z"}, {"text": "Created attachment 8688089\nbug_1182546_nsexpatdriver_tests.patch\n\nGijs, thanks for your help. Registering a manifest seems complicated. However, I've tried and I am willing to invest a little more time if you can guide me. Please have a look at the other patch (which I am going to upload in a minute) before you review this patch. The testcase in this patch is the 'baseline' test which we could use in case we don't get the registration of the manifest working.", "author": "ckerschb@christophkerschbaumer.com", "id": 10937196, "time": "2015-11-16T21:38:26Z"}, {"text": "Created attachment 8688095\nbug_1182546_nsexpatdriver_tests_2.patch\n\nGijs, so this testcase is at a very half baked state at this point, but at least the basic components should be there. I am trying to register a new manifest using\n> SpecialPowers.Components.manager.addBootstrappedManifestLocation(MANIFEST_FILE);\n\nwhich throws:\n\n2 INFO TEST-UNEXPECTED-FAIL | browser/base/content/test/general/test_bug1182546.html | uncaught exception - Error: Permission denied for <http://mochi.test:8888> to create wrapper for object of class UnnamedClass at http://mochi.test:8888/tests/browser/base/content/test/general/test_bug1182546.html:32\n    simpletestOnerror@SimpleTest/SimpleTest.js:1519:11\n    OnErrorEventHandlerNonNull*@SimpleTest/SimpleTest.js:1506:1\n\n\nBut I suppose that's how the whole dance should somehow work, right? It's the first time I have to deal with packaging for Firefox, so any help is highly appreciated. Thanks!", "author": "ckerschb@christophkerschbaumer.com", "id": 10937218, "time": "2015-11-16T21:42:44Z"}, {"text": "Comment on attachment 8688095\nbug_1182546_nsexpatdriver_tests_2.patch\n\n(In reply to Christoph Kerschbaumer [:ckerschb] from comment #30)\n> Created attachment 8688095\n> bug_1182546_nsexpatdriver_tests_2.patch\n> \n> Gijs, so this testcase is at a very half baked state at this point, but at\n> least the basic components should be there. I am trying to register a new\n> manifest using\n> > SpecialPowers.Components.manager.addBootstrappedManifestLocation(MANIFEST_FILE);\n> \n> which throws:\n> \n> 2 INFO TEST-UNEXPECTED-FAIL |\n> browser/base/content/test/general/test_bug1182546.html | uncaught exception\n> - Error: Permission denied for <http://mochi.test:8888> to create wrapper\n> for object of class UnnamedClass at\n> http://mochi.test:8888/tests/browser/base/content/test/general/\n> test_bug1182546.html:32\n>     simpletestOnerror@SimpleTest/SimpleTest.js:1519:11\n>     OnErrorEventHandlerNonNull*@SimpleTest/SimpleTest.js:1506:1\n> \n> \n> But I suppose that's how the whole dance should somehow work, right? It's\n> the first time I have to deal with packaging for Firefox, so any help is\n> highly appreciated. Thanks!\n\nSeems like you should use a browser mochitest instead of a plain one? Is there some reason that won't work?", "author": "gijskruitbosch+bugs@gmail.com", "id": 10937246, "time": "2015-11-16T21:53:09Z"}, {"text": "(In reply to :Gijs Kruitbosch from comment #31)\n> Seems like you should use a browser mochitest instead of a plain one? Is\n> there some reason that won't work?\n\nMainly because I wanted to simulate that a 'user' can't access a chrome package if it's not accessible to content. I suppose a browser chrome test would work.", "author": "ckerschb@christophkerschbaumer.com", "id": 10937255, "time": "2015-11-16T21:55:57Z"}, {"text": "(In reply to Christoph Kerschbaumer [:ckerschb] from comment #32)\n> (In reply to :Gijs Kruitbosch from comment #31)\n> > Seems like you should use a browser mochitest instead of a plain one? Is\n> > there some reason that won't work?\n> \n> Mainly because I wanted to simulate that a 'user' can't access a chrome\n> package if it's not accessible to content. I suppose a browser chrome test\n> would work.\n\nRight. You would add the manifest in the test, then load a page in-content that tests the accessibility of the locale file.", "author": "gijskruitbosch+bugs@gmail.com", "id": 10937264, "time": "2015-11-16T21:57:47Z"}, {"text": "Comment on attachment 8688089\nbug_1182546_nsexpatdriver_tests.patch\n\nIf it's going to speed things up here, considering this is a security issue, land this and deal with the \"proper\" test in a followup?", "author": "gijskruitbosch+bugs@gmail.com", "id": 10937269, "time": "2015-11-16T21:58:22Z"}, {"text": "Comment on attachment 8688095\nbug_1182546_nsexpatdriver_tests_2.patch\n\n(In reply to :Gijs Kruitbosch from comment #34)\n> If it's going to speed things up here, considering this is a security issue,\n> land this and deal with the \"proper\" test in a followup?\n\nThat sounds like a good idea to me - thanks!", "author": "ckerschb@christophkerschbaumer.com", "id": 10937848, "time": "2015-11-17T00:54:08Z"}, {"text": "Created attachment 8689247\nbug_1182546_nsexpatdriver_make_test_contentaccessible.patch\n\nBoris, test [1] is failing because inlinesettings is not marked to be accessible from content which makes CheckLoadURIWithPrincipal bail out with an error not allowing the load [2].\n\n[1] toolkit/mozapps/extensions/test/browser/browser_inlinesettings_custom.js\n[2] http://mxr.mozilla.org/mozilla-central/source/caps/nsScriptSecurityManager.cpp#856", "author": "ckerschb@christophkerschbaumer.com", "id": 10945496, "time": "2015-11-19T00:03:22Z"}, {"text": "Comment on attachment 8689247\nbug_1182546_nsexpatdriver_make_test_contentaccessible.patch\n\nThis is a test-only addon?  r=me", "author": "bzbarsky@mit.edu", "id": 10945869, "time": "2015-11-19T02:34:59Z"}, {"text": "Hi, this got backed out for test failures like https://treeherder.mozilla.org/logviewer.html#?job_id=17518341&repo=mozilla-inbound", "author": "cbook@mozilla.com", "id": 10946511, "time": "2015-11-19T09:27:50Z"}, {"text": "Created attachment 8689879\nbug_1182546_nsexpatdriver_make_branding_contentaccessible.patch\n\n(In reply to Carsten Book [:Tomcat] from comment #38)\n> Hi, this got backed out for test failures like\n> https://treeherder.mozilla.org/logviewer.html#?job_id=17518341&repo=mozilla-\n> inbound\n\nGijs, at the moment it seems there is an inconsistency between browser/, b2g/ and mobile/ where branding is accessible from content for browser/ [1] but not for b2g/ and mobile/ which caused the patches of this bug to be backed out.\n\nI agree with Boris that we should indeed figure out whether the .dtd needs to be accessible from content or not (See Comment 24, 25 and 26). For this bug however, I think it's fine that branding is accessible from content not only for browser/ but also for b2g/ and mobile/.\n\nTRY looks good [2]. Let me know if you feel differently and we can discuss our options again.\n\n[1] http://mxr.mozilla.org/mozilla-central/search?string=content%2Bbranding\n[2] https://treeherder.mozilla.org/#/jobs?repo=try&revision=8a9baaf72709", "author": "ckerschb@christophkerschbaumer.com", "id": 10949925, "time": "2015-11-20T03:16:54Z"}, {"text": "Comment on attachment 8689879\nbug_1182546_nsexpatdriver_make_branding_contentaccessible.patch\n\nReview of attachment 8689879:\n-----------------------------------------------------------------\n\nrs=me", "author": "gijskruitbosch+bugs@gmail.com", "id": 10950568, "time": "2015-11-20T09:43:32Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/9c2bad72beab\nhttps://hg.mozilla.org/mozilla-central/rev/5c551d0f4bfe\nhttps://hg.mozilla.org/mozilla-central/rev/529d0520902c\nhttps://hg.mozilla.org/mozilla-central/rev/792401624285", "author": "cbook@mozilla.com", "id": 10956088, "time": "2015-11-23T13:27:20Z"}], "cf_last_resolved": "2015-11-23T13:27:32Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-07-02T18:32:39Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1182535], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "DOM: Security", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla45", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "ckerschb@christophkerschbaumer.com", "id": 363267, "name": "ckerschb@christophkerschbaumer.com", "real_name": "Christoph Kerschbaumer [:ckerschb]"}, "whiteboard": "[adv-main45-][post-critsmash-triage]", "mentors": [], "cc_detail": [{"email": "abillings@mozilla.com", "id": 280903, "name": "abillings@mozilla.com", "real_name": "Al Billings [:abillings]"}, {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (no decent commit message means r-)"}, {"email": "cbook@mozilla.com", "id": 277293, "name": "cbook@mozilla.com", "real_name": "Carsten Book [:Tomcat]"}, {"email": "ckerschb@christophkerschbaumer.com", "id": 363267, "name": "ckerschb@christophkerschbaumer.com", "real_name": "Christoph Kerschbaumer [:ckerschb]"}, {"email": "dtownsend@mozilla.com", "id": 91159, "name": "dtownsend@mozilla.com", "real_name": "Dave Townsend [:mossop]"}, {"email": "franziskuskiefer@gmail.com", "id": 397236, "name": "franziskuskiefer@gmail.com", "real_name": "Franziskus Kiefer [:fkiefer or :franziskus]"}, {"email": "gaubugzilla@palant.de", "id": 109976, "name": "gaubugzilla@palant.de", "real_name": "Wladimir Palant (for Adblock Plus info Cc bugzilla@adblockplus.org)"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (under the weather; responses will be slow)"}, {"email": "jld@mozilla.com", "id": 462836, "name": "jld@mozilla.com", "real_name": "Jed Davis [:jld] (\u23f0UTC-7)"}, {"email": "jorge@mozilla.com", "id": 189742, "name": "jorge@mozilla.com", "real_name": "Jorge Villalobos [:jorgev]"}, {"email": "jstenback+bmo@gmail.com", "id": 12352, "name": "jstenback+bmo@gmail.com", "real_name": "Johnny Stenback  (:jst)"}, {"email": "mwobensmith@mozilla.com", "id": 452604, "name": "mwobensmith@mozilla.com", "real_name": "Matt Wobensmith [:mwobensmith][:matt:]"}, {"email": "noemi.freiredecarlos@telefonica.com", "id": 469924, "name": "noemi.freiredecarlos@telefonica.com", "real_name": "Noem\u00ed Freire (:noemi)"}, {"email": "peterv@propagandism.org", "id": 24295, "name": "peterv@propagandism.org", "real_name": "Peter Van der Beken [:peterv]"}, {"email": "tanvi@mozilla.com", "id": 430652, "name": "tanvi@mozilla.com", "real_name": "Tanvi Vyas[:tanvi]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "blocks", "added": "1182535"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "mozilla@christophkerschbaumer.com"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-07-10T17:04:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jonas@sicking.cc"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8636235, "added": "review?(jonas@sicking.cc)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-07-20T21:32:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jonas@sicking.cc)", "attachment_id": 8636235, "added": "review+"}], "who": "jonas@sicking.cc", "when": "2015-07-20T21:57:00Z"}, {"changes": [{"removed": "jonas@sicking.cc", "field_name": "cc", "added": ""}], "who": "jonas@sicking.cc", "when": "2015-07-20T21:57:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tanvi@mozilla.com"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-07-21T15:24:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jonas@sicking.cc"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jonas@sicking.cc)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-07-22T00:07:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "peterv@propagandism.org"}, {"removed": "needinfo?(jonas@sicking.cc)", "field_name": "flagtypes.name", "added": ""}], "who": "jonas@sicking.cc", "when": "2015-07-22T00:25:57Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(peterv@propagandism.org)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-07-22T23:13:03Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "", "field_name": "cc", "added": "noemi.freiredecarlos@telefonica.com"}], "who": "noemi.freiredecarlos@telefonica.com", "when": "2015-09-17T10:15:23Z"}, {"changes": [{"removed": "needinfo?(peterv@propagandism.org)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8673405, "added": "review+"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-10-13T23:37:31Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8636235, "added": "1"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-10-13T23:37:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jst@mozilla.org"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8673405, "added": "review?(jst@mozilla.org)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-10-13T23:39:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bobbyholley@gmail.com, bzbarsky@mit.edu"}], "who": "jstenback+bmo@gmail.com", "when": "2015-10-14T01:56:51Z"}, {"changes": [{"removed": "", "field_name": "groups", "added": "dom-core-security"}], "who": "bzbarsky@mit.edu", "when": "2015-10-14T02:23:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mozilla@christophkerschbaumer.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mozilla@christophkerschbaumer.com)"}], "who": "peterv@propagandism.org", "when": "2015-10-14T12:32:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "franziskuskiefer@gmail.com"}, {"removed": "needinfo?(mozilla@christophkerschbaumer.com)", "field_name": "flagtypes.name", "added": ""}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-10-14T21:12:55Z"}, {"changes": [{"removed": "jonas@sicking.cc", "field_name": "cc", "added": ""}], "who": "jonas@sicking.cc", "when": "2015-10-14T22:08:00Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8673405, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(jst@mozilla.org)", "attachment_id": 8673405, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8673988, "added": "feedback?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-10-15T00:06:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(bzbarsky@mit.edu)", "attachment_id": 8673988, "added": "feedback+"}], "who": "bzbarsky@mit.edu", "when": "2015-10-15T00:45:45Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8673988, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8675936, "added": "review?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-10-19T22:48:40Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8675936, "added": "review-"}], "who": "bzbarsky@mit.edu", "when": "2015-10-21T21:50:25Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8675936, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8685164, "added": "review?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-10T00:01:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8685166, "added": "feedback?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-10T00:05:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8685164, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2015-11-10T21:51:49Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mozilla@christophkerschbaumer.com)"}], "who": "bzbarsky@mit.edu", "when": "2015-11-10T21:53:40Z"}, {"changes": [{"removed": "needinfo?(mozilla@christophkerschbaumer.com)", "field_name": "flagtypes.name", "added": ""}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-11T04:21:28Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(bzbarsky@mit.edu)", "attachment_id": 8685166, "added": "feedback+"}], "who": "bzbarsky@mit.edu", "when": "2015-11-11T22:11:16Z"}, {"changes": [{"removed": "bobbyholley@gmail.com", "field_name": "cc", "added": ""}], "who": "bobbyholley@gmail.com", "when": "2015-11-11T22:53:04Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-13T00:50:14Z"}, {"changes": [{"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2015-11-13T02:01:39Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-13T05:09:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gijskruitbosch+bugs@gmail.com"}, {"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": "needinfo?(gijskruitbosch+bugs@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2015-11-13T05:21:52Z"}, {"changes": [{"removed": "needinfo?(gijskruitbosch+bugs@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-11-13T09:01:47Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8685166, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8688089, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-16T21:38:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8688095, "added": "feedback?(gijskruitbosch+bugs@gmail.com)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-16T21:42:44Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mozilla@christophkerschbaumer.com)"}, {"field_name": "flagtypes.name", "removed": "feedback?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8688095, "added": ""}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-11-16T21:53:09Z"}, {"changes": [{"removed": "needinfo?(mozilla@christophkerschbaumer.com)", "field_name": "flagtypes.name", "added": ""}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-16T21:55:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8688089, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-11-16T21:58:22Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8688095, "added": "1"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-17T00:54:08Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "csectype-disclosure, privacy, sec-moderate"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-17T00:59:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8689247, "added": "review?(bzbarsky@mit.edu)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-19T00:03:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8689247, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2015-11-19T02:34:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cbook@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mozilla@christophkerschbaumer.com)"}], "who": "cbook@mozilla.com", "when": "2015-11-19T09:27:50Z"}, {"changes": [{"removed": "needinfo?(mozilla@christophkerschbaumer.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8689879, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-20T03:16:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8689879, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-11-20T09:43:32Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1226823"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-21T21:07:38Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1226869"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-21T21:08:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "trev.moz@adblockplus.org"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-22T16:33:33Z"}, {"changes": [{"removed": "---", "field_name": "target_milestone", "added": "mozilla45"}, {"removed": "---", "field_name": "cf_status_firefox45", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-11-23T13:27:20Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-11-23 05:27:32"}], "who": "cbook@mozilla.com", "when": "2015-11-23T13:27:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jld@mozilla.com"}, {"removed": "Use channel->ascynOpen2 in parser/htmlparser/nsExpatDriver.cpp", "field_name": "summary", "added": "Use channel->asyncOpen2 in parser/htmlparser/nsExpatDriver.cpp"}], "who": "jld@mozilla.com", "when": "2015-11-23T19:10:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jorge@mozilla.com"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-23T20:16:24Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "addon-compat"}], "who": "jorge@mozilla.com", "when": "2015-11-23T23:26:37Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1227554"}], "who": "bzbarsky@mit.edu", "when": "2015-11-24T17:06:33Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1227981"}], "who": "gaubugzilla@palant.de", "when": "2015-11-25T15:26:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dtownsend@mozilla.com"}], "who": "bzbarsky@mit.edu", "when": "2015-11-25T17:38:37Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1228116"}], "who": "ckerschb@christophkerschbaumer.com", "when": "2015-11-25T21:45:59Z"}, {"changes": [{"removed": "dom-core-security", "field_name": "groups", "added": "core-security-release"}], "who": "dveditz@mozilla.com", "when": "2015-12-04T03:38:17Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1228117"}], "who": "dveditz@mozilla.com", "when": "2016-02-29T20:12:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "abillings@mozilla.com"}, {"removed": "1228117", "field_name": "depends_on", "added": ""}, {"removed": "", "field_name": "whiteboard", "added": "[adv-main45-]"}], "who": "abillings@mozilla.com", "when": "2016-02-29T20:13:10Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1228117"}], "who": "dveditz@mozilla.com", "when": "2016-02-29T20:13:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mwobensmith@mozilla.com"}, {"removed": "[adv-main45-]", "field_name": "whiteboard", "added": "[adv-main45-][post-critsmash-triage]"}], "who": "mwobensmith@mozilla.com", "when": "2016-02-29T21:41:32Z"}, {"changes": [{"removed": "core-security-release", "field_name": "groups", "added": ""}], "who": "dveditz@mozilla.com", "when": "2016-07-02T18:32:39Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}