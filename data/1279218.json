{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "annevk@annevk.nl", "mentors_detail": [], "depends_on": [1269807, 1386389, 1433221], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["dev-doc-complete", "site-compat"], "cc_detail": [{"email": "agaynor@mozilla.com", "id": 537703, "name": "agaynor@mozilla.com", "real_name": "Alex Gaynor [:Alex_Gaynor]"}, {"email": "amarchesini@mozilla.com", "id": 446257, "name": "amarchesini@mozilla.com", "real_name": "Andrea Marchesini [:baku]"}, {"email": "benjamin@smedbergs.us", "id": 7044, "name": "benjamin@smedbergs.us", "real_name": "Benjamin Smedberg"}, {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (Vacation Jun 16-24) (no decent commit message means r-)"}, {"email": "cmills@mozilla.com", "id": 475085, "name": "cmills@mozilla.com", "real_name": "Chris Mills (Mozilla, MDN editor) [:cmills]"}, {"email": "d@domenic.me", "id": 308714, "name": "d@domenic.me", "real_name": "Domenic Denicola"}, {"email": "daniel.tche@gmail.com", "id": 539669, "name": "daniel.tche@gmail.com", "real_name": "Daniel Bertuol Guimar\u00e3es"}, {"email": "hskupin@gmail.com", "id": 76551, "name": "hskupin@gmail.com", "real_name": "Henrik Skupin (:whimboo)"}, {"email": "jld@mozilla.com", "id": 462836, "name": "jld@mozilla.com", "real_name": "Jed Davis [:jld] (\u23f0UTC-6)"}, {"email": "jmaher@mozilla.com", "id": 324370, "name": "jmaher@mozilla.com", "real_name": "Joel Maher ( :jmaher ) (UTC-4)"}, {"email": "kohei.yoshino@gmail.com", "id": 232883, "name": "kohei.yoshino@gmail.com", "real_name": "Kohei Yoshino [:kohei]"}, {"email": "kyle@nonpolynomial.com", "id": 424719, "name": "kyle@nonpolynomial.com", "real_name": "Kyle Machulis [:qdot] [:kmachulis] (if a patch has no decent commit message, automatic r-)"}, {"email": "marsjaninzmarsa@gmail.com", "id": 470481, "name": "marsjaninzmarsa@gmail.com", "real_name": "Kuba Niewiarowski"}, {"email": "mike@w3.org", "id": 319983, "name": "mike@w3.org", "real_name": "Michael[tm] Smith"}, {"email": "VYV03354@nifty.ne.jp", "id": 5842, "name": "VYV03354@nifty.ne.jp", "real_name": "Masatoshi Kimura [:emk]"}, {"email": "william@fastmail.com", "id": 414438, "name": "william@fastmail.com", "real_name": "William Chen [:wchen]"}, {"email": "yxu@mozilla.com", "id": 565421, "name": "yxu@mozilla.com", "real_name": ""}], "cf_last_resolved": "2017-07-31T09:30:08Z", "attachments": [{"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-18T21:59:28Z", "type_id": 4, "creation_date": "2017-07-18T21:41:04Z", "id": 1613741, "setter": "bzbarsky@mit.edu"}], "content_type": "text/x-review-board-request", "id": 8886391}, {"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-17T15:34:41Z", "type_id": 4, "creation_date": "2017-07-13T22:16:20Z", "id": 1611467, "setter": "benjamin@smedbergs.us"}, {"status": "+", "name": "review", "modification_date": "2017-07-18T22:09:18Z", "type_id": 4, "creation_date": "2017-07-18T21:41:04Z", "id": 1613742, "setter": "bzbarsky@mit.edu"}], "content_type": "text/x-review-board-request", "id": 8886392}, {"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-17T17:37:58Z", "type_id": 4, "creation_date": "2017-07-13T22:16:20Z", "id": 1611468, "setter": "jld@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8886393}, {"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-18T22:09:57Z", "type_id": 4, "creation_date": "2017-07-18T21:41:04Z", "id": 1613743, "setter": "bzbarsky@mit.edu"}], "content_type": "text/x-review-board-request", "id": 8886394}, {"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-29T03:30:27Z", "type_id": 4, "creation_date": "2017-07-18T21:41:04Z", "id": 1613744, "setter": "bzbarsky@mit.edu"}], "content_type": "text/x-review-board-request", "id": 8886395}, {"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-19T21:29:30Z", "type_id": 4, "creation_date": "2017-07-18T21:41:04Z", "id": 1613740, "setter": "benjamin@smedbergs.us"}], "content_type": "text/x-review-board-request", "id": 8887670}, {"creator": "kyle@nonpolynomial.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2017-07-29T03:39:43Z", "type_id": 4, "creation_date": "2017-07-28T19:42:07Z", "id": 1620025, "setter": "bzbarsky@mit.edu"}], "content_type": "text/x-review-board-request", "id": 8891478}], "votes": 3, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 73, "comments": [{"text": "https://github.com/whatwg/html/pull/1399 has a good summary of what that entails. Chrome has removed support already and Edge is interested.\n\nhttps://bugs.webkit.org/show_bug.cgi?id=157926 is the corresponding WebKit issue.", "author": "annevk@annevk.nl", "id": 11475458, "time": "2016-06-09T13:34:59Z"}, {"text": "Benjamin, I think you're tracking this.", "author": "overholt@mozilla.com", "id": 11501436, "time": "2016-06-24T20:17:51Z"}, {"text": "Once we drop support for Java in FF52, I'm all about this. Before then I'm not willing to take any risks.", "author": "benjamin@smedbergs.us", "id": 11501472, "time": "2016-06-24T20:33:17Z"}, {"text": "Posted the site compatibility doc: https://www.fxsitecompat.com/en-CA/docs/2016/applet-support-will-be-removed/", "author": "kohei.yoshino@gmail.com", "id": 11763718, "time": "2016-10-06T00:31:55Z"}, {"text": "Please wait until 53 for this, because we're still supporting applet via a pref on 52 ESR.", "author": "benjamin@smedbergs.us", "id": 11765110, "time": "2016-10-06T13:30:15Z"}, {"text": "qdot, do you want to take it?", "author": "amarchesini@mozilla.com", "id": 12281492, "time": "2017-05-02T10:06:42Z"}, {"text": "Why is ESR relevant to mainline development?", "author": "VYV03354@nifty.ne.jp", "id": 12297455, "time": "2017-05-06T01:34:41Z"}, {"text": "We had to release the 52 ESR with applet/java support before starting on this bug.", "author": "kyle@nonpolynomial.com", "id": 12297469, "time": "2017-05-06T02:07:11Z"}, {"text": "*** Bug 1351814 has been marked as a duplicate of this bug. ***", "author": "kyle@nonpolynomial.com", "id": 12346318, "time": "2017-05-24T22:30:22Z"}, {"text": "*** Bug 1351886 has been marked as a duplicate of this bug. ***", "author": "kyle@nonpolynomial.com", "id": 12346323, "time": "2017-05-24T22:32:10Z"}, {"text": "Adding webplatform test cleanup to the landing criteria for this bug, since landing this is basically the trigger for html spec removal also. See https://github.com/whatwg/html/pull/1399#issuecomment-303875482", "author": "kyle@nonpolynomial.com", "id": 12346377, "time": "2017-05-24T22:59:09Z"}, {"text": "Created attachment 8886391\nBug 1279218 - Remove Applet tag;\n\nRemoves applet tag interfaces, and changes HTML5 parser to output\nHTMLUnknownElement when tag is found. Removes tag process from various\nplaces in the browser.\n\nReview commit: https://reviewboard.mozilla.org/r/155860/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/155860/", "author": "kyle@nonpolynomial.com", "id": 12472114, "time": "2017-07-13T22:16:20Z"}, {"text": "Created attachment 8886392\nBug 1279218 - Remove Applet/Java support from nsObjectLoadingContent\n\nRemoves support for the applet element and java specific logic from\nnsObjectLoadingContent.\n\nReview commit: https://reviewboard.mozilla.org/r/155862/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/155862/", "author": "kyle@nonpolynomial.com", "id": 12472115, "time": "2017-07-13T22:16:20Z"}, {"text": "Created attachment 8886393\nBug 1279218 - Remove Applet element support from WebBrowserPersist;\n\nReview commit: https://reviewboard.mozilla.org/r/155864/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/155864/", "author": "kyle@nonpolynomial.com", "id": 12472116, "time": "2017-07-13T22:16:20Z"}, {"text": "Created attachment 8886394\nBug 1279218 - Remove tests related to the applet tag;\n\nReview commit: https://reviewboard.mozilla.org/r/155866/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/155866/", "author": "kyle@nonpolynomial.com", "id": 12472117, "time": "2017-07-13T22:16:20Z"}, {"text": "Created attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nReview commit: https://reviewboard.mozilla.org/r/155868/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/155868/", "author": "kyle@nonpolynomial.com", "id": 12472118, "time": "2017-07-13T22:16:20Z"}, {"text": "Posted the site compatibility note: https://www.fxsitecompat.com/en-CA/docs/2017/applet-support-has-been-dropped/", "author": "kohei.yoshino@gmail.com", "id": 12472617, "time": "2017-07-14T02:35:45Z"}, {"text": "Comment on attachment 8886392\nBug 1279218 - Remove Applet/Java support from nsObjectLoadingContent\n\nhttps://reviewboard.mozilla.org/r/155862/#review162908\n\nr=me either way but please file followups for additional cleanup if appropriate.\n\n::: dom/base/nsObjectLoadingContent.h:304\n(Diff revision 1)\n>        eSupportImages       = 1u << 0, // Images are supported (imgILoader)\n>        eSupportPlugins      = 1u << 1, // Plugins are supported (nsIPluginHost)\n>        eSupportDocuments    = 1u << 2, // Documents are supported\n>                                          // (nsIDocumentLoaderFactory)\n>                                          // This flag always includes SVG\n> -      eSupportClassID      = 1u << 3, // The classid attribute is supported\n> +      eSupportClassID      = 1u << 3, // The classid attribute is supported. No\n\nWill there be a followup to remove eSupportClassID completely?\n\n::: dom/base/nsObjectLoadingContent.h:424\n(Diff revision 1)\n>       * - mOriginalURI         : The src or data attribute on the element\n>       * - mURI                 : The final URI, considering mChannel if\n>       *                          mChannelLoaded is set\n>       * - mContentType         : The final content type, considering mChannel if\n>       *                          mChannelLoaded is set\n>       * - mBaseURI             : The object's base URI, which may be set by the\n\nIs `codebase` the only way to get a custom base URI for this? If so do we still need `mBaseURI` at all?", "author": "benjamin@smedbergs.us", "id": 12479437, "time": "2017-07-17T15:34:41Z"}, {"text": "Comment on attachment 8886394\nBug 1279218 - Remove tests related to the applet tag;\n\nhttps://reviewboard.mozilla.org/r/155866/#review162914\n\nDoes it make sense to/can you remove all of testplugin/javaplugin as part of this?", "author": "benjamin@smedbergs.us", "id": 12479444, "time": "2017-07-17T15:35:51Z"}, {"text": "Comment on attachment 8886393\nBug 1279218 - Remove Applet element support from WebBrowserPersist;\n\nhttps://reviewboard.mozilla.org/r/155864/#review163002", "author": "jld@mozilla.com", "id": 12479965, "time": "2017-07-17T17:37:58Z"}, {"text": "Created attachment 8887670\nBug 1279218 - Remove Java Test Plugin and rest of Java references;\n\nReview commit: https://reviewboard.mozilla.org/r/158552/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/158552/", "author": "kyle@nonpolynomial.com", "id": 12484508, "time": "2017-07-18T21:41:04Z"}, {"text": "Comment on attachment 8886391\nBug 1279218 - Remove Applet tag;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155860/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12484509, "time": "2017-07-18T21:41:04Z"}, {"text": "Comment on attachment 8886392\nBug 1279218 - Remove Applet/Java support from nsObjectLoadingContent\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155862/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12484510, "time": "2017-07-18T21:41:04Z"}, {"text": "Comment on attachment 8886393\nBug 1279218 - Remove Applet element support from WebBrowserPersist;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155864/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12484511, "time": "2017-07-18T21:41:04Z"}, {"text": "Comment on attachment 8886394\nBug 1279218 - Remove tests related to the applet tag;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155866/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12484512, "time": "2017-07-18T21:41:04Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155868/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12484513, "time": "2017-07-18T21:41:04Z"}, {"text": "Comment on attachment 8886391\nBug 1279218 - Remove Applet tag;\n\nhttps://reviewboard.mozilla.org/r/155860/#review163836\n\nThis needs changes to test_interfaces.html, I would think.\n\n::: dom/bindings/Bindings.conf:405\n(Diff revision 2)\n>  'History': {\n>      'headerFile': 'nsHistory.h',\n>      'nativeType': 'nsHistory'\n>  },\n>  \n>  'HTMLAppletElement': {\n\nWhy is this needed at all?  We're removing this interface, aren't we?  So what's the point of this descriptor?\n\n::: dom/html/HTMLSharedObjectElement.h\n(Diff revision 2)\n>  \n>    NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED_NO_UNLINK(HTMLSharedObjectElement,\n>                                                       nsGenericHTMLElement)\n>  \n> -  // WebIDL API for <applet>\n> +  // WebIDL <embed> api\n> -  void GetAlign(DOMString& aValue)\n\nWhy are you losing the GetAlign implementation?  Please don't.\n\n::: dom/html/HTMLSharedObjectElement.h\n(Diff revision 2)\n> -  // XPCOM GetCodebase is ok; note that it's a URI attribute\n> -  void SetCodeBase(const nsAString& aValue, ErrorResult& aRv)\n> -  {\n> -    SetHTMLAttr(nsGkAtoms::codebase, aValue, aRv);\n> -  }\n> -  void GetHeight(DOMString& aValue)\n\nPlease don't lose GetHeight either.\n\n::: dom/html/HTMLSharedObjectElement.h\n(Diff revision 2)\n> -  }\n> -  void SetHspace(uint32_t aValue, ErrorResult& aRv)\n> -  {\n> -    SetUnsignedIntAttr(nsGkAtoms::hspace, aValue, 0, aRv);\n> -  }\n> -  void GetName(DOMString& aValue)\n\nOr GetName.\n\n::: dom/html/HTMLSharedObjectElement.h\n(Diff revision 2)\n> -  }\n> -  void SetVspace(uint32_t aValue, ErrorResult& aRv)\n> -  {\n> -    SetUnsignedIntAttr(nsGkAtoms::vspace, aValue, 0, aRv);\n> -  }\n> -  void GetWidth(DOMString& aValue)\n\nOr GetWidth.\n\n::: dom/html/HTMLSharedObjectElement.h\n(Diff revision 2)\n>    {\n>      SetHTMLAttr(nsGkAtoms::width, aValue, aRv);\n>    }\n> -\n> -  // WebIDL <embed> api\n> -  // XPCOM GetSrc is ok; note that it's a URI attribute\n\nPlease don't lose this comment.\n\n::: dom/html/HTMLSharedObjectElement.h\n(Diff revision 2)\n> -  // XPCOM GetSrc is ok; note that it's a URI attribute\n>    void SetSrc(const nsAString& aValue, ErrorResult& aRv)\n>    {\n>      SetHTMLAttr(nsGkAtoms::src, aValue, aRv);\n>    }\n> -  void GetType(DOMString& aValue)\n\nAnd this function should stay too.\n\n::: dom/html/HTMLSharedObjectElement.h:127\n(Diff revision 2)\n>                                            bool aNotify) override;\n>  \n>  private:\n> -  virtual ~HTMLSharedObjectElement();\n> +  ~HTMLSharedObjectElement();\n>  \n>    nsIAtom *URIAttrName() const\n\nDoes this function still need to exist?  It only has one consumer; that consumer could compare to nsGkAtoms::src directly.\n\n::: dom/html/HTMLSharedObjectElement.cpp:93\n(Diff revision 2)\n>                                 nsIImageLoadingContent,\n>                                 imgIOnloadBlocker,\n>                                 nsIChannelEventSink)\n>    NS_INTERFACE_TABLE_TO_MAP_SEGUE\n> -  NS_INTERFACE_MAP_ENTRY_IF_TAG(nsIDOMHTMLAppletElement, applet)\n>    NS_INTERFACE_MAP_ENTRY_IF_TAG(nsIDOMHTMLEmbedElement, embed)\n\nDoes this still need to be IF_TAG?  I don't think it does.\n\n::: dom/html/HTMLSharedObjectElement.cpp:401\n(Diff revision 2)\n>      MOZ_ASSERT(mNodeInfo->Equals(nsGkAtoms::embed));\n>      return nsIContentPolicy::TYPE_INTERNAL_EMBED;\n>    }\n>  }\n>  \n> +NS_IMPL_STRING_ATTR(HTMLSharedObjectElement, Align, align)\n\nIf we're touching this stuff anyway, might be better to remove it altogether (from here and nsIDOMHTMLEmbedElement.idl).  Followup better for that.", "author": "bzbarsky@mit.edu", "id": 12484565, "time": "2017-07-18T21:59:28Z"}, {"text": "Comment on attachment 8886391\nBug 1279218 - Remove Applet tag;\n\nhttps://reviewboard.mozilla.org/r/155860/#review163842\n\n::: dom/html/HTMLObjectElement.cpp:563\n(Diff revision 2)\n>  }\n>  \n>  uint32_t\n>  HTMLObjectElement::GetCapabilities() const\n>  {\n> -  return nsObjectLoadingContent::GetCapabilities() | eSupportClassID;\n> +  return nsObjectLoadingContent::GetCapabilities();\n\nOh, shouldn't this be in part 2?  Seems to me like it should be.", "author": "bzbarsky@mit.edu", "id": 12484567, "time": "2017-07-18T22:00:13Z"}, {"text": "Comment on attachment 8886392\nBug 1279218 - Remove Applet/Java support from nsObjectLoadingContent\n\nhttps://reviewboard.mozilla.org/r/155862/#review163848\n\n::: dom/base/nsObjectLoadingContent.cpp\n(Diff revision 2)\n>  #include \"nsIDocShellLoadInfo.h\"\n>  #include \"nsIDocument.h\"\n>  #include \"nsIDOMCustomEvent.h\"\n>  #include \"nsIDOMDocument.h\"\n>  #include \"nsIDOMHTMLObjectElement.h\"\n> -#include \"nsIDOMHTMLAppletElement.h\"\n\nThis should have been in part 1.\n\n::: dom/base/nsObjectLoadingContent.cpp:892\n(Diff revision 2)\n>      if (name.IsEmpty())\n>        continue;\n>  \n>      nsCOMPtr<nsIContent> parent = element->GetParent();\n>      nsCOMPtr<nsIDOMHTMLObjectElement> domObject;\n> -    nsCOMPtr<nsIDOMHTMLAppletElement> domApplet;\n> +    while (!domObject && parent) {\n\nFollowup bug to rewrite this in terms of FromContent?\n\n::: dom/base/nsObjectLoadingContent.cpp\n(Diff revision 2)\n> -    // Java expects a directory as the codebase, or else it will construct\n> -    // relative URIs incorrectly :(\n> -    codebaseStr.Assign('.');\n> -  }\n> -\n> -  if (!codebaseStr.IsEmpty()) {\n\nHmm.  So we used to consider the \"codebase\" attr on non-applet tags too here?  I think we did...  Is changing that ok?\n\n::: dom/base/nsObjectLoadingContent.cpp\n(Diff revision 2)\n> -  /// Check if the original (pre-channel) content-type or URI changed, and\n> -  /// record mOriginal{ContentType,URI}\n\nWhy is this comment being removed?\n\n::: dom/plugins/base/nsPluginInstanceOwner.cpp\n(Diff revision 2)\n>  #include \"nsIPluginWidget.h\"\n>  #include \"nsViewManager.h\"\n>  #include \"nsIDocShellTreeOwner.h\"\n>  #include \"nsIDOMHTMLObjectElement.h\"\n>  #include \"nsIAppShell.h\"\n> -#include \"nsIDOMHTMLAppletElement.h\"\n\nThis sould have been in part 1, right?\n\n::: dom/plugins/base/nsPluginInstanceOwner.cpp:1307\n(Diff revision 2)\n>    NS_ENSURE_ARG_POINTER(result);\n>  \n>    *result = nsPluginTagType_Unknown;\n>  \n>    nsCOMPtr<nsIContent> content = do_QueryReferent(mContent);\n> -  if (content->IsHTMLElement(nsGkAtoms::applet))\n> +  if (content->IsHTMLElement(nsGkAtoms::embed))\n\nThis should have been in part 1, I would think.", "author": "bzbarsky@mit.edu", "id": 12484600, "time": "2017-07-18T22:09:18Z"}, {"text": "Comment on attachment 8886394\nBug 1279218 - Remove tests related to the applet tag;\n\nhttps://reviewboard.mozilla.org/r/155866/#review163854", "author": "bzbarsky@mit.edu", "id": 12484602, "time": "2017-07-18T22:09:57Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nhttps://reviewboard.mozilla.org/r/155868/#review163856\n\nShould presumably be folded into part 1 before landing?", "author": "bzbarsky@mit.edu", "id": 12484612, "time": "2017-07-18T22:12:38Z"}, {"text": "OK, so changes that should presumably be happening (based on code search and <https://github.com/whatwg/html/pull/1399#issue-158960327>) that I'm not seeing:\n\n1) Remove applet from nsGenericHTMLElement::ShouldExposeIdAsHTMLDocumentProperty.\n2) Remove applet from nsGenericHTMLElement::CanHaveName.\n3) Remove applet rom the isXULOrPluginElement bit in Element::GetBindingURL.\n4) Remove applet from the special-check in EventStateManager::FireContextClick\n5) Remove applet from IsAllNamedElement in HTMLAllCollection.cpp.\n6) Changing document.applets to return an empty collection\n7) Remove checks for applet in nsXMLContentSink::CloseElement and nsXMLContentSink::IsMonolithicContainer.\n8) Remove check for applet in txMozillaXMLOutput::endElement\n9) Remove dead checks for applet in nsPluginFrame::GetMinISize and nsPluginFrame::GetDesiredSize.\n10) Remove special cases from HTML5 parser for applet (?)  Not sure which things should go and which\n    should stay, here.  I don't know whether the HTML5 parser has something like the \"monolithic\n    container\" bits from the XML parser above, for example.\n11) Remove the DoneAddingChildren bit for applet in nsHtml5TreeBuilder::elementPopped\n12) Rename HTMLSharedObjectElement to HTMLEmbedElement.", "author": "bzbarsky@mit.edu", "id": 12484643, "time": "2017-07-18T22:23:31Z"}, {"text": "Comment on attachment 8887670\nBug 1279218 - Remove Java Test Plugin and rest of Java references;\n\nhttps://reviewboard.mozilla.org/r/158552/#review164352", "author": "benjamin@smedbergs.us", "id": 12487999, "time": "2017-07-19T21:29:30Z"}, {"text": "Regarding point 10 in comment 31, the HTML standard continues to parse applet element start and end tags the same way as those of marquee and object. Anything that's not related to building a tree can go though (and was never in the standard to begin with).", "author": "annevk@annevk.nl", "id": 12507009, "time": "2017-07-26T07:31:32Z"}, {"text": "Right, I'm not talking about changing the parsing model.  I'm talking about gecko-internal special handling like preventing parser interrupts inside <applet>, assuming we do that right now.", "author": "bzbarsky@mit.edu", "id": 12508049, "time": "2017-07-26T13:33:21Z"}, {"text": ":wchen, I'm not sure where parser interrupts happen for tags as mentioned in Comment 34, and the parsing for applet looks like it basically follows marquee right now. Do you know if there's else I need to remove in the parser?", "author": "kyle@nonpolynomial.com", "id": 12509114, "time": "2017-07-26T18:15:22Z"}, {"text": ":bz, what would you recommend for created the null content list in nsHTMLDocument::Applets()? We don't have an nsContentList constructor that can just produce a null list on its own at the moment, and I'm not seeing any straight-forward way to create an nsIHTMLCollection that's not /actually/ a collection of something.", "author": "kyle@nonpolynomial.com", "id": 12509250, "time": "2017-07-26T18:41:58Z"}, {"text": "The HTML5 parser doesn't have any special handing when we create an applet element, the only extra thing we do is call DoneAddingChildren on the element when it gets popped off the stack in tree builder.", "author": "william@fastmail.com", "id": 12509341, "time": "2017-07-26T19:12:14Z"}, {"text": "We don't really have a thing for the \"nothing in it\" content list right now.\n\nYou could either do nsContentList with a nsContentListMatchFunc that always returns false, or create a new small subclass of nsBaseContentList that inherits from nsIHTMLCollection, implements nsIDOMHTMLCollection, and returns null and 0 as needed from the various methods involved.", "author": "bzbarsky@mit.edu", "id": 12509523, "time": "2017-07-26T20:20:15Z"}, {"text": "Created attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nReview commit: https://reviewboard.mozilla.org/r/162616/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/162616/", "author": "kyle@nonpolynomial.com", "id": 12516566, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8886391\nBug 1279218 - Remove Applet tag;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155860/diff/2-3/", "author": "kyle@nonpolynomial.com", "id": 12516567, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8886392\nBug 1279218 - Remove Applet/Java support from nsObjectLoadingContent\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155862/diff/2-3/", "author": "kyle@nonpolynomial.com", "id": 12516568, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8886393\nBug 1279218 - Remove Applet element support from WebBrowserPersist;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155864/diff/2-3/", "author": "kyle@nonpolynomial.com", "id": 12516569, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8886394\nBug 1279218 - Remove tests related to the applet tag;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155866/diff/2-3/", "author": "kyle@nonpolynomial.com", "id": 12516570, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8887670\nBug 1279218 - Remove Java Test Plugin and rest of Java references;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/158552/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12516571, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155868/diff/2-3/", "author": "kyle@nonpolynomial.com", "id": 12516572, "time": "2017-07-28T19:42:07Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nhttps://reviewboard.mozilla.org/r/162616/#review167954\n\nIt looks like this change just does a delete and add instead of \"hg mv\".  Please use \"hg mv\", which will not only preserve history but make for a much more reviewable diff...\n\n::: dom/base/nsObjectLoadingContent.cpp:2960\n(Diff revision 1)\n>          if (child->IsHTMLElement(nsGkAtoms::embed)) {\n> -          HTMLSharedObjectElement* embed = static_cast<HTMLSharedObjectElement*>(child);\n> +          HTMLEmbedElement* embed = static_cast<HTMLEmbedElement*>(child);\n\nThis can become:\n\n    if (auto* embed = HTMLEmbedElement::FromContent(child)) {\n\n::: dom/bindings/Bindings.conf:427\n(Diff revision 1)\n>  'HTMLEmbedElement': {\n> -    'nativeType': 'mozilla::dom::HTMLSharedObjectElement'\n> +    'nativeType': 'mozilla::dom::HTMLEmbedElement'\n>  },\n\nThis entire block can go away, since it now has the right name.", "author": "bzbarsky@mit.edu", "id": 12516609, "time": "2017-07-28T19:56:21Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155868/diff/3-4/", "author": "kyle@nonpolynomial.com", "id": 12516743, "time": "2017-07-28T20:41:20Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/162616/diff/1-2/", "author": "kyle@nonpolynomial.com", "id": 12516744, "time": "2017-07-28T20:41:20Z"}, {"text": "Even though I pushed https://reviewboard.mozilla.org/r/155868/diff/4#index_header this morning, it's marked as r+ from a week ago, before the patch even existed. It hasn't actually received a review yet and still needs to be looked at.", "author": "kyle@nonpolynomial.com", "id": 12516769, "time": "2017-07-28T20:45:51Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nhttps://reviewboard.mozilla.org/r/155868/#review167982\n\nr- for the leak bit.  The rest looks good.\n\n::: dom/base/nsContentList.h:182\n(Diff revision 4)\n> +\n> +protected:\n> +  virtual ~nsEmptyContentList() {}\n> +private:\n> +  // This has to be a strong reference, the root might go away before the list.\n> +  nsCOMPtr<nsINode> mRoot;\n\nThis needs to be cycle-collected; otherwise it will leak.  Note that nsSimpleContentList cycle-collects stuff.\n\n::: editor/libeditor/HTMLEditUtils.cpp:598\n(Diff revision 4)\n>    ELEM(abbr, true, true, GROUP_PHRASE, GROUP_INLINE_ELEMENT),\n>    ELEM(acronym, true, true, GROUP_PHRASE, GROUP_INLINE_ELEMENT),\n>    ELEM(address, true, true, GROUP_BLOCK,\n>         GROUP_INLINE_ELEMENT | GROUP_P),\n> +  // While applet is no longer a valid tag, removing it here breaks the editor\n> +  // in a lot of ways. Just leave it.\n\nSomething more specific than \"a lot of ways\" (e.g. which tests fail or something) would be nice here in case someone does want to take a stab at removing this.\n\n::: layout/generic/nsPluginFrame.cpp:382\n(Diff revision 4)\n>  nsPluginFrame::GetMinISize(gfxContext *aRenderingContext)\n>  {\n>    nscoord result = 0;\n>  \n>    if (!IsHidden(false)) {\n> -    if (mContent->IsAnyOfHTMLElements(nsGkAtoms::applet,\n> +    if (mContent->IsAnyOfHTMLElements(nsGkAtoms::embed)) {\n\nIsHTMLElement(), not IsAnyOfHTMLElements(), since now we just have the one tag.\n\n::: layout/generic/nsPluginFrame.cpp:444\n(Diff revision 4)\n>  \n>    aMetrics.Width() = aReflowInput.ComputedWidth();\n>    aMetrics.Height() = aReflowInput.ComputedHeight();\n>  \n> -  // for EMBED and APPLET, default to 240x200 for compatibility\n> -  if (mContent->IsAnyOfHTMLElements(nsGkAtoms::applet,\n> +  // for EMBED, default to 240x200 for compatibility\n> +  if (mContent->IsAnyOfHTMLElements(nsGkAtoms::embed)) {\n\nAgain, IsHTMLElement.\n\n::: netwerk/streamconv/converters/nsUnknownDecoder.cpp\n(Diff revision 4)\n>        MATCHES_TAG(\"base\")     ||\n>        MATCHES_TAG(\"style\")    ||\n>        MATCHES_TAG(\"div\")      ||\n>        MATCHES_TAG(\"p\")        ||\n>        MATCHES_TAG(\"font\")     ||\n> -      MATCHES_TAG(\"applet\")   ||\n\nI'm not sure we should change this part, honestly.  This is a heuristic sniffer; it doesn't care whether the content is _valid_; it cares whether the sender wanted it treated as HTML.\n\nIt probably doesn't matter too much either way, but I'd prefer this part happen in a separate bug for regression-tracking purposes.", "author": "bzbarsky@mit.edu", "id": 12516818, "time": "2017-07-28T21:04:15Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/155868/diff/4-5/", "author": "kyle@nonpolynomial.com", "id": 12517208, "time": "2017-07-28T23:49:06Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/162616/diff/2-3/", "author": "kyle@nonpolynomial.com", "id": 12517209, "time": "2017-07-28T23:49:06Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nhttps://reviewboard.mozilla.org/r/155868/#review167982\n\n> I'm not sure we should change this part, honestly.  This is a heuristic sniffer; it doesn't care whether the content is _valid_; it cares whether the sender wanted it treated as HTML.\n> \n> It probably doesn't matter too much either way, but I'd prefer this part happen in a separate bug for regression-tracking purposes.\n\nI just removed this change, instead of possibly causing a regression.", "author": "kyle@nonpolynomial.com", "id": 12517213, "time": "2017-07-28T23:51:11Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/162616/diff/3-4/", "author": "kyle@nonpolynomial.com", "id": 12517270, "time": "2017-07-29T00:13:37Z"}, {"text": "Comment on attachment 8886395\nBug 1279218 - Additional applet tag logic removal;\n\nhttps://reviewboard.mozilla.org/r/155868/#review168064", "author": "bzbarsky@mit.edu", "id": 12517504, "time": "2017-07-29T03:30:27Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nhttps://reviewboard.mozilla.org/r/162616/#review168066\n\nr=me with the nits below.  Thank you; this diff was much easier to see changes in!\n\n::: dom/base/nsObjectLoadingContent.cpp:2961\n(Diff revision 4)\n>            nsStyleUtil::IsSignificantChild(child, true, false)) {\n>          aType = eFallbackAlternate;\n>        }\n>        if (thisIsObject) {\n> -        if (child->IsHTMLElement(nsGkAtoms::embed)) {\n> -          HTMLSharedObjectElement* embed = static_cast<HTMLSharedObjectElement*>(child);\n> +        if (auto embed = HTMLEmbedElement::FromContent(child)) {\n> +          static_cast<HTMLEmbedElement*>(embed)->StartObjectLoad(true, true);\n\nYou don't need the static_cast.  \"embed\" is already HTMLEmbedElement*.  Just do:\n\n    embed->StartObjectLoad(true, true);\n\n::: dom/bindings/BindingUtils.cpp:2312\n(Diff revision 4)\n>  \n>    JS::Rooted<JSObject*> maybeObjLC(aCx, aObj);\n>    nsObjectLoadingContent* htmlobject;\n>    nsresult rv = UNWRAP_OBJECT(HTMLObjectElement, &maybeObjLC, htmlobject);\n>    if (NS_FAILED(rv)) {\n>      rv = UnwrapObject<prototypes::id::HTMLEmbedElement,\n\nThis can just become:\n\n    rv = UNWRAP_OBJECT(HTMLEmbedElement, &maybeObjLC, htmlobject);\n  \nsince now the interface name and class name match, so you don't have to specify them separately.\n\n::: dom/html/HTMLEmbedElement.cpp:26\n(Diff revision 4)\n>  #include \"mozilla/dom/Event.h\"\n>  #endif\n>  #include \"mozilla/dom/HTMLObjectElement.h\"\n>  \n>  \n> -NS_IMPL_NS_NEW_HTML_ELEMENT_CHECK_PARSER(SharedObject)\n> +NS_IMPL_NS_NEW_HTML_ELEMENT_CHECK_PARSER(Embed)\n\nThis can now be NS_IMPL_NS_NEW_HTML_ELEMENT(Embed), since you no longer need aFromParser in the constructor.\n\n::: dom/html/HTMLEmbedElement.cpp:31\n(Diff revision 4)\n> -NS_IMPL_NS_NEW_HTML_ELEMENT_CHECK_PARSER(SharedObject)\n> +NS_IMPL_NS_NEW_HTML_ELEMENT_CHECK_PARSER(Embed)\n>  \n>  namespace mozilla {\n>  namespace dom {\n>  \n> -HTMLSharedObjectElement::HTMLSharedObjectElement(already_AddRefed<mozilla::dom::NodeInfo>& aNodeInfo,\n> +HTMLEmbedElement::HTMLEmbedElement(already_AddRefed<mozilla::dom::NodeInfo>& aNodeInfo,\n\nAnd the constructor can drop the aFromParser arg.\n\n::: dom/html/HTMLEmbedElement.cpp:198\n(Diff revision 4)\n> -HTMLSharedObjectElement::IsHTMLFocusable(bool aWithMouse,\n> +HTMLEmbedElement::IsHTMLFocusable(bool aWithMouse,\n>                                           bool *aIsFocusable,\n>                                           int32_t *aTabIndex)\n>  {\n> -  if (mNodeInfo->Equals(nsGkAtoms::embed) || Type() == eType_Plugin) {\n>      // Has plugin content: let the plugin decide what to do in terms of\n\nThis needs to actually be outdented, right?  Same for the rest of this function, up to the '}'.\n\n::: dom/html/HTMLEmbedElement.cpp\n(Diff revision 4)\n> -  if (mNodeInfo->Equals(nsGkAtoms::embed)) {\n>      return &MapAttributesIntoRuleExceptHidden;\n>    }\n\nNeeds to be outdented.\n\n::: dom/tests/mochitest/bugs/test_bug396843.html:20\n(Diff revision 4)\n>  </p>\n>  <div id=\"content\" style=\"display: none\">\n>    \n>  </div>\n>  <pre id=\"test\">\n> -<script class=\"testbody\" type=\"text/javascript\">\n> +  <script class=\"testbody\" type=\"text/javascript\">\n\nNot sure why all the indentation changes in this file...", "author": "bzbarsky@mit.edu", "id": 12517511, "time": "2017-07-29T03:39:43Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nhttps://reviewboard.mozilla.org/r/162616/#review168066\n\n> You don't need the static_cast.  \"embed\" is already HTMLEmbedElement*.  Just do:\n> \n>     embed->StartObjectLoad(true, true);\n\nFor some reason I do seem to need to cast it, otherwise this happens in clang:\n\n/share/code/mozbuild/mc-hg/dom/base/nsObjectLoadingContent.cpp:2961:18: error: no member named 'StartObjectLoad' in 'nsGenericHTMLElement'\n           embed->StartObjectLoad(true, true);\n           ~~~~~  ^\n\n> And the constructor can drop the aFromParser arg.\n\nWhat about the call to SetIsNetworkCreated in the constructor? I see that NS_IMPL_NS_NEW_HTML_ELEMENT just drops the boolean, do we assume it to always or never be from the parser?", "author": "kyle@nonpolynomial.com", "id": 12517529, "time": "2017-07-29T04:13:11Z"}, {"text": "> /share/code/mozbuild/mc-hg/dom/base/nsObjectLoadingContent.cpp:2961:18: error: no member named 'StartObjectLoad' in 'nsGenericHTMLElement'\n\nOh.  That's because HTMLEmbedElement doesn't actually declare FromContent, so you're getting the nsGenericHTMLElement one.  And then the static_cast is NOT safe: you could have any HTML element!\n\nYou want to throw:\n\n  NS_IMPL_FROMCONTENT_HTML_WITH_TAG(HTMLEmbedElement, embed)\n\nin the class decl of HTMLEmbedElement to make the FromContent thing work.\n\n> What about the call to SetIsNetworkCreated in the constructor?\n\nAh, I missed that line.  Then you do need aFromParser, so just keep things as they are.", "author": "bzbarsky@mit.edu", "id": 12517534, "time": "2017-07-29T04:20:48Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=0fa4c6dad66e", "author": "kyle@nonpolynomial.com", "id": 12517540, "time": "2017-07-29T04:37:46Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/162616/diff/4-5/", "author": "kyle@nonpolynomial.com", "id": 12517541, "time": "2017-07-29T04:41:12Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/162616/diff/5-6/", "author": "kyle@nonpolynomial.com", "id": 12517543, "time": "2017-07-29T04:46:03Z"}, {"text": "Comment on attachment 8891478\nBug 1279218 - Rename HTMLSharedObjectElement to HTMLEmbedElement;\n\nhttps://reviewboard.mozilla.org/r/162616/#review168146", "author": "kyle@nonpolynomial.com", "id": 12518683, "time": "2017-07-30T18:30:39Z"}, {"text": "Comment on attachment 8886391\nBug 1279218 - Remove Applet tag;\n\nhttps://reviewboard.mozilla.org/r/155860/#review168148", "author": "kyle@nonpolynomial.com", "id": 12518686, "time": "2017-07-30T18:34:41Z"}, {"text": "Pushed by kmachulis@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/e6f1f895449d\nRemove Applet tag; r=bz\nhttps://hg.mozilla.org/integration/autoland/rev/1d9ee33174d5\nRemove Applet/Java support from nsObjectLoadingContent; r=bsmedberg,bz\nhttps://hg.mozilla.org/integration/autoland/rev/e825f2ea34c1\nRemove Applet element support from WebBrowserPersist; r=jld\nhttps://hg.mozilla.org/integration/autoland/rev/91274528b1f8\nRemove tests related to the applet tag; r=bz\nhttps://hg.mozilla.org/integration/autoland/rev/893ac8dfa0a1\nRemove Java Test Plugin and rest of Java references; r=bsmedberg\nhttps://hg.mozilla.org/integration/autoland/rev/1c702ea52e96\nAdditional applet tag logic removal; r=bz\nhttps://hg.mozilla.org/integration/autoland/rev/2ee0b5a0560a\nRename HTMLSharedObjectElement to HTMLEmbedElement; r=bz", "author": "pulsebot@bots.tld", "id": 12518688, "time": "2017-07-30T18:37:26Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/e6f1f895449d\nhttps://hg.mozilla.org/mozilla-central/rev/1d9ee33174d5\nhttps://hg.mozilla.org/mozilla-central/rev/e825f2ea34c1\nhttps://hg.mozilla.org/mozilla-central/rev/91274528b1f8\nhttps://hg.mozilla.org/mozilla-central/rev/893ac8dfa0a1\nhttps://hg.mozilla.org/mozilla-central/rev/1c702ea52e96\nhttps://hg.mozilla.org/mozilla-central/rev/2ee0b5a0560a", "author": "aryx.bugmail@gmx-topmail.de", "id": 12521404, "time": "2017-07-31T09:30:08Z"}, {"text": "I've documented this; I have marked the element page as obsolete, and included details of when it was dropped/removal progress in other browsers:\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet\n\nI also added a note here to mention how the document.applets property now returns an empty HTMLCollection:\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/Document/applets\n\nLast, I added a note to \nhttps://developer.mozilla.org/en-US/Firefox/Releases/56#Removals_from_the_web_platform\n\nLet me know if that look OK. Thanks!", "author": "cmills@mozilla.com", "id": 12525058, "time": "2017-08-01T09:41:00Z"}, {"text": "when this landed the total number of compiler warnings were reduced:\n== Change summary for alert #8435 (as of July 30 2017 18:36 UTC) ==\n\nImprovements:\n\n  2%  compiler warnings summary linux64 pgo      1,550.08 -> 1,516.92\n\nFor up to date results, see: https://treeherder.mozilla.org/perf.html#/alerts?id=8435", "author": "jmaher@mozilla.com", "id": 12530441, "time": "2017-08-02T19:57:26Z"}, {"text": "https://github.com/webcompat/web-bugs/issues/10722\n\nIt seems to cause some of sites flash video can't play based on this bugfix?", "author": "yxu@mozilla.com", "id": 12747106, "time": "2017-10-11T02:53:10Z"}, {"text": "I don't think so. Chrome doesn't support <applet> either per comment 0 and the issue you point to suggests the site works in Chrome.", "author": "annevk@annevk.nl", "id": 12747149, "time": "2017-10-11T03:11:26Z"}, {"text": "Sites could be sniffing and depending on <applet> in Firefox somehow but not in Chrome.\n\nOr it's possible we removed more, or less, stuff than Chrome did...\n\nIt would be good to have some sort of minimized testcase for the problem from that webcompat issue.", "author": "bzbarsky@mit.edu", "id": 12747157, "time": "2017-10-11T03:15:13Z"}, {"text": "Hey!\nLooks like something went wrong when implementing this:\n\nhttps://github.com/webcompat/web-bugs/issues/17004#issuecomment-391903536\n\npushlog_url: https://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=18718bb58de42a44f461e41e1d8fe7922d83f68d&tochange=5bf13799a1fcb612701222f8f877afc45eb7254f", "author": "sergiu.logigan@softvision.ro", "id": 13363270, "time": "2018-05-25T09:12:07Z"}, {"text": "The regression range contains bug 1433221, not this bug.", "author": "VYV03354@nifty.ne.jp", "id": 13363374, "time": "2018-05-25T10:06:16Z"}], "id": 1279218, "priority": "P3", "cc": ["agaynor@mozilla.com", "amarchesini@mozilla.com", "benjamin@smedbergs.us", "bzbarsky@mit.edu", "cmills@mozilla.com", "d@domenic.me", "daniel.tche@gmail.com", "hskupin@gmail.com", "jld@mozilla.com", "jmaher@mozilla.com", "kohei.yoshino@gmail.com", "kyle@nonpolynomial.com", "marsjaninzmarsa@gmail.com", "mike@w3.org", "VYV03354@nifty.ne.jp", "william@fastmail.com", "yxu@mozilla.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1385719, 1386008], "qa_contact": "", "creation_time": "2016-06-09T13:34:59Z", "cf_status_firefox_esr52": "---", "component": "DOM", "assigned_to_detail": {"email": "kyle@nonpolynomial.com", "id": 424719, "name": "kyle@nonpolynomial.com", "real_name": "Kyle Machulis [:qdot] [:kmachulis] (if a patch has no decent commit message, automatic r-)"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "mozilla56", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "annevk@annevk.nl", "id": 102998, "name": "annevk@annevk.nl", "real_name": "Anne (:annevk)"}, "whiteboard": "Blocked on removing Java support. Revisit after Firefox 52 ESR.", "mentors": [], "summary": "Remove <applet> element", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-29T06:37:01Z", "assigned_to": "kyle@nonpolynomial.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "benjamin@smedbergs.us"}, {"removed": "", "field_name": "whiteboard", "added": "btpp-followup-2016-07-05"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(benjamin@smedbergs.us)"}], "who": "overholt@mozilla.com", "when": "2016-06-24T20:17:51Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}, {"removed": "", "field_name": "depends_on", "added": "1269807"}, {"removed": "btpp-followup-2016-07-05", "field_name": "whiteboard", "added": "Blocked on removing Java support. Revisit for FF52."}, {"removed": "needinfo?(benjamin@smedbergs.us)", "field_name": "flagtypes.name", "added": ""}], "who": "benjamin@smedbergs.us", "when": "2016-06-24T20:33:17Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed, site-compat"}, {"removed": "", "field_name": "cc", "added": "kohei.yoshino@gmail.com"}], "who": "kohei.yoshino@gmail.com", "when": "2016-06-24T20:34:07Z"}, {"changes": [{"removed": "Blocked on removing Java support. Revisit for FF52.", "field_name": "whiteboard", "added": "Blocked on removing Java support. Revisit for FF52. [btpp-backlog]"}], "who": "overholt@mozilla.com", "when": "2016-06-24T20:36:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "VYV03354@nifty.ne.jp"}], "who": "VYV03354@nifty.ne.jp", "when": "2016-06-24T22:27:48Z"}, {"changes": [{"removed": "---", "field_name": "target_milestone", "added": "mozilla53"}], "who": "kohei.yoshino@gmail.com", "when": "2016-10-06T13:53:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "d@domenic.me"}], "who": "d@domenic.me", "when": "2016-10-07T17:47:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "daniel.tche@gmail.com"}], "who": "daniel.tche@gmail.com", "when": "2016-11-03T10:40:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "amarchesini@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(amarchesini@mozilla.com)"}], "who": "amarchesini@mozilla.com", "when": "2017-03-03T11:24:21Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bruant.d@gmail.com"}], "who": "bruant.d@gmail.com", "when": "2017-03-17T14:47:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "agaynor@mozilla.com"}], "who": "agaynor@mozilla.com", "when": "2017-04-28T20:10:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kyle@nonpolynomial.com"}, {"removed": "needinfo?(amarchesini@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(kyle@nonpolynomial.com)"}], "who": "amarchesini@mozilla.com", "when": "2017-05-02T10:06:42Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "kyle@nonpolynomial.com"}, {"removed": "needinfo?(kyle@nonpolynomial.com)", "field_name": "flagtypes.name", "added": ""}], "who": "kyle@nonpolynomial.com", "when": "2017-05-02T17:32:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mike@w3.org"}], "who": "mike@w3.org", "when": "2017-05-03T11:50:50Z"}, {"changes": [{"removed": "Blocked on removing Java support. Revisit for FF52. [btpp-backlog]", "field_name": "whiteboard", "added": "Blocked on removing Java support. Revisit after Firefox 52 ESR."}], "who": "overholt@mozilla.com", "when": "2017-05-05T20:40:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8886392, "added": "review?(benjamin@smedbergs.us)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8886393, "added": "review?(jld@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "jld@mozilla.com"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-13T22:16:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(benjamin@smedbergs.us)", "attachment_id": 8886392, "added": "review+"}], "who": "benjamin@smedbergs.us", "when": "2017-07-17T15:34:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jld@mozilla.com)", "attachment_id": 8886393, "added": "review+"}], "who": "jld@mozilla.com", "when": "2017-07-17T17:37:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8886391, "added": "review?(bzbarsky@mit.edu)"}, {"field_name": "attachments.description", "removed": "Bug 1279218 - Remove Applet/Java support from nsObjectLoadingContent;", "attachment_id": 8886392, "added": "Bug 1279218 - Remove Applet/Java support from nsObjectLoadingContent"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8886392, "added": "review?(bzbarsky@mit.edu)"}, {"field_name": "attachments.description", "removed": "Bug 1279218 - Remove tests related to the applet tag", "attachment_id": 8886394, "added": "Bug 1279218 - Remove tests related to the applet tag;"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8886394, "added": "review?(bzbarsky@mit.edu)"}, {"field_name": "attachments.description", "removed": "Bug 1279218 - Update wpts for absense of applet tag", "attachment_id": 8886395, "added": "Bug 1279218 - Update wpts for absense of applet tag;"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8886395, "added": "review?(bzbarsky@mit.edu)"}, {"removed": "", "field_name": "cc", "added": "bzbarsky@mit.edu"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8887670, "added": "review?(benjamin@smedbergs.us)"}, {"field_name": "attachments.description", "removed": "Bug 1279218 - Remove Applet tag", "attachment_id": 8886391, "added": "Bug 1279218 - Remove Applet tag;"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-18T21:41:04Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8886391, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2017-07-18T21:59:28Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8886392, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2017-07-18T22:09:18Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8886394, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2017-07-18T22:09:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8886395, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2017-07-18T22:12:38Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kyle@nonpolynomial.com)"}], "who": "bzbarsky@mit.edu", "when": "2017-07-18T22:23:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(benjamin@smedbergs.us)", "attachment_id": 8887670, "added": "review+"}], "who": "benjamin@smedbergs.us", "when": "2017-07-19T21:29:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wchen@mozilla.com"}, {"removed": "needinfo?(kyle@nonpolynomial.com)", "field_name": "flagtypes.name", "added": "needinfo?(wchen@mozilla.com)"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-26T18:15:22Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-26T18:41:58Z"}, {"changes": [{"removed": "needinfo?(wchen@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "william@fastmail.com", "when": "2017-07-26T19:12:14Z"}, {"changes": [{"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2017-07-26T20:20:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8891478, "added": "review?(bzbarsky@mit.edu)"}, {"field_name": "attachments.description", "removed": "Bug 1279218 - Update wpts for absense of applet tag;", "attachment_id": 8886395, "added": "Bug 1279218 - Additional applet tag logic removal;"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-28T19:42:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8891478, "added": "review-"}], "who": "bzbarsky@mit.edu", "when": "2017-07-28T19:56:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review-", "attachment_id": 8891478, "added": "review?(bzbarsky@mit.edu)"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-28T20:41:20Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-28T20:45:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8886395, "added": "review-"}], "who": "bzbarsky@mit.edu", "when": "2017-07-28T21:04:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review-", "attachment_id": 8886395, "added": "review?(bzbarsky@mit.edu)"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-28T23:49:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8886395, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2017-07-29T03:30:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8891478, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2017-07-29T03:39:43Z"}, {"changes": [{"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2017-07-29T04:20:48Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1385719"}], "who": "kyle@nonpolynomial.com", "when": "2017-07-30T18:34:33Z"}, {"changes": [{"removed": "mozilla53", "field_name": "target_milestone", "added": "---"}], "who": "ryanvm@gmail.com", "when": "2017-07-31T00:09:52Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla56"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2017-07-31 09:30:08"}, {"removed": "---", "field_name": "cf_status_firefox56", "added": "fixed"}], "who": "aryx.bugmail@gmx-topmail.de", "when": "2017-07-31T09:30:08Z"}, {"changes": [{"removed": "dev-doc-needed", "field_name": "keywords", "added": "dev-doc-complete"}, {"removed": "", "field_name": "cc", "added": "cmills@mozilla.com"}], "who": "cmills@mozilla.com", "when": "2017-08-01T09:41:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hskupin@gmail.com"}], "who": "hskupin@gmail.com", "when": "2017-08-01T10:41:02Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1386008"}], "who": "kyle@nonpolynomial.com", "when": "2017-08-01T19:52:43Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1386389"}], "who": "continuation@gmail.com", "when": "2017-08-01T20:03:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jmaher@mozilla.com"}], "who": "jmaher@mozilla.com", "when": "2017-08-02T19:57:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "marsjaninzmarsa@gmail.com"}], "who": "marsjaninzmarsa@gmail.com", "when": "2017-09-22T12:10:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yxu@mozilla.com"}], "who": "yxu@mozilla.com", "when": "2017-10-09T07:27:11Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1433221"}], "who": "kyle@nonpolynomial.com", "when": "2018-05-01T05:28:36Z"}, {"changes": [{"removed": "bruant.d@gmail.com", "field_name": "cc", "added": ""}], "who": "bruant.d@gmail.com", "when": "2018-05-01T08:22:19Z"}, {"changes": [{"removed": "1433221", "field_name": "blocks", "added": ""}, {"removed": "", "field_name": "depends_on", "added": "1433221"}], "who": "ryanvm@gmail.com", "when": "2018-05-03T12:45:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sergiu.logigan@softvision.ro"}], "who": "sergiu.logigan@softvision.ro", "when": "2018-05-25T09:12:07Z"}, {"changes": [{"removed": "sergiu.logigan@softvision.ro", "field_name": "cc", "added": ""}], "who": "sergiu.logigan@softvision.ro", "when": "2018-05-29T06:37:01Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}