{"cf_tracking_thunderbird_esr52": "---", "status": "NEW", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "frank.taffelt@interface-projects.de", "mentors_detail": [], "depends_on": [], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_status_firefox56": "fix-optional", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "wontfix", "cf_status_firefox59": "?", "keywords": ["parity-chrome", "parity-edge"], "cf_status_firefox57": "fix-optional", "summary": "NTLM/Negotiate HTTP/2 -> HTTP/1 fallback re-sends the initial request, other browsers send Type 1 auth request header", "cf_last_resolved": "2017-10-25T15:10:46Z", "attachments": [{"creator": "frank.taffelt@interface-projects.de", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "application/x-zip-compressed", "id": 8921382}, {"creator": "frank.taffelt@interface-projects.de", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/plain", "id": 8921895}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 23, "comments": [{"text": "Created attachment 8921382\nnetwork logs for the test case\n\nNTLM fails under certain HTTP2/TLS variants.\n\nI have tested the following variants in the current nightly (58.0a1 (2017-10-23) (64-Bit)):\n\nHTTP1.1/TLS 1.1 OK\nHTTP1.1/TLS 1.2 OK \n\nHTTP2/TLS 1.1   OK\nHTTP2/TLS 1.2   FAIL\n\nFAIL means that there is no NTLM Auth header sent from firefox.\n\nTo enforce Firefox to use only TLS 1.2 i set the property \"security.tls.version.max\" to 2.\n\nTo enforce HTTP/1.1 i disabled http2 on the server side. FYI - We are using tomcat (version 8.5.23) on the server side.\n\nfor further details i provide networklogs for each case as an attachment.", "author": "frank.taffelt@interface-projects.de", "id": 12784832, "time": "2017-10-24T09:07:20Z"}, {"text": "(not sure if this could somehow relate to bug 1409858)", "author": "honzab.moz@firemni.cz", "id": 12786364, "time": "2017-10-24T17:55:51Z"}, {"text": "log_http2_tls12.clean has a channel (https://host.example.com:10009/intergator-nightly-head/web/_auth/6951a6de/?ret=%2Fintergator-nightly-head%2Fweb%2Fitl%2Fdebug%2Frequest.itl) that asked for credentials because of 401 and, because the prompt has been canceled in 1.5s, the channel showed the 401 response (expected).  \n\nthe HTTP2/TLS 1.2 combo:\n\n- connects apparently to a completely different server that asks for basic auth ('intergator' realm) instead of NTLM\n- 2017-10-24 08:13:53.843 \u2502 Socket Thread \u2502 nsHttpConnection::EnsureNPNComplete 000000001B4BFC00 [.S.....[tlsflags0x00000000]host.example.com:10009] negotiated to 'h2'\n\n\nfor the HTTP2/TLS 1.1 case I don't see h2 being used:\n\n- 2017-10-24 08:11:45.926 \u2502 Socket Thread \u2502 nsHttpConnection::EnsureNPNComplete 00000000186C9800 [.S.....[tlsflags0x00000000]host.example.com:10009] negotiated to 'http/1.1'\n\n\nThis could be a server config problem...", "author": "honzab.moz@firemni.cz", "id": 12786464, "time": "2017-10-24T18:27:41Z"}, {"text": "What doesn't work ist automatic NTLM negotiation over HTTP/2. So as you said it prompted me and i canceled the prompt, as the prompt isn't the expectation. The automatic negotiation does work over HTTP1.1 as you can see in the logs. We see this behaviour since firefox 54.\n\nYou are right HTTP2/TLS1.1 seems to really speak HTTP/1.1 . I dont know why, but in these combo automatic ntlm negotiation works.\n\nCould this be related to https://bugzilla.mozilla.org/show_bug.cgi?id=1346392?\n\nA server problem is possible - but unlikely. But to verify what can i check?", "author": "frank.taffelt@interface-projects.de", "id": 12787896, "time": "2017-10-25T06:23:53Z"}, {"text": "(In reply to Frank Taffelt from comment #3)\n> What doesn't work ist automatic NTLM negotiation over HTTP/2. \n\nThat's not the correct interpretation of my findings.  What happens is that in the HTTP2/TLS 1.2 case the server is not asking for NTLM at all, it ask only and only for Basic auth.  There is no Server response header in any of the responses, so hard to say to which server we connect in what case.  Also according how the WWW-Authenticate header name is capitalized differently, I believe we are talking to a completely different server in the HTTP2/TLS 1.2 case.  Hence, a server or some SSL hardware/balancer middleware issue.\n\nI don't think Firefox is in fault here.  Patrick, Nick or Dragana (all cc'ed) may know about some nuances that influences npn with regard to tls version.\n\n> So as you said\n> it prompted me and i canceled the prompt, as the prompt isn't the\n> expectation. The automatic negotiation does work over HTTP1.1 as you can see\n> in the logs. We see this behaviour since firefox 54.\n> \n> You are right HTTP2/TLS1.1 seems to really speak HTTP/1.1 . I dont know why,\n\nWould be a good start to find out.\n\n> but in these combo automatic ntlm negotiation works.\n> \n> Could this be related to\n> https://bugzilla.mozilla.org/show_bug.cgi?id=1346392?\n\nFixed on 55 and according my findings - no.", "author": "honzab.moz@firemni.cz", "id": 12788915, "time": "2017-10-25T13:22:23Z"}, {"text": "I also just noticed that the URL asking auth is different in every log:\n\nthe faulty one...\n\nlog_http2_tls12.clean:\n2017-10-24 08:13:53.824 \u2043 nsHttpChannel \u2043 2a93d000 \u2043 finished \u2043 401 \u2043 https://host.example.com:10009/intergator-nightly-head/web/_auth/6951a6de/?ret=%2Fintergator-nightly-head%2Fweb%2Fitl%2Fdebug%2Frequest.itl\n\n\n...is apparently a different URL from all others...\n\n\nlog_http11_tls12.clean:\n2017-10-24 08:02:37.667 \u2043 nsHttpChannel \u2043 1b894000 \u2043 finished \u2043 401,401,200 \u2043 https://host.example.com:10009/intergator-nightly-head/web/itl/debug/request.itl;jsessionid=788B7681235ECE16A645A2C6FE8F9BBD\n\nlog_http11_tls11.clean:\n2017-10-24 08:33:37.627 \u2043 nsHttpChannel \u2043 2ae17000 \u2043 finished \u2043 401,401,200 \u2043 https://host.example.com:10009/intergator-nightly-head/web/itl/debug/request.itl;jsessionid=087E10B7924FD09D594B7F6E8177AFCC\n\nlog_http2_tls11.clean:\n2017-10-24 08:11:46.016 \u2043 nsHttpChannel \u2043 29939000 \u2043 finished \u2043 401,401,200 \u2043 https://host.example.com:10009/intergator-nightly-head/web/itl/debug/request.itl;jsessionid=F213D6A7A67DC7131CCCC08C31E05CD6\n\n\nClosing as invalid based on that.", "author": "honzab.moz@firemni.cz", "id": 12788944, "time": "2017-10-25T13:32:32Z"}, {"text": "And one more note: apparently the server in the log_http2_tls12 case (which is the only one that negotiated h2) decides it can't use NTLM auth for the request in question, because I can see this in the log log_http2_tls12.clean:\n\n2017-10-24 08:13:53.690 \u2043 nsHttpChannel \u2043 1bd16000 \u2043 finished \u2043 200 \u2043 https://host.example.com:10009/intergator-nightly-head/web/itl/debug/request.itl;jsessionid=5E37AE0241A9C67A8E75F8A7A9237BEA\n\ni.e. no 401 response.  this is not the first channel on the h2 session and no 401 NTLM auth response happened on it before this response.", "author": "honzab.moz@firemni.cz", "id": 12788981, "time": "2017-10-25T13:42:41Z"}, {"text": "Created attachment 8921895\nnew network logs with HTTP/2 and TLS1.2\n\nnew testcase with failing NTLM.", "author": "frank.taffelt@interface-projects.de", "id": 12789070, "time": "2017-10-25T14:09:36Z"}, {"text": "(In reply to Frank Taffelt from comment #7)\n> Created attachment 8921895\n> new network logs with HTTP/2 and TLS1.2\n> \n> new testcase with failing NTLM.\n\n2017-10-25 14:00:12.681 \u2043 nsHttpChannel \u2043 1c655000 \u2043 cancelled \u2043 307 \u2043 https://host.example.com:10009/intergator-nightly-head/web/api/1.0/http-auth/rest/session/getSessionInfo \u2043 804b0003,804b0003\n2017-10-25 14:00:12.736 \u2043 nsHttpChannel \u2043 23f45000 \u2043 cancelled \u2043 307 \u2043 https://host.example.com:10009/intergator-nightly-head/web/api/1.0/http-auth/rest/session/getSessionInfo;jsessionid=2C577008630712EBD47427561F9F9B96 \u2043 804b0003,804b0003\n2017-10-25 14:00:12.827 \u2043 nsHttpChannel \u2043 204fd000 \u2043 finished \u2043 500 \u2043 https://host.example.com:10009/intergator-nightly-head/web/api/1.0/http-auth/rest/session/getSessionInfo \u2043 0\n\nA redirect chain, I don't see any NTLM/401 here...", "author": "honzab.moz@firemni.cz", "id": 12789134, "time": "2017-10-25T14:27:29Z"}, {"text": "i'm not sure what you mean? searching for NTLM in my latest log brings:\n\n2017-10-25 14:00:12.758000 UTC - [Socket Thread]: V/nsHttp index 61: www-authenticate NTLM\n2017-10-25 14:00:12.758000 UTC - [Socket Thread]: V/nsHttp index 62: :status 401\n\nyes the 401 is part of the redirect chain.\n\nthe redirect chain is something like:\n\nURL -> 307 -> URL;jsessionid=XXX -> 401(NTLM) -> URL;jsessionid=XXX -> 307 -> URL", "author": "frank.taffelt@interface-projects.de", "id": 12789170, "time": "2017-10-25T14:38:56Z"}, {"text": "Now we are getting somewhere!  Thanks for this log.  Please next time just add an explanation of what you are submitting and what in your opinion we should look for - would save some time.\n\nWhat I meant in my last comment was that I didn't see an nsHttpChannel instance (above and transparent to h2) that would be handling that 401. \n\n\nThe more interesting line in the last log is:\n2017-10-25 14:00:12.757000 UTC - [Socket Thread]: I/nsHttp Http2Decompressor 0000000026777B08 connection-based auth found in www-authenticate\n\nTriggered at [1].  This has been introduced in bug 1360574.  ni? on Nick then, looks like the h1 fallback still doesn't work.  The issue with some slightly different symptoms might be present pre-55 too.\n\n\n[1] https://dxr.mozilla.org/mozilla-central/rev/a124f4901430f6db74cfc7fe3b07957a1c691b40/netwerk/protocol/http/Http2Compression.cpp#649", "author": "honzab.moz@firemni.cz", "id": 12789267, "time": "2017-10-25T15:00:44Z"}, {"text": "Hmm... looking more to the log, we *do* restart the transaction on a new h1 connection.  But the response it gets is not 401, it's the following instead:\n\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502 http response [\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   HTTP/1.1 307 \n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   location: /intergator-nightly-head/web/api/1.0/http-auth/rest/session/getSessionInfo\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Pragma: no-cache\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Cache-control: no-store,no-cache\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Expires: -1\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Transfer-Encoding: chunked\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Date: Wed, 25 Oct 2017 14:00:11 GMT\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502     OriginalHeaders\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   location: /intergator-nightly-head/web/api/1.0/http-auth/rest/session/getSessionInfo\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Pragma: no-cache\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Cache-control: no-store,no-cache\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Expires: -1\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Transfer-Encoding: chunked\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502   Date: Wed, 25 Oct 2017 14:00:11 GMT\n2017-10-25 14:00:12.772 \u2502 Socket Thread \u2502 ]\n\nSo, to me this still looks like a server config issue.  Sorry.\n\nlog notes:\n\nnsHttpChannel @23f45000 created 2017-10-25 14:00:12.736\nnsHttpTransaction @157ebc00 created 2017-10-25 14:00:12.744\nHttp2Stream @c6c48a0 created 2017-10-25 14:00:12.745\nrestarted on:\nnsHttpConnection @16168400 created 2017-10-25 14:00:12.764", "author": "honzab.moz@firemni.cz", "id": 12789310, "time": "2017-10-25T15:10:46Z"}, {"text": "Yes maybe you restart a new transaction on a h1 connection, but IMHO there is no negotiation of the NTLM auth on firefox side. The request doesn't contain any :\n \nAuthorization: NTLM TlRMT...\n\nrequest header.\n\nLooking at the my last log (HTTP/2):\n\n2017-10-25 14:00:12.757000 UTC - [Socket Thread]: I/nsHttp Http2Decompressor 0000000026777B08 connection-based auth found in www-authenticate\n\nlooks good, but i didn't find any entries of the form:\n\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpChannelAuthProvider::ProcessAuthentication [this=000000001BD53040 channel=000000002AE17730 code=401 SSLConnectFailed=0]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpChannelAuthProvider::PrepareForAuthentication [this=000000001BD53040 channel=000000002AE17730]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp   proxy continuation state has been reset\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpChannelAuthProvider::GetAuthenticator [this=000000001BD53040 channel=000000002AE17730]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpChannelAuthProvider::GetCredentialsForChallenge [this=000000001BD53040 channel=000000002AE17730 proxyAuth=0 challenges=NTLM]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpChannelAuthProvider::GetIdentityFromURI [this=000000001BD53040 channel=000000002AE17730]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpAuthCache::GetAuthEntryForDomain [key=https://host.example.com:10009 realm=]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: V/nsHttp nsHttpNTLMAuth::ChallengeReceived [ss=0000000000000000 cs=0000000000000000]\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: V/nsHttp Force use of generic ntlm auth module: 0\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: V/nsHttp Default credentials allowed for host: 1\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp   identity invalid = 0\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/nsHttp nsHttpChannel::ConnectionRestartable this=000000002AE17000, restartable=1\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: V/nsHttp nsHttpNTLMAuth::GenerateCredentials\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/negotiateauth   nsAuthSSPI::Init\n2017-10-24 08:33:37.669000 UTC - [Main Thread]: D/negotiateauth AcquireCredentialsHandle() succeeded.\n\nwhich are present in my working http/1.1 logs? \n\nOf course i did set the \"network.automatic-ntlm-auth.trusted-uris\" config property ;-)\n\nOn the serverside i turned on request logging and it also shows that there is no request header like \"Authorization: NTLM TlRMT...\" on http/2 \n\nSidenote: This was working in Firefox until version 53 and is also working in current Chrome and Edge.", "author": "frank.taffelt@interface-projects.de", "id": 12791654, "time": "2017-10-26T07:54:49Z"}, {"text": "I don't know what exactly you expect Firefox should do, but my interpretation of how we and the server should behave is the following:\n\n- initially establish an h2 session\n- potentially, make whatever number of requests on that sessions, while server is not asking for authentication\n- do a request R for which the server returns 401 with a connection based schema (like NTLM)\n- the browser then creates a new connection to the same origin (supposedly the same server) disabling h2 on it\n- the http transaction (representing the request R) is then carried our again on this new connection, the same way as it was made before, i.e. we send the SAME request R including the headers again on the new h1 connection\n- (1) the server is expected to answer with EXACTLY the same response (401 with NTLM) now on the new h1 connection, as it has responded just before on the h2 session\n- the browser then does as usual, obtains credential (using default in your case), sends Type 1 message, expects 401/Type 2 response, sends Type 3 and receives 200 with the content ; since then the connection is authenticated\n\n\nBut in the last log I can see that at (1) the h1 server answers with 307 (a redirect) instead of with 401/NTLM.  That proves you expect something else from the browser to do.  I believe you expect we process the 'NTLM' challenge and on the new h1 connection we send a request with Type 1 message.  Then let you know - we don't.\n\nI don't know how exactly other browser behave (Chrome/Edge/IE).  This is how we have chosen to do this since it seems like most logical way for most common scenarios.  Simply repeat the same request on an h1 connection with expectation the server responses with (the same) 401 again.  It could also be explained as: the 401/NTLM response received on an h2 session is completely ignored by the browser.\n\n\n\nI assume there is no specification on how browsers should exactly handle the h2->h1 connection based schema fallback.\n\nNick, do you know about any spec/other browsers behavior as you were working on the h1 fallback?\n\n(The bug remains as INVALID, tho)", "author": "honzab.moz@firemni.cz", "id": 12792276, "time": "2017-10-26T12:30:18Z"}, {"text": "(In reply to Frank Taffelt from comment #12)\n> This was working in Firefox until version 53 \n\nFrank, could you please use mozregression [1] to find the exact changeset that broke this?  I would be interested, since I really don't know from the top of my head (and bugzilla search) which patch could break this.  (This has a lower priority than the next query, tho)\n\n> and is also working\n> in current Chrome and Edge.\n\nI would be interested in a PCAP from Chrome and Edge to see what exactly those two browsers do in that case.  Would you be wiling to provide it?  You can also send the PCAPs directly to my bugzilla email privately to prevent exposing them here publicly.\n\nThanks.\n\n[1] https://github.com/mozilla/mozregression/releases", "author": "honzab.moz@firemni.cz", "id": 12792312, "time": "2017-10-26T12:40:19Z"}, {"text": "(In reply to Honza Bambas (:mayhemer) from comment #13)\n> I assume there is no specification on how browsers should exactly handle the\n> h2->h1 connection based schema fallback.\n> \n> Nick, do you know about any spec/other browsers behavior as you were working\n> on the h1 fallback?\n> \n> (The bug remains as INVALID, tho)\n\nThere's no strict specification. Basically, it's a combination of RST_STREAM with the error code HTTP_1_1_REQUIRED (https://tools.ietf.org/html/rfc7540#section-7), and discussions about NTLM and similar connection-based auth on the http-wg mailing list saying \"yeah, those won't work with http/2, so here's the error code we've come up with for that situation\".\n\nI, too, would be interested in the pcaps & mozregression results. We had positive interop on HTTP_1_1_REQUIRED with IIS back when we first added that to the spec, so either this is some other server that behaves differently, or something changed that unexpectedly broke our HTTP_1_1_REQUIRED implementtion.", "author": "hurley@mozilla.com", "id": 12792733, "time": "2017-10-26T14:54:45Z"}, {"text": "As soon as our security gives a go , i'll provide the pcaps.\n\nAlso i had some talks with the guy that did the authentication web endpoint for our product and has to work with all the browsers and that\u2019s what he has to say (he is not on bugzilla):\n\nHello.\n\nReading the comment above about the way firefox handles downgrades I now understand why it is working with other browsers but not Firefox.\nThe other browsers do send a NTLM authorization header after downgrade, Firefox intentionally (as described) does not.\n\nIf ones goes by the definition that NTLM is a connection based \u201esession\u201c and transparent to anything running on the web server, and Tomcat is the one doing the NTLM server part, then this might be correct. Alas it\u2019s not always as simple as that and the web server might simply be a proxy to an authentication server somewhere else. Connected via some other protocol. In this case the browser believes it is working connection based, but the web server actually uses something else, i.e. a session id in cookie or url part to tie the requests together and doesn\u2019t care about the connection. In this case the real endpoint doesn\u2019t expect to receive the intial request (R it was called), i.e. w/o NTLM authorization header, a second time after responding with the www-authenticate header to the first request. It will see this as \u201eclient does not support NTLM\u201c and fail.\n\nIt\u2019s a \u201ewe go by the definition\u201c vs \u201ethe world is vast, be flexible\u201c .\nI need to and can be flexible. I will work around that by setting a flag for ntlm + http2 protocol to disregard that duplicate request. Not fun, but doable and an insurance for me if other user clients do the same. It\u2019s simply another piece in the long list of browser peculiarities for me.\nThat is also the reason for that 307 redirect confusing people. Sorry about that. It\u2019s simply there to persist the session cookie (the ;jsessionid path part is a byproduct for certain cookie less environments) . It has nothing (the 401 response follows after that) but then anything to do with authentication: one browser ignore(d) a set-cookie header on a 401 response because the NTLM authentication is/was more important. Another forgot it when changing protocols and displaying a self signed certificate warning. Or send that NTLM header like a basic auth header on any subsequent request for that path (preemptive authentication), corrupting any http post doing so. So if this was not a test case the web server would actually redirect to an artificial path to do NTLM later on while persisting that cookie.\n\nKind regards,\nGunnar Brand", "author": "frank.taffelt@interface-projects.de", "id": 12795142, "time": "2017-10-27T08:24:36Z"}, {"text": "(In reply to Frank Taffelt from comment #16)\n> As soon as our security gives a go , i'll provide the pcaps.\n> \n\nThanks you!  I expect to see in the logs what's described just below - other browsers send the request on the new h1 connection with the auth request headers Type 1 message.  But it's still worth confirm this 100%.\n\n> Also i had some talks with the guy that did the authentication web endpoint\n> for our product and has to work with all the browsers and that\u2019s what he has\n> to say (he is not on bugzilla):\n> \n> Hello.\n> \n> Reading the comment above about the way firefox handles downgrades I now\n> understand why it is working with other browsers but not Firefox.\n> The other browsers do send a NTLM authorization header after downgrade,\n> Firefox intentionally (as described) does not.\n> \n> If ones goes by the definition that NTLM is a connection based \u201esession\u201c and\n> transparent to anything running on the web server, and Tomcat is the one\n> doing the NTLM server part, then this might be correct. Alas it\u2019s not always\n> as simple as that and the web server might simply be a proxy to an\n> authentication server somewhere else. Connected via some other protocol. In\n> this case the browser believes it is working connection based, but the web\n> server actually uses something else, i.e. a session id in cookie or url part\n> to tie the requests together and doesn\u2019t care about the connection. In this\n> case the real endpoint doesn\u2019t expect to receive the intial request (R it\n> was called), i.e. w/o NTLM authorization header, a second time after\n> responding with the www-authenticate header to the first request. It will\n> see this as \u201eclient does not support NTLM\u201c and fail.\n\nYes, that's exactly that.\n\n> \n> It\u2019s a \u201ewe go by the definition\u201c vs \u201ethe world is vast, be flexible\u201c .\n> I need to and can be flexible. I will work around that by setting a flag for\n> ntlm + http2 protocol to disregard that duplicate request. Not fun, but\n> doable and an insurance for me if other user clients do the same. It\u2019s\n> simply another piece in the long list of browser peculiarities for me.\n\nIt is a particularity, but today trend is to make browsers behave in a more unified and predictable way, on any level.  \n\nHence, if all major browsers but Firefox behave in some way, we should probably change our code to be in parity.\n\nIt will be a bit more work and I'm afraid the priority will be low.  Let's track this at least as a known issue and difference from other browsers.\n\n> That is also the reason for that 307 redirect confusing people. Sorry about\n> that. It\u2019s simply there to persist the session cookie (the ;jsessionid path\n> part is a byproduct for certain cookie less environments) . It has nothing\n> (the 401 response follows after that) but then anything to do with\n> authentication: one browser ignore(d) a set-cookie header on a 401 response\n> because the NTLM authentication is/was more important. Another forgot it\n> when changing protocols and displaying a self signed certificate warning. Or\n> send that NTLM header like a basic auth header on any subsequent request for\n> that path (preemptive authentication), corrupting any http post doing so. So\n> if this was not a test case the web server would actually redirect to an\n> artificial path to do NTLM later on while persisting that cookie.\n\nThis is perfectly OK and I understand what's going on.  Not the first time I can see a mechanism like this, it's not uncommon to redirect to itself to add a cookie or add query strings.\n\n> \n> Kind regards,\n> Gunnar Brand\n\nThank you.  This confirms my last findings.\n\nI will update the summary, reopen and reprioritize.\n\n\nThis broke on 53, but the actually fallback code we are going to fix is on 54.", "author": "honzab.moz@firemni.cz", "id": 12795931, "time": "2017-10-27T14:09:15Z"}, {"text": "https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Move_fix-optionals", "author": "bug-husbandry-bot@mozilla.bugs", "id": 12974560, "time": "2018-01-16T23:26:31Z"}, {"text": "Mass bug change to replace various 'parity' whiteboard flags with the new canonical keywords. (See bug 1443764 comment 13.)", "author": "jwatt@jwatt.org", "id": 13250126, "time": "2018-05-02T18:54:13Z"}, {"text": "I don't believe this classifies as a regressions.  Before implementing the fallback feature we didn't have h1 ntlm fallback at all.", "author": "honzab.moz@firemni.cz", "id": 13252106, "time": "2018-05-03T14:17:55Z"}, {"text": "I assumed it was a regression from comment 12 (\"This was working in Firefox until version 53 ...\").", "author": "mcastelluccio@mozilla.com", "id": 13252143, "time": "2018-05-03T14:28:43Z"}, {"text": "(In reply to Marco Castelluccio [:marco] from comment #21)\n> I assumed it was a regression from comment 12 (\"This was working in Firefox\n> until version 53 ...\").\n\nAha!  Hmm.. the fallback was implemented in 55, so I'm a bit puzzled, this should simply never work before 55, IMO.  I never got any feedback to comment 14 asking for regressions range finding, so hard to say.", "author": "honzab.moz@firemni.cz", "id": 13252189, "time": "2018-05-03T14:42:01Z"}], "id": 1411193, "priority": "P3", "cc": ["dd.mozilla@gmail.com", "honzab.moz@firemni.cz", "hurley@mozilla.com", "juhsu@mozilla.com", "mcastelluccio@mozilla.com", "mcmanus@ducksong.com"], "cf_crash_signature": "", "version": "53 Branch", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1346392], "qa_contact": "", "creation_time": "2017-10-24T09:07:20Z", "cf_status_firefox_esr52": "unaffected", "component": "Networking: HTTP", "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "unaffected", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "frank.taffelt@interface-projects.de", "id": 601683, "name": "frank.taffelt@interface-projects.de", "real_name": "Frank Taffelt"}, "whiteboard": "[ntlm][necko-triaged]", "mentors": [], "cc_detail": [{"email": "dd.mozilla@gmail.com", "id": 508195, "name": "dd.mozilla@gmail.com", "real_name": "Dragana Damjanovic [:dragana]"}, {"email": "honzab.moz@firemni.cz", "id": 269762, "name": "honzab.moz@firemni.cz", "real_name": "Honza Bambas (:mayhemer)"}, {"email": "hurley@mozilla.com", "id": 408661, "name": "hurley@mozilla.com", "real_name": "Nicholas Hurley [:nwgh][:hurley]"}, {"email": "juhsu@mozilla.com", "id": 501232, "name": "juhsu@mozilla.com", "real_name": ":junior [Inactive]"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mcmanus@ducksong.com", "id": 32546, "name": "mcmanus@ducksong.com", "real_name": "Patrick McManus [:mcmanus]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-03T14:42:01Z", "assigned_to": "nobody@mozilla.org", "is_open": true, "history": [{"changes": [{"removed": "General", "field_name": "component", "added": "Networking: HTTP"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}], "who": "arai.unmht@gmail.com", "when": "2017-10-24T09:08:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "honzab.moz@firemni.cz, hurley@mozilla.com, mcmanus@ducksong.com"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-24T17:55:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dd.mozilla@gmail.com"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-24T18:27:41Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "INVALID"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2017-10-25 13:32:32"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-25T13:32:32Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "UNCONFIRMED"}, {"removed": "", "field_name": "blocks", "added": "1360574"}, {"removed": "INVALID", "field_name": "resolution", "added": ""}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(hurley@mozilla.com)"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-25T15:00:44Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "INVALID"}, {"removed": "needinfo?(hurley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"removed": "2017-10-25 13:32:32", "field_name": "cf_last_resolved", "added": "2017-10-25 15:10:46"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-25T15:10:46Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(hurley@mozilla.com)"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-26T12:30:18Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(frank.taffelt@interface-projects.de)"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-26T12:40:19Z"}, {"changes": [{"removed": "needinfo?(hurley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "hurley@mozilla.com", "when": "2017-10-26T14:54:45Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}, {"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "58 Branch", "field_name": "version", "added": "53 Branch"}, {"removed": "INVALID", "field_name": "resolution", "added": ""}, {"removed": "1360574", "field_name": "blocks", "added": "1346392"}, {"removed": "0", "field_name": "is_confirmed", "added": "1"}, {"removed": "NTLM fails under some HTTP2 TLS variants", "field_name": "summary", "added": "NTLM/Negotiate HTTP/2 -> HTTP/1 fallback re-sends the initial request, other browsers send Type 1 auth request header"}, {"removed": "", "field_name": "whiteboard", "added": "[ntlm][chrome-parity][edge-parity][necko-triaged]"}, {"removed": "needinfo?(frank.taffelt@interface-projects.de)", "field_name": "flagtypes.name", "added": ""}, {"removed": "---", "field_name": "cf_status_thunderbird_esr52", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_firefox_esr52", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_firefox56", "added": "fix-optional"}, {"removed": "---", "field_name": "cf_status_firefox57", "added": "fix-optional"}, {"removed": "---", "field_name": "cf_status_firefox58", "added": "fix-optional"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-27T14:09:15Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "NEW"}], "who": "honzab.moz@firemni.cz", "when": "2017-10-27T14:09:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "juhsu@mozilla.com"}], "who": "juhsu@mozilla.com", "when": "2018-01-08T06:19:29Z"}, {"changes": [{"removed": "fix-optional", "field_name": "cf_status_firefox58", "added": "wontfix"}, {"removed": "---", "field_name": "cf_status_firefox59", "added": "?"}], "who": "bug-husbandry-bot@mozilla.bugs", "when": "2018-01-16T23:26:31Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "parity-chrome, parity-edge"}, {"removed": "[ntlm][chrome-parity][edge-parity][necko-triaged]", "field_name": "whiteboard", "added": "[ntlm][necko-triaged]"}], "who": "jwatt@jwatt.org", "when": "2018-05-02T18:54:13Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-03T13:49:18Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com)"}], "who": "honzab.moz@firemni.cz", "when": "2018-05-03T14:17:55Z"}, {"changes": [{"removed": "regression", "field_name": "keywords", "added": ""}, {"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-03T14:28:43Z"}], "resolution": "", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}