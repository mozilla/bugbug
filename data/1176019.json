{"cf_status_firefox38": "---", "cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "mstange@themasta.com", "mentors_detail": [], "depends_on": [1460780, 1464712, 1154231, 1459911, 1460905, 1461023, 1463397, 1464244], "cf_status_firefox_esr60": "---", "cf_status_firefox36": "---", "cf_status_firefox37": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "keywords": [], "cc_detail": [{"email": "ajfhajf@yandex.ru", "id": 559449, "name": "ajfhajf@yandex.ru", "real_name": ""}, {"email": "b56girard@gmail.com", "id": 368375, "name": "b56girard@gmail.com", "real_name": "Benoit Girard (:BenWa)"}, {"email": "brad@lassey.us", "id": 181004, "name": "brad@lassey.us", "real_name": "Brad Lassey [:blassey] (use needinfo?)"}, {"email": "dothayer@mozilla.com", "id": 582499, "name": "dothayer@mozilla.com", "real_name": "Doug Thayer [:dthayer] (PTO on June 4)"}, {"email": "dumaat@gmail.com", "id": 380934, "name": "dumaat@gmail.com", "real_name": "Hjalte"}, {"email": "ebalazs@mozilla.com", "id": 600557, "name": "ebalazs@mozilla.com", "real_name": "Eliza Balazs [:ebalazs_]"}, {"email": "ehsan@mozilla.com", "id": 251051, "name": "ehsan@mozilla.com", "real_name": ":Ehsan Akhgari"}, {"email": "felipc@gmail.com", "id": 208747, "name": "felipc@gmail.com", "real_name": ":Felipe Gomes (needinfo me!)"}, {"email": "gw@gwright.org.uk", "id": 432425, "name": "gw@gwright.org.uk", "real_name": "George Wright (:gw280) (needinfo me!)"}, {"email": "harshid@gmail.com", "id": 152647, "name": "harshid@gmail.com", "real_name": "Harsh86"}, {"email": "hikezoe@mozilla.com", "id": 131213, "name": "hikezoe@mozilla.com", "real_name": "Hiroyuki Ikezoe (:hiro)"}, {"email": "hskupin@gmail.com", "id": 76551, "name": "hskupin@gmail.com", "real_name": "Henrik Skupin (:whimboo)"}, {"email": "jmathies@mozilla.com", "id": 279663, "name": "jmathies@mozilla.com", "real_name": "Jim Mathies [:jimm]"}, {"email": "johnp@gmx.de", "id": 386893, "name": "johnp@gmx.de", "real_name": "Johannes Pfrang [:johnp]"}, {"email": "jryans@gmail.com", "id": 282978, "name": "jryans@gmail.com", "real_name": "J. Ryan Stinnett [:jryans] (use ni?)"}, {"email": "kanru@kanru.info", "id": 428625, "name": "kanru@kanru.info", "real_name": "Kan-Ru Chen [:kanru] (UTC+8)"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mconley@mozilla.com", "id": 403756, "name": "mconley@mozilla.com", "real_name": "Mike Conley (:mconley) (:\u2699\ufe0f) (Catching up on needinfos / reviews)"}, {"email": "thesweetlilycake@gmail.com", "id": 499806, "name": "thesweetlilycake@gmail.com", "real_name": "Lily Rose"}, {"email": "timbugzilla@gmail.com", "id": 437905, "name": "timbugzilla@gmail.com", "real_name": ""}, {"email": "Tobias.Marty@gmx.de", "id": 572549, "name": "Tobias.Marty@gmx.de", "real_name": "TMart"}, {"email": "yoasif@gmail.com", "id": 347239, "name": "yoasif@gmail.com", "real_name": "Asif Youssuff"}], "cf_last_resolved": "2018-05-22T09:54:19Z", "attachments": [{"creator": "dothayer@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-27T17:41:19Z", "type_id": 4, "creation_date": "2018-04-25T20:57:41Z", "id": 1749073, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8971032}, {"creator": "dothayer@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-08T23:07:48Z", "type_id": 4, "creation_date": "2018-05-08T22:27:19Z", "id": 1754315, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8974194}, {"creator": "dothayer@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-10T18:02:02Z", "type_id": 4, "creation_date": "2018-05-10T17:52:54Z", "id": 1755379, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8974195}, {"creator": "dothayer@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-16T17:25:25Z", "type_id": 4, "creation_date": "2018-05-15T15:08:10Z", "id": 1756977, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8975841}, {"creator": "dothayer@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-16T17:29:04Z", "type_id": 4, "creation_date": "2018-05-15T20:29:06Z", "id": 1757159, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8975952}, {"creator": "dothayer@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-16T17:32:27Z", "type_id": 4, "creation_date": "2018-05-15T20:29:06Z", "id": 1757160, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8975953}, {"creator": "dothayer@mozilla.com", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8979393}], "votes": 5, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_platform_rel": "---", "cf_has_regression_range": "---", "comment_count": 77, "comments": [{"text": "For Firefox OS, bug 1154231 added infrastructure to retain layer trees of hidden TabChild instances, up to a number that is controlled with the pref layers.compositor-lru-size (which is set to 10 on B2G and to 0 everywhere else).\nThis does the following: It keeps a list of up to 10 hidden retained tabs, and once the 11th tab is hidden (which is not in this list), the least recently used tab gets evicted, and gets ClearCachedResources called on it. With a cache size of 0, ClearCachedResources is called from every TabChild::MakeHidden invocation directly.\n\nWe could try using that infrastructure for keeping the layer contents of a small number of background tabs around. This would require more memory than before, but we can cap the amount of memory by setting the cache size to a very small number (like 5), and it would make tab switching instant for retained tabs.\n\nHowever, using it will require changes to our tab switcher. At the moment, if you want to switch back to a tab that was previously visible, we only do that once we've received both a LayerTreeCleared and a LayerTreeReady event for it. (This is to make sure that the LayerTreeReady event isn't coming from a paint that was in flight before the tab was hidden.) But when we retain layer trees for tabs, we won't get a LayerTreeCleared event. So we'd need a different way of ensuring that the LayerTreeReady event we get is the one we want.", "author": "mstange@themasta.com", "id": 10405986, "time": "2015-06-18T18:28:20Z"}, {"text": "Comment 0 sounds a little confusing, now that I read it again. To clarify: In the first part I was talking about B2G (where we use a TabParent / TabChild for each app, I think), and in the last two paragraphs I was referring to Desktop Firefox with e10s.", "author": "mstange@themasta.com", "id": 10405993, "time": "2015-06-18T18:30:49Z"}, {"text": "My 2 cents: I like the idea but ATM I think our tab switch performance is significantly slower than it should be. We should fix that before we start applying this kind of optimization that would put a band-aid over a serious performance problem.", "author": "b56girard@gmail.com", "id": 10406249, "time": "2015-06-18T19:27:38Z"}, {"text": "I agree. We should only do this once we've fixed the other bugs that contribute to slow tab switching.", "author": "mstange@themasta.com", "id": 10406354, "time": "2015-06-18T19:45:43Z"}, {"text": "Re-nomming for triage, since we might want to do this sooner rather than later.", "author": "mconley@mozilla.com", "id": 11213055, "time": "2016-03-02T23:15:32Z"}, {"text": "ni? to myself to see what the scope of work is here.", "author": "gw@gwright.org.uk", "id": 11215663, "time": "2016-03-03T17:50:47Z"}, {"text": "Thought: it is likely valuable to give pinned tabs priority", "author": "benjamin@smedbergs.us", "id": 11215665, "time": "2016-03-03T17:50:57Z"}, {"text": "I've spoken to Markus about this, and he reckons we can do this in tabbrowser instead of down in the compositor. It'll give us a little more control as well.\n\nI think the best way to do this is to reuse the machinery from the DocShellIsActive property. Basically, I think the way we're binning our layers right now is by setting DocShellIsActive to false when we switch away from a tab/browser/docshell.\n\nI implemented additional machinery to be able to set a DocShell as inactive but retain its layers in the case of minimising in bug 1098131. I propose we reuse that in this way:\n\n- When we switch away from a tab, push the tab we're switching away from onto a queue.\n- Set DocShellIsActiveAndForeground = false on the tab we're switching away from.\n- If the queue size is larger than the number of tabs we want to keep around, pop the oldest item and set DocShellIsActive = false (which will discard its layer tree).\n\nQuestion: how large should the queue be?", "author": "gw@gwright.org.uk", "id": 11216781, "time": "2016-03-03T22:09:27Z"}, {"text": "(In reply to George Wright (:gw280) (:gwright) from comment #7)\n> I've spoken to Markus about this, and he reckons we can do this in\n> tabbrowser instead of down in the compositor. It'll give us a little more\n> control as well.\n> \n> I think the best way to do this is to reuse the machinery from the\n> DocShellIsActive property. Basically, I think the way we're binning our\n> layers right now is by setting DocShellIsActive to false when we switch away\n> from a tab/browser/docshell.\n> \n> I implemented additional machinery to be able to set a DocShell as inactive\n> but retain its layers in the case of minimising in bug 1098131. I propose we\n> reuse that in this way:\n> \n> - When we switch away from a tab, push the tab we're switching away from\n> onto a queue.\n> - Set DocShellIsActiveAndForeground = false on the tab we're switching away\n> from.\n> - If the queue size is larger than the number of tabs we want to keep\n> around, pop the oldest item and set DocShellIsActive = false (which will\n> discard its layer tree).\n> \n\nYeah, that all sounds reasonable.\n\n> Question: how large should the queue be?\n\nWe actually think we know this! billm landed a Telemetry probe TAB_SWITCH_CACHE_POSITION a few weeks back in bug 1242013.\n\nHere's the histogram:\n\nhttps://telemetry.mozilla.org/new-pipeline/dist.html#!cumulative=0&end_date=2016-02-29&keys=__none__!__none__!__none__&max_channel_version=nightly%252F47&measure=TAB_SWITCH_CACHE_POSITION&min_channel_version=null&product=Firefox&sanitize=1&sort_keys=submissions&start_date=2016-02-13&table=0&trim=1&use_submission_date=0\n\nThis suggests that a cache of about 12 slots should account for 95% of tab switches.\n\n[1]: See https://bugzilla.mozilla.org/show_bug.cgi?id=1242013#c16 for details", "author": "mconley@mozilla.com", "id": 11216816, "time": "2016-03-03T22:22:23Z"}, {"text": "George, do you mind if I take this off you and look into what it might involve?\n\nAlso, Markus, do you know of anything that's changed related to this? I imagine not, but I figured I'd check in. I think some of this might be a little bit easier given the tab warming work that mconley has already done.", "author": "dothayer@mozilla.com", "id": 13210829, "time": "2018-04-16T20:47:22Z"}, {"text": "George isn't at Mozilla any more, I don't think he'll mind if you take it.", "author": "bugmail@mozilla.staktrace.com", "id": 13210871, "time": "2018-04-16T20:57:35Z"}, {"text": "I'm not aware of any changes in this area, other than the work that Mike did. He's a better source of information about this than I am, especially since we decided that this should be implemented in the tab switcher and not in the compositor.", "author": "mstange@themasta.com", "id": 13210874, "time": "2018-04-16T20:58:06Z"}, {"text": "Built a proof of concept for this. I figured I should open up the question again of how much memory do we want to spend on this. On a 2560x1440 display, with Firefox maximized, each cached YouTube seems to eat about 25MB. Napkin math checks out as far as I can tell - 2460 cols * 1440 rows * 4 bytes per pixel = 14.7MB.\n\nThis would mean a 12-page cache would cost us 300MB, and a 5-page cache would cost us 125MB. Neither of these figures are trivial, but neither is the thought of up to 95% reduction in tab switch spinners. Thoughts?", "author": "dothayer@mozilla.com", "id": 13211156, "time": "2018-04-16T22:53:44Z"}, {"text": "(In reply to Doug Thayer [:dthayer] from comment #12)\n> Built a proof of concept for this. I figured I should open up the question\n> again of how much memory do we want to spend on this. On a 2560x1440\n> display, with Firefox maximized, each cached YouTube seems to eat about\n> 25MB. Napkin math checks out as far as I can tell - 2460 cols * 1440 rows *\n> 4 bytes per pixel = 14.7MB.\n> \n> This would mean a 12-page cache would cost us 300MB, and a 5-page cache\n> would cost us 125MB. Neither of these figures are trivial, but neither is\n> the thought of up to 95% reduction in tab switch spinners. Thoughts?\n\nWoops, forgot to make clear that of course the average display size isn't 2460 * 1440. When I scale the window down to eyeball a 1366*768 display, I see a roughly 33% decrease in the memory per tab. Also, these are all very rough numbers, if that wasn't clear, but I think they serve well enough to illustrate the trade-off.", "author": "dothayer@mozilla.com", "id": 13211162, "time": "2018-04-16T23:00:05Z"}, {"text": "Markus, I'm trying to look into whether we can limit the cache to a concrete size, rather than an estimated size using a number of tabs. This would require us to have a means of knowing the number of bytes each tab's layers require. As far as I can tell there's no existing mechanism for this, and what we would have to do is compute it using rect sizes of layers in the compositor process and send it up when we SendObserveLayerUpdate(...).\n\nAt a very rough level is that correct / feasible? And if so do you have any notes / suggestions?", "author": "dothayer@mozilla.com", "id": 13213273, "time": "2018-04-17T18:32:43Z"}, {"text": "That sounds right but it also sounds rather complex. I don't really have an opinion on this, and don't have a good grasp of how much payoff we're expecting from the caching and how much complexity it warrants. I'm going to ask around in the gfx team for opinions.", "author": "mstange@themasta.com", "id": 13213311, "time": "2018-04-17T18:42:37Z"}, {"text": "Do you think it would be a good idea to implement this the naive way first, with a configurable number of cached tabs, and then gather some telemetry numbers to see how much it helps? Once we have the numbers, we could still choose to be smarter about how many tabs we keep around before we let the feature ride the trains. On the other hand, if it turns out that this approach doesn't give us much benefit (now that we have tab warming), we won't have wasted any time implementing the smarter solution.", "author": "mstange@themasta.com", "id": 13213412, "time": "2018-04-17T19:15:26Z"}, {"text": "I like the idea of prototyping something simple in AsyncTabSwitcher.jsm, just to see how this feels in practice, and get a sense of the memory cost.\n\nOther things we might consider on top of this:\n\n1) Instead of caching the layer tree as is, suppress the displayport and then flatten the layers into a single bitmap. That means that given a given window size, we can make pretty decent estimates on max cache size (using similar napkin math from comment 12 and comment 13)\n\n2) Consider compressing the bitmaps to reduce the memory overhead. This is, of course, trading space for time again, and operates on the assumption that decompressing a cached image is faster than a full-blown re-paint and upload.", "author": "mconley@mozilla.com", "id": 13219889, "time": "2018-04-19T21:43:34Z"}, {"text": "Created attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nWe maintain a simple LRU cache of tab layers by setting their\ndocShellIsActive = false with preserveLayers(true). Once they\nare pushed out of the cache by more recently used tabs, their\nlayers are discarded.\n\nLuckily most of the complexity of this could be contained in\nthe AsyncTabSwitcher - the one change that had to sit outside of\nthat was moving the aTab.closing = true earlier in the removeTab\ncall, so that we could use that information to eagerly evict tabs\nfrom the cache. This was to address a leak in a few tests on try.\n\nReview commit: https://reviewboard.mozilla.org/r/239754/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/239754/", "author": "dothayer@mozilla.com", "id": 13233718, "time": "2018-04-25T20:57:41Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nhttps://reviewboard.mozilla.org/r/239754/#review245924\n\nHey dthayer,\n\nThis looks great, thanks! I just have one (rather long) worry down below regarding memory. Happy to re-review if there's something I'm missing, or if my worries are unfounded!\n\n::: browser/base/content/tabbrowser.js:100\n(Diff revision 1)\n>  \n>    _lastFindValue: \"\",\n>  \n>    _contentWaitingCount: 0,\n>  \n> +  _tabLayerCache: [],\n\nThis makes me a tiny bit antsy, because I can imagine situations where background tabs close, and we never switch tabs (creating an AsyncTabSwitcher), and then we keep these old tabs alive because they exist in the cache.\n\nIdeally, what we'd have here is some kind of ordered collection of weak tabs. Perhaps instead of an Array of <xul:tab>'s, we could use Cu.getWeakReference, and have an Array of nsIWeakReference's... then if an AsyncTabSwitcher comes alive, we can count on it going through the cache list in preActions, and dropping the nsIWeakReference's that .get() to null.\n\nIt's a trade, I guess. We're trading keeping a <xul:tab> around in the cache, to keeping an nsIWeakReference around in the cache. I think I'd prefer that to avoid weird leak conditions where <xul:browser>'s still exist for some reason.\n\nThe other complication with using an array of nsIWeakReferene's is that it makes checking for the presence of a tab in the queue more cumbersome. I guess given the size of the cache, I'm not sure how much that matters, tbh. If it does matter, we could perhaps either have a WeakSet alongside the Array to check for presence in the cache, OR perhaps use a WeakSet in place of the Array, and use the scarily named ChromeUtils.nondeterministicGetWeakSetKeys[1] to check for order (and delete and add in order to promote the tab's rank).\n\nHow do you feel about all of this? Am I worrying too much about memory?\n\nAlso, as a follow-up, we might want to observe memory events[2], and clear the layer cache somehow if we're in a low memory situation.\n\n[1]: https://searchfox.org/mozilla-central/rev/78dbe34925f04975f16cb9a5d4938be714d41897/dom/chrome-webidl/ChromeUtils.webidl#58-68\n[2]: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#Low_memory_notifications\n\n::: browser/base/content/tabbrowser.js:2717\n(Diff revision 1)\n>        if (aTab.closing || (!timedOut && !permitUnload)) {\n>          return false;\n>        }\n>      }\n>  \n> +    aTab.closing = true;\n\nCan you mention why this needs to be here to avoid leaks in a comment?", "author": "mconley@mozilla.com", "id": 13236461, "time": "2018-04-26T19:33:10Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nhttps://reviewboard.mozilla.org/r/239754/#review245924\n\n> This makes me a tiny bit antsy, because I can imagine situations where background tabs close, and we never switch tabs (creating an AsyncTabSwitcher), and then we keep these old tabs alive because they exist in the cache.\n> \n> Ideally, what we'd have here is some kind of ordered collection of weak tabs. Perhaps instead of an Array of <xul:tab>'s, we could use Cu.getWeakReference, and have an Array of nsIWeakReference's... then if an AsyncTabSwitcher comes alive, we can count on it going through the cache list in preActions, and dropping the nsIWeakReference's that .get() to null.\n> \n> It's a trade, I guess. We're trading keeping a <xul:tab> around in the cache, to keeping an nsIWeakReference around in the cache. I think I'd prefer that to avoid weird leak conditions where <xul:browser>'s still exist for some reason.\n> \n> The other complication with using an array of nsIWeakReferene's is that it makes checking for the presence of a tab in the queue more cumbersome. I guess given the size of the cache, I'm not sure how much that matters, tbh. If it does matter, we could perhaps either have a WeakSet alongside the Array to check for presence in the cache, OR perhaps use a WeakSet in place of the Array, and use the scarily named ChromeUtils.nondeterministicGetWeakSetKeys[1] to check for order (and delete and add in order to promote the tab's rank).\n> \n> How do you feel about all of this? Am I worrying too much about memory?\n> \n> Also, as a follow-up, we might want to observe memory events[2], and clear the layer cache somehow if we're in a low memory situation.\n> \n> [1]: https://searchfox.org/mozilla-central/rev/78dbe34925f04975f16cb9a5d4938be714d41897/dom/chrome-webidl/ChromeUtils.webidl#58-68\n> [2]: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#Low_memory_notifications\n\nThat's a fair concern. However, I'm not actually sure how to hit this case without calling gBrowser.removeTab(...) from the console, given that we should have a switcher if we're hovering over a tab, even if tab warming is disabled. Windows opened from script calling window.close() on themselves, I guess?\n\nI think I'd favor either the nsIWeakReference approach, or just removing the tab from the cache directly inside gBrowser.removeTab(...), which I think would eliminate the need for moving aTab.closing = true;. Since gBrowser does technically own the cache, I don't personally have much issue with it being able to modify the cache, but I don't know what your feelings on that are.", "author": "dothayer@mozilla.com", "id": 13236789, "time": "2018-04-26T21:28:14Z"}, {"text": "(In reply to Doug Thayer [:dthayer] from comment #20)\n> Windows opened from script calling window.close() on themselves, I\n> guess?\n\nYep, and add-ons - add-ons can open and close tabs arbitrarily.\n\n> I think I'd favor either the nsIWeakReference approach, or just removing the\n> tab from the cache directly inside gBrowser.removeTab(...), which I think\n> would eliminate the need for moving aTab.closing = true;.\n\nActually, I like that - you're right, gBrowser owns the cache, so it should be in charge clearing it on removals. Let's do that.", "author": "mconley@mozilla.com", "id": 13238446, "time": "2018-04-27T15:31:07Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/239754/diff/1-2/", "author": "dothayer@mozilla.com", "id": 13238586, "time": "2018-04-27T16:15:17Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nhttps://reviewboard.mozilla.org/r/239754/#review246190\n\nThis looks good to me! However, we probably don't want to land this until the softfreeze is over, so maybe let's just let this sit for a little while until central becomes 62.\n\nIn the meantime, we might want to add this cache to the \"Perceived Performance Optimizations\" section of browser/base/content/docs/tabbrowser/async-tab-switcher.rst, and describe how it works.\n\n::: browser/modules/AsyncTabSwitcher.jsm:912\n(Diff revision 2)\n>      this.setTabState(tab, this.STATE_LOADING);\n>      this.queueUnload(gTabWarmingUnloadDelayMs);\n>    }\n>  \n> +  cleanUpTabAfterEviction(tab) {\n> +    let browser = tab.linkedBrowser;\n\nLet's add an assertion that the tab we're evicting isn't the requestedTab somehow.", "author": "mconley@mozilla.com", "id": 13238779, "time": "2018-04-27T17:41:19Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/239754/diff/2-3/", "author": "dothayer@mozilla.com", "id": 13260159, "time": "2018-05-07T17:57:12Z"}, {"text": "Pushed by dothayer@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/998791c75fbc\nCache layers of background tabs r=mconley", "author": "pulsebot@bots.tld", "id": 13260164, "time": "2018-05-07T17:59:23Z"}, {"text": "Backed out changeset 998791c75fbc (bug 1176019) for Browser-chrome failures on dom/plugins/test/mochitest/browser_bug1196539.js. CLOSED TREE \n\nLog:\nhttps://treeherder.mozilla.org/logviewer.html#?job_id=177366158&repo=autoland&lineNumber=15245\n\n742 INFO TEST-PASS | dom/plugins/test/mochitest/browser_bug1196539.js | plugin is hidden -\n00:24:27     INFO -  Buffered messages finished\n00:24:27    ERROR -  743 INFO TEST-UNEXPECTED-FAIL | dom/plugins/test/mochitest/browser_bug1196539.js | paint count can't be greater than zero, count was 0 -\n00:24:27     INFO -  Stack trace:\n00:24:27     INFO -  chrome://mochitests/content/browser/dom/plugins/test/mochitest/browser_bug1196539.js:checkPaintCount:4\n00:24:27     INFO -  chrome://mochitests/content/browser/dom/plugins/test/mochitest/browser_bug1196539.js:null:115\n00:24:27     INFO -  744 INFO TEST-PASS | dom/plugins/test/mochitest/browser_bug1196539.js | paint count should be within limits, count was 0 -\n00:24:27     INFO -  745 INFO Leaving test bound\n00:24:27     INFO -  GECKO(2796) | MEMORY STAT | vsize 2098975MB | vsizeMaxContiguous 128179972MB | residentFast 304MB | heapAllocated 121MB\n00:24:27     INFO -  746 INFO TEST-OK | dom/plugins/test/mochitest/browser_bug1196539.js | took 2575ms\n00:24:27     INFO -  GECKO(2796) | ++DOCSHELL 000001F67EDEC000 == 3 [pid = 1852] [id = {653a6cc3-f03a-4a10-9864-9809386b4933}]\n00:24:27     INFO -  GECKO(2796) | ++DOMWINDOW == 6 (000001F67F16AA00) [pid = 1852] [serial = 6] [outer = 0000000000000000]\n00:24:27     INFO -  GECKO(2796) | ++DOMWINDOW == 7 (000001F67F3C9800) [pid = 1852] [serial = 7] [outer = 000001F67F16AA00]\n00:24:27     INFO -  747 INFO checking window state\n00:24:27     INFO -  748 INFO TEST-START | dom/plugins/test/mochitest/browser_bug1335475.js\n00:24:27     INFO -  GECKO(2796) | ++DOCSHELL 000002AD88988800 == 2 [pid = 4696] [id = {f47b42ae-8dcf-4e1c-aa18-eb0fbbf60e3c}]\n00:24:27     INFO -  GECKO(2796) | ++DOMWINDOW == 4 (000002AD80F12000) [pid = 4696] [serial = 4] [outer = 0000000000000000]\n00:24:27     INFO -  GECKO(2796) | ++DOMWINDOW == 5 (000002AD889E8800) [pid = 4696] [serial = 5] [outer = 000002AD80F12000]\n00:24:27     INFO -  GECKO(2796) | ++DOMWINDOW == 6 (000002AD8876BC00) [pid = 4696] [serial = 6] [outer = 000002AD80F12000]\n00:24:28     INFO -  GECKO(2796) | [Child 4696, Main Thread] WARNING: site security information will not be persisted: file z:/build/build/src/security/manager/ssl/nsSiteSecurityService.cpp, line 553\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 7 (000002AD8AB11800) [pid = 4696] [serial = 7] [outer = 000002AD80F12000]\n00:24:28     INFO -  GECKO(2796) | ++DOCSHELL 000002AD8AB9E800 == 3 [pid = 4696] [id = {9827dd50-bbf7-4a45-adff-f35c492ab258}]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 8 (000002AD8A0F4600) [pid = 4696] [serial = 8] [outer = 0000000000000000]\n00:24:28     INFO -  GECKO(2796) | For application/x-test found plugin nptest.dll\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 9 (000002AD8B00B400) [pid = 4696] [serial = 9] [outer = 000002AD8A0F4600]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 10 (000002AD8B00FC00) [pid = 4696] [serial = 10] [outer = 000002AD80F12000]\n00:24:28     INFO -  GECKO(2796) | ### XPCOM_MEM_BLOAT_LOG defined -- logging bloat/leaks to c:\\users\\task_1525737823\\appdata\\local\\temp\\tmp2bwvkv.mozrunner\\runtests_leaks_tab_pid3652.log\n00:24:28     INFO -  GECKO(2796) | [Child 3652, Main Thread] WARNING: No CID found when attempting to map contract ID: file z:/build/build/src/xpcom/components/nsComponentManager.cpp, line 505\n00:24:28     INFO -  GECKO(2796) | Unable to read VR Path Registry from Z:\\task_1525737823\\AppData\\Local\\openvr\\openvrpaths.vrpath\n00:24:28     INFO -  GECKO(2796) | [Child 3652, Main Thread] WARNING: NS_ENSURE_SUCCESS(rv, rv) failed with result 0x80004005: file z:/build/build/src/xpcom/base/nsSystemInfo.cpp, line 119\n00:24:28     INFO -  GECKO(2796) | ++DOCSHELL 000002054FD47000 == 1 [pid = 3652] [id = {0cf2978e-6e52-404a-ab9e-7be532dd0370}]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 1 (000002054FD11A00) [pid = 3652] [serial = 1] [outer = 0000000000000000]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 2 (0000020555399C00) [pid = 3652] [serial = 2] [outer = 000002054FD11A00]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 3 (0000020557559C00) [pid = 3652] [serial = 3] [outer = 000002054FD11A00]\n00:24:28     INFO -  GECKO(2796) | ++DOCSHELL 00000205577BA800 == 2 [pid = 3652] [id = {815f6114-b1fb-4f20-831e-856eada27467}]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 4 (0000020557571A00) [pid = 3652] [serial = 4] [outer = 0000000000000000]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 5 (0000020557C10400) [pid = 3652] [serial = 5] [outer = 0000020557571A00]\n00:24:28     INFO -  GECKO(2796) | [Parent 2796, Gecko_IOThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346\n00:24:28     INFO -  GECKO(2796) | MEMORY STAT | vsize 2098983MB | vsizeMaxContiguous 128179972MB | residentFast 314MB | heapAllocated 124MB\n00:24:28     INFO -  749 INFO TEST-OK | dom/plugins/test/mochitest/browser_bug1335475.js | took 1262ms\n00:24:28     INFO -  GECKO(2796) | ++DOCSHELL 00000223A215A800 == 3 [pid = 8100] [id = {e2206ac8-a156-4621-bafa-48cc0b3c4a7d}]\n00:24:28     INFO -  GECKO(2796) | ++DOMWINDOW == 6 (00000223A2178400) [pid = 8100] [serial = 6] [outer = 0000000000000000]\n00:24:29     INFO -  GECKO(2796) | ++DOMWINDOW == 7 (00000223A3FE6C00) [pid = 8100] [serial = 7] [outer = 00000223A2178400]\n00:24:29     INFO -  750 INFO checking window state\n\nPush with failures:\nhttps://treeherder.mozilla.org/#/jobs?repo=autoland&revision=998791c75fbcf1ab689ae822be0a2c33e98ff1f7\n\nBackout:\nhttps://hg.mozilla.org/integration/autoland/rev/bc29be44bbab41270339ca771d7f8d22a4be4484", "author": "dluca@mozilla.com", "id": 13261680, "time": "2018-05-08T08:02:28Z"}, {"text": "Created attachment 8974194\nBug 1176019 - Fix browser_bug1196539.js painting check\n\nReview commit: https://reviewboard.mozilla.org/r/242484/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/242484/", "author": "dothayer@mozilla.com", "id": 13263869, "time": "2018-05-08T22:27:19Z"}, {"text": "Created attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nAfter digging into this, I'm still not entirely sure why the timing\nhas changed such that the checks don't work immediately. I have a\nstrong suspicion though that it's simply because our tab switch is\nnow instant, resulting in the necessary messages just being a\nlittle bit behind. Hopefully this is an acceptable bandaid.\n\nReview commit: https://reviewboard.mozilla.org/r/242486/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/242486/", "author": "dothayer@mozilla.com", "id": 13263870, "time": "2018-05-08T22:27:19Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/239754/diff/3-4/", "author": "dothayer@mozilla.com", "id": 13263871, "time": "2018-05-08T22:27:19Z"}, {"text": "Comment on attachment 8974194\nBug 1176019 - Fix browser_bug1196539.js painting check\n\nhttps://reviewboard.mozilla.org/r/242484/#review248382\n\nSeems like a fine band-aid here.", "author": "mconley@mozilla.com", "id": 13263954, "time": "2018-05-08T23:07:48Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nhttps://reviewboard.mozilla.org/r/242486/#review248632\n\nClearing r?, mostly because I think we should ask jimm about what to do here. Or maybe we can just wait for MozAfterPaint. At the very least, I don't think I'm the right person to make the final call on how to fix this test.\n\n::: dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js:4\n(Diff revision 1)\n>  var gTestRoot = getRootDirectory(gTestPath).replace(\"chrome://mochitests/content/\", \"http://127.0.0.1:8888/\");\n>  \n> +function waitForPluginVisibility(browser, shouldBeVisible, errorMessage) {\n> +  return BrowserTestUtils.waitForCondition(async () => {\n\nSomething about this seems off... so, I guess we're keeping the layers around, presumably, for these test tabs...\n\nAt some point, I guess the compositor receives some kind of signal to update \"plugin windows\" here: https://searchfox.org/mozilla-central/rev/5ff2d7683078c96e4b11b8a13674daded935aa44/gfx/layers/composite/AsyncCompositionManager.cpp#147-152, and that, I guess, sends a message to the parent process(?) to update plugin visibility over here:\n\nhttps://searchfox.org/mozilla-central/rev/5ff2d7683078c96e4b11b8a13674daded935aa44/gfx/layers/ipc/CompositorBridgeChild.cpp#464\n\nwhich, I guess sets visibility to false here for the plugins that shouldn't be visible:\n\nhttps://searchfox.org/mozilla-central/rev/5ff2d7683078c96e4b11b8a13674daded935aa44/widget/nsBaseWidget.cpp#2350\n\nSo I guess what happens here is that we complete the tab switch to the new tab, and the old ones layers are still on the compositor because it's cached, and then AsyncTabSwitcher fires the TabSwitchDone event, which causes our test here to proceed.\n\nAnd I guess maybe there's a race now where the ContentTask message to the content process to ask about the visible state of the plugin, and the message from the compositor to the parent (? or content process? or plugin process? This part is really fuzzy for me...) to update visibility state of the plugin...\n\nInstead of waiting for the arbitrary 200ms, can we instead wait for a message from the compositor that we know must fire _after_ the update-the-plugin-visibility message goes out? MozAfterPaint maybe?\n\nIf that turns out to be a quagmire, this band-aid _might_ be okay, but I'm a bit less confident I'm the right person to make that call for this particular test. jimm might be the better person to ask to sign-off on it.\n\nMy only fear, ultimately, is that we're introducing a case where plugins from background tabs that we're switching from might continue to be displayed overtop of the foreground tab - even if it's just for a few milliseconds.", "author": "mconley@mozilla.com", "id": 13266124, "time": "2018-05-09T17:46:55Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/242486/diff/1-2/", "author": "dothayer@mozilla.com", "id": 13268940, "time": "2018-05-10T17:52:54Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nhttps://reviewboard.mozilla.org/r/242486/#review248998\n\nI think this is probably okay, but is it possible to just wait for the MozAfterPaint? If not, let's go your route.\n\n::: dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js:24\n(Diff revisions 1 - 2)\n> +        // still don't have the correct visibility, that's likely a\n> +        // problem.\n> +        reject();\n> +      }\n> +    };\n> +    window.addEventListener(\"MozAfterPaint\", listener);\n\nThis seems okay - but can we just wait for the MozAfterPaint rather than calling listener() directly? I feel like that would simplify things a bit.\n\nOH, and just a thing to note about MozAfterPaint - see https://groups.google.com/forum/#!searchin/mozilla.dev.platform/MozAfterPaint%7Csort:date/mozilla.dev.platform/pCLwWdYc_GY/j9A-vWm3AgAJ for details if you're noticing MozAfterPaints where the visibility is still not what you expect.", "author": "mconley@mozilla.com", "id": 13268949, "time": "2018-05-10T18:02:02Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nhttps://reviewboard.mozilla.org/r/242486/#review248998\n\n> This seems okay - but can we just wait for the MozAfterPaint rather than calling listener() directly? I feel like that would simplify things a bit.\n> \n> OH, and just a thing to note about MozAfterPaint - see https://groups.google.com/forum/#!searchin/mozilla.dev.platform/MozAfterPaint%7Csort:date/mozilla.dev.platform/pCLwWdYc_GY/j9A-vWm3AgAJ for details if you're noticing MozAfterPaints where the visibility is still not what you expect.\n\nWe call this function in succession for each tab, so there's no guarantee that there's actually going to be a MozAfterPaint coming each time. Additionally, if the tab we're switching to isn't in the cache, then we already waited for the MozAfterPaint in waiting for the tab switch, so we might not get it. Surprisingly, not calling listener() directly does work, at least locally, and I'm not sure why we're getting enough MozAfterPaint's for it to work. In either case, checking the visibility once before waiting for a MozAfterPaint just seemed like a more robust solution. Let me know if you disagree or if I'm missing something though.", "author": "dothayer@mozilla.com", "id": 13268981, "time": "2018-05-10T18:21:33Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nhttps://reviewboard.mozilla.org/r/242486/#review248998\n\n> We call this function in succession for each tab, so there's no guarantee that there's actually going to be a MozAfterPaint coming each time. Additionally, if the tab we're switching to isn't in the cache, then we already waited for the MozAfterPaint in waiting for the tab switch, so we might not get it. Surprisingly, not calling listener() directly does work, at least locally, and I'm not sure why we're getting enough MozAfterPaint's for it to work. In either case, checking the visibility once before waiting for a MozAfterPaint just seemed like a more robust solution. Let me know if you disagree or if I'm missing something though.\n\nNah, let's not worry about it for this test. Let's land this puppy!", "author": "mconley@mozilla.com", "id": 13268995, "time": "2018-05-10T18:23:42Z"}, {"text": "Pushed by dothayer@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/3e7dbe6b5122\nCache layers of background tabs r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/6c591b484a11\nFix browser_bug1196539.js painting check r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/31b295f557db\nFix browser_tabswitchbetweenplugins.js r=mconley", "author": "pulsebot@bots.tld", "id": 13269351, "time": "2018-05-10T21:04:20Z"}, {"text": "Backed out 3 changesets (bug 1176019) for Browser-chrome failures on dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js. CLOSED TREE\n\nLog:\nhttps://treeherder.mozilla.org/logviewer.html#?job_id=177955039&repo=autoland&lineNumber=16120\n\n653 INFO TEST-PASS | dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js | plugin2 is selected -\n22:32:58     INFO -  Buffered messages finished\n22:32:58    ERROR -  654 INFO TEST-UNEXPECTED-FAIL | dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js | Uncaught exception -\n22:32:58     INFO -  655 INFO Leaving test bound\n22:32:58     INFO -  GECKO(3068) | MEMORY STAT | vsize 2099088MB | vsizeMaxContiguous 129892985MB | residentFast 340MB | heapAllocated 110MB\n22:32:58     INFO -  656 INFO TEST-OK | dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js | took 1389ms\n22:32:58     INFO -  Not taking screenshot here: see the one that was previously logged\n22:32:58    ERROR -  657 INFO TEST-UNEXPECTED-FAIL | dom/plugins/test/mochitest/browser_tabswitchbetweenplugins.js | Found an unexpected tab at the end of test run: http://127.0.0.1:8888/browser/dom/plugins/test/mochitest/plugin_test.html -\n22:32:58     INFO -  GECKO(3068) | [Child 1048, Main Thread] ###!!! ASSERTION: does it make sense to Show()/Hide() a disabled widget?: 'mEnabled', file z:/build/build/src/widget/PuppetWidget.cpp, line 208\n22:32:58     INFO -  GECKO(3068) | #01: nsPluginInstanceOwner::UpdateDocumentActiveState(bool) [dom/plugins/base/nsPluginInstanceOwner.cpp:3202]\n22:32:58     INFO -  GECKO(3068) | #02: nsPluginFrame::SetIsDocumentActive(bool) [layout/generic/nsPluginFrame.cpp:1739]\n22:32:58     INFO -  GECKO(3068) | #03: static void SetPluginIsActive(class nsISupports *, void *) [layout/base/PresShell.cpp:10432]\n22:32:58     INFO -  GECKO(3068) | #04: nsIDocument::EnumerateActivityObservers(void (*)(nsISupports *,void *),void *) [dom/base/nsDocument.cpp:9523]\n22:32:58     INFO -  GECKO(3068) | #05: mozilla::PresShell::SetIsActive(bool) [layout/base/PresShell.cpp:10455]\n22:32:58     INFO -  GECKO(3068) | #06: nsDocShell::SetIsActive(bool) [docshell/base/nsDocShell.cpp:5760]\n22:32:58     INFO -  GECKO(3068) | #07: mozilla::dom::TabChild::InternalSetDocShellIsActive(bool) [dom/ipc/TabChild.cpp:2553]\n22:32:58     INFO -  GECKO(3068) | #08: mozilla::dom::TabChild::RecvSetDocShellIsActive(bool const &) [dom/ipc/TabChild.cpp:2568]\n22:32:58     INFO -  GECKO(3068) | #09: mozilla::dom::PBrowserChild::OnMessageReceived(IPC::Message const &) [s3:gecko-generated-sources:9a88dd75b3dc75e8154ddef2f047fece42b19a07139073a5a0a6b3d489da84ac4df07180672ca794085eca4bad552c419650a45ea3ee19f4e65ec4671e653e96/ipc/ipdl/PBrowserChild.cpp::4670]\n22:32:58     INFO -  GECKO(3068) | #10: mozilla::dom::PContentChild::OnMessageReceived(IPC::Message const &) [s3:gecko-generated-sources:beb29ed80331f819f946475df574498a584084caef02cfa8c6078589221a4714017a415ab8751410f0f9629339ac0242ba76aa13b5aa5ca6e1c94d7d102bc024/ipc/ipdl/PContentChild.cpp::5316]\n22:32:58     INFO -  GECKO(3068) | #11: mozilla::ipc::MessageChannel::DispatchAsyncMessage(IPC::Message const &) [ipc/glue/MessageChannel.cpp:2136]\n22:32:58     INFO -  GECKO(3068) | #12: mozilla::ipc::MessageChannel::DispatchMessageW(IPC::Message &&) [ipc/glue/MessageChannel.cpp:2067]\n22:32:58     INFO -  GECKO(3068) | #13: mozilla::ipc::MessageChannel::RunMessage(mozilla::ipc::MessageChannel::MessageTask &) [ipc/glue/MessageChannel.cpp:1912]\n22:32:58     INFO -  GECKO(3068) | #14: mozilla::ipc::MessageChannel::MessageTask::Run() [ipc/glue/MessageChannel.cpp:1945]\n22:32:58     INFO -  GECKO(3068) | #15: mozilla::SchedulerGroup::Runnable::Run() [xpcom/threads/SchedulerGroup.cpp:341]\n22:32:58     INFO -  GECKO(3068) | #16: nsThread::ProcessNextEvent(bool,bool *) [xpcom/threads/nsThread.cpp:1093]\n22:32:58     INFO -  GECKO(3068) | #17: NS_ProcessNextEvent(nsIThread *,bool) [xpcom/threads/nsThreadUtils.cpp:519]\n22:32:58     INFO -  GECKO(3068) | #18: mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) [ipc/glue/MessagePump.cpp:125]\n22:32:58     INFO -  GECKO(3068) | #19: mozilla::ipc::MessagePumpForChildProcess::Run(base::MessagePump::Delegate *) [ipc/glue/MessagePump.cpp:301]\n22:32:58     INFO -  GECKO(3068) | #20: MessageLoop::RunHandler() [ipc/chromium/src/base/message_loop.cc:320]\n22:32:58     INFO -  GECKO(3068) | #21: MessageLoop::Run() [ipc/chromium/src/base/message_loop.cc:300]\n22:32:58     INFO -  GECKO(3068) | #22: nsBaseAppShell::Run() [widget/nsBaseAppShell.cpp:159]\n22:32:58     INFO -  GECKO(3068) | #23: nsAppShell::Run() [widget/windows/nsAppShell.cpp:403]\n22:32:58     INFO -  GECKO(3068) | #24: XRE_RunAppShell() [toolkit/xre/nsEmbedFunctions.cpp:893]\n22:32:58     INFO -  GECKO(3068) | #25: mozilla::ipc::MessagePumpForChildProcess::Run(base::MessagePump::Delegate *) [ipc/glue/MessagePump.cpp:269]\n22:32:58     INFO -  GECKO(3068) | #26: MessageLoop::RunHandler() [ipc/chromium/src/base/message_loop.cc:320]\n22:32:58     INFO -  GECKO(3068) | #27: MessageLoop::Run() [ipc/chromium/src/base/message_loop.cc:300]\n22:32:58     INFO -  GECKO(3068) | #28: XRE_InitChildProcess(int,char * * const,XREChildData const *) [toolkit/xre/nsEmbedFunctions.cpp:723]\n22:32:58     INFO -  GECKO(3068) | #29: content_process_main(mozilla::Bootstrap *,int,char * * const) [ipc/contentproc/plugin-container.cpp:51]\n22:32:58     INFO -  GECKO(3068) | #30: NS_internal_main(int,char * *,char * *) [browser/app/nsBrowserApp.cpp:285]\n22:32:58     INFO -  GECKO(3068) | #31: wmain [toolkit/xre/nsWindowsWMain.cpp:143]\n22:32:58     INFO -  GECKO(3068) | #32: static int __scrt_common_main_seh() [f:/dd/vctools/crt/vcstartup/src/startup/exe_common.inl:283]\n22:32:58     INFO -  GECKO(3068) | #33: KERNEL32.DLL + 0x12774\n22:32:58     INFO -  GECKO(3068) | #34: ntdll.dll + 0x70d61\n22:32:58     INFO -  Not taking screenshot here: see the one that was previously logged\n\nPush with failures:\nhttps://treeherder.mozilla.org/#/jobs?repo=autoland&revision=31b295f557db579744feb07900a5aa5e145452b0\n\nBackout:\nhttps://hg.mozilla.org/integration/autoland/rev/4e08519eb8f0726820d67ac458d289d9dc503006", "author": "dluca@mozilla.com", "id": 13269649, "time": "2018-05-10T23:06:07Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/242486/diff/2-3/", "author": "dothayer@mozilla.com", "id": 13269960, "time": "2018-05-11T05:08:30Z"}, {"text": "Applied the lastTransactionId changes mentioned in the google doc in comment 33. The try looks good, at least for 9 runs of the job containing that test. Fingers crossed.\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=3c9a51dfc5a61fffb21a95f13f6e96f8b7d09ba1&selectedJob=177991418", "author": "dothayer@mozilla.com", "id": 13269962, "time": "2018-05-11T05:11:15Z"}, {"text": "Pushed by dothayer@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/2d0dfc54128e\nCache layers of background tabs r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/9c6b0eb062ca\nFix browser_bug1196539.js painting check r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/2dd8b719d645\nFix browser_tabswitchbetweenplugins.js r=mconley", "author": "pulsebot@bots.tld", "id": 13269964, "time": "2018-05-11T05:13:14Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/2d0dfc54128e\nhttps://hg.mozilla.org/mozilla-central/rev/9c6b0eb062ca\nhttps://hg.mozilla.org/mozilla-central/rev/2dd8b719d645", "author": "ebalazs@mozilla.com", "id": 13270282, "time": "2018-05-11T09:38:39Z"}, {"text": "Backed out 3 changesets (bug 1176019) for frequently failing /builds/worker/workspace/build/src/obj-firefox/dist/include/mozilla/Maybe.h\nFailure log: https://treeherder.mozilla.org/logviewer.html#?job_id=178024286&repo=mozilla-central&lineNumber=17330\nBackout: https://hg.mozilla.org/mozilla-central/rev/4303d49c53931385892231969e40048f096b4d4c", "author": "ebalazs@mozilla.com", "id": 13270790, "time": "2018-05-11T14:12:57Z"}, {"text": "Hiro, I'm wondering if you can help me understand this any better? My patch seems to be crashing unwrapping the Maybe on this line: https://searchfox.org/mozilla-central/source/gfx/layers/composite/AsyncCompositionManager.cpp#722. The test seems to fail when switching between tabs very quickly (can't reproduce it locally). My patch does upset the usual ordering of a tab switch because with it we hold onto recently used tabs' layers, resulting in instant tab switches. Do you have any ideas why this change might result in a crash there?", "author": "dothayer@mozilla.com", "id": 13271953, "time": "2018-05-11T22:22:20Z"}, {"text": "Doug, I am sorry for the bothering you about the assertion.\nI think your changes un-wallpapered an underlying issue that causes the assertion.\n\n(In reply to Doug Thayer [:dthayer] from comment #43)\n> Hiro, I'm wondering if you can help me understand this any better? My patch\n> seems to be crashing unwrapping the Maybe on this line:\n> https://searchfox.org/mozilla-central/source/gfx/layers/composite/\n> AsyncCompositionManager.cpp#722. The test seems to fail when switching\n> between tabs very quickly (can't reproduce it locally).\n\nThis information is pretty helpful to understand what's going on there.\nI will fix the underlying issue in bug 1461023.  But for now, I am going to disable the assertion in bug 1461023.\n\nThanks!", "author": "hikezoe@mozilla.com", "id": 13272019, "time": "2018-05-11T22:59:54Z"}, {"text": "(In reply to Hiroyuki Ikezoe (:hiro) from comment #44)\n> \n> This information is pretty helpful to understand what's going on there.\n> I will fix the underlying issue in bug 1461023.  But for now, I am going to\n> disable the assertion in bug 1461023.\n\nWrong bug number..\n\nI meant, I will fix the issue in bug 1459775.", "author": "hikezoe@mozilla.com", "id": 13272022, "time": "2018-05-11T23:01:25Z"}, {"text": "(In reply to Hiroyuki Ikezoe (:hiro) from comment #44)\n> This information is pretty helpful to understand what's going on there.\n> I will fix the underlying issue in bug 1461023.  But for now, I am going to\n> disable the assertion in bug 1461023.\n> \n> Thanks!\n\nThank you for the quick response! :)", "author": "dothayer@mozilla.com", "id": 13272032, "time": "2018-05-11T23:06:36Z"}, {"text": "mconley, what do you think we should do regarding Bug 1460905? The way I see it we have two strategies we can mix/match:\n\n1. Force the paint when we switch tabs, so that the stale content will only stay around for as long as the tab switcher would have stayed around previously.\n2. Try to invalidate the cache when the layers have changed.\n\n#1 alone means we could have flashes of stale content which might differ greatly from what _should_ be displayed, and #2 alone means we might be invalidating the cache for trivial differences, and best I can tell it would be rather complicated to implement. I'm leaning toward #1, with a special case where we invalidate the cache for a background tab at some point during page load.", "author": "dothayer@mozilla.com", "id": 13272829, "time": "2018-05-12T23:47:45Z"}, {"text": "(In reply to Doug Thayer [:dthayer] from comment #47)\n> #1 alone means we could have flashes of stale content which might differ\n> greatly from what _should_ be displayed, and #2 alone means we might be\n> invalidating the cache for trivial differences, and best I can tell it would\n> be rather complicated to implement. I'm leaning toward #1, with a special\n> case where we invalidate the cache for a background tab at some point during\n> page load.\n\nI'd be interested in knowing what Chromium strategy is here. Can you dig in and see what they do to avoid the flashes of stale content? (Since I can't seem to reproduce the bug in Chromium)", "author": "mconley@mozilla.com", "id": 13276085, "time": "2018-05-14T15:57:11Z"}, {"text": "(In reply to Mike Conley (:mconley) (:\u2699\ufe0f) (Catching up on needinfos / reviews) from comment #48)\n> I'd be interested in knowing what Chromium strategy is here. Can you dig in\n> and see what they do to avoid the flashes of stale content? (Since I can't\n> seem to reproduce the bug in Chromium)\n\nIt looks similar to what I proposed, as far as I can tell, probably with more special cases though. If you stress your CPU to 100% to slow Chrome down, and follow the STR in Bug 1460905, you'll see blank content and then it will paint the new page. However if you create a page that just changes a div's color every 5 seconds, and switch away from it for more than 5 seconds, when you come back you'll see a flash of the color that you left it on.", "author": "dothayer@mozilla.com", "id": 13276141, "time": "2018-05-14T16:23:07Z"}, {"text": "Alright - let's go with #1 then, keeping in mind / structuring it so that we might want to add some heuristics or edge-case handlers to invalidate the cache to avoid weird flicker.\n\nThanks!", "author": "mconley@mozilla.com", "id": 13276164, "time": "2018-05-14T16:34:26Z"}, {"text": "Created attachment 8975841\nBug 1176019 - Force a paint when switching to a loaded tab\n\nThis is fairly straightforward, other than the fact that the\nnomenclature gets a bit awkward with the aForce parameter on\nthe ForcePaint methods. I'm not sure which direction to go with\nthis - \"aForce\" seems a fairly intuitive name for what we want,\nand I'm kind of inclined to say the existing ForcePaint mechanic\nshould be renamed to something like PaintWithInterrupt, or\nPaintWithPriority.\n\nReview commit: https://reviewboard.mozilla.org/r/244028/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/244028/", "author": "dothayer@mozilla.com", "id": 13278883, "time": "2018-05-15T15:08:10Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/239754/diff/4-5/", "author": "dothayer@mozilla.com", "id": 13278884, "time": "2018-05-15T15:08:10Z"}, {"text": "Comment on attachment 8974194\nBug 1176019 - Fix browser_bug1196539.js painting check\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/242484/diff/1-2/", "author": "dothayer@mozilla.com", "id": 13278885, "time": "2018-05-15T15:08:10Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/242486/diff/3-4/", "author": "dothayer@mozilla.com", "id": 13278886, "time": "2018-05-15T15:08:10Z"}, {"text": "Went down a rabbit hole yesterday trying to figure out why Bug 1460905 didn't seem to be affecting tab warming. Turns out it does affect tab warming - it's just intermittent (and naturally you have to tweak the prefs to make it convenient to reproduce). I was trying to sort out if I needed to special case tab warming for this, and if I did, why, since a warmed tab and a cached tab should be in the same state.", "author": "dothayer@mozilla.com", "id": 13278897, "time": "2018-05-15T15:11:48Z"}, {"text": "Created attachment 8975952\nBug 1176019 - Clear cached layers on location change\n\nTo avoid a flash of stale content in the event of a slow tab\nswitch, we need to make sure we remove a tab from the cache if\nits location changes while it's in the background.\n\nReview commit: https://reviewboard.mozilla.org/r/244116/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/244116/", "author": "dothayer@mozilla.com", "id": 13279854, "time": "2018-05-15T20:29:06Z"}, {"text": "Created attachment 8975953\nBug 1176019 - Don't let cache interfere with tab warming\n\nWhile working to reproduce the stale content bug with tab warming\nI realized that my work here had inadvertently clobbered tab\nwarming by immediately calling the tab unload code. This wasn't\nnecessary, and I didn't need to put the cached tab deactivation\ncode in the unload method, it just seemed initially convenient.\nThis should make more sense overall.\n\nReview commit: https://reviewboard.mozilla.org/r/244118/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/244118/", "author": "dothayer@mozilla.com", "id": 13279855, "time": "2018-05-15T20:29:06Z"}, {"text": "Comment on attachment 8975841\nBug 1176019 - Force a paint when switching to a loaded tab\n\nhttps://reviewboard.mozilla.org/r/244028/#review250402\n\nThanks! Structurally, this seems sound. I don't think it needs re-review, but certainly the naming needs to be worked out before this lands.\n\n::: dom/ipc/PBrowser.ipdl:765\n(Diff revision 1)\n>       * clears the layers from the compositor.\n>       *\n>       * @param aEnabled\n>       *        True if the child should render and upload layers, false if the\n>       *        child should clear layers.\n> +     * @param aForce\n\nMaybe aForceRepaint? Naming is hard.\n\n::: dom/ipc/PProcessHangMonitor.ipdl:44\n(Diff revision 1)\n>    async TerminateScript(bool aTerminateGlobal);\n>  \n>    async BeginStartingDebugger();\n>    async EndStartingDebugger();\n>  \n> -  async ForcePaint(TabId tabId, uint64_t aLayerObserverEpoch);\n> +  async ForcePaint(TabId tabId, bool force, uint64_t aLayerObserverEpoch);\n\nWe could rename ForcePaint to either of your suggestions, or we could maybe rename the argument to \"allowRepaint\" or something.\n\nI do, however, think it might be better to rename ForcePaint. PaintWithInterrupt might be made clearer as PaintWithJSInterrupt...\n\nor maybe PaintWhileInterruptingJS.\n\nI feel like maybe PaintWhileInterruptingJS is clearest. How do you feel about that?\n\n::: dom/ipc/ProcessHangMonitor.cpp:302\n(Diff revision 1)\n>     mTerminateScript(false),\n>     mTerminateGlobal(false),\n>     mStartDebugger(false),\n>     mFinishedStartingDebugger(false),\n>     mForcePaint(false),\n> +   mForcePaintForce(false),\n\nYep, probably should rename one of these things before any of this lands.\n\n::: dom/ipc/TabChild.cpp:2541\n(Diff revision 1)\n>      mPendingDocShellReceivedMessage = false;\n>      InternalSetDocShellIsActive(mPendingDocShellIsActive);\n>    }\n>    if (!mPendingDocShellBlockers && mPendingRenderLayersReceivedMessage) {\n>      mPendingRenderLayersReceivedMessage = false;\n> -    RecvRenderLayers(mPendingRenderLayers, mPendingLayerObserverEpoch);\n> +    RecvRenderLayers(mPendingRenderLayers, false, mPendingLayerObserverEpoch);\n\nSame note as above, re: boolean arguments. It's a personal preference, and I'm willing to take pushback. It's not, like, Mozilla policy or anything.\n\n::: dom/ipc/TabParent.cpp:2923\n(Diff revision 1)\n>      return NS_OK;\n>    }\n>  \n>    mRenderLayers = aEnabled;\n>  \n> -  // Increment the epoch so that layer tree updates from previous\n> +  SetRenderLayersInternal(aEnabled, false);\n\nFor boolean arguments like this, I sometimes find it's clearer to do something like:\n\n```\nSetRenderLayersInternal(aEnabled, false /* aForce */);\n```\n\nUp to you, but I think it'd make it easier to read and understand.\n\n::: dom/ipc/TabParent.cpp:2944\n(Diff revision 1)\n>  }\n>  \n>  NS_IMETHODIMP\n> +TabParent::ForcePaint()\n> +{\n> +  SetRenderLayersInternal(true, true);\n\nSame note as above, this might be easier to read as:\n\n```\nSetRenderLayersInternal(true /* aEnabled */,\n                        true /* aForce */);\n```", "author": "mconley@mozilla.com", "id": 13282053, "time": "2018-05-16T17:25:25Z"}, {"text": "Comment on attachment 8975841\nBug 1176019 - Force a paint when switching to a loaded tab\n\nhttps://reviewboard.mozilla.org/r/244028/#review250412\n\n::: browser/modules/AsyncTabSwitcher.jsm:983\n(Diff revision 1)\n>  \n>      this.requestedTab = tab;\n>      if (tabState == this.STATE_LOADED) {\n>        this.maybeVisibleTabs.clear();\n> +      if (tab.linkedBrowser.isRemoteBrowser) {\n> +        tab.linkedBrowser.forcePaint();\n\nI guess we still risk showing a stale frame if we flip the deck before the compositor receives the updated layers?", "author": "mconley@mozilla.com", "id": 13282056, "time": "2018-05-16T17:26:41Z"}, {"text": "Comment on attachment 8975952\nBug 1176019 - Clear cached layers on location change\n\nhttps://reviewboard.mozilla.org/r/244116/#review250414\n\nMakes sense - thanks!", "author": "mconley@mozilla.com", "id": 13282067, "time": "2018-05-16T17:29:04Z"}, {"text": "Comment on attachment 8975953\nBug 1176019 - Don't let cache interfere with tab warming\n\nhttps://reviewboard.mozilla.org/r/244118/#review250416\n\nYou're right - this does make more sense, and I'm sorry I didn't catch it the first time around! Thanks.", "author": "mconley@mozilla.com", "id": 13282076, "time": "2018-05-16T17:32:27Z"}, {"text": "Comment on attachment 8971032\nBug 1176019 - Cache layers of background tabs\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/239754/diff/5-6/", "author": "dothayer@mozilla.com", "id": 13295272, "time": "2018-05-21T22:30:18Z"}, {"text": "Comment on attachment 8974194\nBug 1176019 - Fix browser_bug1196539.js painting check\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/242484/diff/2-3/", "author": "dothayer@mozilla.com", "id": 13295273, "time": "2018-05-21T22:30:18Z"}, {"text": "Comment on attachment 8974195\nBug 1176019 - Fix browser_tabswitchbetweenplugins.js\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/242486/diff/4-5/", "author": "dothayer@mozilla.com", "id": 13295274, "time": "2018-05-21T22:30:18Z"}, {"text": "Comment on attachment 8975841\nBug 1176019 - Force a paint when switching to a loaded tab\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/244028/diff/1-2/", "author": "dothayer@mozilla.com", "id": 13295275, "time": "2018-05-21T22:30:18Z"}, {"text": "Comment on attachment 8975952\nBug 1176019 - Clear cached layers on location change\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/244116/diff/1-2/", "author": "dothayer@mozilla.com", "id": 13295276, "time": "2018-05-21T22:30:18Z"}, {"text": "Comment on attachment 8975953\nBug 1176019 - Don't let cache interfere with tab warming\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/244118/diff/1-2/", "author": "dothayer@mozilla.com", "id": 13295277, "time": "2018-05-21T22:30:18Z"}, {"text": "Created attachment 8979393\nFix bool arg\n\nReview commit: https://reviewboard.mozilla.org/r/245552/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/245552/", "author": "dothayer@mozilla.com", "id": 13295286, "time": "2018-05-21T22:35:10Z"}, {"text": "Comment on attachment 8975841\nBug 1176019 - Force a paint when switching to a loaded tab\n\nhttps://reviewboard.mozilla.org/r/244028/#review250402\n\n> We could rename ForcePaint to either of your suggestions, or we could maybe rename the argument to \"allowRepaint\" or something.\n> \n> I do, however, think it might be better to rename ForcePaint. PaintWithInterrupt might be made clearer as PaintWithJSInterrupt...\n> \n> or maybe PaintWhileInterruptingJS.\n> \n> I feel like maybe PaintWhileInterruptingJS is clearest. How do you feel about that?\n\nPaintWhileInterruptingJS works for me!", "author": "dothayer@mozilla.com", "id": 13295287, "time": "2018-05-21T22:35:27Z"}, {"text": "Comment on attachment 8975841\nBug 1176019 - Force a paint when switching to a loaded tab\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/244028/diff/2-3/", "author": "dothayer@mozilla.com", "id": 13295299, "time": "2018-05-21T22:41:28Z"}, {"text": "Comment on attachment 8975952\nBug 1176019 - Clear cached layers on location change\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/244116/diff/2-3/", "author": "dothayer@mozilla.com", "id": 13295300, "time": "2018-05-21T22:41:28Z"}, {"text": "Comment on attachment 8975953\nBug 1176019 - Don't let cache interfere with tab warming\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/244118/diff/2-3/", "author": "dothayer@mozilla.com", "id": 13295301, "time": "2018-05-21T22:41:28Z"}, {"text": "Pushed by dothayer@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/9850536880ee\nCache layers of background tabs r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/8ff26293b898\nFix browser_bug1196539.js painting check r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/dd85a2be4527\nFix browser_tabswitchbetweenplugins.js r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/27f6f789b194\nForce a paint when switching to a loaded tab r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/94bfb6800a01\nClear cached layers on location change r=mconley\nhttps://hg.mozilla.org/integration/autoland/rev/9c10d9a71983\nDon't let cache interfere with tab warming r=mconley", "author": "pulsebot@bots.tld", "id": 13295308, "time": "2018-05-21T22:46:35Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/9850536880ee\nhttps://hg.mozilla.org/mozilla-central/rev/8ff26293b898\nhttps://hg.mozilla.org/mozilla-central/rev/dd85a2be4527\nhttps://hg.mozilla.org/mozilla-central/rev/27f6f789b194\nhttps://hg.mozilla.org/mozilla-central/rev/94bfb6800a01\nhttps://hg.mozilla.org/mozilla-central/rev/9c10d9a71983", "author": "nbeleuzu@mozilla.com", "id": 13296069, "time": "2018-05-22T09:54:19Z"}, {"text": "mconley, trying to decide if we should leave this on in Nightly given bug 1464244, bug 1464712, and bug 1463397. I would say we've gotten the information we need from the spinner graphs at https://mikeconley.github.io/bug1310250/. I'm inclined to disable this, discuss our options regarding memory usage and whether the observed benefit is worth the trade, and look into causes of the issues in the linked bugs. Thoughts?", "author": "dothayer@mozilla.com", "id": 13369327, "time": "2018-05-28T15:48:49Z"}, {"text": "Yeah, that sounds like a fine idea. Let's do it.", "author": "mconley@mozilla.com", "id": 13369332, "time": "2018-05-28T15:50:32Z"}], "id": 1176019, "priority": "P1", "cc": ["ajfhajf@yandex.ru", "b56girard@gmail.com", "brad@lassey.us", "dothayer@mozilla.com", "dumaat@gmail.com", "ebalazs@mozilla.com", "ehsan@mozilla.com", "felipc@gmail.com", "gw@gwright.org.uk", "harshid@gmail.com", "hikezoe@mozilla.com", "hskupin@gmail.com", "jmathies@mozilla.com", "johnp@gmx.de", "jryans@gmail.com", "kanru@kanru.info", "mcastelluccio@mozilla.com", "mconley@mozilla.com", "thesweetlilycake@gmail.com", "timbugzilla@gmail.com", "Tobias.Marty@gmx.de", "yoasif@gmail.com"], "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "status": "RESOLVED", "product": "Core", "cf_fx_iteration": "---", "blocks": [1063169, 1135719, 1436359, 1465106], "qa_contact": "", "creation_time": "2015-06-18T18:28:20Z", "cf_status_firefox_esr52": "---", "component": "Graphics: Layers", "assigned_to_detail": {"email": "dothayer@mozilla.com", "id": 582499, "name": "dothayer@mozilla.com", "real_name": "Doug Thayer [:dthayer] (PTO on June 4)"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "fixed", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "mozilla62", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "mstange@themasta.com", "id": 293943, "name": "mstange@themasta.com", "real_name": "Markus Stange [:mstange]"}, "whiteboard": "gfx-noted,[fxperf:p1]", "mentors": [], "summary": "[e10s] Keep around the layer tree for tabs on a LRU basis", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-18T01:17:23Z", "assigned_to": "dothayer@mozilla.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "depends_on", "added": "1154231"}], "who": "mstange@themasta.com", "when": "2015-06-18T18:28:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugmail.mozilla@staktrace.com"}], "who": "bugmail@mozilla.staktrace.com", "when": "2015-06-18T18:36:44Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "johnp@gmx.de"}], "who": "johnp@gmx.de", "when": "2015-06-18T18:39:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bgirard@mozilla.com"}, {"removed": "", "field_name": "whiteboard", "added": "gfx-noted"}], "who": "b56girard@gmail.com", "when": "2015-06-18T19:27:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "timbugzilla@gmail.com"}], "who": "timbugzilla@gmail.com", "when": "2015-06-21T18:58:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kchen@mozilla.com"}], "who": "kanru@kanru.info", "when": "2015-06-24T19:38:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "felipc@gmail.com, mconley@mozilla.com"}], "who": "mconley@mozilla.com", "when": "2015-06-26T22:27:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "blassey.bugs@lassey.us"}, {"removed": "", "field_name": "blocks", "added": "1063169"}, {"removed": "---", "field_name": "cf_tracking_e10s", "added": "+"}], "who": "brad@lassey.us", "when": "2015-06-30T20:28:09Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P2"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "gwright@mozilla.com"}], "who": "brad@lassey.us", "when": "2015-11-17T21:51:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2016-02-11T11:26:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "harshid@gmail.com"}], "who": "harshid@gmail.com", "when": "2016-02-23T15:01:31Z"}, {"changes": [{"removed": "+", "field_name": "cf_tracking_e10s", "added": "?"}], "who": "mconley@mozilla.com", "when": "2016-03-02T23:15:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "botond@mozilla.com"}], "who": "botond@mozilla.com", "when": "2016-03-03T04:05:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "benjamin@smedbergs.us"}], "who": "benjamin@smedbergs.us", "when": "2016-03-03T17:50:28Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(gwright@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "gwright@mozilla.com"}], "who": "gw@gwright.org.uk", "when": "2016-03-03T17:50:47Z"}, {"changes": [{"removed": "needinfo?(gwright@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "gw@gwright.org.uk", "when": "2016-03-03T22:09:27Z"}, {"changes": [{"removed": "[e10s] Consider using CompositorLRU to retain a limited number of layer trees for background tabs", "field_name": "summary", "added": "[e10s] Keep around the layer tree for tabs on a LRU basis"}], "who": "gw@gwright.org.uk", "when": "2016-03-03T22:13:58Z"}, {"changes": [{"removed": "P2", "field_name": "priority", "added": "P1"}, {"removed": "", "field_name": "cc", "added": "jmathies@mozilla.com"}, {"removed": "?", "field_name": "cf_tracking_e10s", "added": "+"}], "who": "jmathies@mozilla.com", "when": "2016-03-08T21:12:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jryans@gmail.com"}], "who": "jryans@gmail.com", "when": "2016-10-26T16:57:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ehsan@mozilla.com"}], "who": "ehsan@mozilla.com", "when": "2017-03-31T20:20:20Z"}, {"changes": [{"removed": "benjamin@smedbergs.us", "field_name": "cc", "added": ""}], "who": "benjamin@smedbergs.us", "when": "2017-08-18T13:59:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dothayer@mozilla.com"}], "who": "mconley@mozilla.com", "when": "2018-04-16T18:29:59Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mstange@themasta.com), needinfo?(gw@gwright.org.uk)"}], "who": "dothayer@mozilla.com", "when": "2018-04-16T20:47:22Z"}, {"changes": [{"removed": "gw@gwright.org.uk", "field_name": "assigned_to", "added": "dothayer@mozilla.com"}, {"removed": "needinfo?(gw@gwright.org.uk)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2018-04-16T20:57:35Z"}, {"changes": [{"removed": "needinfo?(mstange@themasta.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mstange@themasta.com", "when": "2018-04-16T20:58:06Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1436359"}], "who": "dothayer@mozilla.com", "when": "2018-04-16T21:09:19Z"}, {"changes": [{"removed": "gfx-noted", "field_name": "whiteboard", "added": "gfx-noted,[fxperf:p1]"}], "who": "dothayer@mozilla.com", "when": "2018-04-16T21:09:41Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mstange@themasta.com)"}], "who": "dothayer@mozilla.com", "when": "2018-04-17T18:32:43Z"}, {"changes": [{"removed": "needinfo?(mstange@themasta.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mstange@themasta.com", "when": "2018-04-17T18:42:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "Tobias.Marty@gmx.de"}], "who": "Tobias.Marty@gmx.de", "when": "2018-04-19T00:30:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "thesweetlilycake@gmail.com"}], "who": "thesweetlilycake@gmail.com", "when": "2018-04-19T19:31:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ajfhajf@yandex.ru"}], "who": "ajfhajf@yandex.ru", "when": "2018-04-20T08:44:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8971032, "added": "review?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-04-25T20:57:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8971032, "added": "review-"}], "who": "mconley@mozilla.com", "when": "2018-04-26T19:33:10Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconley@mozilla.com)"}], "who": "mconley@mozilla.com", "when": "2018-04-26T21:28:56Z"}, {"changes": [{"removed": "needinfo?(mconley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconley@mozilla.com", "when": "2018-04-27T15:31:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review-", "attachment_id": 8971032, "added": "review?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-04-27T16:15:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8971032, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-04-27T17:41:19Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}], "who": "dothayer@mozilla.com", "when": "2018-04-30T17:58:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dumaat@gmail.com"}], "who": "dumaat@gmail.com", "when": "2018-05-01T15:27:21Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "yoasif@gmail.com"}], "who": "yoasif@gmail.com", "when": "2018-05-01T19:40:33Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dothayer@mozilla.com)"}], "who": "dluca@mozilla.com", "when": "2018-05-08T08:02:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hskupin@gmail.com"}], "who": "hskupin@gmail.com", "when": "2018-05-08T13:23:31Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1459911"}], "who": "hskupin@gmail.com", "when": "2018-05-08T13:24:18Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974194, "added": "review?(mconley@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974195, "added": "review?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-08T22:27:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8974194, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-05-08T23:07:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jan@ikenmeyer.eu"}], "who": "jan@ikenmeyer.eu", "when": "2018-05-09T17:13:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8974195, "added": ""}], "who": "mconley@mozilla.com", "when": "2018-05-09T17:46:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974195, "added": "review?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-10T17:52:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8974195, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-05-10T18:02:02Z"}, {"changes": [{"removed": "needinfo?(dothayer@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dothayer@mozilla.com", "when": "2018-05-11T05:11:15Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla62"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-11 09:38:39"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "fixed"}], "who": "ebalazs@mozilla.com", "when": "2018-05-11T09:38:39Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "", "field_name": "cc", "added": "ebalazs@mozilla.com"}, {"removed": "FIXED", "field_name": "resolution", "added": ""}, {"removed": "fixed", "field_name": "cf_status_firefox62", "added": "---"}], "who": "ebalazs@mozilla.com", "when": "2018-05-11T14:10:36Z"}, {"changes": [{"removed": "jan@ikenmeyer.eu", "field_name": "cc", "added": ""}], "who": "jan@ikenmeyer.eu", "when": "2018-05-11T14:11:30Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dothayer@mozilla.com)"}], "who": "ebalazs@mozilla.com", "when": "2018-05-11T14:12:57Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1460905"}], "who": "mayankleoboy1@gmail.com", "when": "2018-05-11T15:51:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hikezoe@mozilla.com"}, {"removed": "needinfo?(dothayer@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(hikezoe@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-11T22:22:20Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1461023"}], "who": "hikezoe@mozilla.com", "when": "2018-05-11T22:54:41Z"}, {"changes": [{"removed": "needinfo?(hikezoe@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "hikezoe@mozilla.com", "when": "2018-05-11T22:59:54Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-12T23:47:45Z"}, {"changes": [{"removed": "needinfo?(mconley@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(dothayer@mozilla.com)"}], "who": "mconley@mozilla.com", "when": "2018-05-14T15:57:11Z"}, {"changes": [{"removed": "needinfo?(dothayer@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-14T16:23:07Z"}, {"changes": [{"removed": "needinfo?(mconley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconley@mozilla.com", "when": "2018-05-14T16:34:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8975841, "added": "review?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-15T15:08:10Z"}, {"changes": [{"removed": "bugmail@mozilla.staktrace.com", "field_name": "cc", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2018-05-15T15:16:00Z"}, {"changes": [{"removed": "botond@mozilla.com", "field_name": "cc", "added": ""}], "who": "botond@mozilla.com", "when": "2018-05-15T17:25:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8975952, "added": "review?(mconley@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8975953, "added": "review?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-15T20:29:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "grayshade@gmail.com"}], "who": "grayshade@gmail.com", "when": "2018-05-16T10:58:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8975841, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-05-16T17:25:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8975952, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-05-16T17:29:04Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8975953, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-05-16T17:32:27Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8979393, "added": "1"}], "who": "dothayer@mozilla.com", "when": "2018-05-21T22:41:32Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "2018-05-11 09:38:39", "field_name": "cf_last_resolved", "added": "2018-05-22 09:54:19"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "fixed"}], "who": "nbeleuzu@mozilla.com", "when": "2018-05-22T09:54:19Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1463397"}], "who": "igoldan@mozilla.com", "when": "2018-05-22T12:04:06Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1464244"}], "who": "alice0775@yahoo.co.jp", "when": "2018-05-25T05:56:58Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1464712"}], "who": "alice0775@yahoo.co.jp", "when": "2018-05-27T22:04:05Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1460780"}], "who": "bugmail@mozilla.staktrace.com", "when": "2018-05-28T13:55:11Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconley@mozilla.com)"}], "who": "dothayer@mozilla.com", "when": "2018-05-28T15:48:49Z"}, {"changes": [{"removed": "needinfo?(mconley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconley@mozilla.com", "when": "2018-05-28T15:50:32Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1465106"}], "who": "dothayer@mozilla.com", "when": "2018-05-29T15:33:38Z"}, {"changes": [{"removed": "grayshade@gmail.com", "field_name": "cc", "added": ""}], "who": "grayshade@gmail.com", "when": "2018-06-01T12:43:33Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox41", "added": "---"}], "who": "ryanvm@gmail.com", "when": "2018-06-18T01:17:23Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}