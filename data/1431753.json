{"cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Components", "creator": "mcastelluccio@mozilla.com", "cc": ["ahal@mozilla.com", "gbrown@mozilla.com", "gmierz2@outlook.com", "jmaher@mozilla.com"], "depends_on": [1380661, 1380659, 1431388, 1453056], "creation_time": "2018-01-19T15:34:52Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "summary": "Support generating per-test coverage information", "cf_last_resolved": "2018-04-20T23:02:16Z", "attachments": [{"creator": "mcastelluccio@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2018-03-16T14:39:19Z", "type_id": 607, "creation_date": "2018-03-14T13:14:30Z", "id": 1729431, "setter": "ahal@mozilla.com"}], "content_type": "text/plain", "id": 8958796}, {"creator": "mcastelluccio@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8960277}, {"creator": "mcastelluccio@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8960278}, {"creator": "mcastelluccio@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2018-04-11T15:44:22Z", "type_id": 607, "creation_date": "2018-04-10T23:09:50Z", "id": 1742061, "setter": "gbrown@mozilla.com"}], "content_type": "text/plain", "id": 8966779}, {"creator": "mcastelluccio@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8966999}, {"creator": "mcastelluccio@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-19T14:02:37Z", "type_id": 4, "creation_date": "2018-04-18T23:02:45Z", "id": 1745961, "setter": "gbrown@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2018-04-19T13:12:43Z", "type_id": 4, "creation_date": "2018-04-18T23:02:45Z", "id": 1745962, "setter": "jmaher@mozilla.com"}], "content_type": "text/plain", "id": 8969121}], "assigned_to_detail": {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_crash_signature": "", "comments": [{"text": "This will be a special mode which will probably be run weekly.", "author": "mcastelluccio@mozilla.com", "id": 12981975, "time": "2018-01-19T15:34:52Z"}, {"text": "Created attachment 8958796\nProposal\n\nThis is not really implementing much, just moving some things around and adding placeholder comments where some operations should be implemented.\nI'm uploading it to because I'd like to get some feedback before moving forward, especially on the integration between verify and coverage.", "author": "mcastelluccio@mozilla.com", "id": 13127725, "time": "2018-03-14T13:14:30Z"}, {"text": "Comment on attachment 8958796\nProposal\n\nReview of attachment 8958796:\n-----------------------------------------------------------------\n\nSorry, I don't know much about coverage and I don't understand the intent here. I'd be glad to comment further if provided with more context.\n\n::: testing/mochitest/runtests.py\n@@ +3071,5 @@\n>          options.runByManifest = True\n>  \n>      if options.verify:\n> +        if options.code_coverage:\n> +            result = runner.runTestSeparateBrowser(options)\n\nIf you are just going to run the specified test once in --verify --coverage mode, what does it have to do with test verification? Couldn't you just run the harness against the specified test with no special options and get the same result?", "author": "gbrown@mozilla.com", "id": 13129568, "time": "2018-03-14T23:07:46Z"}, {"text": "(In reply to Geoff Brown [:gbrown] from comment #2)\n> Comment on attachment 8958796\n> Proposal\n> \n> Review of attachment 8958796:\n> -----------------------------------------------------------------\n> \n> Sorry, I don't know much about coverage and I don't understand the intent\n> here. I'd be glad to comment further if provided with more context.\n\nThere's an email thread about started by Joel a few days ago. You should be CCed too.\n\n> \n> ::: testing/mochitest/runtests.py\n> @@ +3071,5 @@\n> >          options.runByManifest = True\n> >  \n> >      if options.verify:\n> > +        if options.code_coverage:\n> > +            result = runner.runTestSeparateBrowser(options)\n> \n> If you are just going to run the specified test once in --verify --coverage\n> mode, what does it have to do with test verification? Couldn't you just run\n> the harness against the specified test with no special options and get the\n> same result?\n\nYeah, my plan would be to extract the parts of verify we need from verify_tools.py (the parts that find tests from changed files and that allow you to run one test at a time) and put them somewhere which is accessible both by VerifyToolsMixin and CodeCoverageMixin. Maybe I can create a base class for them which has this code and let them extend it with their specific needs.", "author": "mcastelluccio@mozilla.com", "id": 13130367, "time": "2018-03-15T10:30:07Z"}, {"text": "Comment on attachment 8958796\nProposal\n\nReview of attachment 8958796:\n-----------------------------------------------------------------\n\nThis looks good to me. I confess as long as it works, I don't have strong opinions on how the mozharness setup is implemented. The mochitest changes also look good, but since you're piggy-backing off the test-verify code, :gbrown should have the final say there.\n\n::: testing/mochitest/mochitest_options.py\n@@ +598,5 @@\n>           {\"type\": int,\n>            \"default\": 3600,\n>            \"help\": \"Maximum time, in seconds, to run in --verify mode.\",\n>            }],\n> +        [[\"--code-coverage\"],\n\nIs this something you'd expect developers to want to specify manually? If not please add \"suppress\": True.\n\n::: testing/mochitest/runtests.py\n@@ +3071,5 @@\n>          options.runByManifest = True\n>  \n>      if options.verify:\n> +        if options.code_coverage:\n> +            result = runner.runTestSeparateBrowser(options)\n\nI'll defer to :gbrown for this section.\n\n::: testing/mozharness/mozharness/mozilla/testing/testbase.py\n@@ +270,5 @@\n>              return urllib2.build_opener(authhandler).open(url, **kwargs)\n>  \n>          # If we have the developer_run flag enabled then we will switch\n>          # URLs to the right place and enable http authentication\n> +        # if \"developer_config.py\" in self.config[\"config_files\"]:\n\nWhy was this commented out? I think :armenzg implemented it awhile ago to facilitate running mozharness locally. It may be broken now I guess.", "author": "ahal@mozilla.com", "id": 13133669, "time": "2018-03-16T14:39:19Z"}, {"text": "(In reply to Andrew Halberstadt [:ahal] from comment #4)\n> Comment on attachment 8958796\n> Proposal\n> \n> Review of attachment 8958796:\n> -----------------------------------------------------------------\n> \n> This looks good to me. I confess as long as it works, I don't have strong\n> opinions on how the mozharness setup is implemented. The mochitest changes\n> also look good, but since you're piggy-backing off the test-verify code,\n> :gbrown should have the final say there.\n> \n> ::: testing/mochitest/mochitest_options.py\n> @@ +598,5 @@\n> >           {\"type\": int,\n> >            \"default\": 3600,\n> >            \"help\": \"Maximum time, in seconds, to run in --verify mode.\",\n> >            }],\n> > +        [[\"--code-coverage\"],\n> \n> Is this something you'd expect developers to want to specify manually? If\n> not please add \"suppress\": True.\n> \n> ::: testing/mochitest/runtests.py\n> @@ +3071,5 @@\n> >          options.runByManifest = True\n> >  \n> >      if options.verify:\n> > +        if options.code_coverage:\n> > +            result = runner.runTestSeparateBrowser(options)\n> \n> I'll defer to :gbrown for this section.\n\nI've refactored it a little bit in my current WIP patch, using \"--verify\" for verify and \"--per-test-coverage\" for per-test coverage.\n\n> \n> ::: testing/mozharness/mozharness/mozilla/testing/testbase.py\n> @@ +270,5 @@\n> >              return urllib2.build_opener(authhandler).open(url, **kwargs)\n> >  \n> >          # If we have the developer_run flag enabled then we will switch\n> >          # URLs to the right place and enable http authentication\n> > +        # if \"developer_config.py\" in self.config[\"config_files\"]:\n> \n> Why was this commented out? I think :armenzg implemented it awhile ago to\n> facilitate running mozharness locally. It may be broken now I guess.\n\nThis was just a temporary hack to run mozharness locally (which I've found really hard to do), it wasn't supposed to be part of the patch.", "author": "mcastelluccio@mozilla.com", "id": 13133692, "time": "2018-03-16T14:46:10Z"}, {"text": "Created attachment 8960277\nMove verify_tools.py to per_test_base.py\n\nThis is just a patch to move verify_tools.py to per_test_base.py (which implements a PerTestMixin that VerifyToolsMixin and CodeCoverageMixin derive from).\nIt's useful to do this so that the next patch will only show the actual changes made.", "author": "mcastelluccio@mozilla.com", "id": 13140379, "time": "2018-03-19T18:24:56Z"}, {"text": "Created attachment 8960278\nProposal\n\nThis is the refined proposal. The per-test-coverage mode is still relying on the verify taskcluster definition.", "author": "mcastelluccio@mozilla.com", "id": 13140387, "time": "2018-03-19T18:27:34Z"}, {"text": "Comment on attachment 8960278\nProposal\n\nReview of attachment 8960278:\n-----------------------------------------------------------------\n\n> > Sorry, I don't know much about coverage and I don't understand the intent\n> > here. I'd be glad to comment further if provided with more context.\n> \n> There's an email thread about started by Joel a few days ago. You should be\n> CCed too.\n\nI saw (and re-read!) that email, but it really didn't help me understand the intent of these changes. I still don't understand what you are trying to build, or why, and I don't see much conceptual commonality with test verification. That makes it hard for me to provide useful feedback.\n\n::: taskcluster/ci/test/misc.yml\n@@ +93,5 @@\n>          extra-options:\n> +            by-test-platform:\n> +                linux64-ccov/.*: [--per-test-coverage]\n> +                windows10-64-ccov/debug: [--per-test-coverage]\n> +                default: [--verify]\n\nThis seems wrong: On ccov builds you'll run a task showing as TV and labelled as test-verify but running code that has nothing to do with test verification. Wouldn't it be better to have a mutually exclusive task with its own name and configuration?\n\n::: testing/mochitest/runtests.py\n@@ +3074,5 @@\n>  \n>      if options.verify:\n>          result = runner.verifyTests(options)\n> +    elif options.per_test_coverage:\n> +        result = runner.runTestSeparateBrowser(options)\n\nI still think that if you just need to run the test once, you don't need any special options or handling in the harness: just run runtests.py <normal-options> <test>\n\nIf you do end up doing something special in the harness, you'll also possibly need to update the xpcshell, reftest, and wpt harnesses.\n\n::: testing/mozharness/mozharness/mozilla/testing/codecoverage.py\n@@ +162,5 @@\n> +        if not self.per_test_coverage:\n> +            return\n> +\n> +        self.find_modified_tests()\n> +        # TODO: Add tests that haven't been run for a while (a week? N pushes?)\n\nThis is very confusing for me. \n\nfind_modified_tests() will find the tests modified on this push. \n\nDo you want to run those tests + tests that haven't been run for a while? Or just tests that haven't been run for a while?\n\nTests that haven't been run for a while...in this code coverage mode, or...??\n\nHow will you find tests that haven't been run for a while? activedata??!\n\n::: testing/mozharness/mozharness/mozilla/testing/per_test_base.py\n@@ +229,5 @@\n> +            cur = []\n> +            cur.extend(self.coverage_args)\n> +            cur.extend(self.verify_args)\n> +            cur.append(file)\n> +            args.append(cur)\n\nThis seems awkward. Maybe it would be better to have separate implementations of query_args for coverage and verification?\n\nWill all of this produce the same arguments that query_verify_args produced? Even for multiple files?", "author": "gbrown@mozilla.com", "id": 13144219, "time": "2018-03-20T23:34:26Z"}, {"text": "(In reply to Geoff Brown [:gbrown] from comment #8)\n> Comment on attachment 8960278\n> Proposal\n> \n> Review of attachment 8960278:\n> -----------------------------------------------------------------\n> \n> > > Sorry, I don't know much about coverage and I don't understand the intent\n> > > here. I'd be glad to comment further if provided with more context.\n> > \n> > There's an email thread about started by Joel a few days ago. You should be\n> > CCed too.\n> \n> I saw (and re-read!) that email, but it really didn't help me understand the\n> intent of these changes. I still don't understand what you are trying to\n> build, or why, and I don't see much conceptual commonality with test\n> verification. That makes it hard for me to provide useful feedback.\n\nThe goal is to collect code coverage data per test. We want to 1) collect coverage data for tests that have been modified in a push and 2) for tests that haven't been run for a while.\nThe first part is in common with test verify. The second part can, at least in my proposal, share most of the code with test verify with just the addition of \"query some database to get list of tests not run in the past week\".\n\n> \n> ::: taskcluster/ci/test/misc.yml\n> @@ +93,5 @@\n> >          extra-options:\n> > +            by-test-platform:\n> > +                linux64-ccov/.*: [--per-test-coverage]\n> > +                windows10-64-ccov/debug: [--per-test-coverage]\n> > +                default: [--verify]\n> \n> This seems wrong: On ccov builds you'll run a task showing as TV and\n> labelled as test-verify but running code that has nothing to do with test\n> verification. Wouldn't it be better to have a mutually exclusive task with\n> its own name and configuration?\n\nYes, we could create a separate task that only runs for coverage builds. It would add more maintenance burden, but we can do it if you think it's beneficial.\n\n\n> \n> ::: testing/mochitest/runtests.py\n> @@ +3074,5 @@\n> >  \n> >      if options.verify:\n> >          result = runner.verifyTests(options)\n> > +    elif options.per_test_coverage:\n> > +        result = runner.runTestSeparateBrowser(options)\n> \n> I still think that if you just need to run the test once, you don't need any\n> special options or handling in the harness: just run runtests.py\n> <normal-options> <test>\n> \n> If you do end up doing something special in the harness, you'll also\n> possibly need to update the xpcshell, reftest, and wpt harnesses.\n\nSounds good. Note the patch is just a proposal to discuss, I'm not sure yet if I will need something specific as I haven't looked at all the harnesses yet but just mochitest. If I find that I don't need to do anything special, I can just execute runtests.py with the single test.\n\n> \n> ::: testing/mozharness/mozharness/mozilla/testing/codecoverage.py\n> @@ +162,5 @@\n> > +        if not self.per_test_coverage:\n> > +            return\n> > +\n> > +        self.find_modified_tests()\n> > +        # TODO: Add tests that haven't been run for a while (a week? N pushes?)\n> \n> This is very confusing for me. \n> \n> find_modified_tests() will find the tests modified on this push. \n> \n> Do you want to run those tests + tests that haven't been run for a while? Or\n> just tests that haven't been run for a while?\n\nThe intent is to run modified tests and tests that haven't been run for a while.\n\n> \n> Tests that haven't been run for a while...in this code coverage mode, or...??\n\nSure, in the coverage mode.\n\n> \n> How will you find tests that haven't been run for a while? activedata??!\n\nEither activedata or some other service, we haven't decided yet.\n\n\n> \n> ::: testing/mozharness/mozharness/mozilla/testing/per_test_base.py\n> @@ +229,5 @@\n> > +            cur = []\n> > +            cur.extend(self.coverage_args)\n> > +            cur.extend(self.verify_args)\n> > +            cur.append(file)\n> > +            args.append(cur)\n> \n> This seems awkward. Maybe it would be better to have separate\n> implementations of query_args for coverage and verification?\n> \n> Will all of this produce the same arguments that query_verify_args produced?\n> Even for multiple files?\n\nMost of the code is the same between the coverage and verification, with the only exception being the addition of one argument in coverage (--per-test-coverage) and one in verification (--verify).\nWe can copy the implementation from verify to coverage, but I thought it would make more sense to share it, since it's basically the same.\n\nI'm going to be in PTO for the next week, so if you need more clarification about the intent here maybe you can chat a bit with Joel?", "author": "mcastelluccio@mozilla.com", "id": 13144283, "time": "2018-03-21T00:07:05Z"}, {"text": "Created attachment 8966779\nProposal (whitespace changes ignored)\n\nI've updated the proposal to add a \"test-coverage\" suite (very similar to \"test-verify\") and to remove the unneeded changes to the mochitest runtests.py.\n\n:gbrown, what do you think of this? I'm back from PTO, so if there's still something unclear about what we're trying to do feel free to ask here or ping me directly on IRC.", "author": "mcastelluccio@mozilla.com", "id": 13196434, "time": "2018-04-10T23:09:50Z"}, {"text": "Comment on attachment 8966779\nProposal (whitespace changes ignored)\n\nReview of attachment 8966779:\n-----------------------------------------------------------------\n\nsome drive by comments...\n\n::: taskcluster/ci/test/web-platform.yml\n@@ +166,5 @@\n> +\n> +test-coverage-wpt:\n> +    description: \"Per web-platform test coverage\"\n> +    suite: test-coverage-wpt\n> +    treeherder-symbol: PTCw\n\nI might be more interested in TCw but wouldn't argue with PTCw as stated.\n\n::: taskcluster/taskgraph/transforms/tests.py\n@@ +660,5 @@\n>          test['attributes']['unittest_flavor'] = flavor\n>  \n>          script = test['mozharness']['script']\n>          category_arg = None\n> +        if suite == 'test-verify' or suite == 'test-coverage':\n\nI believe we will need to use suite.startswith('test-[verify|coverage]) as we have test-coverage-e10s-wpt as a job name.  Also to support gpu jobs (reftest, mochitest-webgl, mochitest-gpu, mochitest-media, etc.), we could end up with test-coverage-e10s-gpu.\n\n::: testing/mozharness/mozharness/mozilla/testing/per_test_base.py\n@@ +206,1 @@\n>              references = re.compile(r\"(-ref|-notref|-noref|-noref.)\\.\")\n\nthis looks indented incorrectly- before there was a else and in this patch it is missing.\n\n@@ +223,5 @@\n>                                  file = nonref\n> +            elif (self.config.get('verify_category') != \"web-platform\" and\n> +                  suite == 'jsreftest'):\n> +                file = os.path.relpath(file, jsreftest_extra_dir)\n> +                file = os.path.join(self.jsreftest_test_dir, file)\n\nwhy is jsreftest moved after the for loop?  Are there issues with it in coverage mode?\n\n@@ +243,5 @@\n> +            else:\n> +                cur = ['--verify-max-time=%d' % MAX_TIME_PER_TEST]\n> +\n> +            cur.extend(self.coverage_args)\n> +            cur.extend(self.verify_args)\n\nwould we want to extend both for coverage and verify?\n\n::: testing/mozharness/scripts/desktop_unittest.py\n@@ +850,5 @@\n>                  cmd_timeout = self.get_timeout_for_category(suite_category)\n>  \n> +                if self.per_test_coverage:\n> +                    gcov_dir, jsvm_dir = self.set_coverage_env(env)\n> +                    # TODO: Run basic startup/shutdown test to collect baseline coverage.\n\nGreg is working on this TODO- his initial work is to add a \"no-op\" test case that runs, not sure if that would work in this model- we should get some feedback from Greg on that.\n\n::: testing/mozharness/scripts/web_platform_tests.py\n@@ +321,5 @@\n>          max_verify_time = timedelta(minutes=60)\n>          max_verify_tests = 10\n>          verified_tests = 0\n>  \n> +        if self.per_test_coverage or self.verify_enabled:\n\nI noticed in desktop_unittest.py there is a lot of code for supporting grcov and setting up the environment/tools.  should we do that here as well?", "author": "jmaher@mozilla.com", "id": 13197640, "time": "2018-04-11T12:55:24Z"}, {"text": "(In reply to Joel Maher ( :jmaher) (UTC-5) from comment #11)\n> ::: testing/mozharness/mozharness/mozilla/testing/per_test_base.py\n> @@ +206,1 @@\n> >              references = re.compile(r\"(-ref|-notref|-noref|-noref.)\\.\")\n> \n> this looks indented incorrectly- before there was a else and in this patch\n> it is missing.\n\nI've generated the patch ignoring the whitespace changes to make it more clear what is actually changing (without ignoring the whitespace changes, it looked like everything was changing here, but actually only a few things were changing).\n\n> \n> @@ +223,5 @@\n> >                                  file = nonref\n> > +            elif (self.config.get('verify_category') != \"web-platform\" and\n> > +                  suite == 'jsreftest'):\n> > +                file = os.path.relpath(file, jsreftest_extra_dir)\n> > +                file = os.path.join(self.jsreftest_test_dir, file)\n> \n> why is jsreftest moved after the for loop?  Are there issues with it in\n> coverage mode?\n\nIt wasn't actually moved, it only looks like it because of the same reason as before. I'll upload another patch without ignoring whitespace changes.\n\n> \n> @@ +243,5 @@\n> > +            else:\n> > +                cur = ['--verify-max-time=%d' % MAX_TIME_PER_TEST]\n> > +\n> > +            cur.extend(self.coverage_args)\n> > +            cur.extend(self.verify_args)\n> \n> would we want to extend both for coverage and verify?\n\nInitially self.coverage_args was actually used to pass things to the harness, now it's returning an empty array so it is basically a no-op. I can remove it.\n\n> \n> ::: testing/mozharness/scripts/desktop_unittest.py\n> @@ +850,5 @@\n> >                  cmd_timeout = self.get_timeout_for_category(suite_category)\n> >  \n> > +                if self.per_test_coverage:\n> > +                    gcov_dir, jsvm_dir = self.set_coverage_env(env)\n> > +                    # TODO: Run basic startup/shutdown test to collect baseline coverage.\n> \n> Greg is working on this TODO- his initial work is to add a \"no-op\" test case\n> that runs, not sure if that would work in this model- we should get some\n> feedback from Greg on that.\n\nYes, his patch applies on top of mine :)\n\n> \n> ::: testing/mozharness/scripts/web_platform_tests.py\n> @@ +321,5 @@\n> >          max_verify_time = timedelta(minutes=60)\n> >          max_verify_tests = 10\n> >          verified_tests = 0\n> >  \n> > +        if self.per_test_coverage or self.verify_enabled:\n> \n> I noticed in desktop_unittest.py there is a lot of code for supporting grcov\n> and setting up the environment/tools.  should we do that here as well?\n\nYes, we'll need the same there. I haven't done it yet because I want to make sure what I did is OK before doing it for web_platform_tests.py too.", "author": "mcastelluccio@mozilla.com", "id": 13197945, "time": "2018-04-11T14:25:18Z"}, {"text": "Created attachment 8966999\nProposal (whitespace changes not ignored)", "author": "mcastelluccio@mozilla.com", "id": 13197952, "time": "2018-04-11T14:26:07Z"}, {"text": "Comment on attachment 8966779\nProposal (whitespace changes ignored)\n\nReview of attachment 8966779:\n-----------------------------------------------------------------\n\nThanks for splitting out the separate taskcluster config, etc. -- I feel better about that.\n\nLots of nits and minor suggestions here, nothing too major. Probably the biggest issue is that I think restructuring query_args would be beneficial.\n\nI would be happy to see try runs of verification and coverage, with just one file changed, multiple files changed, different test suites, etc -- perhaps at review time.\n\n::: taskcluster/ci/test/misc.yml\n@@ +107,5 @@\n> +    max-run-time: 10800\n> +    allow-software-gl-layers: false\n> +    run-on-projects:\n> +        by-test-platform:\n> +            # do not run on beta or release: usually just confirms earlier results\n\nIs the run-on-trunk-only restriction appropriate for coverage? (I don't know.)\n\n::: taskcluster/ci/test/test-sets.yml\n@@ +38,5 @@\n>      - reftest-no-accel\n>      - telemetry-tests-client\n>      - test-verify\n>      - test-verify-wpt\n> +    - test-coverage\n\nnit: These lists are usually sorted alphabetically.\n\n::: taskcluster/taskgraph/transforms/tests.py\n@@ +660,5 @@\n>          test['attributes']['unittest_flavor'] = flavor\n>  \n>          script = test['mozharness']['script']\n>          category_arg = None\n> +        if suite == 'test-verify' or suite == 'test-coverage':\n\nI'm not sure, but I think this is right the way it is coded: e10s-ness is tracked separately.\n\n::: testing/mozharness/mozharness/mozilla/testing/per_test_base.py\n@@ +17,2 @@\n>  \n> +class PerTestMixin(object):\n\nIs it just me, or is \"PerTest\" awkward? Consider an alternative. \"SingleTestMixin\", \"TestIteratorMixin\"??\n\n@@ +19,1 @@\n>      \"\"\"Utility functions for test verification.\"\"\"\n\nComment needs updating: \"Utility functions for per-test testing like test verification and per-test coverage\", maybe?\n\n@@ +19,4 @@\n>      \"\"\"Utility functions for test verification.\"\"\"\n>  \n>      def __init__(self):\n>          self.verify_suites = {}\n\nnit: Variables should be renamed without \"verify\". self.suites might be okay here.\n\n@@ +208,5 @@\n>              jsreftest_extra_dir = os.path.join('js', 'src', 'tests')\n>              # For some suites, the test path needs to be updated before passing to\n>              # the test harness.\n>              for file in self.verify_suites.get(suite):\n>                  if (self.config.get('verify_category') != \"web-platform\" and\n\n\"verify_category\" is a mozharness config parameter that probably applies to both verification and PTC -- it should probably be renamed to something more generic (\"per_test_category\"??).\n\n@@ +235,5 @@\n> +        args = []\n> +        for file in files:\n> +            # Limit each test harness run to 15 minutes, to avoid task timeouts\n> +            # when executing long-running tests.\n> +            MAX_TIME_PER_TEST = 900\n\nMAX_TIME_PER_TEST only applies to verification -- it \"shouldn't\" be in the base class.\n\n@@ +243,5 @@\n> +            else:\n> +                cur = ['--verify-max-time=%d' % MAX_TIME_PER_TEST]\n> +\n> +            cur.extend(self.coverage_args)\n> +            cur.extend(self.verify_args)\n\nYou are swimming against the current here: Trying to implement two separate things in one place. Wouldn't it be better to have separate PTC and verify implementations of query_args(), possibly sharing some common code in the base class?\n\n@@ +258,5 @@\n>             In verify mode, determine which suites are active, for the given\n>             suite category.\n>          \"\"\"\n>          suites = None\n> +        if self.config.get('verify') == True or self.config.get('per_test_coverage') == True:\n\nself.verify_enabled or self.per_test_coverage?\n\n::: testing/mozharness/mozharness/mozilla/testing/verify_tools.py\n@@ +9,5 @@\n> +import os\n> +import posixpath\n> +import re\n> +import sys\n> +import mozinfo\n\nProbably these imports can be cleaned up.\n\n::: testing/mozharness/scripts/desktop_unittest.py\n@@ +856,5 @@\n> +                    # shutil.move(grcov_output_file, 'baseline_grcov')\n> +                    # shutil.move(jsvm_output_file, 'baseline_jsvm')\n> +                    # TODO: Parse coverage report\n> +\n> +                for verify_args in self.query_args(suite):\n\nnit: rename all the \"verify\" variables to something more generic.\n\n::: testing/mozharness/scripts/web_platform_tests.py\n@@ +335,5 @@\n>              verify_suites = [None]\n>          for verify_suite in verify_suites:\n>              if verify_suite:\n>                  test_types = [verify_suite]\n> +            for verify_args in self.query_args(verify_suite):\n\nnit: rename all the \"verify\" variables to something more generic.", "author": "gbrown@mozilla.com", "id": 13198321, "time": "2018-04-11T15:44:22Z"}, {"text": "(In reply to Geoff Brown [:gbrown] from comment #14)\n> @@ +235,5 @@\n> > +        args = []\n> > +        for file in files:\n> > +            # Limit each test harness run to 15 minutes, to avoid task timeouts\n> > +            # when executing long-running tests.\n> > +            MAX_TIME_PER_TEST = 900\n> \n> MAX_TIME_PER_TEST only applies to verification -- it \"shouldn't\" be in the\n> base class.\n> \n> @@ +243,5 @@\n> > +            else:\n> > +                cur = ['--verify-max-time=%d' % MAX_TIME_PER_TEST]\n> > +\n> > +            cur.extend(self.coverage_args)\n> > +            cur.extend(self.verify_args)\n> \n> You are swimming against the current here: Trying to implement two separate\n> things in one place. Wouldn't it be better to have separate PTC and verify\n> implementations of query_args(), possibly sharing some common code in the\n> base class?\n\nI was forgetting that DesktopUnittest and other scripts need to be both a CodeCoverageMixin and a VerifyToolMixin. I see why you are doing things like this now. Let me see if I can find a better way...", "author": "gbrown@mozilla.com", "id": 13201436, "time": "2018-04-12T17:04:40Z"}, {"text": "Sorry for the long delay!\n\nAnother way of structuring this would be to put most of the shared code -- stuff to find modified tests, etc -- in a  PerTest class which isn't part of any inheritance hierarchy. Then have each VerifyMixin and CoverageMixin, when activated by configuration, create and use a PerTest. PerTest takes a parameter that points back to its mixin owner, which it can query for mixin-specific needs (like command arguments):\n\n   class VerifyMixin:\n       def __init__:\n           self.pertest = PerTest(self)\n\nScripts could call into the mixins to access the PerTest:\n\n   class DesktopUnittest(...):\n\n        if self.verify_enabled:\n            pertest = self.get_verify_per_test()\n        elif self.coverage:\n            pertest = self.get_coverage_per_test()\n        for arg in pertest.query_args():\n\nThe script still has some awkwardness to it...maybe that could be addressed with a factory?\n\nThis structure feels more flexible to me, but it may not agree with you, and I'm not sure it's worth the additional effort. If we are just dealing with verify and coverage and not expanding this much, it might be best to just go ahead as you have started: your choice!", "author": "gbrown@mozilla.com", "id": 13211351, "time": "2018-04-17T01:50:35Z"}, {"text": "Created attachment 8969121\nPatch\n\nI think this should be ready for review now.\n\nThere are still two TODOs, but I think we can solve them in follow-ups:\n1) Diff baseline coverage report with test coverage report and upload it;\n2) Not only run modified tests, but also stale tests (this will likely require the work jmaher is doing in bug 1453056).\n\n(In reply to Geoff Brown [:gbrown] from comment #16)\n> This structure feels more flexible to me, but it may not agree with you, and\n> I'm not sure it's worth the additional effort. If we are just dealing with\n> verify and coverage and not expanding this much, it might be best to just go\n> ahead as you have started: your choice!\n\nI chose not to change it, as it feels not great to me anyway. I don't think we are going to expand this other than verify and coverage, so as you say it doesn't matter that much.\nIf we do decide to expand it in the future, we can refactor and maybe think about a better solution.", "author": "mcastelluccio@mozilla.com", "id": 13217075, "time": "2018-04-18T23:02:45Z"}, {"text": "This patch doesn't apply cleanly for me:\n\ngbrown@mozpad:~/src$ hg qimport https://bugzilla.mozilla.org/attachment.cgi?id=8969121 -n marco\nadding marco to series file\ngbrown@mozpad:~/src$ hg qpush\napplying marco\nunable to find 'testing/mozharness/mozharness/mozilla/testing/per_test_base.py' for patching\n(use '--prefix' to apply patch relative to the current directory)\n4 out of 4 hunks FAILED -- saving rejects to file testing/mozharness/mozharness/mozilla/testing/per_test_base.py.rej\nfile testing/mozharness/mozharness/mozilla/testing/verify_tools.py already exists\n1 out of 1 hunks FAILED -- saving rejects to file testing/mozharness/mozharness/mozilla/testing/verify_tools.py.rej\npatch failed, unable to continue (try -v)\npatch failed, rejects left in working directory\nerrors during apply, please fix and qrefresh marco", "author": "gbrown@mozilla.com", "id": 13217240, "time": "2018-04-19T00:49:45Z"}, {"text": "Oh, I see the first patch now -- that's fine.", "author": "gbrown@mozilla.com", "id": 13217249, "time": "2018-04-19T00:51:10Z"}, {"text": "(In reply to Geoff Brown [:gbrown] from comment #19)\n> Oh, I see the first patch now -- that's fine.\n\nSorry, forgot to ask review on that one :)", "author": "mcastelluccio@mozilla.com", "id": 13217696, "time": "2018-04-19T08:07:30Z"}, {"text": "Comment on attachment 8969121\nPatch\n\nReview of attachment 8969121:\n-----------------------------------------------------------------\n\nthis seems to respect the intentions of test-verify and keep it focused on test-verification without opening the door to crazy ideas.  I have a few nits that I would like to see addressed.\n\nI will work on rebasing my patches on top of these- I have additional work to do on the chunking patch.\n\n::: taskcluster/ci/test/test-sets.yml\n@@ +248,5 @@\n>      - mochitest-media\n>      - mochitest-webgl\n>      - reftest\n> +    - test-coverage\n> +    - test-coverage-wpt\n\nwe don't have coverage on osx.\n\n@@ +335,5 @@\n>      - mochitest-clipboard\n>      - mochitest-gpu\n>      - mochitest-media\n>      - reftest\n> +    - test-coverage\n\nwe don't have a method for coverage on android\n\n::: testing/mozharness/scripts/web_platform_tests.py\n@@ +339,5 @@\n> +                test_types = [suite]\n> +\n> +            if self.per_test_coverage:\n> +                gcov_dir, jsvm_dir = self.set_coverage_env(env)\n> +                # TODO: Run basic startup/shutdown test to collect baseline coverage.\n\ncan you put a comment at the top of this if statement to indicate we are running a baseline test?\n\n@@ +381,5 @@\n> +                    shutil.rmtree(gcov_dir)\n> +                    shutil.rmtree(jsvm_dir)\n> +                    # TODO: Parse coverage report\n> +                    # TODO: Diff this coverage report with the baseline one\n> +\n\none quirk here is that we will evaluate_parser which finds errors/warnings and reports things to treeherder- is there a chance we could have errors from shutil, parsing reports, or diffing coverage?", "author": "jmaher@mozilla.com", "id": 13218364, "time": "2018-04-19T13:12:43Z"}, {"text": "Comment on attachment 8969121\nPatch\n\nReview of attachment 8969121:\n-----------------------------------------------------------------\n\nBe sure to review https://wiki.mozilla.org/Sheriffing/Job_Visibility_Policy before check-in. In particular, I think you need to add new documentation.", "author": "gbrown@mozilla.com", "id": 13218542, "time": "2018-04-19T14:02:37Z"}, {"text": "Pushed by mcastelluccio@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/381cc9c492f3\nMove verify_tools.py to per_test_base.py. r=gbrown,jmaher\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/df038cacff14\nAdd a test-coverage test suite, similar to test-verify, that runs tests in isolation in coverage mode. r=gbrown,jmaher", "author": "pulsebot@bots.tld", "id": 13219300, "time": "2018-04-19T18:19:39Z"}, {"text": "Pushed by mcastelluccio@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bc062fa71ca7\nDon't check per_test_coverage on Android, where we don't have a coverage build. r=me CLOSED TREE", "author": "pulsebot@bots.tld", "id": 13219437, "time": "2018-04-19T18:54:30Z"}, {"text": "Backed out 3 changesets (bug 1431753) for android mochitest failures on mozharness/base/script.py\n\nBackout: https://hg.mozilla.org/integration/mozilla-inbound/rev/efab974f4b4afd3991d6988a59fb44f84c0ffb7f\n\nPush with failures: https://treeherder.mozilla.org/#/jobs?repo=mozilla-inbound&revision=bc062fa71ca7c868d5219b1ddcbe5d9afa86bff3&filter-resultStatus=testfailed&filter-resultStatus=busted&filter-resultStatus=exception&filter-resultStatus=success&filter-resultStatus=pending&filter-resultStatus=running&filter-resultStatus=superseded&selectedJob=174610333\n\nhttps://treeherder.mozilla.org/#/jobs?repo=mozilla-inbound&revision=df038cacff14882546fd674fae17c8998732fe19&filter-resultStatus=testfailed&filter-resultStatus=busted&filter-resultStatus=exception&filter-resultStatus=pending&filter-resultStatus=running&filter-resultStatus=superseded&selectedJob=174603375\n\nFailure log: https://treeherder.mozilla.org/logviewer.html#?job_id=174610333&repo=mozilla-inbound&lineNumber=1440\n\n[task 2018-04-19T19:15:29.721Z] 19:15:29     INFO - >> Install app APK: Attempt #1 of 3\n[task 2018-04-19T19:15:29.722Z] 19:15:29     INFO - Running timeout 300 /builds/worker/workspace/build/android-sdk-linux/platform-tools/adb -s emulator-5554 install -r /builds/worker/workspace/build/target.apk\n[task 2018-04-19T19:16:08.857Z] 19:16:08     INFO - Finished installing apps for test-1\n[task 2018-04-19T19:16:08.859Z] 19:16:08     INFO - Running post-action listener: _resource_record_post_action\n[task 2018-04-19T19:16:08.859Z] 19:16:08     INFO - [mozharness: 2018-04-19 19:16:08.858386Z] Finished install step (success)\n[task 2018-04-19T19:16:08.859Z] 19:16:08     INFO - [mozharness: 2018-04-19 19:16:08.858625Z] Running run-tests step.\n[task 2018-04-19T19:16:08.859Z] 19:16:08     INFO - Running pre-action listener: _resource_record_pre_action\n[task 2018-04-19T19:16:08.859Z] 19:16:08     INFO - Running main action method: run_tests\n[task 2018-04-19T19:16:08.860Z] 19:16:08     INFO - Running command: ['unzip', '-q', '-o', '/builds/worker/workspace/build/target.apk'] in /builds/worker/workspace/build\n[task 2018-04-19T19:16:08.860Z] 19:16:08     INFO - Copy/paste: unzip -q -o /builds/worker/workspace/build/target.apk\n[task 2018-04-19T19:16:09.236Z] 19:16:09     INFO - Return code: 0\n[task 2018-04-19T19:16:09.237Z] 19:16:09     INFO - Reading from file /builds/worker/workspace/build/package-name.txt\n[task 2018-04-19T19:16:09.237Z] 19:16:09     INFO - Contents:\n[task 2018-04-19T19:16:09.237Z] 19:16:09     INFO -  org.mozilla.fennec_aurora\n[task 2018-04-19T19:16:09.239Z] 19:16:09     INFO - Running post-action listener: _resource_record_post_action\n[task 2018-04-19T19:16:09.239Z] 19:16:09     INFO - Running post-action listener: stop_emulator\n[task 2018-04-19T19:16:09.245Z] 19:16:09     INFO - Let's kill every process called emulator64-arm\n[task 2018-04-19T19:16:09.245Z] 19:16:09     INFO - Killing pid 494.\n[task 2018-04-19T19:16:09.251Z] 19:16:09     INFO - [mozharness: 2018-04-19 19:16:09.251104Z] Finished run-tests step (failed)\n[task 2018-04-19T19:16:09.252Z] 19:16:09    FATAL - Uncaught exception: Traceback (most recent call last):\n[task 2018-04-19T19:16:09.253Z] 19:16:09    FATAL -   File \"/builds/worker/workspace/mozharness/mozharness/base/script.py\", line 2076, in run\n[task 2018-04-19T19:16:09.253Z] 19:16:09    FATAL -     self.run_action(action)\n[task 2018-04-19T19:16:09.255Z] 19:16:09    FATAL -   File \"/builds/worker/workspace/mozharness/mozharness/base/script.py\", line 2015, in run_action\n[task 2018-04-19T19:16:09.255Z] 19:16:09    FATAL -     self._possibly_run_method(method_name, error_if_missing=True)\n[task 2018-04-19T19:16:09.255Z] 19:16:09    FATAL -   File \"/builds/worker/workspace/mozharness/mozharness/base/script.py\", line 1955, in _possibly_run_method\n[task 2018-04-19T19:16:09.255Z] 19:16:09    FATAL -     return getattr(self, method_name)()\n[task 2018-04-19T19:16:09.256Z] 19:16:09    FATAL -   File \"/builds/worker/workspace/mozharness/scripts/android_emulator_unittest.py\", line 791, in run_tests\n[task 2018-04-19T19:16:09.257Z] 19:16:09    FATAL -     for per_test_args in self.query_args(per_test_suite):\n[task 2018-04-19T19:16:09.257Z] 19:16:09    FATAL -   File \"/builds/worker/workspace/mozharness/mozharness/mozilla/testing/per_test_base.py\", line 203, in query_args\n[task 2018-04-19T19:16:09.258Z] 19:16:09    FATAL -     if not self.per_test_coverage and not self.verify_enabled:\n[task 2018-04-19T19:16:09.258Z] 19:16:09    FATAL - AttributeError: 'AndroidEmulatorTest' object has no attribute 'per_test_coverage'\n[task 2018-04-19T19:16:09.259Z] 19:16:09    FATAL - Running post_fatal callback...\n[task 2018-04-19T19:16:09.260Z] 19:16:09    FATAL - Exiting -1", "author": "cbrindusan@mozilla.com", "id": 13219549, "time": "2018-04-19T19:33:52Z"}, {"text": "Pushed by mcastelluccio@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/e8df07cc7125\nMake AndroidEmulatorTest extend CodeCoverageMixin. r=me CLOSED TREE", "author": "pulsebot@bots.tld", "id": 13219554, "time": "2018-04-19T19:37:11Z"}, {"text": "Backed out changeset e8df07cc7125 (bug 1431753) as requested by marco.\n\nBackout: https://hg.mozilla.org/integration/mozilla-inbound/rev/5893581067a7fbcaf376783af27145a51207b84f", "author": "cbrindusan@mozilla.com", "id": 13219577, "time": "2018-04-19T19:47:24Z"}, {"text": "Pushed by mcastelluccio@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/8ce15c227c66\nMove verify_tools.py to per_test_base.py. r=gbrown,jmaher\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/4ab22db3a416\nAdd a test-coverage test suite, similar to test-verify, that runs tests in isolation in coverage mode. r=gbrown,jmaher", "author": "pulsebot@bots.tld", "id": 13219802, "time": "2018-04-19T21:13:37Z"}, {"text": "Pushed by mcastelluccio@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0953370890fa\nFix condition when verification and per-test coverage are not enabled. r=me", "author": "pulsebot@bots.tld", "id": 13219931, "time": "2018-04-19T22:00:34Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/8ce15c227c66\nhttps://hg.mozilla.org/mozilla-central/rev/4ab22db3a416\nhttps://hg.mozilla.org/mozilla-central/rev/0953370890fa", "author": "dluca@mozilla.com", "id": 13222820, "time": "2018-04-20T23:02:16Z"}, {"text": "Pushed by mcastelluccio@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bf368c4e5c0a\nUpload per-test coverage reports. r=sparky", "author": "pulsebot@bots.tld", "id": 13232708, "time": "2018-04-25T15:16:50Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/bf368c4e5c0a", "author": "apavel@mozilla.com", "id": 13234450, "time": "2018-04-26T06:14:17Z"}], "id": 1431753, "priority": "--", "mentors_detail": [], "comment_count": 33, "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox62": "---", "status": "RESOLVED", "product": "Testing", "cf_fx_iteration": "---", "blocks": [1438500, 1447179, 1455403, 1455400, 1455401], "qa_contact": "", "see_also": [], "cf_status_firefox_esr52": "---", "component": "Code Coverage", "votes": 0, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "fixed", "cf_status_firefox60": "---", "target_milestone": "mozilla61", "is_cc_accessible": true, "groups": [], "url": "", "creator_detail": {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "ahal@mozilla.com", "id": 382067, "name": "ahal@mozilla.com", "real_name": "Andrew Halberstadt [:ahal]"}, {"email": "gbrown@mozilla.com", "id": 411471, "name": "gbrown@mozilla.com", "real_name": "Geoff Brown [:gbrown]"}, {"email": "gmierz2@outlook.com", "id": 560562, "name": "gmierz2@outlook.com", "real_name": "Greg Mierzwinski [:sparky]"}, {"email": "jmaher@mozilla.com", "id": 324370, "name": "jmaher@mozilla.com", "real_name": "Joel Maher ( :jmaher ) (UTC-4)"}], "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-04-26T06:14:17Z", "cf_status_firefox_esr60": "---", "assigned_to": "mcastelluccio@mozilla.com", "is_open": false, "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "history": [{"changes": [{"removed": "", "field_name": "depends_on", "added": "1431388, 1380659, 1380661"}], "who": "mcastelluccio@mozilla.com", "when": "2018-01-19T15:37:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jmaher@mozilla.com"}], "who": "jmaher@mozilla.com", "when": "2018-01-19T15:38:40Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1438500"}], "who": "mcastelluccio@mozilla.com", "when": "2018-03-14T13:07:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ahalberstadt@mozilla.com, gbrown@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8958796, "added": "feedback?(ahalberstadt@mozilla.com), feedback?(gbrown@mozilla.com)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-03-14T13:14:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(gbrown@mozilla.com)", "attachment_id": 8958796, "added": ""}], "who": "gbrown@mozilla.com", "when": "2018-03-14T23:07:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(ahalberstadt@mozilla.com)", "attachment_id": 8958796, "added": "feedback+"}], "who": "ahal@mozilla.com", "when": "2018-03-16T14:39:19Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8958796, "added": "1"}], "who": "mcastelluccio@mozilla.com", "when": "2018-03-19T18:24:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8960278, "added": "feedback?(gbrown@mozilla.com)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-03-19T18:27:34Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1447179"}], "who": "mcastelluccio@mozilla.com", "when": "2018-03-20T01:03:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(gbrown@mozilla.com)", "attachment_id": 8960278, "added": ""}], "who": "gbrown@mozilla.com", "when": "2018-03-20T23:34:26Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1453056"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-10T18:07:04Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8960278, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8966779, "added": "feedback?(gbrown@mozilla.com)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-10T23:09:50Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Patch", "attachment_id": 8966779, "added": "Proposal (whitespace changes ignored)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-11T14:26:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(gbrown@mozilla.com)", "attachment_id": 8966779, "added": "feedback+"}], "who": "gbrown@mozilla.com", "when": "2018-04-11T15:44:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gmierz2@outlook.com"}], "who": "gmierz2@outlook.com", "when": "2018-04-13T15:58:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8966779, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8966999, "added": "1"}, {"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "mcastelluccio@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8969121, "added": "review?(gbrown@mozilla.com), review?(jmaher@mozilla.com)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-18T23:02:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jmaher@mozilla.com)", "attachment_id": 8969121, "added": "review+"}], "who": "jmaher@mozilla.com", "when": "2018-04-19T13:12:43Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gbrown@mozilla.com)", "attachment_id": 8969121, "added": "review+"}], "who": "gbrown@mozilla.com", "when": "2018-04-19T14:02:37Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1455403"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-19T18:39:09Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1455401"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-19T18:39:17Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1455400"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-19T18:39:25Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com)"}], "who": "cbrindusan@mozilla.com", "when": "2018-04-19T19:33:52Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-04-20 23:02:16"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "dluca@mozilla.com", "when": "2018-04-20T23:02:16Z"}, {"changes": [{"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-21T16:27:58Z"}]}