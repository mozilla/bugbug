{"cf_status_firefox38": "---", "cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "attachments": [{"creator": "lukebmay@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/html", "id": 8574693}], "classification": "Components", "creator": "lukebmay@gmail.com", "cc": ["chess19@gmail.com", "dholbert@mozilla.com", "digadadave@gmail.com", "heavy@ungoverned.org", "kellejm2@gmail.com", "lukebmay@gmail.com", "meyer.kevin.a@gmail.com", "mstange@themasta.com", "roman.vysotsky@gmail.com", "xtc4uall@gmail.com"], "depends_on": [1054010, 1142686], "creation_time": "2015-03-09T15:05:16Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "x86_64", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["perf"], "summary": "Flexbox appears to use an inefficient rendering algorithm which causes massive browser load for a relatively small number of nested flex items.", "id": 1141108, "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "nobody@mozilla.org", "comment_count": 25, "comments": [{"text": "Created attachment 8574693\nfirebox-firefoxFlexboxRenderingBug.html\n\nUser Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/40.0.2214.111 Chrome/40.0.2214.111 Safari/537.36\n\nSteps to reproduce:\n\nWhen a relatively small number of flexbox items are used on a page, the performance of Firefox degrades to the point of unusability.  There appears to be an inefficient rendering algorithm used to calculate the sizes of the flex items.  I have created a JSFiddle to demonstrate the issue.  http://jsfiddle.net/yfzeqxgm/1/  .  I also included the same code in an html file and attached it.  I have filed this bug in version 36 as that is the currently relesaed version, however it seems to be present in 37 too.  In version 38 the impact of the bug is lessened, but I think it still remains.\n\n\nActual results:\n\nAs you increase the number of nested elements, you see an exponential degradation in performance.  If you pop the number of nested elements up to around 100, Firefox performance degrades to the point of crashing.  Chrome and IE have no problem rendering upwards of 200 elements.  \n\n\nExpected results:\n\nIf you run the fiddle with Chrome or IE, you'll see that the rendering of 200 nested elements is no problem at all.  Firefox should behave in a similar fashion.", "author": "lukebmay@gmail.com", "id": 10003942, "time": "2015-03-09T15:05:16Z"}, {"text": ">  In version 38 the impact of the bug is lessened\n\nNice, so that's due to bug 1054010.\n\n> but I think it still remains.\n\nYeah, I see multi-second hangs (in the neighborhood of 5-10 seconds) at a depth of 200. Changing bug from UNCONFIRMED to NEW for that reason.", "author": "dholbert@mozilla.com", "id": 10005919, "time": "2015-03-09T21:30:10Z"}, {"text": "This is a very important fix for my current work project (single page webapp), and I've been authorized to offer my time if there's anything I can do to help.  Thanks!", "author": "lukebmay@gmail.com", "id": 10009462, "time": "2015-03-10T15:12:15Z"}, {"text": "Thanks for offering!\n\nIt's possible / likely that there's some helper-CSS that you can apply, to hack around the 2-pass-layout aspects of flexbox[1] & speed things up up. (at least in Firefox 38 with bug 1054010, if not also earlier versions).\n\nI should hopefully get a chance to look into figuring out what CSS might help there in the next day or so.\n\n[1] (not all of which are implemented in Chrome yet -- https://code.google.com/p/chromium/issues/detail?id=426898 in particular -- which may in part explain the perf difference here)", "author": "dholbert@mozilla.com", "id": 10019108, "time": "2015-03-12T06:07:25Z"}, {"text": "Daniel,\nI modified Luke's Fiddle to allow specifying breadth in addition to depth of flexbox nesting: http://jsfiddle.net/keller_jon/p4o2g782/\n\nWhen adding depth only, Chrome seems to outperform FF, but not by a very noticeable margin.\nBut when breadth is introduced as well, the difference becomes large when using the current (as opposed to 2009) CSS.\n\nFor instance, in a tree of height n where each node has n children, Chrome is in the neighborhood of 1ms per flexbox regardless of n, for values of n=1...6.  n=6 results in about 56,000 flexboxes in the tree.  Firefox 36, on the other hand, gets up to 46ms per flexbox for n=6.\n\nFindings: https://www.dropbox.com/s/3ht0ua9wnzfty8n/Browser_speeds.pdf?dl=0", "author": "kellejm2@gmail.com", "id": 10028044, "time": "2015-03-13T20:00:58Z"}, {"text": "Any updates on this Daniel?  It sounded like you may have some tips on how to avoid some of the performance hits without completely abandoning flexbox.  \n\nIs there an approximate timeline for this fix?  Our project is in limbo based on the timeline of this fix.  If the fix is expected to come out this year then we should be ok, but if not then we are likely going to have to abandon flexbox and rework a fairly substantial portion of our code base.\n\nThanks so much for looking at this!", "author": "lukebmay@gmail.com", "id": 10058072, "time": "2015-03-20T19:36:03Z"}, {"text": "Yup, I've got a bit of an update here:\n\nI poked around some modified versions of Luke's attached testcase in a debugger, & noticed that bug 1054010's optimization (mentioned in comment 1) wasn't getting applied as thoroughly as I expected (and in particular, the CSS fixes I had in mind to reduce redundant reflows weren't working) -- and then figured out why, and I filed & fixed bug 1142686.\n\nThat's fixed in current Nightly 39 builds, and it should be fixed in the next \"Firefox Developer Edition\" 38 update as well. (those come out every day or so I think)\n\nWith current nightly (due to that fix I think), I can give Luke's testcase a depth of 200, and the window responds pretty responsively.  (unlike a build from 3/15, which has multi-second jank on window-resizes at that depth)\n\nLuke, could you test current Nightly and let me know if this seems fixed for you there?", "author": "dholbert@mozilla.com", "id": 10059976, "time": "2015-03-21T07:51:45Z"}, {"text": "Nightlies are available at https://nightly.mozilla.org -- though you may want to wait for the Developer Edition update. (unlike Nightly, Developer Edition doesn't share your existing Firefox profile & is hence a bit safer/easier to test alongside an existing Firefox install).\n\nAs soon as your Developer Edition has a datestamp of 3/21 or later (in Help|About, or Firefox|About on Mac), I'd expect it to include bug 1142686's fix.", "author": "dholbert@mozilla.com", "id": 10059981, "time": "2015-03-21T07:57:44Z"}, {"text": "(Jon, it may be useful to update your findings from comment 4 as well - I'm curious how we compare there with bug 1142686's fix.  6x6 seems to hang both browsers, and I didn't bother waiting for measurements there -- but with 5x5, I get an initial render time of 2642ms in Chrome vs. 2450ms in current Firefox nightly.)", "author": "dholbert@mozilla.com", "id": 10059990, "time": "2015-03-21T08:05:35Z"}, {"text": "RE your timeline question:\n\n(In reply to Luke May from comment #5)\n> Is there an approximate timeline for this fix?  Our project is in limbo\n> based on the timeline of this fix.  If the fix is expected to come out this\n> year then we should be ok\n\nOptimistically, if your results match mine & this is fixed in Developer Edition version 38: that'll become a Firefox release version in May (on 2015-05-12), according to https://wiki.mozilla.org/RapidRelease/Calendar\n\nThere's a chance the fix would be be backed out of 38 if we discover that it causes non-trivial regressions, in which case it'd be bumped to 39 or possibly 40 if it's really bad.  (which would just be 6 weeks of delay, per version number)\n\nSo, it sounds like that fits your ballpark \"this year\" schedule. (again, assuming that it's actually fixed as I think it is)", "author": "dholbert@mozilla.com", "id": 10059993, "time": "2015-03-21T08:15:33Z"}, {"text": "This is awesome Daniel!  From my initial tests everything appears to be working great!  Outstanding!  You have saved us some major time and effort here.  Thank you so much!  We will try to get some more exhaustive testing done soon.", "author": "lukebmay@gmail.com", "id": 10060668, "time": "2015-03-21T17:08:50Z"}, {"text": "Hooray, glad to hear it! I'm going to tentatively resolve this as FIXED by bug 1142686, then.", "author": "dholbert@mozilla.com", "id": 10060699, "time": "2015-03-21T17:24:13Z"}, {"text": "(Thanks for filing the bug & for including a handy standalone testcase, too! That definitely makes it easier to get to the bottom of things.)", "author": "dholbert@mozilla.com", "id": 10060705, "time": "2015-03-21T17:30:26Z"}, {"text": "Thanks, Daniel! I apologize for being MIA for a while (vacation, then got sick during the trip home). I'll re-test today or tomorrow and put some results up.", "author": "kellejm2@gmail.com", "id": 10076336, "time": "2015-03-25T16:13:32Z"}, {"text": "No need to apologize! :) Also, no need to get comprehensive results from my perspective (unless you want to). I just want to make sure it's not as bad as it was in comment 4 anymore.", "author": "dholbert@mozilla.com", "id": 10077962, "time": "2015-03-25T20:41:58Z"}, {"text": "Ok, testing done, and it's great.\n4x4 tree, 342 flexboxes: FF38 before improvement=914ms, FF38 after improvement=363ms, Chrome=267ms.\n5x5 tree, 3907 flexboxes: FF38 before improvement=17s, FF38 after improvement=2.8s, Chrome=3.1s.\n6x6 tree, 56k flexboxes: FF38 before improvement=681s, FF38 after improvement=44s, Chrome=62s.\n\nFor Luke's 1-dimensional trees, I tested various depths up to 60 and your code change gives an improvement of 0 to 6ms, but this scenario wasn't problematic to begin with.\n\nThanks so much for your work on this, Daniel!", "author": "kellejm2@gmail.com", "id": 10081408, "time": "2015-03-26T14:39:10Z"}, {"text": "Hey Daniel, did you pull your fix from the Nightlies?  It appears to still work on the version of firefox I have that is dated 3/21, but on versions 3/22 and 3/26 the fix appears to no longer be present.  I'm guessing you pulled it to do more thorough testing perhaps?", "author": "lukebmay@gmail.com", "id": 10081718, "time": "2015-03-26T15:29:24Z"}, {"text": "Nope, though I did land a different fix, which disable the core optimization here when there's a percent-height child. (which requires that we do two reflows of the flex item -- once to measure its content [before we know its height, & before the child can know what to resolve its percent against], and once again with the final resolved height [at which point the child has something to resolve its percent against].\n\nThis will return some pathological scenarios to Firefox 37 level performance, but I expect that should only happen when there's nesting with percent heights (or perhaps something similar) all the way down.\n\nThat fix landed on 3/21, so it makes sense that you'd see its effects in the 3/22 nightly.  However, I don't see any trouble with the attached testcase or the jsfiddles that have been linked here. Are these testcases the ones that you're seeing a behavior-difference on?  If not, could you make another testcase? (or try removing percent heights and see if that fixes it)", "author": "dholbert@mozilla.com", "id": 10081956, "time": "2015-03-26T16:06:51Z"}, {"text": "(The patch that disabled the optimization when there are percent-height children was on bug 1128354, btw.)", "author": "dholbert@mozilla.com", "id": 10081961, "time": "2015-03-26T16:08:09Z"}, {"text": "(One other possible workaround [if you really need percent heights] would be to turn off min-height:auto and flex-basis:auto -- those are the two main reasons we need the first just-content-measuring reflow for each flex item. So, e.g. try setting \"min-height:0\" and provide a non-\"auto\" flex-basis (e.g. in the 3rd entry in the \"flex\" shorthand property), if you aren't already doing that.)", "author": "dholbert@mozilla.com", "id": 10081976, "time": "2015-03-26T16:11:31Z"}, {"text": "To clarify, my comment was not in regards to the fiddle I provided in this bug. we are using `flex: 1 1 100%;` in several places, so that could indeed be the cause of the issue I am seeing.  I'm not sure why`flex: 1 1 100%;` is being used so much, because I think the same results can be achieved (stretching a div to the size of the viewport or its parent) without the percentage basis.  We also use `flex-basis: auto;` in quite a few places as well, but that is explicitly needed because of the nature of our product (web-based designer), so the user can dynamically change the content.  \n\nAs far as the min-width/min-height stuff goes (we are almost exclusively setting min-width and min-height to 0px for virtually every flex item.  The reasoning for this is not well founded, but we do it simply because it has fixed some of the firefox issues we have seen due to a fairly recent advancement in the flexbox spec Mozilla released into the wild.  I do not know much of the specifics of it other than the few articles I read, and I tried it and it seemed to work.\n\nI can try to whip up another fiddle to specifically isolate this case.  We are seeing performance hits similar to those prior to the fix you pushed on 3/21.", "author": "lukebmay@gmail.com", "id": 10082251, "time": "2015-03-26T17:07:38Z"}, {"text": "OK, thanks for clarifying.\n\n(In reply to Luke May from comment #20)\n> we are using `flex: 1 1 100%;` in several places, so that could indeed\n> be the cause of the issue I am seeing.  I'm not sure why`flex: 1 1 100%;` is\n> being used so much, because I think the same results can be achieved\n> (stretching a div to the size of the viewport or its parent) without the\n> percentage basis.\n\nAgreed.  You'd likely be better off using \"flex: 1 1 0px\" in those places.  I don't think \n\n> We also use `flex-basis: auto;` in quite a few places as\n> well, but that is explicitly needed because of the nature of our product\n\nUnderstood. To be clear, I think this would only cause a slowdown if\n (1) it's in a *vertical* flexbox (so we have to measure the height up-front, which requires layout)\n (2) this flex item with flex-basis:auto has a percent-height child (which means we can't optimize away the second reflow)\n\n> As far as the min-width/min-height stuff goes (we are almost exclusively\n> setting min-width and min-height to 0px for virtually every flex item.  The\n> reasoning for this is not well founded, but we do it simply because it has\n> fixed some of the firefox issues we have seen due to a fairly recent\n> advancement in the flexbox spec Mozilla released into the wild.\n\nCool -- yeah, we're the first to implement \"min-width:auto\"/\"min-height:auto\", which is generally useful but can have some unexpected behavior (see dependencies on bug 1043520). You're running up against that, and \"min-[width|height]:0\" restores the old behavior.  Note that Chrome is close to having an implementation of this, too ( https://code.google.com/p/chromium/issues/detail?id=426898 ) and Microsoft has it implemented in their next-gen engine, so any min-sizing trouble you saw in Firefox will soon be present in those other browsers too.\n\n> I can try to whip up another fiddle to specifically isolate this case.  We\n> are seeing performance hits similar to those prior to the fix you pushed on\n> 3/21.\n\nThat would be great. For sanity/bug-management's sake, would you mind filing a new (separate) bug for that testcase?  Handy URL (which will auto-CC me on the bug):\nhttps://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=Layout&cc=:dholbert\n\nOtherwise, the state of this bug would get a bit confusing & hard to track. (since the linked/attached testcases are now fixed)", "author": "dholbert@mozilla.com", "id": 10082341, "time": "2015-03-26T17:18:18Z"}, {"text": "> Agreed.  You'd likely be better off using \"flex: 1 1 0px\" in those places.  I don't think\n\nSorry, didn't finish my thought there. Meant to say: I don't think those should produce different results, if you're setting that same style on all of the flex items.  (On the other hand, if you're mixing a \"flex: 1 1 100%\" flex-item with flex items with different flexibilities/flex-basis values, you may see a behavior change from switching 100% to 0px. Even so, flex:1 1 100% is probably not the best way to express what you're going for there.)", "author": "dholbert@mozilla.com", "id": 10082357, "time": "2015-03-26T17:20:45Z"}, {"text": "Awesome, I'll open a new bug once I get the fiddle going.  Thanks Daniel!", "author": "lukebmay@gmail.com", "id": 10082436, "time": "2015-03-26T17:34:53Z"}, {"text": "Thanks! I'll keep an eye out for it.\n\nI'm bumping this bug to VERIFIED FIXED, given verification in comment 10, comment 15, and beginning of comment 20.", "author": "dholbert@mozilla.com", "id": 10082454, "time": "2015-03-26T17:37:59Z"}], "cf_last_resolved": "2015-03-21T17:24:13Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-09-21T18:39:47Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1304473], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1149339"], "cf_fx_iteration": "---", "component": "Layout", "votes": 8, "groups": [], "cf_status_firefox60": "---", "target_milestone": "---", "is_cc_accessible": true, "status": "VERIFIED", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "lukebmay@gmail.com", "id": 533628, "name": "lukebmay@gmail.com", "real_name": "Luke May"}, "whiteboard": "[fixed by bug 1142686]", "mentors": [], "cc_detail": [{"email": "chess19@gmail.com", "id": 533737, "name": "chess19@gmail.com", "real_name": "Retsam"}, {"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, {"email": "digadadave@gmail.com", "id": 533741, "name": "digadadave@gmail.com", "real_name": "dkriebel"}, {"email": "heavy@ungoverned.org", "id": 484913, "name": "heavy@ungoverned.org", "real_name": ""}, {"email": "kellejm2@gmail.com", "id": 533743, "name": "kellejm2@gmail.com", "real_name": "Jon Keller"}, {"email": "lukebmay@gmail.com", "id": 533628, "name": "lukebmay@gmail.com", "real_name": "Luke May"}, {"email": "meyer.kevin.a@gmail.com", "id": 523371, "name": "meyer.kevin.a@gmail.com", "real_name": "Kevin"}, {"email": "mstange@themasta.com", "id": 293943, "name": "mstange@themasta.com", "real_name": "Markus Stange [:mstange]"}, {"email": "roman.vysotsky@gmail.com", "id": 547141, "name": "roman.vysotsky@gmail.com", "real_name": "Roman"}, {"email": "xtc4uall@gmail.com", "id": 104905, "name": "xtc4uall@gmail.com", "real_name": "(mostly gone) XtC4UaLL [:xtc4uall]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "lukebmay@gmail.com"}], "who": "lukebmay@gmail.com", "when": "2015-03-09T19:02:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dholbert@mozilla.com"}], "who": "lukebmay@gmail.com", "when": "2015-03-09T20:03:07Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "NEW"}, {"removed": "Untriaged", "field_name": "component", "added": "Layout"}, {"removed": "36 Branch", "field_name": "version", "added": "Trunk"}, {"removed": "", "field_name": "depends_on", "added": "1054010"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}, {"removed": "0", "field_name": "is_confirmed", "added": "1"}], "who": "dholbert@mozilla.com", "when": "2015-03-09T21:30:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mstange@themasta.com"}], "who": "mstange@themasta.com", "when": "2015-03-09T21:38:42Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "perf"}, {"removed": "", "field_name": "cc", "added": "xtc4uall@gmail.com"}, {"removed": "Linux", "field_name": "op_sys", "added": "All"}], "who": "xtc4uall@gmail.com", "when": "2015-03-09T21:57:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "chess19@gmail.com"}], "who": "chess19@gmail.com", "when": "2015-03-10T15:42:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "digadadave@gmail.com"}], "who": "digadadave@gmail.com", "when": "2015-03-10T16:11:53Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dholbert@mozilla.com)"}], "who": "dholbert@mozilla.com", "when": "2015-03-12T06:07:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "meyer.kevin.a@gmail.com"}], "who": "meyer.kevin.a@gmail.com", "when": "2015-03-12T13:53:19Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "heavy@ungoverned.org"}], "who": "heavy@ungoverned.org", "when": "2015-03-12T21:02:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kellejm2@gmail.com"}], "who": "kellejm2@gmail.com", "when": "2015-03-13T20:00:58Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1142686"}, {"removed": "needinfo?(dholbert@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(lukebmay@gmail.com)"}], "who": "dholbert@mozilla.com", "when": "2015-03-21T07:51:45Z"}, {"changes": [{"removed": "needinfo?(lukebmay@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "lukebmay@gmail.com", "when": "2015-03-21T17:08:50Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "", "field_name": "whiteboard", "added": "[fixed by bug 1142686]"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-03-21 10:24:13"}], "who": "dholbert@mozilla.com", "when": "2015-03-21T17:24:13Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}], "who": "dholbert@mozilla.com", "when": "2015-03-26T17:37:59Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1149339"}], "who": "dholbert@mozilla.com", "when": "2015-03-31T17:38:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "roman.vysotsky@gmail.com"}], "who": "roman.vysotsky@gmail.com", "when": "2015-08-19T12:39:32Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1304473"}], "who": "dholbert@mozilla.com", "when": "2016-09-21T18:39:47Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}