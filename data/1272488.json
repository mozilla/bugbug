{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "mshal@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-08T18:33:19Z", "type_id": 4, "creation_date": "2016-05-12T20:51:15Z", "id": 1393213, "setter": "ted@mielczarek.org"}], "content_type": "text/x-review-board-request", "id": 8751904}, {"creator": "mshal@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-08T19:02:52Z", "type_id": 4, "creation_date": "2016-05-12T20:51:15Z", "id": 1393214, "setter": "ted@mielczarek.org"}], "content_type": "text/x-review-board-request", "id": 8751905}], "classification": "Components", "creator": "mshal@mozilla.com", "cc": ["bmo@upshifts.org", "mh+mozilla@glandium.org", "ted@mielczarek.org"], "depends_on": [], "creation_time": "2016-05-12T20:48:58Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Move GenerateCSSPropsGenerated.py invocation to moz.build", "cf_last_resolved": "2016-06-24T09:16:15Z", "cf_status_firefox50": "fixed", "assigned_to_detail": {"email": "mshal@mozilla.com", "id": 456035, "name": "mshal@mozilla.com", "real_name": "Michael Shal [:mshal] (out - 3/12)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "comments": [{"text": "The GenerateCSSPropsGenerated.py script needs to be cleaned up a bit before we can invoke it from moz.build. The Makefile also runs CPP to pass a preprocessed file in via stdin, but we can use buildconfig to lookup CPP and run it from the python script instead.\n\nFixing this also fixes this error message in automation build logs:\n\n 0:05.23 /bin/sh: 1: -DOS_LINUX=1: not found\n 0:05.25 Traceback (most recent call last):\n 0:05.25   File \"/home/mshal/mozilla-central-hg/layout/style/GenerateCSSPropsGenerated.py\", line 10, in <module>\n 0:05.25     for (i, p) in enumerate(eval(sys.stdin.read()))]\n 0:05.25   File \"<string>\", line 0\n 0:05.25\n 0:05.25     ^\n 0:05.25 SyntaxError: unexpected EOF while parsing\n\n(CPP isn't set in this case, so we should only build this when COMPILE_ENVIRONMENT is set).", "author": "mshal@mozilla.com", "id": 11405153, "time": "2016-05-12T20:48:58Z"}, {"text": "Created attachment 8751904\nMozReview Request: Bug 1272488 - Create a main() function in GenerateCSSPropsGenerated.py; r?ted\n\nReview commit: https://reviewboard.mozilla.org/r/52293/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/52293/", "author": "mshal@mozilla.com", "id": 11405164, "time": "2016-05-12T20:51:15Z"}, {"text": "Created attachment 8751905\nMozReview Request: Bug 1272488 - Move GenerateCSSPropsGenerated.py invocation to moz.build; r?ted\n\nReview commit: https://reviewboard.mozilla.org/r/52295/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/52295/", "author": "mshal@mozilla.com", "id": 11405165, "time": "2016-05-12T20:51:15Z"}, {"text": "I split it into two patches for easier review - the first one is mostly indentation changes from putting things into functions.", "author": "mshal@mozilla.com", "id": 11405171, "time": "2016-05-12T20:52:12Z"}, {"text": "Comment on attachment 8751904\nMozReview Request: Bug 1272488 - Create a main() function in GenerateCSSPropsGenerated.py; r?ted\n\nhttps://reviewboard.mozilla.org/r/52293/#review55484\n\nSorry for letting these sit so long.\n\n::: layout/style/GenerateCSSPropsGenerated.py:78\n(Diff revision 1)\n>      return \",\\n\".join(map(lambda (p, position): \"  %d\" % position, ps))\n>  \n> -cppFile = open(sys.argv[1], \"r\")\n> +def generate(output, cppTemplate):\n> +    cppFile = open(cppTemplate, \"r\")\n> -cppTemplate = cppFile.read()\n> +    cppTemplate = cppFile.read()\n> -cppFile.close()\n> +    cppFile.close()\n\nMaybe switch this to use a `with` block while you're here?", "author": "ted@mielczarek.org", "id": 11473419, "time": "2016-06-08T18:33:19Z"}, {"text": "Comment on attachment 8751905\nMozReview Request: Bug 1272488 - Move GenerateCSSPropsGenerated.py invocation to moz.build; r?ted\n\nhttps://reviewboard.mozilla.org/r/52295/#review55488\n\n::: layout/style/GenerateCSSPropsGenerated.py:12\n(Diff revision 1)\n>  import argparse\n> +import subprocess\n> +import buildconfig\n>  \n> -def get_properties():\n> +def get_properties(preprocessorHeader):\n> +    cpp = buildconfig.substs['CPP'].split()\n\nI'm not 100% sure, but you might want to use `shlex.split` here.\n\n::: layout/style/GenerateCSSPropsGenerated.py:17\n(Diff revision 1)\n> +    cpp = buildconfig.substs['CPP'].split()\n> +    cpp.append(preprocessorHeader)\n> +    preprocessed = subprocess.check_output(cpp)\n>      properties = [{\"name\":p[0], \"prop\":p[1], \"id\":p[2],\n>                     \"flags\":p[3], \"pref\":p[4], \"proptype\":p[5]}\n> -                  for (i, p) in enumerate(eval(sys.stdin.read()))]\n> +                  for (i, p) in enumerate(eval(preprocessed))]\n\nOh god, I never even noticed the `eval` here with all the other things going on. That's pretty ridiculous!\n\n::: layout/style/Makefile.in:6\n(Diff revision 1)\n>  # This Source Code Form is subject to the terms of the Mozilla Public\n>  # License, v. 2.0. If a copy of the MPL was not distributed with this\n>  # file, You can obtain one at http://mozilla.org/MPL/2.0/.\n>  \n>  # TODO This list should be emitted to a .pp file via\n>  # GenerateCSSPropsGenerated.py.\n\nThe `file_generate` script we use under the hood supports scripts returning dependencies as a set from the method it calls:\nhttps://dxr.mozilla.org/mozilla-central/rev/ec20b463c04f57a4bfca1edb987fcb9e9707c364/python/mozbuild/mozbuild/action/file_generate.py#67\n\nYou could wire this up by having `generate` return the set of files the preprocessor read by parsing the preprocessor output. The preprocessor spits out line numbers from input files on lines starting with `#`, which looks like:\n\nfor gcc/clang:\n```\n# 1 \"/build/mozilla-central/layout/style/PythonCSSProps.h\"\n# 1 \"<built-in>\"\n# 1 \"<command-line>\"\n# 1 \"/usr/include/stdc-predef.h\" 1 3 4\n# 1 \"<command-line>\" 2\n# 1 \"/build/mozilla-central/layout/style/PythonCSSProps.h\"\n```\n\nfor msvc:\n```\n#line 1 \"c:/build/mozilla-central/layout/style/PythonCSSProps.h\"\n#line 1 \"c:\\\\build\\\\mozilla-central\\\\layout\\\\style\\\\nsCSSPropList.h\"\n#line 168 \"c:\\\\build\\\\mozilla-central\\\\layout\\\\style\\\\nsCSSPropList.h\"\n```\n\nFeel free to punt this to a followup, but I think it should be straightforward.\n\n::: layout/style/moz.build:248\n(Diff revision 1)\n>  ]\n>  \n>  style_struct_list = GENERATED_FILES['nsStyleStructList.h']\n>  style_struct_list.script = 'generate-stylestructlist.py'\n>  \n> +if CONFIG['COMPILE_ENVIRONMENT']:\n\nI guess it would be nice if we had a way to express real dependencies for `SOURCES` on `GENERATED_FILES`.", "author": "ted@mielczarek.org", "id": 11473540, "time": "2016-06-08T19:02:52Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #5)\n> Comment on attachment 8751905\n> MozReview Request: Bug 1272488 - Move GenerateCSSPropsGenerated.py\n> invocation to moz.build; r?ted\n> \n> https://reviewboard.mozilla.org/r/52295/#review55488\n> \n> ::: layout/style/GenerateCSSPropsGenerated.py:12\n> (Diff revision 1)\n> >  import argparse\n> > +import subprocess\n> > +import buildconfig\n> >  \n> > -def get_properties():\n> > +def get_properties(preprocessorHeader):\n> > +    cpp = buildconfig.substs['CPP'].split()\n> \n> I'm not 100% sure, but you might want to use `shlex.split` here.\n\nIf you do, don't use shlex.split, use mozbuild.shellutil.split", "author": "mh+mozilla@glandium.org", "id": 11473988, "time": "2016-06-08T21:24:49Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #5)\n> ::: layout/style/GenerateCSSPropsGenerated.py:12\n> > -def get_properties():\n> > +def get_properties(preprocessorHeader):\n> > +    cpp = buildconfig.substs['CPP'].split()\n> \n> I'm not 100% sure, but you might want to use `shlex.split` here.\n\nDone! (with mozbuild.shellutil.split)\n\n> ::: layout/style/Makefile.in:6\n> (Diff revision 1)\n> >  # This Source Code Form is subject to the terms of the Mozilla Public\n> >  # License, v. 2.0. If a copy of the MPL was not distributed with this\n> >  # file, You can obtain one at http://mozilla.org/MPL/2.0/.\n> >  \n> >  # TODO This list should be emitted to a .pp file via\n> >  # GenerateCSSPropsGenerated.py.\n> \n> The `file_generate` script we use under the hood supports scripts returning\n> dependencies as a set from the method it calls:\n> https://dxr.mozilla.org/mozilla-central/rev/\n> ec20b463c04f57a4bfca1edb987fcb9e9707c364/python/mozbuild/mozbuild/action/\n> file_generate.py#67\n>\n> Feel free to punt this to a followup, but I think it should be\n> straightforward.\n\nFiled bug 1281614.\n\n> ::: layout/style/moz.build:248\n> (Diff revision 1)\n> >  ]\n> >  \n> >  style_struct_list = GENERATED_FILES['nsStyleStructList.h']\n> >  style_struct_list.script = 'generate-stylestructlist.py'\n> >  \n> > +if CONFIG['COMPILE_ENVIRONMENT']:\n> \n> I guess it would be nice if we had a way to express real dependencies for\n> `SOURCES` on `GENERATED_FILES`.\n\nHmm, I'm not sure what you mean here. Can you clarify?", "author": "mshal@mozilla.com", "id": 11496088, "time": "2016-06-22T20:41:25Z"}, {"text": "I replied on IRC, but for the record, I believe I meant that it would be nice if we could specify that specific SOURCES depend on GENERATED_FILES, so that the generation would be run as a prerequisite for compilation instead of just blindly during the export tier like we do now, so that in the --disable-compile-environment case they just wouldn't get run.", "author": "ted@mielczarek.org", "id": 11497336, "time": "2016-06-23T10:40:48Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #8)\n> I replied on IRC, but for the record, I believe I meant that it would be\n> nice if we could specify that specific SOURCES depend on GENERATED_FILES, so\n> that the generation would be run as a prerequisite for compilation instead\n> of just blindly during the export tier like we do now, so that in the\n> --disable-compile-environment case they just wouldn't get run.\n\nAhh, I think I see what you mean. That would help make it a more general solution - in this case it wasn't really an attempt to get it to build only when needed, but because it would fail without the compile environment since CPP isn't defined, which we need in the python script.", "author": "mshal@mozilla.com", "id": 11498238, "time": "2016-06-23T15:52:14Z"}, {"text": "Pushed by mshal@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/cdf2830f4dde\nCreate a main() function in GenerateCSSPropsGenerated.py; r=ted\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7ed69db97223\nMove GenerateCSSPropsGenerated.py invocation to moz.build; r=ted", "author": "pulsebot@bots.tld", "id": 11498239, "time": "2016-06-23T15:52:15Z"}, {"text": "Sure, but if we were only building it when needed then presumably it'd work in that case without explicitly having to wrap it in `if CONFIG['COMPILE_ENVIRONMENT']`, right? I think at some point we're going to have to grow some more features in moz.build to encode some information that's currently baked into the recursive make backend (like the tier ordering etc), this is just one bit of it.", "author": "ted@mielczarek.org", "id": 11498376, "time": "2016-06-23T16:28:25Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #11)\n> Sure, but if we were only building it when needed then presumably it'd work\n> in that case without explicitly having to wrap it in `if\n> CONFIG['COMPILE_ENVIRONMENT']`, right? I think at some point we're going to\n> have to grow some more features in moz.build to encode some information\n> that's currently baked into the recursive make backend (like the tier\n> ordering etc), this is just one bit of it.\n\nYeah, I think that should work if we are able to generate something like a '%.o: <some generated file>' rule in the backend. Though I guess we'd still have to specify something in the GENERATED_FILES entry as for whether or not it's needed for compilation, since I believe there are some generated files that we want even without the compilation environment. Or were you thinking it's automatic somehow based on what is being generated?\n\nNote that this dom/bindings Makefile rule was already inside an 'ifdef COMPILE_ENVIRONMENT', but the layout/style rule from bug 1272488 was not, which caused a weird error message in artifact builds since CPP wasn't defined:\n\n 0:43.41 /bin/sh: 1: -DOS_LINUX=1: not found\n 0:43.45 labelsencodings.properties.h\n 0:43.48 Traceback (most recent call last):\n 0:43.48   File \"/home/mshal/mozilla-central-hg/layout/style/GenerateCSSPropsGenerated.py\", line 10, in <module>\n 0:43.48     for (i, p) in enumerate(eval(sys.stdin.read()))]\n 0:43.48   File \"<string>\", line 0\n\nCuriously this didn't actually fail the build (I guess because of the pipe?), but just made for some noise.", "author": "mshal@mozilla.com", "id": 11498522, "time": "2016-06-23T17:23:10Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/cdf2830f4dde\nhttps://hg.mozilla.org/mozilla-central/rev/7ed69db97223", "author": "cbook@mozilla.com", "id": 11500177, "time": "2016-06-24T09:16:15Z"}, {"text": "Hi Michael, could you help to take a look at bug 1284169 ? We need this bug being fixed before enabling mask shorthand feature. Thanks.", "author": "bmo@upshifts.org", "id": 11520081, "time": "2016-07-04T01:58:02Z"}, {"text": "Ahh, when I was moving it to moz.build I tried to check if there was anything in ACDEFINES that could affect the output and didn't find anything. I guess I either missed that, or only looked at the similar script in dom/bindings. Sorry for breaking that feature!", "author": "mshal@mozilla.com", "id": 11524281, "time": "2016-07-05T18:19:04Z"}, {"text": "*** Bug 1254117 has been marked as a duplicate of this bug. ***", "author": "mshal@mozilla.com", "id": 11723456, "time": "2016-09-20T19:10:19Z"}], "id": 1272488, "priority": "--", "mentors_detail": [], "comment_count": 17, "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2018-03-02T20:12:20Z", "cf_platform_rel": "---", "product": "Firefox Build System", "cf_fx_iteration": "---", "blocks": [847009, 1284169], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1297718"], "cf_status_firefox_esr52": "---", "component": "General", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla50", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "mshal@mozilla.com", "id": 456035, "name": "mshal@mozilla.com", "real_name": "Michael Shal [:mshal] (out - 3/12)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "bmo@upshifts.org", "id": 549002, "name": "bmo@upshifts.org", "real_name": "Astley Chen (inactive)"}, {"email": "mh+mozilla@glandium.org", "id": 47192, "name": "mh+mozilla@glandium.org", "real_name": "Mike Hommey [:glandium]"}, {"email": "ted@mielczarek.org", "id": 39022, "name": "ted@mielczarek.org", "real_name": "Ted Mielczarek [:ted.mielczarek]"}], "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "assigned_to": "mshal@mozilla.com", "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8751904, "added": "review?(ted@mielczarek.org)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8751905, "added": "review?(ted@mielczarek.org)"}, {"removed": "", "field_name": "cc", "added": "ted@mielczarek.org"}], "who": "mshal@mozilla.com", "when": "2016-05-12T20:51:15Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "847009"}], "who": "dburns@mozilla.com", "when": "2016-05-27T13:46:03Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ted@mielczarek.org)", "attachment_id": 8751904, "added": "review+"}], "who": "ted@mielczarek.org", "when": "2016-06-08T18:33:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ted@mielczarek.org)", "attachment_id": 8751905, "added": "review+"}], "who": "ted@mielczarek.org", "when": "2016-06-08T19:02:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mh+mozilla@glandium.org"}], "who": "mh+mozilla@glandium.org", "when": "2016-06-08T21:24:49Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla50"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-06-24 09:16:15"}, {"removed": "---", "field_name": "cf_status_firefox50", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-06-24T09:16:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "aschen@mozilla.com"}, {"removed": "", "field_name": "blocks", "added": "1284169"}], "who": "bmo@upshifts.org", "when": "2016-07-04T01:54:17Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mshal@mozilla.com)"}], "who": "bmo@upshifts.org", "when": "2016-07-04T01:58:02Z"}, {"changes": [{"removed": "needinfo?(mshal@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mshal@mozilla.com", "when": "2016-07-05T18:19:04Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1297718"}], "who": "dbaron@dbaron.org", "when": "2016-08-24T23:20:43Z"}, {"changes": [{"removed": "Core", "field_name": "product", "added": "Firefox Build System"}], "who": "automation@bmo.tld", "when": "2018-03-02T20:12:20Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}