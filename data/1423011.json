{"cf_tracking_thunderbird_esr52": "---", "status": "NEW", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "botond@mozilla.com", "mentors_detail": [], "depends_on": [1466611, 1467873], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox59": "affected", "keywords": [], "cc_detail": [{"email": "bugmail@mozilla.staktrace.com", "id": 426788, "name": "bugmail@mozilla.staktrace.com", "real_name": "Kartikaya Gupta (email:kats@mozilla.com)"}, {"email": "kmadan@mozilla.com", "id": 608768, "name": "kmadan@mozilla.com", "real_name": "Kashav Madan [:kashav]"}, {"email": "mstange@themasta.com", "id": 293943, "name": "mstange@themasta.com", "real_name": "Markus Stange [:mstange]"}, {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, {"email": "tpodder@mozilla.com", "id": 617255, "name": "tpodder@mozilla.com", "real_name": "Tanushree Podder [:tanushree]"}], "cf_last_resolved": null, "attachments": [{"creator": "kmadan@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8984294}, {"creator": "kmadan@mozilla.com", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8984295}, {"creator": "kmadan@mozilla.com", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8984296}, {"creator": "kmadan@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-06-15T17:16:37Z", "type_id": 4, "creation_date": "2018-06-15T04:56:19Z", "id": 1769184, "setter": "botond@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8985307}, {"creator": "kmadan@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"requestee": "botond@mozilla.com", "status": "?", "name": "review", "modification_date": "2018-06-15T19:21:35Z", "type_id": 4, "creation_date": "2018-06-15T19:21:35Z", "id": 1769391, "setter": "kmadan@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8985308}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 52, "comments": [{"text": "A major part of making our viewport handling more consistent with other browsers (bug 1123938) is fleshing out the distinction between the \"visual viewport\" and the \"layout viewport\" (a.k.a. \"fixed viewport\"). See [1] for some background on these concepts.\n\nGecko already has a distinction between these two concepts, although it doesn't call them those names:\n\n  - The \"visual viewport\" is the rectangle whose origin is\n    APZ's scroll offset for the RCD-RSF [2], and whose size is\n    the composition bounds of the RCD-RSF.\n\n  - The \"layout viewport\" is the rectangle whose origin is\n    Gecko's scroll offset for the RCD-RSF, and whose size is\n    the \"CSS viewport size\" (as computed by MobileViewportManager\n    on mobile).\n\nWe successfully leverage this distinction to make zooming of overflow:hidden pages work much like it does in Chrome.\n\nOf course, there are numerous other ways in which our behaviour in relation to these is different from other browsers; for example, we currently attach position:fixed elements to the visual viewport rather than the layout viewport (bug 656036).\n\nOne important change we'll need to make to implement some of these behaviours is to allow APZ to async-scroll the layout viewport. That is, APZ will need to track a copy of Gecko's scroll offset for the RCD-RSF which it can change asynchronously (but which is still distinct from the visual viewport offset of the RCD-RSF). This way, for example, fixed-position elements can be asynchronously translated to remain fixed to the layout viewport when the latter is async-scrolled.\n\n[1] https://github.com/bokand/bokand.github.io/blob/master/web_viewports_explainer.md\n[2] \"Root content document's root scroll frame\"", "author": "botond@mozilla.com", "id": 12897002, "time": "2017-12-05T00:15:22Z"}, {"text": "Some more detailed notes on this:\n\n* Most of the changes here will be to the class AsyncPanZoomController [1] (\"APZC\" for short), which is the main APZ object for managing scrolling / zooming of a single scroll frame.\n\n* This notion of having two viewports does not apply to all scroll frames, only to the RCD-RSF. In terms of code, that would be the APZC for which mFrameMetrics.mIsRootContent [2] [3] is true.\n\n* The origin of the visual viewport is the value we already store in mFrameMetrics.mScrollOffset [4].\n\n* The size of the visual viewport is the value we already store in mFrameMetrics.mCompositionBounds [5].\n\n* The size of the layout viewport is the value we already store in mFrameMetrics.mViewport [6].\n\n* The origin of the layout viewport is what we don't currently store, but need to.\n\n* Any operation that moves the visual viewport (modifies mScrollOffset) potentially needs to move the layout viewport as well. The general logic is that if the new location of the visual viewport is no longer contained within the layout viewport, the layout viewport should be moved enough that it is contained. (You can see this behaviour in the demo [7]: once you drag the red rectangle (visual viewport) to the edge of the blue rectangle (layout viewport), it starts to drag the blue rectangle along with it.)\n\n[1] https://searchfox.org/mozilla-central/rev/d4b9e50875ad7e5d20f2fee6a53418315f6dfcc0/gfx/layers/apz/src/AsyncPanZoomController.h#147\n[2] https://searchfox.org/mozilla-central/rev/d4b9e50875ad7e5d20f2fee6a53418315f6dfcc0/gfx/layers/apz/src/AsyncPanZoomController.h#871\n[3] https://searchfox.org/mozilla-central/rev/d4b9e50875ad7e5d20f2fee6a53418315f6dfcc0/gfx/layers/FrameMetrics.h#663\n[4] https://searchfox.org/mozilla-central/rev/d4b9e50875ad7e5d20f2fee6a53418315f6dfcc0/gfx/layers/FrameMetrics.h#617\n[5] https://searchfox.org/mozilla-central/rev/d4b9e50875ad7e5d20f2fee6a53418315f6dfcc0/gfx/layers/FrameMetrics.h#544\n[6] https://searchfox.org/mozilla-central/rev/d4b9e50875ad7e5d20f2fee6a53418315f6dfcc0/gfx/layers/FrameMetrics.h#650\n[7] http://bokand.github.io/viewport/index.html", "author": "botond@mozilla.com", "id": 13283195, "time": "2018-05-16T23:43:29Z"}, {"text": "(In reply to Botond Ballo [:botond] from comment #1)\n> * The size of the layout viewport is the value we already store in\n> mFrameMetrics.mViewport [6].\n> \n> * The origin of the layout viewport is what we don't currently store, but\n> need to.\n\nOn second thought, mViewport is a rect, so we can just use its origin (which I believe we currently ignore) to store the layout viewport origin.", "author": "botond@mozilla.com", "id": 13283278, "time": "2018-05-17T00:29:45Z"}, {"text": "As we are working through this, we realized that as part of this change, the RCD-RSF scroll offset stored by the main thread (in the nsIScrollableFrame) will change to be the layout viewport offset for all pages. (Currently, it is the layout viewport offset for overflow:hidden pages, and the visual viewport offset otherwise.)", "author": "botond@mozilla.com", "id": 13375743, "time": "2018-05-30T21:08:23Z"}, {"text": "Created attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nThere are 3 main components to this change:\n\n  a) Store the origin of the layout viewport in APZ (until now we only stored\n     it's size). This required updating the offset stored in mViewport, which\n     was previously (0, 0).\n  b) Adjust the layout viewport in APZ each time the visual viewport exceeds\n     the bounds of the layout viewport.\n  c) Update the main thread to store the layout viewport offset for the\n     RCD-RSF (currently it uses the layout viewport offset for overflow:hidden\n     pages, and the visual viewport offset otherwise).\n\nReview commit: https://reviewboard.mozilla.org/r/250104/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/250104/", "author": "kmadan@mozilla.com", "id": 13394931, "time": "2018-06-07T21:20:08Z"}, {"text": "Created attachment 8984295\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nEnsures that APZ correctly updates the layout viewport offset when the visual\nviewport exceeds the boundaries of the layout viewport.\n\nIncludes changes to APZCPinchTester::GetPinchableFrameMetrics to correct the\noffset of the composition bounds (which should always be (0, 0) for the\nRCD-RSF) and fixes to impacted test cases.\n\nReview commit: https://reviewboard.mozilla.org/r/250106/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/250106/", "author": "kmadan@mozilla.com", "id": 13394932, "time": "2018-06-07T21:20:08Z"}, {"text": "Created attachment 8984296\nBug 1423011 - Part 3: Add mochitests.\n\nReview commit: https://reviewboard.mozilla.org/r/250108/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/250108/", "author": "kmadan@mozilla.com", "id": 13394933, "time": "2018-06-07T21:20:08Z"}, {"text": "Comment on attachment 8984296\nBug 1423011 - Part 3: Add mochitests.\n\nhttps://reviewboard.mozilla.org/r/250108/#review256406\n\nCool stuff!\n\nI'll review these when I get a chance, but in the meantime, please push the patch series to Try so that we can see whether the new tests are passing in automation, and whether the code changes break any existing tests. Thanks!", "author": "botond@mozilla.com", "id": 13395081, "time": "2018-06-07T22:19:04Z"}, {"text": "A few tests (e.g. [1]) are failing because of the removal of the overflow:hidden special case in ScrollFrameTo.\n\nFrom my understanding, this is because the checks are still required for non-root frames. Would it be correct to re-add them but only for non-root frames? Is there any other way?\n\n[1] https://treeherder.mozilla.org/#/jobs?repo=try&revision=a6405b602233a147725c5341b46f25f667b6e764&selectedJob=182414166", "author": "kmadan@mozilla.com", "id": 13396447, "time": "2018-06-08T15:38:27Z"}, {"text": "Comment on attachment 8984296\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250108/diff/1-2/", "author": "kmadan@mozilla.com", "id": 13396740, "time": "2018-06-08T17:28:05Z"}, {"text": "(In reply to Kashav Madan [:kashav] from comment #8)\n> A few tests (e.g. [1]) are failing because of the removal of the\n> overflow:hidden special case in ScrollFrameTo.\n> \n> From my understanding, this is because the checks are still required for\n> non-root frames. Would it be correct to re-add them but only for non-root\n> frames? Is there any other way?\n\nThe checks shouldn't be required for non-root frames, because non-root frames cannot be zoomed, and in the absence of zooming, you shouldn't be able to scroll an overflow:hidden frame in the relevant direction at all (that is, APZ's scrollable rect should be sized in such a way that APZ knows not to generate a scroll offset change in the relevant direction in the first place).\n\nAll that is to say, I don't know why the tests are failing, but the above would be my direction of investigation.", "author": "botond@mozilla.com", "id": 13396842, "time": "2018-06-08T18:00:48Z"}, {"text": "(In reply to Botond Ballo [:botond] [standards meeting June 4-9] from comment #10)\n> (that is, APZ's scrollable rect should be sized in such a way that APZ knows\n> not to generate a scroll offset change in the relevant direction in the\n> first place).\n\nThat should be handled by these checks here:\n\nhttps://searchfox.org/mozilla-central/rev/c621276fbdd9591f52009042d959b9e19b66d49f/layout/base/nsLayoutUtils.cpp#8730", "author": "botond@mozilla.com", "id": 13396853, "time": "2018-06-08T18:04:09Z"}, {"text": "Comment on attachment 8984296\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250108/diff/2-3/", "author": "kmadan@mozilla.com", "id": 13397212, "time": "2018-06-08T21:02:11Z"}, {"text": "(In reply to Botond Ballo [:botond] [standards meeting June 4-9] from comment #10)\n> The checks shouldn't be required for non-root frames, because non-root\n> frames cannot be zoomed, and in the absence of zooming, you shouldn't be\n> able to scroll an overflow:hidden frame in the relevant direction at all\n> (that is, APZ's scrollable rect should be sized in such a way that APZ knows\n> not to generate a scroll offset change in the relevant direction in the\n> first place).\n\nThe tests seem to pass again (locally) when we re-add the removed checks. Investigating why mochitests are timing out on Linux and Android (any ideas?), but will look more into this soon.", "author": "kmadan@mozilla.com", "id": 13397274, "time": "2018-06-08T21:34:04Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nhttps://reviewboard.mozilla.org/r/250104/#review256500\n\nThanks, this generally looks very good! I have a few comments below.\n\nWe'll also need to figure out the remaining test failures in the Try push before landing.\n\n::: gfx/layers/FrameMetrics.h:518\n(Diff revision 1)\n>      return mIsScrollInfoLayer;\n>    }\n>  \n> +  // Determine if the visual viewport is outside of the layout viewport and\n> +  // adjust the x,y-offset in mViewport accordingly. This is necessary to\n> +  // allow APZ to async-scroll the layout viewport.\n\nPlease add:\n\n// This is a no-op if mIsRootContent is false.\n\n::: gfx/layers/FrameMetrics.cpp:20\n(Diff revision 1)\n>  \n>  void\n> +FrameMetrics::RecalculateViewportOffset()\n> +{\n> +  CSSRect cb = CalculateCompositedRectInCssPixels();\n> +  if (!mIsRootContent || mViewport.Contains(cb + mScrollOffset)) {\n\nCouple of comments on this line:\n\n- Check |mIsRootContent| before calling CalculateCompositedRectInCssPixels() (to avoid unnecessary computation).\n- As explained in bug 1467873, the origin of the rect returned by CalculateCompositedRectInCssPixels() is not in the same coordinate space as mScrollOffset, so it does not make sense to add the two together. Instead, the visual viewport rectangle can be computed as CSSRect(mScrollOffset, CalculateCompositedSizeInCSSPixels()). (Feel free to get a GetVisualViewportRect() helper which returns that.)\n\n::: gfx/layers/FrameMetrics.cpp:22\n(Diff revision 1)\n> +FrameMetrics::RecalculateViewportOffset()\n> +{\n> +  CSSRect cb = CalculateCompositedRectInCssPixels();\n> +  if (!mIsRootContent || mViewport.Contains(cb + mScrollOffset)) {\n> +    return;\n> +  }\n\nLet's MOZ_ASSERT that the visual viewport is no larger than the layout viewport in either dimension.\n\n::: gfx/layers/FrameMetrics.cpp:25\n(Diff revision 1)\n> +  if (!mIsRootContent || mViewport.Contains(cb + mScrollOffset)) {\n> +    return;\n> +  }\n> +  if (mScrollOffset.X() < mViewport.X()) {\n> +    mViewport.MoveToX(mScrollOffset.X());\n> +  } else if (mScrollOffset.X() + cb.Width() > mViewport.XMost()) {\n\nIf you store the visual viewport rect in a variable, you can use |visualViewport.XMost()| in place of |mScrollOffset.X() + cb.Width()|.\n\n::: gfx/layers/FrameMetrics.cpp:30\n(Diff revision 1)\n> +  } else if (mScrollOffset.X() + cb.Width() > mViewport.XMost()) {\n> +    mViewport.MoveByX(mScrollOffset.X() + cb.Width() - mViewport.XMost());\n> +  }\n> +  if (mScrollOffset.Y() < mViewport.Y()) {\n> +    mViewport.MoveToY(mScrollOffset.Y());\n> +  } else if (mScrollOffset.Y() + cb.Height() > mViewport.YMost()) {\n\nSimilarly, you could use visualViewport.YMost() here.\n\n::: gfx/layers/apz/src/AsyncPanZoomController.h:669\n(Diff revision 1)\n>     * new one can properly take effect.\n>     */\n>    nsEventStatus OnCancelTap(const TapGestureInput& aEvent);\n>  \n>    /**\n> +   * Scroll the scroll frame to an X,Y offset and recalculate the viewport\n\nI would add a single comment like this at the top of this group of methods:\n\n/**\n * The following five methods modify the scroll offset.\n * For the APZC representing the RCD-RSF, they also recalculate\n * the offset of the layout viewport.\n */\n\nThen, the comments above the individual methods do not need to mention the recalculation.\n\n::: gfx/layers/apz/src/AsyncPanZoomController.h:676\n(Diff revision 1)\n> +   */\n> +  void SetScrollOffset(const CSSPoint& aOffset);\n> +\n> +  /**\n> +   * Scroll the scroll frame to an X,Y offset, clamping the resulting scroll\n> +   * offset to the scrollable rect and recalculate the viewport offset.\n\nThe scroll offset is clamped to the \"scroll range\", not the scrollable rect. The scroll range is the scrollable rect minus the visual viewport size.\n\nFor example, if the scrollable rect is (0,0,400,400), and the visual viewport size is (100,100), the scroll range is (0,0,300,300), and this is what the scroll offset is clamped to. (Since, if the scroll offset is at (300,300), you're alredy scrolled to the bottom-right corner of the page).\n\n::: layout/base/nsLayoutUtils.cpp:9125\n(Diff revision 1)\n>    if (scrollableFrame) {\n>      nsPoint scrollPosition = scrollableFrame->GetScrollPosition();\n>      metrics.SetScrollOffset(CSSPoint::FromAppUnits(scrollPosition));\n>  \n> +    CSSRect viewport = metrics.GetViewport();\n> +    viewport.MoveTo(CSSPoint::FromAppUnits(scrollPosition));\n\nCSSPoint::FromAppUnits(scrollPosition) was just computed two lines above. Let's factor it out into a variable.", "author": "botond@mozilla.com", "id": 13402955, "time": "2018-06-12T23:56:26Z"}, {"text": "I'd also like for Kats to have a look at the changes to APZCCallbackHelper, which I'm somewhat uncertain about.", "author": "botond@mozilla.com", "id": 13402960, "time": "2018-06-12T23:58:59Z"}, {"text": "(In reply to Botond Ballo [:botond] from comment #15)\n> I'd also like for Kats to have a look at the changes to APZCCallbackHelper,\n> which I'm somewhat uncertain about.\n\n(The reason I'm uncertain about it is that we've previously modified this code to shift the displayport in the !scrollUpdated case in bug 978248, but that caused a regression and we had to revert it in bug 1010119. But that was 4 years ago, the affected scenario was on B2G, and the code has changed a lot since then, and performing the shift is now necessary for correctness...)", "author": "botond@mozilla.com", "id": 13402965, "time": "2018-06-13T00:06:34Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nhttps://reviewboard.mozilla.org/r/250104/#review257050\n\n::: gfx/layers/apz/util/APZCCallbackHelper.cpp\n(Diff revision 1)\n> -  if (aFrame->GetScrollbarStyles().mVertical == NS_STYLE_OVERFLOW_HIDDEN) {\n> -    targetScrollPosition.y = geckoScrollPosition.y;\n> -  }\n> -  if (aFrame->GetScrollbarStyles().mHorizontal == NS_STYLE_OVERFLOW_HIDDEN) {\n> -    targetScrollPosition.x = geckoScrollPosition.x;\n> -  }\n\nIf my understanding of this patch is correct, then I agree that removing this code is the right thing to do. If this is the root content and overflow:hidden, then the targetScrollPosition (which is now the layout viewport topleft) should be the same as geckoScrollPosition, because APZ should not allow scrolling in such a way that moves the layout viewport. And if this is overflow:hidden but NOT the root content, then the code at [1] should have set the scrollable rect to a size that prevents APZ from scrolling it at all.\n\nHowever, it would be good add assertions to this effect here, so that we can scenarios where our understanding/assumptions are wrong. So I would keep the if conditions as-is, but replace the assignment inside the condition with a MOZ_ASSERT(targetScrollPosition.y == geckoScrollPosition.y); and equivalent for .x. And update the comment to reflect what I said above as to why these assertions should hold.\n\n[1] https://searchfox.org/mozilla-central/rev/d544b118e26422877108c42723b26e9bb4539721/layout/base/nsLayoutUtils.cpp#8730-8740\n\n::: gfx/layers/apz/util/APZCCallbackHelper.cpp:154\n(Diff revision 1)\n> +    // APZ uses the visual viewport's offset to calculate where to place the\n> +    // display port, so the display port is misplaced when a pinch zoom occurs.\n\nIt's not clear to me under what scenario we'd enter this codepath to begin with. We would need to be in a case where scrollUpdated==false on the root content. For scrollUpdated to be false, one of the following three conditions need to have been true in ScrollFrameTo:\n1) !aFrame - this is unlikely for the root content\n2) !aMetrics.GetScrollOffsetUpdated() - this is unlikely after a pinch zoom, because the repaint triggered by a pinch zoom will be marked as triggered by a user action\n3) scrollInProgress - while this is certainly possible it should also be rare. It would mean something triggered a main thread scroll concurrently with the user pinch zooming.\n\nSo while these situations could occur, I don't think they are exercised by any of our existing tests and it seems unlikely that you might have run into any of them during testing. So I suspect something else is going on here that I don't fully understand and that prompted you to add this code. Can you describe the scenario in which this codepath gets hit, and specifically let me know which of the above three conditions is getting hit? Understanding that will help me think about what the correct behaviour is in this codepath (and it may very well be that you have it right, I'm just not sure)", "author": "bugmail@mozilla.staktrace.com", "id": 13403397, "time": "2018-06-13T13:00:17Z"}, {"text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #17)\n> If my understanding of this patch is correct, then I agree that removing\n> this code is the right thing to do. If this is the root content and\n> overflow:hidden, then the targetScrollPosition (which is now the layout\n> viewport topleft) should be the same as geckoScrollPosition, because APZ\n> should not allow scrolling in such a way that moves the layout viewport. And\n> if this is overflow:hidden but NOT the root content, then the code at [1]\n> should have set the scrollable rect to a size that prevents APZ from\n> scrolling it at all.\n\nYup, exactly.\n\n> However, it would be good add assertions to this effect here, so that we can\n> scenarios where our understanding/assumptions are wrong. So I would keep the\n> if conditions as-is, but replace the assignment inside the condition with a\n> MOZ_ASSERT(targetScrollPosition.y == geckoScrollPosition.y); and equivalent\n> for .x. And update the comment to reflect what I said above as to why these\n> assertions should hold.\n\nGood idea!\n\n> ::: gfx/layers/apz/util/APZCCallbackHelper.cpp:154\n> (Diff revision 1)\n> > +    // APZ uses the visual viewport's offset to calculate where to place the\n> > +    // display port, so the display port is misplaced when a pinch zoom occurs.\n> \n> It's not clear to me under what scenario we'd enter this codepath to begin\n> with. We would need to be in a case where scrollUpdated==false on the root\n> content. For scrollUpdated to be false, one of the following three\n> conditions need to have been true in ScrollFrameTo:\n> 1) !aFrame - this is unlikely for the root content\n> 2) !aMetrics.GetScrollOffsetUpdated() - this is unlikely after a pinch zoom,\n> because the repaint triggered by a pinch zoom will be marked as triggered by\n> a user action\n> 3) scrollInProgress - while this is certainly possible it should also be\n> rare. It would mean something triggered a main thread scroll concurrently\n> with the user pinch zooming.\n> \n> So while these situations could occur, I don't think they are exercised by\n> any of our existing tests and it seems unlikely that you might have run into\n> any of them during testing. So I suspect something else is going on here\n> that I don't fully understand and that prompted you to add this code. Can\n> you describe the scenario in which this codepath gets hit, and specifically\n> let me know which of the above three conditions is getting hit?\n> Understanding that will help me think about what the correct behaviour is in\n> this codepath (and it may very well be that you have it right, I'm just not\n> sure)\n\nWe definitely ran into this during testing, on a regular basis.\n\nYou're right that most repaints requests occur with aUserAction=true, including the one triggered by the end of pinch-zoom, but it's sufficient for one repaint to happen with aUserAction=false (and then to not get any other repaint with aUserAction=true right after) to mess up our displayport.\n\nThe repaint request with aUserAction=false was coming from NotifyLayersUpdated, though I don't remember which codepath was causing needContentRepaint to be set to true. Kashav, do you remember, or could you check?", "author": "botond@mozilla.com", "id": 13403780, "time": "2018-06-13T17:27:02Z"}, {"text": "(In reply to Botond Ballo [:botond] from comment #18)\n> The repaint request with aUserAction=false was coming from\n> NotifyLayersUpdated, though I don't remember which codepath was causing\n> needContentRepaint to be set to true. Kashav, do you remember, or could you\n> check?\n\nNo need. I can believe that NotifyLayersUpdated would send random repaint requests with aUserAction=false, it does that sort of thing quite often.\n\nIn that case, I can't think of any specific problem this would cause, but I'd feel more comfortable if we updated the \"  } else if (aMetrics.IsRootContent()) {\" condition to also have \" && aMetrics.GetScrollOffset() != aMetrics.GetViewport().TopLeft()\" to capture the fact that we need to do this when the async scroll offset has diverged from the layout viewport. This should limit any fallout from the change and make it a little more self-documenting.", "author": "bugmail@mozilla.staktrace.com", "id": 13403963, "time": "2018-06-13T18:34:04Z"}, {"text": "Comment on attachment 8984295\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250106/diff/1-2/", "author": "kmadan@mozilla.com", "id": 13404721, "time": "2018-06-14T04:50:11Z"}, {"text": "Created attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nEnsures that APZ correctly updates the layout viewport offset when the visual\nviewport exceeds the boundaries of the layout viewport.\n\nIncludes changes to APZCPinchTester::GetPinchableFrameMetrics to correct the\noffset of the composition bounds (which should always be (0, 0) for the\nRCD-RSF) and fixes to impacted test cases.\n\nReview commit: https://reviewboard.mozilla.org/r/250930/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/250930/", "author": "kmadan@mozilla.com", "id": 13404731, "time": "2018-06-14T05:10:58Z"}, {"text": "Created attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview commit: https://reviewboard.mozilla.org/r/250932/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/250932/", "author": "kmadan@mozilla.com", "id": 13404732, "time": "2018-06-14T05:10:58Z"}, {"text": "Comment on attachment 8984295\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250106/diff/2-3/", "author": "kmadan@mozilla.com", "id": 13404733, "time": "2018-06-14T05:10:58Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250104/diff/1-2/", "author": "kmadan@mozilla.com", "id": 13404744, "time": "2018-06-14T05:41:40Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250930/diff/1-2/", "author": "kmadan@mozilla.com", "id": 13404745, "time": "2018-06-14T05:41:40Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/1-2/", "author": "kmadan@mozilla.com", "id": 13404746, "time": "2018-06-14T05:41:40Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250104/diff/2-3/", "author": "kmadan@mozilla.com", "id": 13405482, "time": "2018-06-14T17:29:45Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250930/diff/2-3/", "author": "kmadan@mozilla.com", "id": 13405483, "time": "2018-06-14T17:29:45Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/2-3/", "author": "kmadan@mozilla.com", "id": 13405484, "time": "2018-06-14T17:29:45Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nhttps://reviewboard.mozilla.org/r/250104/#review257278\n\nThe changes look good, thanks! Just a couple of minor comments.\n\n::: gfx/layers/FrameMetrics.h:471\n(Diff revisions 1 - 3)\n>    const CSSRect& GetViewport() const\n>    {\n>      return mViewport;\n>    }\n>  \n> +  const CSSRect GetVisualViewport() const\n\nIf you're returning something by value, there's no point in making the return type |const|.\n\n::: gfx/layers/FrameMetrics.cpp:19\n(Diff revisions 1 - 3)\n>  const FrameMetrics::ViewID FrameMetrics::NULL_SCROLL_ID = 0;\n>  \n>  void\n>  FrameMetrics::RecalculateViewportOffset()\n>  {\n> -  CSSRect cb = CalculateCompositedRectInCssPixels();\n> +  CSSRect visualViewport;\n\nDeclare this below where it's initalized\n\n::: gfx/layers/FrameMetrics.cpp:25\n(Diff revisions 1 - 3)\n> -  if (!mIsRootContent || mViewport.Contains(cb + mScrollOffset)) {\n> +  if (!mIsRootContent) {\n>      return;\n>    }\n> -  if (mScrollOffset.X() < mViewport.X()) {\n> -    mViewport.MoveToX(mScrollOffset.X());\n> -  } else if (mScrollOffset.X() + cb.Width() > mViewport.XMost()) {\n> +  visualViewport = GetVisualViewport();\n> +  if (mViewport.Contains(visualViewport) ||\n> +      mViewport.Height() < visualViewport.Height() ||\n\nPlease add a comment explaining why the second and third conditions are necessary: because when the composition bounds changes (due to e.g. a device orientation change or a browser window resize), it can take a few frames for mViewport to be updated, and durign that time the visual viewport could be larger.", "author": "botond@mozilla.com", "id": 13405570, "time": "2018-06-14T18:02:44Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nhttps://reviewboard.mozilla.org/r/250930/#review257290\n\nLooks good, thanks! One minor comment:\n\n::: gfx/layers/apz/test/gtest/TestPinching.cpp:22\n(Diff revision 3)\n>  \n>  protected:\n>    FrameMetrics GetPinchableFrameMetrics()\n>    {\n>      FrameMetrics fm;\n> -    fm.SetCompositionBounds(ParentLayerRect(200, 200, 100, 200));\n> +    // Offset in composition bounds must be (0, 0) for the RCD-RSF.\n\nNow that we're no longer adding the scroll offset to the composition bounds origin in RecalculateViewportOffset(), this is not a  requirement any more.\n\nWe can keep the numerical change (as it reflects reality better, since we only allow zooming the RCD-RSF and its offset usually is (0,0)), but let's remove the comment because the \"must be\" is misleading.", "author": "botond@mozilla.com", "id": 13405831, "time": "2018-06-14T20:38:58Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nhttps://reviewboard.mozilla.org/r/250932/#review257336\n\n::: gfx/layers/apz/test/mochitest/helper_pinched_pan.html:40\n(Diff revision 3)\n> +      var target = document.getElementById('content');\n> +      var scrollbar = getScrollbarSize();\n> +\n> +      // Pan horizontally to exceed the right boundary by 50 pixels.\n> +      yield synthesizeNativeTouchDrag(target, 0, 0,\n> +          -(layout.width - scrollbar.width + TOUCH_SLOP + 50), 0, testDriver);\n\nAs discussed, this calculation happens to be correct when the resolution is 2, but it would be better to express it in a more general way where the resolution is a parameter to the calculation, and the calculation is correct with any resolution value.\n\nI *suspect* (but I'm not sure) that if we do this, we'll no longer need the scrollbar size.\n\n::: gfx/layers/apz/test/mochitest/helper_pinched_pan.html:42\n(Diff revision 3)\n> +\n> +      // Pan horizontally to exceed the right boundary by 50 pixels.\n> +      yield synthesizeNativeTouchDrag(target, 0, 0,\n> +          -(layout.width - scrollbar.width + TOUCH_SLOP + 50), 0, testDriver);\n> +      yield flushApzRepaints(testDriver);\n> +      is(window.scrollX, 25, \"main thread offset-x changed\");\n\nLikewise, let's express the 25 as '50 / resolution'.\n\n::: gfx/layers/apz/test/mochitest/test_group_touchevents.html:41\n(Diff revision 3)\n>  \n>  var isWindows = (getPlatform() == \"windows\");\n>  touch_action_prefs.push([\"apz.test.fails_with_native_injection\", isWindows]);\n>  \n> +var pan_action_prefs = basic_pan_prefs.slice();\n> +pan_action_prefs.push([\"apz.allow_zooming\", true], [\"dom.meta-viewport.enabled\", true])\n\nThese prefs have to do with zooming, not panning, so I would call them zoom_prefs.\n\n(Also drop the word \"action\". In touch_action_prefs, it refers to the CSS touch-action property.)\n\n::: gfx/layers/apz/test/mochitest/test_group_touchevents.html:93\n(Diff revision 3)\n>    {'file': 'helper_touch_action_complex.html', 'prefs': touch_action_prefs},\n>    // Tests that touch-action CSS properties are handled in APZ without waiting\n>    // on the main-thread, when possible\n>    {'file': 'helper_touch_action_regions.html', 'prefs': touch_action_prefs},\n> +\n> +  // Tests that pan while we're pinched in and check that the main thread\n\n\"pinched in\" -> \"zoomed in\" (or \"pinch-zoomed in\")\n\n::: gfx/layers/apz/test/mochitest/test_group_touchevents.html:95\n(Diff revision 3)\n>    // on the main-thread, when possible\n>    {'file': 'helper_touch_action_regions.html', 'prefs': touch_action_prefs},\n> +\n> +  // Tests that pan while we're pinched in and check that the main thread\n> +  // receives layout viewport changes from APZ.\n> +  {'file': 'helper_pinched_pan.html', 'prefs': pan_action_prefs},\n\nI would call this helper_zoomed_pan.html, as we're not actually doing the pinching in the test.", "author": "botond@mozilla.com", "id": 13405907, "time": "2018-06-14T21:22:16Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250104/diff/3-4/", "author": "kmadan@mozilla.com", "id": 13406385, "time": "2018-06-15T04:56:19Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250930/diff/3-4/", "author": "kmadan@mozilla.com", "id": 13406386, "time": "2018-06-15T04:56:19Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/3-4/", "author": "kmadan@mozilla.com", "id": 13406387, "time": "2018-06-15T04:56:19Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/4-5/", "author": "kmadan@mozilla.com", "id": 13406401, "time": "2018-06-15T05:27:22Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nhttps://reviewboard.mozilla.org/r/250932/#review257452\n\n::: gfx/layers/apz/test/mochitest/test_group_touchevents.html:34\n(Diff revisions 3 - 5)\n>    // position is synced back to the main thread. So we disable displayport\n>    // expiry for these tests.\n>    [\"apz.displayport_expiry_ms\", 0],\n>  ];\n>  \n> -var touch_action_prefs = basic_pan_prefs.slice(); // make a copy\n> +var touch_prefs = basic_pan_prefs.slice(); // make a copy\n\nSorry, I think I was unclear before: I was explaining what the \"action\" in \"touch_action\" meant, and why it shouldn't be in the name of our new variable. We should leave the name of \"touch_action_prefs\" itself alone.\n\nApologies for the confusion.\n\n::: gfx/layers/apz/test/mochitest/helper_zoomed_pan.html:33\n(Diff revision 5)\n> +    utils.setResolutionAndScaleTo(RESOLUTION);\n> +\n> +    function getVisualBounds(resolution) {\n> +      var prevResolution = {value: 1};\n> +      utils.getResolution(prevResolution);\n> +      utils.setResolutionAndScaleTo(resolution);\n\nI'm concerned that changing the resolution back and forth (and particularly doing so inside test(), which is called after waitUntilApzStable()) is going to introduce intermittent issues.\n\nI would rather getVisualBounds() not touch the resolution, and we call it at the top, before and after setting the resolution, respectively.\n\n::: gfx/layers/apz/test/mochitest/helper_zoomed_pan.html:35\n(Diff revision 5)\n> +    function getVisualBounds(resolution) {\n> +      var prevResolution = {value: 1};\n> +      utils.getResolution(prevResolution);\n> +      utils.setResolutionAndScaleTo(resolution);\n> +      var bounds = {\n> +        h: document.documentElement.clientHeight,\n\nLet's avoid one-letter variable names and call the fields 'height' and 'width'.\n\n::: gfx/layers/apz/test/mochitest/helper_zoomed_pan.html:46\n(Diff revision 5)\n> +\n> +    function computeDelta(layout, visual) {\n> +      // Compute the distance from the right / bottom edge of the visual\n> +      // viewport to the same edge of the layout viewport and add the desired\n> +      // offset to that.\n> +      return (layout * RESOLUTION) - visual + OFFSET_SCREEN_PX + TOUCH_SLOP;\n\nMakes sense now, thanks!\n\n::: gfx/layers/apz/test/mochitest/helper_zoomed_pan.html:62\n(Diff revision 5)\n> +                                      -computeDelta(unit.w, curr.w),\n> +                                      0,\n> +                                      testDriver);\n> +      yield flushApzRepaints(testDriver);\n> +      is(window.scrollX, OFFSET_CSS_PX, \"x-offset was adjusted\");\n> +      is(window.scrollY, 0, \"y-offset was not effected\");\n\neffected -> affected\n\n::: gfx/layers/apz/test/mochitest/helper_zoomed_pan.html:71\n(Diff revision 5)\n> +                                      0,\n> +                                      0,\n> +                                      -computeDelta(unit.h, curr.h),\n> +                                      testDriver);\n> +      yield flushApzRepaints(testDriver);\n> +      is(window.scrollX, OFFSET_CSS_PX, \"x-offset was not effected\");\n\nlikewise", "author": "botond@mozilla.com", "id": 13406434, "time": "2018-06-15T06:28:46Z"}, {"text": "One more thing: since Tanushree has contributed to these patches as well, please reflect that by including her in the commit author field.\n\nIf you have changeset evolution enabled, you can edit an author field like this:\n\nhg up <commit>\nhg commit --amend --user \"Kashav Madan <kmadan@mozilla.com>, Tanushree Podder <tpodder@mozilla.com>\"\nhg evolve --all", "author": "botond@mozilla.com", "id": 13406447, "time": "2018-06-15T06:56:08Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250104/diff/4-5/", "author": "kmadan@mozilla.com", "id": 13406805, "time": "2018-06-15T14:58:27Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250930/diff/4-5/", "author": "kmadan@mozilla.com", "id": 13406806, "time": "2018-06-15T14:58:27Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/5-6/", "author": "kmadan@mozilla.com", "id": 13406807, "time": "2018-06-15T14:58:27Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250104/diff/5-6/", "author": "kmadan@mozilla.com", "id": 13406949, "time": "2018-06-15T16:18:47Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250930/diff/5-6/", "author": "kmadan@mozilla.com", "id": 13406950, "time": "2018-06-15T16:18:47Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/6-7/", "author": "kmadan@mozilla.com", "id": 13406951, "time": "2018-06-15T16:18:47Z"}, {"text": "Comment on attachment 8985307\nBug 1423011 - Part 2: Add gtests.\n\nhttps://reviewboard.mozilla.org/r/250930/#review257514", "author": "botond@mozilla.com", "id": 13407081, "time": "2018-06-15T17:16:37Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nhttps://reviewboard.mozilla.org/r/250932/#review257516\n\n::: gfx/layers/apz/test/mochitest/helper_zoomed_pan.html:52\n(Diff revisions 5 - 7)\n>        return (layout * RESOLUTION) - visual + OFFSET_SCREEN_PX + TOUCH_SLOP;\n>      }\n>  \n>      function* test(testDriver) {\n> +      console.log(unit);\n> +      console.log(zoom);\n\nI don't think console.log() goes to any log you can access in a mochitest. I usually use |dump(\"string\\n\");| to print something to the log from a mochitest (I believe that's a facility provided by the mochitest harness).\n\nIn any case, I assume you intend to remove any logging statements before landing.", "author": "botond@mozilla.com", "id": 13407084, "time": "2018-06-15T17:18:44Z"}, {"text": "Comment on attachment 8984294\nBug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport.\n\nhttps://reviewboard.mozilla.org/r/250104/#review257518\n\nThanks, this looks good now. I'll hold off on giving r+ until the overflow:hidden test failure is resolved (as the fix will probably require changes to this patch).", "author": "botond@mozilla.com", "id": 13407090, "time": "2018-06-15T17:20:20Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/7-8/", "author": "kmadan@mozilla.com", "id": 13407336, "time": "2018-06-15T19:21:35Z"}, {"text": "(In reply to Botond Ballo [:botond] from comment #46)\n> I don't think console.log() goes to any log you can access in a mochitest. I\n> usually use |dump(\"string\\n\");| to print something to the log from a\n> mochitest (I believe that's a facility provided by the mochitest harness).\n> \n> In any case, I assume you intend to remove any logging statements before\n> landing.\n\nYeah, forgot to remove them, updated.\n\nFor clarification, console.log output is viewable in the browser window, by removing the |subtestDone| call, so that the test window doesn't close automatically.", "author": "kmadan@mozilla.com", "id": 13407339, "time": "2018-06-15T19:26:12Z"}, {"text": "(In reply to Kashav Madan [:kashav] from comment #49)\n> For clarification, console.log output is viewable in the browser window, by\n> removing the |subtestDone| call, so that the test window doesn't close\n> automatically.\n\nAh, for local runs on desktop. Makes sense!", "author": "botond@mozilla.com", "id": 13407360, "time": "2018-06-15T19:51:58Z"}, {"text": "Comment on attachment 8985308\nBug 1423011 - Part 3: Add mochitests.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/250932/diff/8-9/", "author": "kmadan@mozilla.com", "id": 13407748, "time": "2018-06-15T23:58:58Z"}], "id": 1423011, "priority": "P3", "cc": ["bugmail@mozilla.staktrace.com", "kmadan@mozilla.com", "mstange@themasta.com", "tnikkel@gmail.com", "tpodder@mozilla.com"], "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [656036, 1336544, 1465616], "qa_contact": "", "creation_time": "2017-12-05T00:15:22Z", "cf_status_firefox_esr52": "---", "component": "Panning and Zooming", "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "botond@mozilla.com", "id": 474533, "name": "botond@mozilla.com", "real_name": "Botond Ballo [:botond]"}, "whiteboard": "[gfx-noted]", "mentors": [], "summary": "Allow APZ to async-scroll the layout viewport", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-15T23:58:58Z", "assigned_to": "nobody@mozilla.org", "is_open": true, "history": [{"changes": [{"removed": "", "field_name": "blocks", "added": "1336544"}], "who": "botond@mozilla.com", "when": "2017-12-05T00:17:07Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}, {"removed": "", "field_name": "whiteboard", "added": "[gfx-noted]"}], "who": "bugmail@mozilla.staktrace.com", "when": "2017-12-07T16:39:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tpodder@mozilla.com"}], "who": "botond@mozilla.com", "when": "2018-05-16T23:43:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kmadan@mozilla.com"}], "who": "botond@mozilla.com", "when": "2018-05-25T16:44:42Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1465616"}], "who": "botond@mozilla.com", "when": "2018-05-30T21:09:32Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1466611"}], "who": "kmadan@mozilla.com", "when": "2018-06-04T17:00:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8984294, "added": "review?(botond@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8984295, "added": "review?(botond@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8984296, "added": "review?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-07T21:20:08Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-08T15:38:27Z"}, {"changes": [{"removed": "needinfo?(botond@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-08T18:00:48Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1467873"}], "who": "botond@mozilla.com", "when": "2018-06-08T19:26:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8984294, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-12T23:56:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8984294, "added": "review?(bugmail@mozilla.staktrace.com)"}], "who": "botond@mozilla.com", "when": "2018-06-12T23:59:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugmail@mozilla.staktrace.com)", "attachment_id": 8984294, "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2018-06-13T13:00:17Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kmadan@mozilla.com)"}], "who": "botond@mozilla.com", "when": "2018-06-13T17:27:02Z"}, {"changes": [{"removed": "needinfo?(kmadan@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2018-06-13T18:34:04Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Bug 1423011 - Part 2: Add gtests.", "attachment_id": 8984295, "added": "Bug 1423011 - Part 1: Allow APZ to async-scroll the layout viewport."}], "who": "kmadan@mozilla.com", "when": "2018-06-14T04:50:11Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8984296, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8984296, "added": ""}], "who": "kmadan@mozilla.com", "when": "2018-06-14T04:50:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8985307, "added": "review?(botond@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8985308, "added": "review?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-14T05:10:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8984294, "added": "review?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-14T05:41:40Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8984295, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8984295, "added": ""}], "who": "kmadan@mozilla.com", "when": "2018-06-14T05:41:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8984294, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-14T18:02:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8985307, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-14T20:38:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8985308, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-14T21:22:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8984294, "added": "review?(botond@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8985307, "added": "review?(botond@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8985308, "added": "review?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-15T04:56:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8985308, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-15T06:28:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8985308, "added": "review?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-15T14:58:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8985307, "added": "review+"}], "who": "botond@mozilla.com", "when": "2018-06-15T17:16:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8985308, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-15T17:18:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(botond@mozilla.com)", "attachment_id": 8984294, "added": ""}], "who": "botond@mozilla.com", "when": "2018-06-15T17:20:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8985308, "added": "review?(botond@mozilla.com)"}], "who": "kmadan@mozilla.com", "when": "2018-06-15T19:21:35Z"}], "resolution": "", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}