{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-04T02:00:32Z", "type_id": 4, "creation_date": "2016-08-02T01:03:42Z", "id": 1432292, "setter": "dholbert@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2016-08-02T14:34:05Z", "type_id": 4, "creation_date": "2016-08-02T01:03:42Z", "id": 1432293, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8776773}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-02T16:06:17Z", "type_id": 4, "creation_date": "2016-08-02T01:06:29Z", "id": 1432294, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8776774}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-04T21:30:24Z", "type_id": 4, "creation_date": "2016-08-02T01:13:32Z", "id": 1432296, "setter": "dholbert@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2016-08-03T12:36:08Z", "type_id": 4, "creation_date": "2016-08-02T01:13:32Z", "id": 1432297, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8776776}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-02T16:14:38Z", "type_id": 4, "creation_date": "2016-08-02T01:14:25Z", "id": 1432298, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8776777}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-02T16:16:11Z", "type_id": 4, "creation_date": "2016-08-02T01:15:23Z", "id": 1432299, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8776778}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-05T17:22:01Z", "type_id": 4, "creation_date": "2016-08-02T01:29:27Z", "id": 1432303, "setter": "dholbert@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2016-08-03T16:15:58Z", "type_id": 4, "creation_date": "2016-08-02T01:29:27Z", "id": 1432304, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8776781}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8776782}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-05T17:35:28Z", "type_id": 4, "creation_date": "2016-08-02T21:17:38Z", "id": 1432820, "setter": "dholbert@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2016-08-03T16:29:47Z", "type_id": 4, "creation_date": "2016-08-02T21:17:38Z", "id": 1432821, "setter": "edwin.bugs@flores.geek.nz"}], "content_type": "text/plain", "id": 8777090}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778487}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778488}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778489}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778490}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778491}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778492}, {"creator": "seth.bugzilla@blackhail.net", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8778493}], "classification": "Components", "creator": "seth.bugzilla@blackhail.net", "cc": ["dholbert@mozilla.com", "edwin.bugs@flores.geek.nz"], "depends_on": [1291033, 1291054, 1291059, 1292505], "creation_time": "2016-08-01T22:14:34Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Add an ISurfaceProvider for single-frame images that also serves as an IDecodingTask", "id": 1291045, "cf_status_firefox51": "fixed", "assigned_to_detail": {"email": "seth.bugzilla@blackhail.net", "id": 452036, "name": "seth.bugzilla@blackhail.net", "real_name": "Seth Fowler [:seth] [:s2h]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "seth.bugzilla@blackhail.net", "comment_count": 30, "comments": [{"text": "For streaming playback of animated images (bug streaming-gif) we need to have an animated image ISurfaceProvider that is also an IDecodingTask. (Perhaps obviously, since streaming playback means that we may need to do some decoding to provide the surface.)\n\nBefore we do that, we should make the same change for single-frame images. Here's why:\n\n- There's *lots* of code simplification that we can do if we make both single-frame and animated images behave this way.\n\n- Perhaps really a restating of the above: The SurfaceCache and Decoder code will be a lot easier to understand if we aren't trying to support two different ways of doing things. This will make the life of future maintainers much easier.\n\n- This change will let us fix some long-standing issues which have been very hard to fix with the existing paradigm. In particular, this will make it much easier to avoid displaying almost-but-not-completely-decoded images because of races between painting and the decoders, which hurts performance since we do the work of painting the images and have to repaint them later. It'll also make it possible to cancel image decoders when the surface they're decoding into gets discarded, which is another thing we've wanted for a long time.\n\n- Pragmatically, single-frame images are used more often and we have much more robust test coverage for them. Keeping single-frame images and animated images behaving a similarly as possible means higher code quality for animated images.\n\n- This change is probably the trickiest of the remaining changes needed to implement streaming decoding of animated images, so it makes sense to make it first with single-frame images, which are inherently simpler.", "author": "seth.bugzilla@blackhail.net", "id": 11590437, "time": "2016-08-01T22:14:34Z"}, {"text": "Created attachment 8776773\n(Part 1) - Use a different IDecodingTask for animated images.\n\nAlright, here we go. This patch series is going to be a bear, but these changes\nwill be worth it in the long term. (We won't see the biggest benefits until we\nland the corresponding change for animated images, unfortunately.)\n\nThis part pretty straightforwardly splits DecodingTask in two, so that there is\na version for single-frame images and a version for animated images. This will\nallow them to evolve independently from here on out.", "author": "seth.bugzilla@blackhail.net", "id": 11590733, "time": "2016-08-02T01:03:42Z"}, {"text": "Created attachment 8776774\n(Part 2) - Pass the image into NotifyProgress() and NotifyDecodeComplete() explicitly.\n\nRather than getting the image implicitly from the decoder, let's start passing\nit into NotifyProgress() and NotifyDecodeComplete() explicitly. This will let us\nstore the image on the IDecodingTask directly and let the IDecodingTask be\nresponsible for its lifetime. This is both part of a general trend of reducing\nthe number of things that Decoder objects manage (so they can focus on decoding,\nand IDecodingTask can focus on orchestrating interactions between the decoders\nand other parts of the system) and will enable us to get the lifetimes right\nlater on when we construct a new IDecodingTask that is also an ISurfaceProvider.", "author": "seth.bugzilla@blackhail.net", "id": 11590735, "time": "2016-08-02T01:06:29Z"}, {"text": "Created attachment 8776776\n(Part 3) - Handle interactions with the SurfaceCache in DecodingTask.\n\nThis patch is a little bit gross but it moves us into the direction we want to\ngo. Things will look nicer later on in the patch series, don't worry. =) This\nisn't the final state.\n\nThe idea here is that DecodingTask takes responsibility for inserting the\nsurfaces generated by the decoder into the SurfaceCache. There are two things\nworth noting here:\n\n- At this point in the patch series, this means that DecodingTask has to\n  somewhat awkwardly reproduce the error handling that Decoder would've done\n  internally when inserting the surfaces into the SurfaceCache. Later in the\n  patch series, that won't be an issue.\n\n- This changes *when* a placeholder cache entry is replaced with an available\n  cache entry. Now we'll only insert into the surface cache after the decoder\n  has yielded (which, for single-frame images, means after it had to block\n  because not all the data had arrived from the network yet) or after decoding\n  is complete. We used to insert into the surface cache as soon as we allocated\n  the frame. This has the good effect that we'll refuse to paint an image that's\n  just about to be decoded, only to have to repaint it on the very next refresh\n  driver tick; we've wanted to fix that for a while. The tradeoff is that\n  certain race conditions involving sync decoding might cause us to decide to\n  start a second decoder more often, but in real web browsing sync decoding is\n  very rare and race conditions involving it are even rarer, while the double\n  paint issue is quite common.", "author": "seth.bugzilla@blackhail.net", "id": 11590741, "time": "2016-08-02T01:13:32Z"}, {"text": "Created attachment 8776777\n(Part 4) - Remove IDecodingTask::GetDecoder().\n\nWe've fixed all the callers, so we don't need this method anymore. That's good\nnews, because the new IDecodingTask we're about to implement won't be able to\nimplement this method. (That's because it'll drop its reference to its decoder\nbefore its lifetime is over.)", "author": "seth.bugzilla@blackhail.net", "id": 11590742, "time": "2016-08-02T01:14:25Z"}, {"text": "Created attachment 8776778\n(Part 5) - Expose the IDecodingTask notification helpers for use in other files.\n\nIt'll be a lot saner to implement the new, more complicated\nIDecodingTask/ISurfaceProvider subclasses in separate files, so let's expose the\nnotification methods as static methods to make them available to subclasses that\naren't defined in the same translation unit.", "author": "seth.bugzilla@blackhail.net", "id": 11590745, "time": "2016-08-02T01:15:23Z"}, {"text": "Created attachment 8776781\n(Part 6) - Add DecodedSurfaceProvider to handle both decoding and surface ownership for single-frame images.\n\nThis is the big one. DecodedSurfaceProvider is both an IDecodingTask and an\nISurfaceProvider. Like DecodingTask, it manages a decoder while it runs. It also\nowns the resulting surface and makes it accessible via its ISurfaceProvider\ninterface. Hopefully it's not too complicated to review; it's an evolution of\nthe version of DecodingTask we created earlier in this sequence of patches,\ncombined with features from SimpleSurfaceProvider.\n\nOne thing that is nice about this approach, and eliminates some of the grossness\nfrom earlier in the patch series, is that we insert the DecodedSurfaceProvider\ninto the surface cache right away, and just upgrade it from the placeholder\nstate to the available state later. That means we don't have to do any of that\nweird \"generating errors in Decoder from outside of Decoder\" stuff that we were\ndoing before.\n\nWhile decoding, DecodedSurfaceProvider keeps a strong reference to the decoder\n(obviously) and to the owning image (so it can send it notifications). Once\ndecoding is over, though, as an ISurfaceProvider it doesn't need a reference to\neither of those things, so we drop those references when decoding is complete.\nWe have to be somewhat careful about dropping the RasterImage reference, because\nDecodedSurfaceProvider's destructor may run because it got evicted from the\nsurface cache, which would mean that the surface cache lock was currently held.\nRasterImage's destructor also calls into the surface cache, so we need to free\nthe image asynchronously to avoid deadlock.\n\nAnother thing worth noting is that, although imgFrame is a threadsafe object,\nISurfaceProviders don't have any internal locking and aren't threadsafe on their\nown. That's why it's important that DecodedSurfaceProvider essentially work in\ntwo phases. While it's in the placeholder phase, there is no parallel access of\nmutable state; anything that *is* mutable can't be exposed to other threads\nduring this phase. (e.g. the decoder and the surface may only be touched from\nthe decoder thread) Once a surface is available and\nSurfaceCache::SurfaceAvailable() has been called, it's OK to call methods that\ntouch the surface (DrawableRef() and IsFinished()) from multiple threads at\nonce, so it's important that no further changes to |mSurface| occur. (The\nunderlying imgFrame, being threadsafe, can of course continue to change.)\nSetLocked() also touches the surface, although things are a little safer there\nsince it can only be called from SurfaceCache code. I mention all this to\nexplain that this has all been thought through and I've put a lot of effort into\nmaking sure that these methods can work with no additional synchronization -\njust two periods in which no publicly visible state is mutable, separated by a\ncall to SurfaceCache::SurfaceAvailable(). Please think it through yourselves and\nmake sure you don't find any problems I missed. =)", "author": "seth.bugzilla@blackhail.net", "id": 11590755, "time": "2016-08-02T01:29:27Z"}, {"text": "Created attachment 8776782\n(Part 7) - Replace DecodingTask with DecodedSurfaceProvider.\n\nIn this patch we just swap out DecodingTask for DecodedSurfaceProvider and do a\nlittle cleanup. As mentioned in the comments for part 6, we're now inserting\nDecodedSurfaceProvider into the surface cache right away; there's no more\nplaceholder in the old sense.", "author": "seth.bugzilla@blackhail.net", "id": 11590756, "time": "2016-08-02T01:30:17Z"}, {"text": "Try job here:\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=e0245f8c7498", "author": "seth.bugzilla@blackhail.net", "id": 11590764, "time": "2016-08-02T01:36:29Z"}, {"text": "Created attachment 8777090\n(Part 7) - Replace DecodingTask with DecodedSurfaceProvider.\n\nThis updated version of part 7 just adds a few more comments in\nDecodedSurfaceProvider.h and adds some missing #include's in\nDecodedSurfaceProvider.cpp to increase the odds that this will compile without\nunified compilation on. =)", "author": "seth.bugzilla@blackhail.net", "id": 11593446, "time": "2016-08-02T21:17:38Z"}, {"text": "Looking at the try results, all I can say is that I'm genuinely surprised that bug 1291033 seems to have introduced issues, but not this one. Given their relative complexity I would definitely have expected that to go the other way. I'll fix up bug 1291033 and then resubmit a try job for both bugs.", "author": "seth.bugzilla@blackhail.net", "id": 11593463, "time": "2016-08-02T21:21:38Z"}, {"text": "Bug 1291033 looks good. Here's a new try job for this bug:\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=e6565339a1ee", "author": "seth.bugzilla@blackhail.net", "id": 11594725, "time": "2016-08-03T09:35:09Z"}, {"text": "Comment on attachment 8776781\n(Part 6) - Add DecodedSurfaceProvider to handle both decoding and surface ownership for single-frame images.\n\nReview of attachment 8776781:\n-----------------------------------------------------------------\n\nLGTM on the decoding side of things.", "author": "edwin.bugs@flores.geek.nz", "id": 11595895, "time": "2016-08-03T16:15:58Z"}, {"text": "Comment on attachment 8777090\n(Part 7) - Replace DecodingTask with DecodedSurfaceProvider.\n\nReview of attachment 8777090:\n-----------------------------------------------------------------\n\n::: image/DecoderFactory.cpp\n@@ +140,5 @@\n>    if (NS_FAILED(decoder->Init())) {\n>      return nullptr;\n>    }\n>  \n> +  // Create a DecodingSurfaceProvider which will manage the decoding process and\n\nnit: DecodedSurfaceProvider", "author": "edwin.bugs@flores.geek.nz", "id": 11595962, "time": "2016-08-03T16:29:47Z"}, {"text": "Comment on attachment 8776776\n(Part 3) - Handle interactions with the SurfaceCache in DecodingTask.\n\nReview of attachment 8776776:\n-----------------------------------------------------------------\n\nI'll admit to not fully grokking how the pieces of the decoder pipeline fit together (in existing code), so it's possible I'd miss something here; hopefully seth & edwin know that a bit better & would've caught anything that I'd miss here. :)\n\nIn any case, this patch seems sensible enough; r=me\n\n::: image/IDecodingTask.h\n@@ +82,2 @@\n>  \n> +  NotNull<RefPtr<RasterImage>> mImage;\n\nPerhaps this new member-var mImage -- and mDecoder (below it) -- should be \"const\" (\"const NotNull<...>\"), since they're initialized in the init list, and never change over the lifetime of this object?\n\nThough, looks like this code is getting deleted (moved?) in part 7.  So, maybe better to make this change (if it's applicable) in the final resting-place/replacement for this code.", "author": "dholbert@mozilla.com", "id": 11600395, "time": "2016-08-04T21:30:24Z"}, {"text": "Comment on attachment 8776781\n(Part 6) - Add DecodedSurfaceProvider to handle both decoding and surface ownership for single-frame images.\n\nReview of attachment 8776781:\n-----------------------------------------------------------------\n\nr=me on part 6, nits below:\n\n::: image/DecodedSurfaceProvider.cpp\n@@ +17,5 @@\n> +  , mImage(aImage.get())\n> +  , mDecoder(aDecoder.get())\n> +  , mSurfaceKey(aSurfaceKey)\n> +{\n> +  MOZ_ASSERT(!mDecoder->IsMetadataDecode(),\n\nPlease make sure this new file includes everything it needs (by putting it in SOURCES instead of UNIFIED_SOURCES, locally, and ensuring it builds)\n\nIn particular, you need the following, I think:\n\n#include \"Decoder.h\"\n#include \"mozilla/gfx/Point.h\" // for mozilla::gfx::IntSize\n# include gfxPrefs.h\n\nusing mozilla::gfx::IntSize;\n\n@@ +193,5 @@\n> +  mDecoder = nullptr;\n> +\n> +  // We don't need a reference to our image anymore, either. Drop it so the\n> +  // image doesn't stay alive just because it has live surfaces in the\n> +  // surface cache.\n\nI don't entirely understand what this comment is saying.\n\nWhat's the connection between:\n - us holding vs. dropping this RefPtr<RasterImage>\n - the presence of \"live surfaces in the surface cache\"?\n\n(The comment seems to be saying there's a direct dependency between those two things, but it's not obvious to me what that is; maybe because I'm forgetting some piece of SurfaceCache-entry-lifetime.)\n\nIn any case, consider clarifying this to make that clearer, or adding a parenthetical with a bit of extra context, or something.\n\n::: image/DecodedSurfaceProvider.h\n@@ +66,5 @@\n> +  void CheckForNewSurface();\n> +  void FinishDecoding();\n> +\n> +  RefPtr<RasterImage> mImage;\n> +  RefPtr<Decoder> mDecoder;\n\nPerhaps add a comment here explaining the lifetime of these references? e.g.:\n  // non-null until we finish decoding; null thereafter\n(I think that's true of both mImage and mDecoder.)\n\nThe reason I'm asking is: the .cpp file has various unexplained \"MOZ_ASSERT(mImage);\" and \"MOZ_ASSERT(mDecoder);\" assertions, and it's not immediately clear (without a comment like the above) why those assertions are guaranteed to be valid.\n\nAlternately: if you'd rather, perhaps add a message (like the suggested-comment-text above) to the assertions in the .cpp file.", "author": "dholbert@mozilla.com", "id": 11602790, "time": "2016-08-05T17:22:01Z"}, {"text": "Comment on attachment 8777090\n(Part 7) - Replace DecodingTask with DecodedSurfaceProvider.\n\nReview of attachment 8777090:\n-----------------------------------------------------------------\n\nAll of this patch's changes to DecodedSurfaceProvider.cpp / DecodedSurfaceProvider.h belong in the previous patch, I think.  The DecodedSurfaceProvider changes seem to be part of creating/documenting that new class -- they're not part of \"Replace DecodingTask\" at all.\n\nSeems like this patch here (part 7) should just be about the factory changes and deleting now-unused code.\n\nNits/observations below. r=me assuming you move the DecodedSurfaceProvider.* changes into part 6.\n\n::: image/DecodedSurfaceProvider.cpp\n@@ +9,3 @@\n>  #include \"nsProxyRelease.h\"\n>  \n> +#include \"Decoder.h\"\n\nThese includes (and another, and a \"using\" decl) should be added in the previous patch (where this .cpp file is created), technically, per my previous comment.\n\n::: image/DecodedSurfaceProvider.h\n@@ +58,5 @@\n>    // Full decodes are low priority compared to metadata decodes because they\n>    // don't block layout or page load.\n>    TaskPriority Priority() const override { return TaskPriority::eLow; }\n>  \n> +\n\n(random blank line being inserted as part of this patch; intentional?)\n\n@@ +71,3 @@\n>    RefPtr<RasterImage> mImage;\n> +\n> +  /// The decoder that will generate our surface. Dropped after decoding.\n\nAh, here are the explanatory comments that I was looking for in the previous patch! OK. :)\n\nReally, all of the changes to this file belong in the previous patch, I think... (They're part of creating/documenting this class, not part of \"Replace DecodingTask\" at all really.)", "author": "dholbert@mozilla.com", "id": 11602826, "time": "2016-08-05T17:35:28Z"}, {"text": "(Sorry, I repeated myself a bit in that last comment; poor editing/copypasting on my part.)", "author": "dholbert@mozilla.com", "id": 11602829, "time": "2016-08-05T17:36:02Z"}, {"text": "Thanks for the reviews, folks! Going through the comments now that try looks good. (I'll post a new try job, but I want to include the changes from the review comments, too, so let me address those first.)\n\n(In reply to Daniel Holbert [:dholbert] (mostly OOTO until Aug 9th) from comment #14)\n> Perhaps this new member-var mImage -- and mDecoder (below it) -- should be\n> \"const\" (\"const NotNull<...>\"), since they're initialized in the init list,\n> and never change over the lifetime of this object?\n> \n> Though, looks like this code is getting deleted (moved?) in part 7.  So,\n> maybe better to make this change (if it's applicable) in the final\n> resting-place/replacement for this code.\n\nYeah, this code doesn't exist by the end of the patch series in this bug, so probably OK to let this slide. =)", "author": "seth.bugzilla@blackhail.net", "id": 11603577, "time": "2016-08-05T22:10:03Z"}, {"text": "(In reply to Daniel Holbert [:dholbert] (mostly OOTO until Aug 9th) from comment #16)\n> Comment on attachment 8777090\n> (Part 7) - Replace DecodingTask with DecodedSurfaceProvider.\n> \n> Review of attachment 8777090:\n> -----------------------------------------------------------------\n> \n> All of this patch's changes to DecodedSurfaceProvider.cpp /\n> DecodedSurfaceProvider.h belong in the previous patch, I think.  The\n> DecodedSurfaceProvider changes seem to be part of creating/documenting that\n> new class -- they're not part of \"Replace DecodingTask\" at all.\n> \n> Seems like this patch here (part 7) should just be about the factory changes\n> and deleting now-unused code.\n\nThat's what was intended, yeah. =) When I made the changes in comment 9, looks like I mistakenly put them in part 7 instead of part 6.\n\nSo what I'll do is move that stuff into part 6, address your concern about the comment mentioned in your review for part 6 (the one about surfaces in the surface cache keeping images alive), and make sure that the new file builds in non-unified builds. I believe that should take care of everything. (Since it sounds like the other concerns from the part 6 review are addressed in the changes that mistakenly ended up in part 7.)", "author": "seth.bugzilla@blackhail.net", "id": 11603586, "time": "2016-08-05T22:16:46Z"}, {"text": "Created attachment 8778487\n(Part 1) - Use a different IDecodingTask for animated images.\n\nReuploading all the patches. All review comments were addressed. I also fixed a\nsmall issue in part 2 and rebased against bug 1292505. (The latter being the\nreason I'm just reuploading everything.)", "author": "seth.bugzilla@blackhail.net", "id": 11603633, "time": "2016-08-05T22:48:39Z"}, {"text": "Created attachment 8778488\n(Part 2) - Pass the image into NotifyProgress() and NotifyDecodeComplete() explicitly.", "author": "seth.bugzilla@blackhail.net", "id": 11603634, "time": "2016-08-05T22:48:46Z"}, {"text": "Created attachment 8778489\n(Part 3) - Handle interactions with the SurfaceCache in DecodingTask.", "author": "seth.bugzilla@blackhail.net", "id": 11603635, "time": "2016-08-05T22:49:03Z"}, {"text": "Created attachment 8778490\n(Part 4) - Remove IDecodingTask::GetDecoder().", "author": "seth.bugzilla@blackhail.net", "id": 11603636, "time": "2016-08-05T22:49:06Z"}, {"text": "Created attachment 8778491\n(Part 5) - Expose the IDecodingTask notification helpers for use in other files.", "author": "seth.bugzilla@blackhail.net", "id": 11603637, "time": "2016-08-05T22:49:09Z"}, {"text": "Created attachment 8778492\n(Part 6) - Add DecodedSurfaceProvider to handle both decoding and surface ownership for single-frame images.", "author": "seth.bugzilla@blackhail.net", "id": 11603638, "time": "2016-08-05T22:49:12Z"}, {"text": "Created attachment 8778493\n(Part 7) - Replace DecodingTask with DecodedSurfaceProvider.", "author": "seth.bugzilla@blackhail.net", "id": 11603639, "time": "2016-08-05T22:49:15Z"}, {"text": "New try job here:\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=9fd086c6db29", "author": "seth.bugzilla@blackhail.net", "id": 11603668, "time": "2016-08-05T23:10:03Z"}, {"text": "Pushed by seth.bugzilla@blackhail.net:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/41ecafc57524\n(Part 1) - Use a different IDecodingTask for animated images. r=dholbert,edwin\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/50ac73a27eb3\n(Part 2) - Pass the image into NotifyProgress() and NotifyDecodeComplete() explicitly. r=edwin\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/4999ae42eaec\n(Part 3) - Handle interactions with the SurfaceCache in DecodingTask. r=dholbert,edwin\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c31142f750f8\n(Part 4) - Remove IDecodingTask::GetDecoder(). r=edwin\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7466366ce986\n(Part 5) - Expose the IDecodingTask notification helpers for use in other files. r=edwin\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/a6e140998c35\n(Part 6) - Add DecodedSurfaceProvider to handle both decoding and surface ownership for single-frame images. r=dholbert,edwin\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/b5418ecab2a9\n(Part 7) - Replace DecodingTask with DecodedSurfaceProvider. r=dholbert,edwin", "author": "pulsebot@bots.tld", "id": 11603861, "time": "2016-08-06T01:46:58Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/41ecafc57524\nhttps://hg.mozilla.org/mozilla-central/rev/50ac73a27eb3\nhttps://hg.mozilla.org/mozilla-central/rev/4999ae42eaec\nhttps://hg.mozilla.org/mozilla-central/rev/c31142f750f8\nhttps://hg.mozilla.org/mozilla-central/rev/7466366ce986\nhttps://hg.mozilla.org/mozilla-central/rev/a6e140998c35\nhttps://hg.mozilla.org/mozilla-central/rev/b5418ecab2a9", "author": "philringnalda@gmail.com", "id": 11604730, "time": "2016-08-07T06:51:13Z"}], "cf_last_resolved": "2016-08-07T06:51:13Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-08-07T06:51:13Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1289954, 1291071], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "ImageLib", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla51", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "seth.bugzilla@blackhail.net", "id": 452036, "name": "seth.bugzilla@blackhail.net", "real_name": "Seth Fowler [:seth] [:s2h]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, {"email": "edwin.bugs@flores.geek.nz", "id": 430065, "name": "edwin.bugs@flores.geek.nz", "real_name": "Edwin Flores [inactive from 2016-12-01] [:eflores] [:edwin]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "depends_on", "added": "1291054"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-01T22:44:19Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1291059"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-01T23:00:19Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1291071"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T00:46:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776773, "added": "review?(dholbert@mozilla.com), review?(edwin@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "dholbert@mozilla.com, edwin@mozilla.com"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:03:42Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776774, "added": "review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:06:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776776, "added": "review?(dholbert@mozilla.com), review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:13:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776777, "added": "review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:14:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776778, "added": "review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:15:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776781, "added": "review?(dholbert@mozilla.com), review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:29:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8776782, "added": "review?(dholbert@mozilla.com), review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T01:30:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8776773, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-02T14:34:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8776774, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-02T16:06:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8776777, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-02T16:14:38Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8776778, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-02T16:16:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8777090, "added": "review?(dholbert@mozilla.com), review?(edwin@mozilla.com)"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T21:17:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776782, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com), review?(edwin@mozilla.com)", "attachment_id": 8776782, "added": ""}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-02T21:17:40Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8776776, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-03T12:36:08Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8776781, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-03T16:15:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(edwin@mozilla.com)", "attachment_id": 8777090, "added": "review+"}], "who": "edwin.bugs@flores.geek.nz", "when": "2016-08-03T16:29:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8776773, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2016-08-04T02:00:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8776776, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2016-08-04T21:30:24Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1292505"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-05T11:10:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8776781, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2016-08-05T17:22:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dholbert@mozilla.com)", "attachment_id": 8777090, "added": "review+"}], "who": "dholbert@mozilla.com", "when": "2016-08-05T17:35:28Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776773, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776774, "added": "1"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-05T22:48:40Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776776, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776777, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776778, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8776781, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8777090, "added": "1"}], "who": "seth.bugzilla@blackhail.net", "when": "2016-08-05T22:48:41Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla51"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-08-07 06:51:13"}, {"removed": "---", "field_name": "cf_status_firefox51", "added": "fixed"}], "who": "philringnalda@gmail.com", "when": "2016-08-07T06:51:13Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}