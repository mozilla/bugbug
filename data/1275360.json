{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "mfroman@nostrum.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-07-02T00:56:34Z", "type_id": 4, "creation_date": "2016-06-30T23:07:09Z", "id": 1417029, "setter": "drno@ohlmeier.org"}], "content_type": "text/x-review-board-request", "id": 8766969}], "classification": "Components", "creator": "mfroman@nostrum.com", "mentors_detail": [], "depends_on": [1295690], "cf_has_str": "---", "cf_user_story": "", "cf_backlog": "---", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Add sdp for video FEC", "cf_last_resolved": "2016-07-28T15:48:36Z", "cf_status_firefox50": "fixed", "votes": 0, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 23, "comments": [{"text": "This bug covers the SDP and negotiation for FEC", "author": "mfroman@nostrum.com", "id": 11434648, "time": "2016-05-25T02:12:25Z"}, {"text": "Do we care about enabling FEC for codecs other than Opus?\n\nSection 4.1 of https://www.ietf.org/id/draft-ietf-rtcweb-fec-03.txt lists several other potential options:\n- built-in FEC for AMR/AMR-WB\n  - we don't yet deal with the max-red parameter in SDP, but it seems that FEC can happen without it\n    explicitly specified\n- redundant encoding for variable-bitrate codecs without an internal FEC\n  - do we have any of these?  Seems like no.\n- redundant encoding for constant-bitrate codecs\n  - since this is a MAY, also seems like a no.", "author": "mfroman@nostrum.com", "id": 11444540, "time": "2016-05-27T16:00:47Z"}, {"text": "(In reply to Michael Froman [:mjf] from comment #1)\n> Do we care about enabling FEC for codecs other than Opus?\nThat should say _audio_ codecs.  I'm just getting started on video.", "author": "mfroman@nostrum.com", "id": 11444543, "time": "2016-05-27T16:01:44Z"}, {"text": "(In reply to Michael Froman [:mjf] from comment #1)\n> Do we care about enabling FEC for codecs other than Opus?\n> \n> Section 4.1 of https://www.ietf.org/id/draft-ietf-rtcweb-fec-03.txt lists\n> several other potential options:\n> - built-in FEC for AMR/AMR-WB\n>   - we don't yet deal with the max-red parameter in SDP, but it seems that\n\nWe don't do AMR\n\n> - redundant encoding for variable-bitrate codecs without an internal FEC\n>   - do we have any of these?  Seems like no.\n\nNo: Opus (variable), G722 (fixed), G711a/u (fixed)\n\n> - redundant encoding for constant-bitrate codecs\n>   - since this is a MAY, also seems like a no.\n\nWe can start here, though let's check what chrome does for them", "author": "rjesup@jesup.org", "id": 11445130, "time": "2016-05-27T19:08:46Z"}, {"text": "Now for the video questions..\nhttps://www.ietf.org/id/draft-ietf-rtcweb-fec-03.txt\npoints to:\nhttps://www.ietf.org/id/draft-ietf-payload-flexible-fec-scheme-02.txt\n\nLooking at the offer Chrome sends to appear.in, I see:\na=rtpmap:116 red/90000\na=rtpmap:117 ulpfec/90000\nThis appears to be RFC 5109.  Is this what we're aiming for as opposed to flexible-fec?  If so, section 14.2 also mentions an additional a=fmtp line that Chrome isn't sending that is required for the sender to know (now quoting from RFC 2198) \"which codecs are recommended for the primary and secondary (and tertiary, etc) encodings.\"\nAn example from the rfc is:\n      m=audio 12345 RTP/AVP 121 0 5 100\n      a=rtpmap:121 red/8000/1\n      a=rtpmap:100 ulpfec/8000\n      a=fmtp:121 0/5/100             <==== Chrome is missing this line\n\nThe first step is just signaling that we accept FEC, which we'll be doing without that missing line according to RFC 2198.  If neither side provides that line it seems unclear what, if any, redundant stream will be sent.\n\nAny thoughts?", "author": "mfroman@nostrum.com", "id": 11445558, "time": "2016-05-27T21:42:57Z"}, {"text": "Please checkout my previous comment.", "author": "mfroman@nostrum.com", "id": 11455619, "time": "2016-06-01T18:28:32Z"}, {"text": "Created attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nReview commit: https://reviewboard.mozilla.org/r/61672/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/61672/", "author": "mfroman@nostrum.com", "id": 11515777, "time": "2016-06-30T23:07:09Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/61672/diff/1-2/", "author": "mfroman@nostrum.com", "id": 11517330, "time": "2016-07-01T15:06:11Z"}, {"text": "https://reviewboard.mozilla.org/r/61672/#review58538\n\nIn general good, but I would like to get some answer before r+ing.\n\n::: media/webrtc/signaling/src/jsep/JsepCodecDescription.h:249\n(Diff revision 1)\n> +    // FEC for video works a little different since support for it is\n> +    // indicated by the presence of particular codes (red and ulpfec)\n> +    // instead of using rtcpfb attributes on a given codec\n\nI find this comment a little confusing.\nIt sounds like you added this after first working on audio and then switching to video ('different' compared to what - I guess audio).\n\nIt's nice introductory into how to do FEC signaling, but why here? Wouldn't it make more sense to give this description when you check for \"red\" etc?\n\n::: media/webrtc/signaling/src/jsep/JsepCodecDescription.h:295\n(Diff revision 1)\n>        h264Params.packetization_mode = mPacketizationMode;\n>        // Hard-coded, may need to change someday?\n>        h264Params.level_asymmetry_allowed = true;\n>  \n>        msection.SetFmtp(SdpFmtpAttributeList::Fmtp(mDefaultPt, h264Params));\n> +    } else if (mName == \"red\") {\n\nWhat about 'ulpfec' here? Not needed?\n\n::: media/webrtc/signaling/src/jsep/JsepCodecDescription.h:460\n(Diff revision 1)\n>                             &mProfileLevelId);\n>          }\n>        } else {\n>          // TODO(bug 1143709): max-recv-level support\n>        }\n> -\n> +    } else if (mName == \"red\") {\n\n'ulpfec' also not needed here?\n\n::: media/webrtc/signaling/src/jsep/JsepSessionImpl.cpp:2169\n(Diff revision 1)\n> +      \"122\",\n> +      \"red\",\n> +      90000\n\nBrief comments for these initial magic values might be helpful for non-experts.\n\n::: media/webrtc/signaling/src/jsep/JsepSessionImpl.cpp:2176\n(Diff revision 1)\n> +  red->mRedundantEncodings.push_back(121);\n> +  red->mRedundantEncodings.push_back(120);\n> +  red->mRedundantEncodings.push_back(126);\n> +  red->mRedundantEncodings.push_back(97);\n> +  red->mRedundantEncodings.push_back(123);\n\nWhat are these magic numbers?\nI'm guessing codec PT numbers. If so what are the assumed values here (in case someone ever needs to change the default PT's for one of the codecs)?\nEven better then comments would be some kind of codec name -> codec PT lookup function/registry. The webrtc.org has something like that. Not sure if it's worth replicating that.\n\n::: media/webrtc/signaling/src/jsep/JsepTrack.cpp:393\n(Diff revision 1)\n> -  // answer\n> -  if (!codecs->empty()) {\n> +  // answer.  For now, remove all but the first codec unless the first codec\n> +  // is red, and then we include the others per RFC 5109, section 14.2.\n> +  if (!codecs->empty() && (*codecs)[0]->mName != \"red\") {\n\nI don't see that the comment actually reflects the code.\nThe code appears to skip over the whole thing if the first codec is 'red'. And I don't see any code which includes other codecs.\n\n::: media/webrtc/signaling/src/peerconnection/PeerConnectionImpl.cpp:1055\n(Diff revision 1)\n> +        uint8_t pt = (uint8_t)strtoul(codec->mDefaultPt.c_str(), nullptr, 10);\n> +        // don't search for the codec payload type unless we have a valid\n> +        // conversion (non-zero)\n> +        if (pt != 0) {\n\nI'm guessing strtoul for PCMU returning 0 is okay, as there is no RED for PCMU :-)\n\n::: media/webrtc/signaling/test/jsep_track_unittest.cpp:44\n(Diff revision 1)\n> +        JsepVideoCodecDescription* red = new JsepVideoCodecDescription(\n> +            \"122\",\n> +            \"red\",\n> +            90000\n> +            );\n> +        red->mRedundantEncodings.push_back(120);\n> +        red->mRedundantEncodings.push_back(126);\n> +        red->mRedundantEncodings.push_back(123);\n> +        results.push_back(red);\n\nAs this appears to be redundant with the red generation further down, can we move this into a little helper function to avoid the duplication?\n\n::: media/webrtc/signaling/test/jsep_track_unittest.cpp:415\n(Diff revision 1)\n> +  ASSERT_NE(mOffer->ToString().find(\"a=rtpmap:122 red\"), std::string::npos);\n> +  ASSERT_EQ(mAnswer->ToString().find(\"a=rtpmap:122 red\"), std::string::npos);\n> +  ASSERT_NE(mOffer->ToString().find(\"a=rtpmap:123 ulpfec\"), std::string::npos);\n> +  ASSERT_EQ(mAnswer->ToString().find(\"a=rtpmap:123 ulpfec\"), std::string::npos);\n\nI would find it easier to understand this if you check the offer first for red and ulpfec and then check the answer. But that might be just a personal preference.\n\n::: media/webrtc/signaling/test/jsep_track_unittest.cpp:467\n(Diff revision 1)\n> +  mOffCodecs.values = MakeCodecs(true, true);\n> +  mAnsCodecs.values = MakeCodecs(true);\n\nI'm missing the test for:\n ... MakeCodecs(true);\n ... MakeCodecs(true);\nSo without preferring Red.", "author": "drno@ohlmeier.org", "id": 11517799, "time": "2016-07-01T18:24:41Z"}, {"text": "https://reviewboard.mozilla.org/r/61672/#review58538\n\n> I find this comment a little confusing.\n> It sounds like you added this after first working on audio and then switching to video ('different' compared to what - I guess audio).\n> \n> It's nice introductory into how to do FEC signaling, but why here? Wouldn't it make more sense to give this description when you check for \"red\" etc?\n\nI will add an additional comment when I check for red.  Specifically, this comment is here because in every other case, turning on some \"feature\" of a codec is done with attributes like rtcpfb.  Since the other cases directly above (for REMB and TMMBR) both have to push rtcpfb attributes onto a vector, and this case is different, I wanted to call out the reason for that difference here.\n\n> What about 'ulpfec' here? Not needed?\n\nNope.  Redundant encodes don't require ulpfec.  You could use a completely different codec than ulpfec to supply the redundant info.  We're just taking care of the list of redundant encodings that are possible here.\n\n> 'ulpfec' also not needed here?\n\nSame as above - redundant doesn't require ulpfec.  We're just taking care of the list of redundant encodings that are possible here.\n\n> Brief comments for these initial magic values might be helpful for non-experts.\n\nSorry - I was matching the other codecs' definitions.  I'll comment on the new ones I've added.\n\n> What are these magic numbers?\n> I'm guessing codec PT numbers. If so what are the assumed values here (in case someone ever needs to change the default PT's for one of the codecs)?\n> Even better then comments would be some kind of codec name -> codec PT lookup function/registry. The webrtc.org has something like that. Not sure if it's worth replicating that.\n\nI added a method in JsepVideoCodecDescription that builds the redundant encodings list from a provided vector of JsepCodecDescription.  If someone changes default PT for one of codecs, it will be handled automatically.\n\n> I don't see that the comment actually reflects the code.\n> The code appears to skip over the whole thing if the first codec is 'red'. And I don't see any code which includes other codecs.\n\nBefore this if statement, all the codecs that are enabled exist in the codecs vector.  Previously, the code _always_ removed everything but the first codec.  This meant answers from Fx never contained more than one codec.  Now, if the first codec is \"red\", we leave them in the vector.\n\nYou have raised a different question in my mind though, and that is whether we want to leave the other codecs in the vector if \"red\" is anywhere in the list, not just the first (therefore preferred) codec.  I've made that change, and will run some additional tests.\n\n> I'm guessing strtoul for PCMU returning 0 is okay, as there is no RED for PCMU :-)\n\nSince we're only checking video codecs, we're safe here.\n\n> I would find it easier to understand this if you check the offer first for red and ulpfec and then check the answer. But that might be just a personal preference.\n\nI changed it!", "author": "mfroman@nostrum.com", "id": 11518432, "time": "2016-07-01T23:07:22Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/61672/diff/2-3/", "author": "mfroman@nostrum.com", "id": 11518439, "time": "2016-07-01T23:12:00Z"}, {"text": "https://reviewboard.mozilla.org/r/61670/#review58646\n\nLGTM", "author": "drno@ohlmeier.org", "id": 11518529, "time": "2016-07-02T00:56:11Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nhttps://reviewboard.mozilla.org/r/61672/#review58648", "author": "drno@ohlmeier.org", "id": 11518530, "time": "2016-07-02T00:56:34Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nhttps://reviewboard.mozilla.org/r/61672/#review59166\n\nr- only for the pt=0 thing.  Note: I've only reviewed the final update to the patch so far, not the entire patch\n\n::: media/webrtc/signaling/src/jsep/JsepCodecDescription.h:694\n(Diff revisions 2 - 3)\n> +        uint8_t pt = (uint8_t)strtoul(codec->mDefaultPt.c_str(), nullptr, 10);\n> +        // returns 0 if failed to convert - this is safe because we won't\n> +        // see video codecs with pt of 0\n> +        if (pt != 0) {\n> +          mRedundantEncodings.push_back(pt);\n> +        }\n\nUnfortunately not quite correct... 0 by default is PCMU, but a=rtpmap:0 video/VP8 90000 is totally valid SDP, making 0 be VP8 and overriding the default mapping.\n\n::: media/webrtc/signaling/src/jsep/JsepSessionImpl.cpp:2168\n(Diff revisions 2 - 3)\n>    JsepVideoCodecDescription* red = new JsepVideoCodecDescription(\n> -      \"122\",\n> -      \"red\",\n> -      90000\n> +      \"122\", // payload type\n> +      \"red\", // codec name\n> +      90000  // clock rate (match other video codecs)\n>        );\n\nthe added comments are unneeded given the other code here with raw values and no comments; if anything the comment should be on the first usage not the last.  Pulling them all out into a .h file as defines/etc would be even more preferable but not required in this go-round.\n\n::: media/webrtc/signaling/src/jsep/JsepTrack.cpp:391\n(Diff revisions 2 - 3)\n>    // Make sure strongly preferred codecs are up front, overriding the remote\n>    // side's preference.\n>    std::stable_sort(codecs->begin(), codecs->end(), CompareCodec);\n\nnot part of this patch, but this comment concerns me\n\n::: media/webrtc/signaling/test/jsep_track_unittest.cpp:67\n(Diff revisions 2 - 3)\n> -          JsepVideoCodecDescription* red = new JsepVideoCodecDescription(\n> +          red = new JsepVideoCodecDescription(\n>                \"122\",\n>                \"red\",\n>                90000\n>                );\n\nAnd this is part of why I'd like it in a .h file; it's in as multiple cases of hard constants", "author": "rjesup@jesup.org", "id": 11524191, "time": "2016-07-05T17:55:59Z"}, {"text": "https://reviewboard.mozilla.org/r/61672/#review59166\n\n> Unfortunately not quite correct... 0 by default is PCMU, but a=rtpmap:0 video/VP8 90000 is totally valid SDP, making 0 be VP8 and overriding the default mapping.\n\nAhh!  I never stopped to think about it being default and not reserved.  Sorry about that misunderstanding!  Also added a test in jsep_track_unittest to check this case.\n\n> the added comments are unneeded given the other code here with raw values and no comments; if anything the comment should be on the first usage not the last.  Pulling them all out into a .h file as defines/etc would be even more preferable but not required in this go-round.\n\nShould I create a bug for doing this work separately?\n\n> not part of this patch, but this comment concerns me\n\nIt did me too when I first saw it.  In practice, I'm not sure we ever set the mStronglyPreferred flag on the codec descriptions.  I added some printf logging when I started this bug to see what that was actually doing (which seems to be mostly nothing).  I didn't want to make any changes here since it wasn't specific to adding support for red/ulpfec.\n\n> And this is part of why I'd like it in a .h file; it's in as multiple cases of hard constants\n\nPlease see my previous question about adding a bug for this work.", "author": "mfroman@nostrum.com", "id": 11528222, "time": "2016-07-06T18:53:27Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/61672/diff/3-4/", "author": "mfroman@nostrum.com", "id": 11528224, "time": "2016-07-06T18:54:05Z"}, {"text": "I've created a new bug (Bug 1285280) for making the changes around creating codec descriptions using defines from a new header file.", "author": "mfroman@nostrum.com", "id": 11531162, "time": "2016-07-07T16:22:12Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nhttps://reviewboard.mozilla.org/r/61672/#review61058\n\n::: media/webrtc/signaling/src/jsep/JsepCodecDescription.h:51\n(Diff revision 3)\n>    Matches(const std::string& fmt, const SdpMediaSection& remoteMsection) const\n>    {\n> +    // note: fmt here is remote fmt (to go with remoteMsection)\n\nremoteFmt perhaps?\n\n::: media/webrtc/signaling/src/peerconnection/PeerConnectionImpl.cpp:1108\n(Diff revision 3)\n> +      redCodec = static_cast<JsepVideoCodecDescription*>(codec);\n> +      break;\n> +    }\n> +  }\n> +  // if red codec was found, configure it for the other enabled codecs\n> +  if (redCodec != nullptr) {\n\nGenerally style is \"if (ptr) {\"\n\n::: media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c:1788\n(Diff revision 3)\n> +        } else if (strchr(tmp, '/')) {\n> +            // XXX Note that because RFC 5109 so conveniently specified\n> +            // this fmtp with no param names, we hope that nothing else\n> +            // has a slash in the string because otherwise we won't know\n> +            // how to differentiate.\n> +            temp=PL_strtok_r(tmp, \"/\", &strtok_state);\n\nStyle is \"var = value\", not \"var=value\" (nit, in a number of spots", "author": "rjesup@jesup.org", "id": 11546135, "time": "2016-07-13T19:29:26Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/61672/diff/4-5/", "author": "mfroman@nostrum.com", "id": 11549278, "time": "2016-07-14T20:29:24Z"}, {"text": "https://reviewboard.mozilla.org/r/61672/#review61058\n\n> remoteFmt perhaps?\n\nSo what is the stance on changing code that isn't directly related to the current bug?  You're correct about that variable name making more sense, but I didn't think it was appopriate to make that sort of change here.  If it is, I'll gladly start making those sorts of changes.", "author": "mfroman@nostrum.com", "id": 11549279, "time": "2016-07-14T20:30:09Z"}, {"text": "Comment on attachment 8766969\nBug 1275360 - add sdp handling for video FEC (red/ulpfec),\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/61672/diff/5-6/", "author": "mfroman@nostrum.com", "id": 11576050, "time": "2016-07-26T16:58:49Z"}, {"text": "Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/e7e10e7ea1b2\nAdd sdp handling for video FEC (red/ulpfec). r=drno", "author": "pulsebot@bots.tld", "id": 11579263, "time": "2016-07-27T16:25:29Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/e7e10e7ea1b2", "author": "cbook@mozilla.com", "id": 11582342, "time": "2016-07-28T15:48:36Z"}], "id": 1275360, "priority": "P1", "cc": ["dminor@mozilla.com", "drno@ohlmeier.org", "rjesup@jesup.org"], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_firefox59": "---", "last_change_time": "2017-05-12T23:20:37Z", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [875922, 1364618, 1313527], "qa_contact": "", "creation_time": "2016-05-25T02:12:25Z", "cf_status_firefox_esr52": "---", "component": "WebRTC: Signaling", "assigned_to_detail": {"email": "mfroman@nostrum.com", "id": 546718, "name": "mfroman@nostrum.com", "real_name": "Michael Froman [:mjf]"}, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla50", "is_cc_accessible": true, "cf_rank": "15", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "mfroman@nostrum.com", "id": 546718, "name": "mfroman@nostrum.com", "real_name": "Michael Froman [:mjf]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "dminor@mozilla.com", "id": 466787, "name": "dminor@mozilla.com", "real_name": "Dan Minor [:dminor]"}, {"email": "drno@ohlmeier.org", "id": 489581, "name": "drno@ohlmeier.org", "real_name": "Nils Ohlmeier [:drno]"}, {"email": "rjesup@jesup.org", "id": 11539, "name": "rjesup@jesup.org", "real_name": "Randell Jesup [:jesup]"}], "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "assigned_to": "mfroman@nostrum.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cf_rank", "added": "15"}, {"removed": "--", "field_name": "priority", "added": "P1"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "mfroman@nostrum.com"}], "who": "mfroman@nostrum.com", "when": "2016-05-25T02:12:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dminor@mozilla.com, rjesup@jesup.org"}], "who": "mfroman@nostrum.com", "when": "2016-05-25T02:13:55Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(rjesup@jesup.org)"}], "who": "mfroman@nostrum.com", "when": "2016-05-27T16:00:47Z"}, {"changes": [{"removed": "needinfo?(rjesup@jesup.org)", "field_name": "flagtypes.name", "added": ""}], "who": "rjesup@jesup.org", "when": "2016-05-27T19:08:46Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(rjesup@jesup.org)"}], "who": "mfroman@nostrum.com", "when": "2016-06-01T18:28:32Z"}, {"changes": [{"removed": "Add FEC SDP negotiation", "field_name": "summary", "added": "Add sdp for video FEC"}], "who": "mfroman@nostrum.com", "when": "2016-06-08T21:12:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8766969, "added": "review?(drno@ohlmeier.org)"}, {"removed": "", "field_name": "cc", "added": "drno@ohlmeier.org"}], "who": "mfroman@nostrum.com", "when": "2016-06-30T23:07:09Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(drno@ohlmeier.org)", "attachment_id": 8766969, "added": "review+"}], "who": "drno@ohlmeier.org", "when": "2016-07-02T00:56:34Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8766969, "added": "review-"}], "who": "rjesup@jesup.org", "when": "2016-07-05T17:55:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review-", "attachment_id": 8766969, "added": ""}], "who": "mfroman@nostrum.com", "when": "2016-07-06T18:54:05Z"}, {"changes": [{"removed": "needinfo?(rjesup@jesup.org)", "field_name": "flagtypes.name", "added": ""}], "who": "mfroman@nostrum.com", "when": "2016-07-07T16:22:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8766969, "added": "review+"}], "who": "rjesup@jesup.org", "when": "2016-07-13T19:29:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8766969, "added": ""}], "who": "mfroman@nostrum.com", "when": "2016-07-14T20:29:24Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "mfroman@nostrum.com", "when": "2016-07-27T13:16:07Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2016-07-27T16:25:29Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla50"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-07-28 15:48:36"}, {"removed": "---", "field_name": "cf_status_firefox50", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-07-28T15:48:36Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1295690"}], "who": "mfroman@nostrum.com", "when": "2016-08-16T18:54:59Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1313527"}], "who": "drno@ohlmeier.org", "when": "2016-10-27T23:46:52Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1364618"}], "who": "drno@ohlmeier.org", "when": "2017-05-12T23:20:37Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}