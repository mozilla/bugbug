{"cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "bgrinstead@mozilla.com", "mentors_detail": [], "depends_on": [1459985], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "cc_detail": [{"email": "dtownsend@mozilla.com", "id": 91159, "name": "dtownsend@mozilla.com", "real_name": "Dave Townsend [:mossop]"}, {"email": "e7358d9c@opayq.com", "id": 590837, "name": "e7358d9c@opayq.com", "real_name": "ExE Boss"}, {"email": "emilio@crisal.io", "id": 546716, "name": "emilio@crisal.io", "real_name": "Emilio Cobos \u00c1lvarez [:emilio]"}, {"email": "jorgk@jorgk.com", "id": 176914, "name": "jorgk@jorgk.com", "real_name": "Jorg K (GMT+2)"}, {"email": "MattN+bmo@mozilla.com", "id": 305228, "name": "MattN+bmo@mozilla.com", "real_name": "Matthew N. [:MattN] (PM if requests are blocking you)"}], "cf_last_resolved": "2018-05-08T12:58:42Z", "attachments": [{"creator": "bgrinstead@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-07T20:36:25Z", "type_id": 4, "creation_date": "2018-05-04T16:41:01Z", "id": 1752839, "setter": "dtownsend@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8973271}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 27, "comments": [{"text": "Since the <findbar> conversion (Bug 1411707) is tied in with some Fluent work and is generally just a more complex binding, I'd like to prove out the plan in MainProcessSingleton (which was also discussed in Bug 1442006) with a trivial binding, like <stringbundle>.", "author": "bgrinstead@mozilla.com", "id": 13255080, "time": "2018-05-04T16:24:14Z"}, {"text": "Created attachment 8973271\nBug 1459245 - Migrate <stringbundle> from a XBL binding to a Custom Element;\n\nThis loads a JS file to register the Custom Element whenever XUL documents\nget created. This is a pattern we plan to follow for future elements as well -\nstringbundle is just an easy target to prove it out with.\n\nReview commit: https://reviewboard.mozilla.org/r/241726/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/241726/", "author": "bgrinstead@mozilla.com", "id": 13255121, "time": "2018-05-04T16:41:01Z"}, {"text": "Requesting review now, but definitely don't want to land anything here until after the merge", "author": "bgrinstead@mozilla.com", "id": 13255126, "time": "2018-05-04T16:41:28Z"}, {"text": "Jorg, after this patch in order for stringbundle to work, stringbundle.js will need to be loaded in all XUL documents. Does mail already load toolkit/components/processsingleton/MainProcessSingleton.js? If so, I don't think there will need to be any changes in comm-central. If not, then the new lines from that file will have to be copied across to whatever the equivalent file is for mail.\n\nConsumers of <stringbundle> won't need to change as long as the Custom Element gets registered properly.\n\nThe patch is still subject to change, but just wanted to give a heads up that this is likely to be the first XBL to Custom Element migration to land so hoping for a smooth transition.", "author": "bgrinstead@mozilla.com", "id": 13255135, "time": "2018-05-04T16:49:12Z"}, {"text": "Try push: https://treeherder.mozilla.org/#/jobs?repo=try&revision=c72c0b8ff676d147b3b73f20d5b3fbee357bb9ee\nTalos compare: https://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=423653c8894bd6d3f424b95f9e914a9c6d566d04&newProject=try&newRevision=c72c0b8ff676d147b3b73f20d5b3fbee357bb9ee&framework=1&showOnlyImportant=1", "author": "bgrinstead@mozilla.com", "id": 13255144, "time": "2018-05-04T16:53:11Z"}, {"text": "Thanks, I'll look into it.", "author": "jorgk@jorgk.com", "id": 13255208, "time": "2018-05-04T17:20:19Z"}, {"text": "Comment on attachment 8973271\nBug 1459245 - Migrate <stringbundle> from a XBL binding to a Custom Element;\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/241726/diff/1-2/", "author": "bgrinstead@mozilla.com", "id": 13255364, "time": "2018-05-04T18:05:15Z"}, {"text": "Comment on attachment 8973271\nBug 1459245 - Migrate <stringbundle> from a XBL binding to a Custom Element;\n\nhttps://reviewboard.mozilla.org/r/241726/#review248016", "author": "dtownsend@mozilla.com", "id": 13260624, "time": "2018-05-07T20:36:25Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=b8e33cc69bd594235dc4dbe74ca55c08071f44f3", "author": "bgrinstead@mozilla.com", "id": 13261192, "time": "2018-05-08T00:22:46Z"}, {"text": "Pushed by bgrinstead@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/80fc39b7c5ec\nMigrate <stringbundle> from a XBL binding to a Custom Element;r=mossop", "author": "pulsebot@bots.tld", "id": 13261195, "time": "2018-05-08T00:24:57Z"}, {"text": "It looks like you forgot to cover the profile manager :-(\nJavaScript error: chrome://mozapps/content/profile/profileSelection.js, line 41:\n TypeError: gProfileManagerBundle.getFormattedString is not a function", "author": "jorgk@jorgk.com", "id": 13261586, "time": "2018-05-08T07:07:46Z"}, {"text": "I also see:\nJavaScript error: chrome://global/content/elements/stringbundle.js, line 61: Not\nSupportedError: Operation is not supported\n\nThat comes from\ncustomElements.define(\"stringbundle\", MozStringbundle);", "author": "jorgk@jorgk.com", "id": 13261600, "time": "2018-05-08T07:14:06Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/80fc39b7c5ec", "author": "aiakab@mozilla.com", "id": 13262267, "time": "2018-05-08T12:58:42Z"}, {"text": "(In reply to Jorg K (GMT+1) from comment #10)\n> It looks like you forgot to cover the profile manager :-(\n> JavaScript error: chrome://mozapps/content/profile/profileSelection.js, line\n> 41:\n>  TypeError: gProfileManagerBundle.getFormattedString is not a function\n\nHm, I guess we don't have any tests covering that :(. I'll take a look.", "author": "bgrinstead@mozilla.com", "id": 13262306, "time": "2018-05-08T13:11:15Z"}, {"text": "If I copy the contents of stringbundle.js into profileSelection.js then the CE does get registered. It looks like the profile picker is loaded before MainProcessSingleton is loaded. Mossop, is there a different place we could set up observer notifications that will detect them for the profile manager window? Alternatively, we could move the block\n\n```\nfor (let script of [\n  \"chrome://global/content/elements/stringbundle.js\",\n]) {\n  Services.scriptloader.loadSubScript(script, doc.ownerGlobal);\n}\n```\n\ninto a new JS file and then subscript load it from mainprocesssingleton and explicitly include it as a <script> at the top of the profile manager document(s).", "author": "bgrinstead@mozilla.com", "id": 13262351, "time": "2018-05-08T13:22:41Z"}, {"text": "Or a temporary fix would be to include:\n\n  <script type=\"application/x-javascript\"\n          src=\"chrome://global/content/elements/stringbundle.js\"/>\n\nat the top of profileSelection.xul and createProfileWizard.xul.", "author": "bgrinstead@mozilla.com", "id": 13262382, "time": "2018-05-08T13:36:58Z"}, {"text": "Please also fix the error from comment #11.", "author": "jorgk@jorgk.com", "id": 13262425, "time": "2018-05-08T13:58:35Z"}, {"text": "(In reply to Jorg K (GMT+1) from comment #16)\n> Please also fix the error from comment #11.\n\nWhen do you see that error, in the profile manager? At least in m-c we aren't even loading the script before opening the profile manager.", "author": "bgrinstead@mozilla.com", "id": 13262443, "time": "2018-05-08T14:09:36Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #15)\n> Or a temporary fix would be to include:\n> \n>   <script type=\"application/x-javascript\"\n>           src=\"chrome://global/content/elements/stringbundle.js\"/>\n> \n> at the top of profileSelection.xul and createProfileWizard.xul.\n\nShouldn\u2019t we be using the unprefixed `application/javascript` MIME type instead?", "author": "e7358d9c@opayq.com", "id": 13262482, "time": "2018-05-08T14:23:33Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #17)\n> When do you see that error, in the profile manager? At least in m-c we\n> aren't even loading the script before opening the profile manager.\nSorry, afk right now. I saw it in the debug console when starting TB without the p/m. Don't you see it in FF? What does that line do?", "author": "jorgk@jorgk.com", "id": 13262546, "time": "2018-05-08T14:41:46Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #14)\n> If I copy the contents of stringbundle.js into profileSelection.js then the\n> CE does get registered. It looks like the profile picker is loaded before\n> MainProcessSingleton is loaded. Mossop, is there a different place we could\n> set up observer notifications that will detect them for the profile manager\n> window?\n\nNot really no. We could hardcode loading that component into NS_InitXPCOM2 but that's probably more effort than it is worth. The profile manager (and related profile startup UI) are something of a special snowflake here, I can't think of anything else that shows UI before the app-startup notification so I suggest we handle it specially rather than trying to fix for the general case.\n\n> Alternatively, we could move the block\n> \n> ```\n> for (let script of [\n>   \"chrome://global/content/elements/stringbundle.js\",\n> ]) {\n>   Services.scriptloader.loadSubScript(script, doc.ownerGlobal);\n> }\n> ```\n> \n> into a new JS file and then subscript load it from mainprocesssingleton and\n> explicitly include it as a <script> at the top of the profile manager\n> document(s).\n\nI wonder if we'd be better preprocessing all the CE implementations into a single file so it is just one load, then we can just use a script tag in the profile manager UI.", "author": "dtownsend@mozilla.com", "id": 13262883, "time": "2018-05-08T16:13:00Z"}, {"text": "(In reply to Dave Townsend [:mossop] from comment #20)\n> (In reply to Brian Grinstead [:bgrins] from comment #14)\n> > If I copy the contents of stringbundle.js into profileSelection.js then the\n> > CE does get registered. It looks like the profile picker is loaded before\n> > MainProcessSingleton is loaded. Mossop, is there a different place we could\n> > set up observer notifications that will detect them for the profile manager\n> > window?\n> \n> Not really no. We could hardcode loading that component into NS_InitXPCOM2\n> but that's probably more effort than it is worth. The profile manager (and\n> related profile startup UI) are something of a special snowflake here, I\n> can't think of anything else that shows UI before the app-startup\n> notification so I suggest we handle it specially rather than trying to fix\n> for the general case.\n\nOK, I'll file a new bug and get a patch up.\n\n> > Alternatively, we could move the block\n> > \n> > ```\n> > for (let script of [\n> >   \"chrome://global/content/elements/stringbundle.js\",\n> > ]) {\n> >   Services.scriptloader.loadSubScript(script, doc.ownerGlobal);\n> > }\n> > ```\n> > \n> > into a new JS file and then subscript load it from mainprocesssingleton and\n> > explicitly include it as a <script> at the top of the profile manager\n> > document(s).\n> \n> I wonder if we'd be better preprocessing all the CE implementations into a\n> single file so it is just one load, then we can just use a script tag in the\n> profile manager UI.\n\nMy preference would be to not do this until we have to for perf reasons, since it makes it harder to debug (line numbers / file names don't map back to the source files).", "author": "bgrinstead@mozilla.com", "id": 13262977, "time": "2018-05-08T16:46:46Z"}, {"text": "I see\n  JavaScript error: chrome://global/content/elements/stringbundle.js, line 61: Not Supported\n  Error: Operation is not supported\nwhen starting TB with |-p Testing| where \"Testing\" is my testing profile.", "author": "jorgk@jorgk.com", "id": 13263045, "time": "2018-05-08T17:08:06Z"}, {"text": "(In reply to Jorg K (GMT+1) from comment #22)\n> I see\n>   JavaScript error: chrome://global/content/elements/stringbundle.js, line\n> 61: Not Supported\n>   Error: Operation is not supported\n> when starting TB with |-p Testing| where \"Testing\" is my testing profile.\n\nHm, I don't see that on m-c (locally or on logs from bc tests in treeherder). Do stringbundles not work at all? Or, I wonder if this is happening only on a single window - could you `console.log(window.location.toString());` right before the call to customElements.define?", "author": "bgrinstead@mozilla.com", "id": 13263063, "time": "2018-05-08T17:14:16Z"}, {"text": "Hmm, with this code:\ndump(window.location.toString()+\"================\\n\");\ncustomElements.define(\"stringbundle\", MozStringbundle);\ndump(\"after CE ================\\n\");\n\nI see:\nchrome://messenger/content/newmailalert.xul================\nafter CE ================\nchrome://messenger/content/newmailalert.xul================\nJavaScript error: chrome://global/content/elements/stringbundle.js, line 62: Not\nSupportedError: Operation is not supported\n\nchrome://messenger/content/msgAccountCentral.xul================\nafter CE ================\nchrome://messenger/content/msgAccountCentral.xul================\nJavaScript error: chrome://global/content/elements/stringbundle.js, line 62: Not\nSupportedError: Operation is not supported\n\nchrome://messenger/content/messenger.xul================\nafter CE ================\nchrome://messenger/content/messenger.xul================\nJavaScript error: chrome://global/content/elements/stringbundle.js, line 62: Not\nSupportedError: Operation is not supported\n\nAlmost looks like this is called twice and the second one fails.\n\nMaybe we got this wrong:\nhttps://hg.mozilla.org/comm-central/rev/b00e830b9e5e3a006102519c34b8fc8e862e9cdf", "author": "jorgk@jorgk.com", "id": 13263096, "time": "2018-05-08T17:29:13Z"}, {"text": "(In reply to Jorg K (GMT+1) from comment #24)\n> Hmm, with this code:\n> dump(window.location.toString()+\"================\\n\");\n> customElements.define(\"stringbundle\", MozStringbundle);\n> dump(\"after CE ================\\n\");\n> \n> I see:\n> chrome://messenger/content/newmailalert.xul================\n> after CE ================\n> chrome://messenger/content/newmailalert.xul================\n> JavaScript error: chrome://global/content/elements/stringbundle.js, line 62:\n> Not\n> SupportedError: Operation is not supported\n> \n> chrome://messenger/content/msgAccountCentral.xul================\n> after CE ================\n> chrome://messenger/content/msgAccountCentral.xul================\n> JavaScript error: chrome://global/content/elements/stringbundle.js, line 62:\n> Not\n> SupportedError: Operation is not supported\n> \n> chrome://messenger/content/messenger.xul================\n> after CE ================\n> chrome://messenger/content/messenger.xul================\n> JavaScript error: chrome://global/content/elements/stringbundle.js, line 62:\n> Not\n> SupportedError: Operation is not supported\n> \n> Almost looks like this is called twice and the second one fails.\n> \n> Maybe we got this wrong:\n> https://hg.mozilla.org/comm-central/rev/\n> b00e830b9e5e3a006102519c34b8fc8e862e9cdf\n\nOh OK. Yes, if it's already defined it will throw that (not very helpfully named) exception - for example:\n\ndata:text/html,<script>customElements.define(\"foo-bar\", class extends HTMLElement {}); customElements.define(\"foo-bar\", class extends HTMLElement {})</script>\n\nAre you sure that MainProcessSingleton isn't running already? Maybe you don't need to port it to mail glue. You could check with `console.trace();` right before your logs.", "author": "bgrinstead@mozilla.com", "id": 13263119, "time": "2018-05-08T17:37:17Z"}, {"text": "OK, let's continue the discussion in bug 1459743.", "author": "jorgk@jorgk.com", "id": 13263237, "time": "2018-05-08T18:20:18Z"}], "id": 1459245, "priority": "--", "cc": ["dtownsend@mozilla.com", "e7358d9c@opayq.com", "emilio@crisal.io", "jorgk@jorgk.com", "MattN+bmo@mozilla.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "status": "RESOLVED", "product": "Toolkit", "cf_fx_iteration": "---", "blocks": [1397874, 1411707, 1461388], "qa_contact": "", "creation_time": "2018-05-04T16:24:14Z", "cf_status_firefox_esr52": "---", "component": "XUL Widgets", "assigned_to_detail": {"email": "bgrinstead@mozilla.com", "id": 476442, "name": "bgrinstead@mozilla.com", "real_name": "Brian Grinstead [:bgrins]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "fixed", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "mozilla62", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "bgrinstead@mozilla.com", "id": 476442, "name": "bgrinstead@mozilla.com", "real_name": "Brian Grinstead [:bgrins]"}, "whiteboard": "", "mentors": [], "summary": "Migrate <stringbundle> from XBL binding to Custom Element to prove out the script loading plan for future Custom Elements", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-14T17:41:06Z", "assigned_to": "bgrinstead@mozilla.com", "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8973271, "added": "review?(dtownsend@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "dtownsend@mozilla.com"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-04T16:41:01Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bgrinstead@mozilla.com"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-04T16:41:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jorgk@jorgk.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jorgk@jorgk.com)"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-04T16:49:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "MattN+bmo@mozilla.com"}], "who": "MattN+bmo@mozilla.com", "when": "2018-05-04T17:01:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dtownsend@mozilla.com)", "attachment_id": 8973271, "added": "review+"}], "who": "dtownsend@mozilla.com", "when": "2018-05-07T20:36:25Z"}, {"changes": [{"removed": "needinfo?(jorgk@jorgk.com)", "field_name": "flagtypes.name", "added": "needinfo?(bgrinstead@mozilla.com)"}], "who": "jorgk@jorgk.com", "when": "2018-05-08T07:07:46Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla62"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-08 12:58:42"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "fixed"}], "who": "aiakab@mozilla.com", "when": "2018-05-08T12:58:42Z"}, {"changes": [{"removed": "needinfo?(bgrinstead@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bgrinstead@mozilla.com", "when": "2018-05-08T13:11:15Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dtownsend@mozilla.com)"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-08T13:22:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "emilio@crisal.io"}], "who": "emilio@crisal.io", "when": "2018-05-08T13:53:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "e7358d9c@opayq.com"}], "who": "e7358d9c@opayq.com", "when": "2018-05-08T14:23:19Z"}, {"changes": [{"removed": "needinfo?(dtownsend@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dtownsend@mozilla.com", "when": "2018-05-08T16:13:00Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1459985"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-08T16:48:59Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jorgk@jorgk.com)"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-08T17:14:16Z"}, {"changes": [{"removed": "needinfo?(jorgk@jorgk.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jorgk@jorgk.com", "when": "2018-05-08T17:29:13Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1460334"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-09T16:18:49Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1460334"}, {"removed": "1460334", "field_name": "depends_on", "added": ""}], "who": "bgrinstead@mozilla.com", "when": "2018-05-09T16:25:20Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1461388"}], "who": "bgrinstead@mozilla.com", "when": "2018-05-14T17:38:02Z"}, {"changes": [{"removed": "1460334", "field_name": "blocks", "added": ""}], "who": "bgrinstead@mozilla.com", "when": "2018-05-14T17:41:06Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}