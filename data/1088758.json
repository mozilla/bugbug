{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "brad@lassey.us", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2014-11-20T00:09:06Z", "type_id": 4, "creation_date": "2014-10-24T16:27:12Z", "id": 1015080, "setter": "gavin.sharp@gmail.com"}], "content_type": "text/plain", "id": 8511116}, {"creator": "brad@lassey.us", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8531519}, {"creator": "brad@lassey.us", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8534088}, {"creator": "brad@lassey.us", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2014-12-10T16:37:52Z", "type_id": 4, "creation_date": "2014-12-10T03:05:30Z", "id": 1050245, "setter": "rjesup@jesup.org"}], "content_type": "text/plain", "id": 8534096}, {"creator": "brad@lassey.us", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-10T21:39:38Z", "type_id": 4, "creation_date": "2014-12-10T17:06:50Z", "id": 1050696, "setter": "rjesup@jesup.org"}], "content_type": "text/plain", "id": 8534410}, {"creator": "brad@lassey.us", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-12T20:53:14Z", "type_id": 4, "creation_date": "2014-12-12T20:36:26Z", "id": 1052925, "setter": "mark.finkle@gmail.com"}], "content_type": "text/plain", "id": 8534411}, {"creator": "brad@lassey.us", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-12-15T23:15:23Z", "type_id": 4, "creation_date": "2014-12-15T23:05:07Z", "id": 1054562, "setter": "mconley@mozilla.com"}], "content_type": "text/plain", "id": 8536841}], "classification": "Components", "creator": "brad@lassey.us", "cc": ["asmodeusme@yahoo.com", "brad@lassey.us", "carnold@mozilla.com", "cweiner@mozilla.com", "deb@mozilla.com", "dtownsend@mozilla.com", "elancaster@mozilla.com", "fabrice@desre.org", "francesco.lodolo@gmail.com", "gavin.sharp@gmail.com", "gijskruitbosch+bugs@gmail.com", "gpascutto@mozilla.com", "jmoradi@mozilla.com", "jnagel@mozilla.com", "jsavage@mozilla.com", "krudnitski@mozilla.com", "kwierso@gmail.com", "l10n@mozilla.com", "madhava@mozilla.com", "mark.finkle@gmail.com", "mconley@mozilla.com", "mmucci@mozilla.com", "rbarker@mozilla.com", "rjesup@jesup.org", "rtanglao@mozilla.com", "schen@mozilla.com", "sfranks@mozilla.com"], "depends_on": [1054959, 1064834, 1079541, 1084035, 1113299], "creation_time": "2014-10-24T16:27:12Z", "cf_user_story": "", "cf_backlog": "---", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Add the ability to mirror tabs from desktop to a second screen", "id": 1088758, "assigned_to_detail": {"email": "brad@lassey.us", "id": 181004, "name": "brad@lassey.us", "real_name": "Brad Lassey [:blassey] (use needinfo?)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "brad@lassey.us", "comment_count": 18, "comments": [{"text": "Created attachment 8511116\nmirror.patch\n\nSplitting out tab mirroring work from bug 1054959", "author": "brad@lassey.us", "id": 9497843, "time": "2014-10-24T16:27:12Z"}, {"text": "Comment on attachment 8511116\nmirror.patch\n\nAFAICT this just adding a Tools menu item, which is probably not ideal (not discoverable at all). Need to work with UX on a better option for that.\n\nOn my machine the menu appears and just doesn't have anything in it. It needs to be either hidden or disabled (UX call).\n\n>diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js\n\n>+function populateMirrorTabMenu(popup) {\n>+  let videoEl = this.target;\n\nNot used. Also should remove the reportError().\n\n>+        let width = gBrowser.selectedBrowser.contentWindow.scrollWidth;\n>+        let height = gBrowser.selectedBrowser.contentWindow.scrollHeight;\n\n>+        app.mirror(function() {}, window, viewport, function() {}, gBrowser.selectedBrowser.contentWindow);\n\nThese don't look very e10s friendly?", "author": "gavin.sharp@gmail.com", "id": 9614019, "time": "2014-11-20T00:09:06Z"}, {"text": "Created attachment 8531519\nmirror.patch\n\nI don't have a roku available in Portland, so this is untested.", "author": "brad@lassey.us", "id": 9656815, "time": "2014-12-03T08:23:15Z"}, {"text": "Created attachment 8534088\nmirror.patch\n\nThis works, as tested with rbarker's roku simulator[1]\n\n1] https://people.mozilla.org/~rbarker/roku-sim.tgz\n\nJesup, I changed our check for privileged callers in MediaManager. I suspect this is what we actually want here (testing the privilege level of the caller rather than the document), but this code dates back to the original implementation of GuM in bug 752352 and has since wound its way though a few refactors.", "author": "brad@lassey.us", "id": 9676074, "time": "2014-12-10T02:52:45Z"}, {"text": "Created attachment 8534096\nmirror.patch", "author": "brad@lassey.us", "id": 9676099, "time": "2014-12-10T03:05:30Z"}, {"text": "Comment on attachment 8534096\nmirror.patch\n\nReview of attachment 8534096:\n-----------------------------------------------------------------\n\nr- only because c++ callers of GetUserMedia() need to be modified to ensure they have a JS context (AutoNoJSAPI()) or the code needs to assume c++ callers are privileged in some manner (and be sure that's true).  SpeechAPI, and jib thinks some B2G callers call it directly.  If those are covered, r+", "author": "rjesup@jesup.org", "id": 9678333, "time": "2014-12-10T16:37:52Z"}, {"text": "Created attachment 8534410\nchrome_priv_check.patch", "author": "brad@lassey.us", "id": 9678521, "time": "2014-12-10T17:06:50Z"}, {"text": "Created attachment 8534411\nmirror.patch", "author": "brad@lassey.us", "id": 9678524, "time": "2014-12-10T17:07:12Z"}, {"text": "Comment on attachment 8534411\nmirror.patch\n\nReview of attachment 8534411:\n-----------------------------------------------------------------\n\nr?mfinkle for RokuApp.jsm and SimpleServiceDiscovery.jsm, r?mconley for everything else", "author": "brad@lassey.us", "id": 9689508, "time": "2014-12-12T20:36:26Z"}, {"text": "Comment on attachment 8534411\nmirror.patch\n\n>diff --git a/browser/base/content/content.js b/browser/base/content/content.js\n\n>+addMessageListener(\"secondscreen:tab-mirror\", function(message) {\n>+    try {\n>+        if (SimpleServiceDiscovery.numDevices() == 0) {\n\n>+            SimpleServiceDiscovery.registerDevice(rokuDevice);\n>+        }\n\nI'd rather not add SimpleServiceDiscovery.numDevices(), but just call SimpleServiceDiscovery.registerDevice(...) which will ignore the device if it's already registered. If you don't like the log-spew, we could remove that.\n\n>diff --git a/toolkit/modules/secondscreen/SimpleServiceDiscovery.jsm b/toolkit/modules/secondscreen/SimpleServiceDiscovery.jsm\n\n>+  numDevices: function numDevices() {\n>+    return this._devices.size;\n>+  },\n\nAs mentioned above, I'd rather not add this.\n\nr+ with the nits addressed", "author": "mark.finkle@gmail.com", "id": 9689575, "time": "2014-12-12T20:53:14Z"}, {"text": "(In reply to Mark Finkle (:mfinkle) from comment #9)\n> Comment on attachment 8534411\n> mirror.patch\n> \n> >diff --git a/browser/base/content/content.js b/browser/base/content/content.js\n> \n> >+addMessageListener(\"secondscreen:tab-mirror\", function(message) {\n> >+    try {\n> >+        if (SimpleServiceDiscovery.numDevices() == 0) {\n> \n> >+            SimpleServiceDiscovery.registerDevice(rokuDevice);\n> >+        }\n> \n> I'd rather not add SimpleServiceDiscovery.numDevices(), but just call\n> SimpleServiceDiscovery.registerDevice(...) which will ignore the device if\n> it's already registered. If you don't like the log-spew, we could remove\n> that.\nMy concern isn't log spew as much as we'll be calling this a lot, and for each mirroring end point we add (though currently we only have roku) and presumably checking the size of the map is O(1) while calling get is O(log(n)).\n> \n> >diff --git a/toolkit/modules/secondscreen/SimpleServiceDiscovery.jsm b/toolkit/modules/secondscreen/SimpleServiceDiscovery.jsm\n> \n> >+  numDevices: function numDevices() {\n> >+    return this._devices.size;\n> >+  },\n> \n> As mentioned above, I'd rather not add this.\n> \n> r+ with the nits addressed", "author": "brad@lassey.us", "id": 9689626, "time": "2014-12-12T21:04:04Z"}, {"text": "Comment on attachment 8534411\nmirror.patch\n\nReview of attachment 8534411:\n-----------------------------------------------------------------\n\nJust some minor suggestions - but in general, this looks good.\n\n::: browser/base/content/browser.js\n@@ +2989,5 @@\n> +  let services = CastingApps.getServicesForMirroring();\n> +  services.forEach(service => {\n> +    let item = doc.createElement(\"menuitem\");\n> +    item.setAttribute(\"label\", service.friendlyName);\n> +    item.addEventListener(\"command\", event => {\n\nInstead of attaching a command event listener to each item, I recommend the following:\n\n1) Having a single oncommand event handler set on the popup directly. That handler looks at the event target, extracts some unique service ID from it, retrieves the service for that unique ID, and then sends the message down to the selected browser.\n2) In populateMirrorTabMenu, for each service, append a menuitem, and set an attribute on that menuitem to be the unique ID for the service. This is what the oncommand handler will read.\n\n@@ +2990,5 @@\n> +  services.forEach(service => {\n> +    let item = doc.createElement(\"menuitem\");\n> +    item.setAttribute(\"label\", service.friendlyName);\n> +    item.addEventListener(\"command\", event => {\n> +      gBrowser.selectedBrowser.messageManager.sendAsyncMessage(\"secondscreen:tab-mirror\",\n\nBrowser's been using Capitalized message strings. Might as well stick with it - SecondScreen:tab-mirror\n\n::: browser/base/content/content.js\n@@ +78,5 @@\n>    docShell.mixedContentChannel = null;\n>  });\n>  \n> +addMessageListener(\"secondscreen:tab-mirror\", function(message) {\n> +    try {\n\nNit - the rest of this file has 2-space indentation. Let's keep rolling with that.\n\n@@ +92,5 @@\n> +            types: [\"video/mp4\"],\n> +            extensions: [\"mp4\"]\n> +            };\n> +\n> +        // Register targets\n\nBusted indentation\n\n@@ +93,5 @@\n> +            extensions: [\"mp4\"]\n> +            };\n> +\n> +        // Register targets\n> +            SimpleServiceDiscovery.registerDevice(rokuDevice);\n\nrokuDevice actually doesn't seem to be used elsewhere, so maybe just:\n\nSimpleServiceDiscovery.registerDevice({\n  id: \"roku:ecp\",\n  /* ... */\n});\n\n@@ +100,5 @@\n> +        if (app) {\n> +            let width = content.scrollWidth;\n> +            let height = content.scrollHeight;\n> +            let viewport = {cssWidth: width, cssHeight: height, width: width, height: height};\n> +            let en = Services.wm.getXULWindowEnumerator(null);\n\nThis doesn't appear to be used.\n\n@@ +103,5 @@\n> +            let viewport = {cssWidth: width, cssHeight: height, width: width, height: height};\n> +            let en = Services.wm.getXULWindowEnumerator(null);\n> +            app.mirror(function() {}, content, viewport, function() {}, content);\n> +        }\n> +    } catch (ex) {Cu.reportError(ex);}\n\nThis massive try-catch freaks me out. What does it protect us from? If we throw when receiving this message from the parent... I don't see bad things happening.\n\n::: browser/modules/CastingApps.jsm\n@@ +134,5 @@\n> +    let filteredServices = SimpleServiceDiscovery.services.filter(service => {\n> +      return service.mirror;\n> +    });\n> +\n> +    return filteredServices;\n\nMight as well just do:\n\nreturn SimpleServiceDiscovery.services.filter(service => service.mirror);", "author": "mconley@mozilla.com", "id": 9696115, "time": "2014-12-15T19:43:09Z"}, {"text": "Created attachment 8536841\nmirror.patch", "author": "brad@lassey.us", "id": 9697071, "time": "2014-12-15T23:05:07Z"}, {"text": "Comment on attachment 8536841\nmirror.patch\n\nReview of attachment 8536841:\n-----------------------------------------------------------------\n\nJust some last suggestions, and then let's land this puppy.\n\n(Note that I did not actually apply and test the patch - my review was strictly from inspection).\n\n::: browser/base/content/browser.js\n@@ +2976,5 @@\n>  \n> +function mirrorShow(popup) {\n> +  let services = CastingApps.getServicesForMirroring();\n> +  if (services.length == 0) {\n> +    popup.ownerDocument.getElementById(\"menu_mirrorTabCmd\").disabled = true;\n\npopup.ownerDocument.getElementById(\"menu_mirrorTabCmd\").disabled = !Services.length;\n\n@@ +2984,5 @@\n> +}\n> +\n> +function mirrorMenuItemClicked() {\n> +  gBrowser.selectedBrowser.messageManager.sendAsyncMessage(\"SecondScreen:tab-mirror\",\n> +                                                              {service: this._service});\n\nNit - indentation\n\nAlso, we generally use the event.originalTarget - so take an event argument to mirrorMenuItemClicked, and pass event.originalTarget._service.\n\n@@ +2996,5 @@\n> +  services.forEach(service => {\n> +    let item = doc.createElement(\"menuitem\");\n> +    item.setAttribute(\"label\", service.friendlyName);\n> +    item._service = service;\n> +    item.addEventListener(\"command\", mirrorMenuItemClicked, false);\n\ncapturing is false by default, so no need for the third parameter.", "author": "mconley@mozilla.com", "id": 9697114, "time": "2014-12-15T23:15:23Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/d0be7c6566ae\nhttps://hg.mozilla.org/mozilla-central/rev/a7770ec46f04", "author": "cbook@mozilla.com", "id": 9699094, "time": "2014-12-16T12:43:04Z"}, {"text": "Reading comment #1), who made the UX decision to have an always-present disabled menu instead of a hidden one, and where? \n\nI don't think this should be always-visible, considering most users don't actually have a device with which they can mirror. We can show them if/when they do.", "author": "gijskruitbosch+bugs@gmail.com", "id": 9710920, "time": "2014-12-18T19:29:13Z"}, {"text": "(In reply to :Gijs Kruitbosch from comment #15)\n> Reading comment #1), who made the UX decision to have an always-present\n> disabled menu instead of a hidden one, and where? \nno one", "author": "brad@lassey.us", "id": 9711119, "time": "2014-12-18T20:05:52Z"}, {"text": "(In reply to :Gijs Kruitbosch from comment #15)\n> Reading comment #1), who made the UX decision to have an always-present\n> disabled menu instead of a hidden one, and where? \n> \n> I don't think this should be always-visible, considering most users don't\n> actually have a device with which they can mirror. We can show them if/when\n> they do.\n\nI agree. Let's file a follow-up bug to get that menuitem hidden in those cases.", "author": "mconley@mozilla.com", "id": 9711133, "time": "2014-12-18T20:07:31Z"}], "cf_last_resolved": "2014-12-16T12:43:04Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2014-12-18T20:17:50Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "WebRTC", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla37", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "brad@lassey.us", "id": 181004, "name": "brad@lassey.us", "real_name": "Brad Lassey [:blassey] (use needinfo?)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "asmodeusme@yahoo.com", "id": 420570, "name": "asmodeusme@yahoo.com", "real_name": "Willy_ Foo_Foo"}, {"email": "brad@lassey.us", "id": 181004, "name": "brad@lassey.us", "real_name": "Brad Lassey [:blassey] (use needinfo?)"}, {"email": "carnold@mozilla.com", "id": 434526, "name": "carnold@mozilla.com", "real_name": "Christopher Arnold"}, {"email": "cweiner@mozilla.com", "id": 448611, "name": "cweiner@mozilla.com", "real_name": "Chad Weiner [:chadw]"}, {"email": "deb@mozilla.com", "id": 26758, "name": "deb@mozilla.com", "real_name": "Deb Richardson [:dria] (plz NEEDINFO)"}, {"email": "dtownsend@mozilla.com", "id": 91159, "name": "dtownsend@mozilla.com", "real_name": "Dave Townsend [:mossop]"}, {"email": "elancaster@mozilla.com", "id": 423519, "name": "elancaster@mozilla.com", "real_name": "Erin Lancaster [:elan]"}, {"email": "fabrice@desre.org", "id": 390071, "name": "fabrice@desre.org", "real_name": "[:fabrice] Fabrice Desr\u00e9"}, {"email": "francesco.lodolo@gmail.com", "id": 130462, "name": "francesco.lodolo@gmail.com", "real_name": "Francesco Lodolo [:flod]"}, {"email": "gavin.sharp@gmail.com", "id": 103593, "name": "gavin.sharp@gmail.com", "real_name": ":Gavin Sharp [email: gavin@gavinsharp.com]"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (under the weather; responses will be slow)"}, {"email": "gpascutto@mozilla.com", "id": 151147, "name": "gpascutto@mozilla.com", "real_name": "Gian-Carlo Pascutto [:gcp]"}, {"email": "jmoradi@mozilla.com", "id": 499935, "name": "jmoradi@mozilla.com", "real_name": "Javaun Moradi [:javaun]"}, {"email": "jnagel@mozilla.com", "id": 437883, "name": "jnagel@mozilla.com", "real_name": "Joanne Nagel"}, {"email": "jsavage@mozilla.com", "id": 495454, "name": "jsavage@mozilla.com", "real_name": "Joni Savage (\"need info\" me)"}, {"email": "krudnitski@mozilla.com", "id": 442817, "name": "krudnitski@mozilla.com", "real_name": "Karen Rudnitski [:kar]"}, {"email": "kwierso@gmail.com", "id": 308534, "name": "kwierso@gmail.com", "real_name": "Wes Kocher (:KWierso)"}, {"email": "l10n@mozilla.com", "id": 215498, "name": "l10n@mozilla.com", "real_name": "Axel Hecht [:Pike]"}, {"email": "madhava@mozilla.com", "id": 247483, "name": "madhava@mozilla.com", "real_name": "Madhava Enros [:madhava]"}, {"email": "mark.finkle@gmail.com", "id": 252194, "name": "mark.finkle@gmail.com", "real_name": "Mark Finkle (:mfinkle) (use needinfo?)"}, {"email": "mconley@mozilla.com", "id": 403756, "name": "mconley@mozilla.com", "real_name": "Mike Conley (:mconley) (:\u2699\ufe0f) (Totally backlogged on reviews and needinfos)"}, {"email": "mmucci@mozilla.com", "id": 458208, "name": "mmucci@mozilla.com", "real_name": "Marco Mucci [:MarcoM]"}, {"email": "rbarker@mozilla.com", "id": 480362, "name": "rbarker@mozilla.com", "real_name": "Randall Barker [:rbarker]"}, {"email": "rjesup@jesup.org", "id": 11539, "name": "rjesup@jesup.org", "real_name": "Randell Jesup [:jesup]"}, {"email": "rtanglao@mozilla.com", "id": 352356, "name": "rtanglao@mozilla.com", "real_name": "Roland Tanglao needinfo please :rolandtanglao, :mohnkuchen, :adobo, :sinigang, :roland"}, {"email": "schen@mozilla.com", "id": 424297, "name": "schen@mozilla.com", "real_name": "Susan Chen"}, {"email": "sfranks@mozilla.com", "id": 488243, "name": "sfranks@mozilla.com", "real_name": "Sevaan Franks [:sevaan]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8511116, "added": "review?(gavin.sharp@gmail.com)"}], "who": "brad@lassey.us", "when": "2014-10-24T16:27:12Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "blassey.bugs@lassey.us"}], "who": "brad@lassey.us", "when": "2014-10-29T16:51:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "carnold@mozilla.com"}], "who": "carnold@mozilla.com", "when": "2014-11-06T22:46:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gavin.sharp@gmail.com)", "attachment_id": 8511116, "added": "review-"}], "who": "gavin.sharp@gmail.com", "when": "2014-11-20T00:09:06Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8511116, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8531519, "added": "review?(gavin.sharp@gmail.com)"}], "who": "brad@lassey.us", "when": "2014-12-03T08:23:15Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8531519, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(gavin.sharp@gmail.com)", "attachment_id": 8531519, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8534088, "added": "review?(gavin.sharp@gmail.com), review?(rjesup@jesup.org)"}], "who": "brad@lassey.us", "when": "2014-12-10T02:52:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8534096, "added": "review?(gavin.sharp@gmail.com), review?(rjesup@jesup.org)"}], "who": "brad@lassey.us", "when": "2014-12-10T03:05:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(rjesup@jesup.org)", "attachment_id": 8534096, "added": "review-"}], "who": "rjesup@jesup.org", "when": "2014-12-10T16:37:52Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8534088, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(gavin.sharp@gmail.com), review?(rjesup@jesup.org)", "attachment_id": 8534088, "added": ""}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8534096, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(gavin.sharp@gmail.com)", "attachment_id": 8534096, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8534410, "added": "review?(rjesup@jesup.org)"}], "who": "brad@lassey.us", "when": "2014-12-10T17:06:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8534411, "added": "review?(gavin.sharp@gmail.com)"}], "who": "brad@lassey.us", "when": "2014-12-10T17:07:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(rjesup@jesup.org)", "attachment_id": 8534410, "added": "review+"}], "who": "rjesup@jesup.org", "when": "2014-12-10T21:39:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gpascutto@mozilla.com"}], "who": "gpascutto@mozilla.com", "when": "2014-12-11T17:11:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mconley@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "review?(gavin.sharp@gmail.com)", "attachment_id": 8534411, "added": "review?(mconley@mozilla.com), review?(mark.finkle@gmail.com)"}], "who": "brad@lassey.us", "when": "2014-12-12T20:36:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mark.finkle@gmail.com)", "attachment_id": 8534411, "added": "review+"}], "who": "mark.finkle@gmail.com", "when": "2014-12-12T20:53:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8534411, "added": ""}], "who": "mconley@mozilla.com", "when": "2014-12-15T19:43:09Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8534411, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8536841, "added": "review?(mconley@mozilla.com)"}], "who": "brad@lassey.us", "when": "2014-12-15T23:05:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8536841, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2014-12-15T23:15:23Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla37"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2014-12-16 04:43:04"}], "who": "cbook@mozilla.com", "when": "2014-12-16T12:43:04Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jsavage@mozilla.com"}], "who": "jsavage@mozilla.com", "when": "2014-12-17T22:10:05Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(blassey.bugs@lassey.us)"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2014-12-18T19:29:13Z"}, {"changes": [{"removed": "needinfo?(blassey.bugs@lassey.us)", "field_name": "flagtypes.name", "added": ""}], "who": "brad@lassey.us", "when": "2014-12-18T20:05:52Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1113299"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2014-12-18T20:17:50Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}