{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "dvander@alliedmods.net", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8609199}, {"creator": "dvander@alliedmods.net", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8609415}, {"creator": "dvander@alliedmods.net", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8609479}, {"creator": "mchang@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8609625}, {"creator": "dvander@alliedmods.net", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8610954}, {"creator": "dvander@alliedmods.net", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-06-01T00:08:03Z", "type_id": 4, "creation_date": "2015-05-29T01:06:28Z", "id": 1178115, "setter": "matt.woodrow@gmail.com"}, {"status": "+", "name": "review", "modification_date": "2015-06-04T22:18:55Z", "type_id": 4, "creation_date": "2015-06-04T21:28:12Z", "id": 1182500, "setter": "khuey@kylehuey.com"}], "content_type": "text/plain", "id": 8612641}], "classification": "Components", "creator": "mchang@mozilla.com", "cc": ["ajones@mozilla.com", "bas@basschouten.com", "bugs@junglecode.net", "dmajor@mozilla.com", "dtownsend@mozilla.com", "dvander@alliedmods.net", "gavin.sharp@gmail.com", "jmuizelaar@mozilla.com", "jstenback+bmo@gmail.com", "khuey@kylehuey.com", "lmandel@mozilla.com", "matt.woodrow@gmail.com", "mcastelluccio@mozilla.com", "mchang@mozilla.com", "mh+mozilla@glandium.org", "milan@mozilla.com", "smooney@mozilla.com", "tnikkel@gmail.com", "vladan.bugzilla@gmail.com"], "depends_on": [], "creation_time": "2015-05-22T01:57:33Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "x86", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["dev-doc-complete"], "summary": "Add an API for reading window contents using the OS, rather than the compositor backbuffer", "id": 1167477, "assigned_to_detail": {"email": "dvander@alliedmods.net", "id": 309316, "name": "dvander@alliedmods.net", "real_name": "David Anderson [:dvander] - inactive, e-mail if emergency"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "dvander@alliedmods.net", "comment_count": 20, "comments": [{"text": "Bug 1156135 reads back the source surface from the canvas to verify that the pixels that are painted are what we expect. One of the TODOs listed is to use OS APIs to get a screenshot of the area and check that pixels are what we expected. Do that on OS X and Windows in this bug.\n\nAs it stands today, I'm working on it on OSX and :dvander is working on it on Windows.", "author": "mchang@mozilla.com", "id": 10298720, "time": "2015-05-22T01:57:33Z"}, {"text": "Created attachment 8609199\napi, WIP\n\nthis just adds API to nsIWidget/PCompositor to take snapshots. also an untested windows implementation. still have to hook this up to DrawWindow (probably just a new flag makes sense).", "author": "dvander@alliedmods.net", "id": 10299173, "time": "2015-05-22T05:57:47Z"}, {"text": "There's two ways to approach the actual widget implementation: (1) snapshot the entire desktop, and attempt to fish out the window in question, or (2) ask the OS for only pixels in the window. For Windows, that'd be the difference between GetDC(GetDesktopWindow()) and GetDC(mWnd).\n\nI've heard that for (2), there are black-screen scenarios we still wouldn't catch due to seeing pixels before DWM composites them versus after. I'd like to understand what those are and if they're testable. (1) at the moment feels very risky since any sort of external application running could cause us to read back something unintended.", "author": "dvander@alliedmods.net", "id": 10299183, "time": "2015-05-22T06:04:17Z"}, {"text": "Created attachment 8609415\napi, WIP\n\nw/ a new flag to canvas.drawWindow()", "author": "dvander@alliedmods.net", "id": 10300751, "time": "2015-05-22T15:50:40Z"}, {"text": "Created attachment 8609479\napi, WIP", "author": "dvander@alliedmods.net", "id": 10301069, "time": "2015-05-22T16:53:05Z"}, {"text": "Comment on attachment 8609479\napi, WIP\n\nReview of attachment 8609479:\n-----------------------------------------------------------------\n\n::: gfx/layers/ipc/CompositorParent.cpp\n@@ +801,5 @@\n>  bool\n> +CompositorParent::RecvMakeWidgetSnapshot(const SurfaceDescriptor& aInSnapshot)\n> +{\n> +  RefPtr<DrawTarget> target = GetDrawTargetForDescriptor(aInSnapshot, gfx::BackendType::CAIRO);\n> +  if (!mWidget) {\n\nThe widget usually doesn't exist because we set it to nullptr when we allocate the PLayerTransactionParent.\n\nhttps://dxr.mozilla.org/mozilla-central/source/gfx/layers/ipc/CompositorParent.cpp?from=CompositorParent.cpp&case=true#1433", "author": "mchang@mozilla.com", "id": 10302285, "time": "2015-05-22T20:31:49Z"}, {"text": "Created attachment 8609625\nWIP - Snapshot Firefox via OS X API\n\nBased on patches in attachment 8609479 and attachment 8608496 from Bug 1156135. The screenshot doesn't actually show the red tile / playing movie from Matt's addon. Investigating.", "author": "mchang@mozilla.com", "id": 10302567, "time": "2015-05-22T21:21:56Z"}, {"text": "I'm thinking that this API should be async rather than sync. We should composite and wait for the host OS to finish desktop window compositing. On Windows this would be DWMFlush(), not sure about Windows XP. On Mac, there isn't any clean way to synchronously wait for a screen refresh. Once we get the notification that the host OS has composited, we take a screenshot. Otherwise, we might screenshot before the contents can be rendered on the screen. What do you think David?", "author": "mchang@mozilla.com", "id": 10303000, "time": "2015-05-22T23:54:59Z"}, {"text": "(In reply to Mason Chang [:mchang] from comment #7)\n> I'm thinking that this API should be async rather than sync. We should\n> composite and wait for the host OS to finish desktop window compositing. On\n> Windows this would be DWMFlush(), not sure about Windows XP. On Mac, there\n> isn't any clean way to synchronously wait for a screen refresh. Once we get\n> the notification that the host OS has composited, we take a screenshot.\n> Otherwise, we might screenshot before the contents can be rendered on the\n> screen. What do you think David?\n\nAsync seems fine. I'll take a stab at it tomorrow morning.", "author": "dvander@alliedmods.net", "id": 10308305, "time": "2015-05-26T05:55:14Z"}, {"text": "Created attachment 8610954\nwindows patch\n\nThis is the synchronous API w/ the flaws pointed out by Mason fixed. We're still not sure yet whether the OS X API will work so I kept the synchronous API for now.\n\nAppears to work with Matt's addon on my machine but probably needs more testing.", "author": "dvander@alliedmods.net", "id": 10313325, "time": "2015-05-27T01:43:56Z"}, {"text": "Comment on attachment 8610954\nwindows patch\n\nReview of attachment 8610954:\n-----------------------------------------------------------------\n\nImpl all looks good, just a little worried about the drawWindow API.\n\n::: dom/interfaces/canvas/nsIDOMCanvasRenderingContext2D.idl\n@@ +31,5 @@\n>    // Don't synchronously decode images - draw what we have\n>    const unsigned long DRAWWINDOW_ASYNC_DECODE_IMAGES = 0x10;\n> +  // Rather than use the compositor's snapshot, read from the operating\n> +  // system's view of the window instead.\n> +  const unsigned long DRAWWINDOW_USE_SCREEN_IMAGE = 0x20;\n\nThis API is getting a bit confusing.\n\nDRAWWINDOW_USE_WIDGET_LAYERS has the weird contract that it's only actually respected if the other flags you pass are compatible with it and the window size is <= the screen size. If it doesn't get used, then you get no notifications or errors, it just renders using a temporary (software) layer manager instead.\n\nDRAWWINDOW_USE_SCREEN_IMAGE now has basically the opposite, in that it always succeeds and ignores the other flags if they're not compatible. If the window is bigger than the screen, then the resulting snapshot will just be missing the overhanging bits.\n\nNeither of these seem particularly nice to work with.\n\nIt's an internal only API so not a huge deal, but it's probably best to just add a new function call for snapshotting the screen image and then we can not worry about what it might mean to ask for a drawWindow with USE_SCREEN_IMAGE but not DRAW_CARET and so on.", "author": "matt.woodrow@gmail.com", "id": 10318585, "time": "2015-05-28T01:50:34Z"}, {"text": "Created attachment 8612641\nwindows patch\n\nw/ new API", "author": "dvander@alliedmods.net", "id": 10324594, "time": "2015-05-29T01:06:28Z"}, {"text": "Comment on attachment 8612641\nwindows patch\n\nReview of attachment 8612641:\n-----------------------------------------------------------------\n\n::: browser/app/profile/extensions/sanity-gfx@mozilla.org/bootstrap.js\n@@ +92,5 @@\n>    // TODO: When Bug 1151611 lands we can test hardware video decoding status\n>    // directly instead of checking the pref.\n>    if (!testVideoRendering(ctx)) {\n>      reportResult(TEST_FAILED_VIDEO);\n> +    if (Preferences.get(\"media.hardware-video-decoding.enabled\", false)) {\n\nOops.\n\n::: dom/canvas/CanvasRenderingContext2D.cpp\n@@ +4847,5 @@\n> +    error.Throw(NS_ERROR_FAILURE);\n> +    return;\n> +  }\n> +\n> +  RefPtr<DataSourceSurface> data = snapshot->GetDataSurface();\n\nWhy do we need to convert to a data surface and then back into a source surface? mTarget->DrawSurface(snapshot) should just work.", "author": "matt.woodrow@gmail.com", "id": 10330112, "time": "2015-06-01T00:08:03Z"}, {"text": "(In reply to Matt Woodrow (:mattwoodrow) from comment #12)\n> ::: dom/canvas/CanvasRenderingContext2D.cpp\n> @@ +4847,5 @@\n> > +    error.Throw(NS_ERROR_FAILURE);\n> > +    return;\n> > +  }\n> > +\n> > +  RefPtr<DataSourceSurface> data = snapshot->GetDataSurface();\n> \n> Why do we need to convert to a data surface and then back into a source\n> surface? mTarget->DrawSurface(snapshot) should just work.\n\nYup you're right, that does work. Fixed locally.\n\nSo this patch is successfully capturing stuff off the screen, the problem is by the time we've composited, the window isn't actually painted by the OS yet. It looks like the simplest thing to do is to fire an OS-specific event/notification (unless one is already available - I couldn't see anything obvious), and have the addon only do its tests once that completes. That'll mean it tests a little later, but it won't block startup while waiting.", "author": "dvander@alliedmods.net", "id": 10330579, "time": "2015-06-01T07:35:07Z"}, {"text": "(In reply to David Anderson [:dvander] from comment #13)\n> \n> So this patch is successfully capturing stuff off the screen, the problem is\n> by the time we've composited, the window isn't actually painted by the OS\n> yet. It looks like the simplest thing to do is to fire an OS-specific\n> event/notification (unless one is already available - I couldn't see\n> anything obvious), and have the addon only do its tests once that completes.\n> That'll mean it tests a little later, but it won't block startup while\n> waiting.\n\nThat sounds like the right solution.", "author": "matt.woodrow@gmail.com", "id": 10334773, "time": "2015-06-02T08:07:14Z"}, {"text": "Comment on attachment 8612641\nwindows patch\n\nr? from a DOM peer for a chrome-only API addition to CanvasRenderingContext2D.webidl", "author": "dvander@alliedmods.net", "id": 10347843, "time": "2015-06-04T21:28:12Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/31fb1f0e59c1", "author": "pulsebot@bots.tld", "id": 10348256, "time": "2015-06-04T22:53:56Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/31fb1f0e59c1", "author": "cbook@mozilla.com", "id": 10350577, "time": "2015-06-05T13:31:29Z"}, {"text": "ddn info:\nChrome-only API addition to CanvasRenderingContext2D\n\n/**\n * Render the root widget of a window into the canvas. Unlike drawWindow,\n * this uses the operating system to snapshot the widget on-screen, rather\n * than reading from our own compositor.\n *\n * Currently, this is only supported on Windows, and only on widgets that\n * use OMTC, and only from within the chrome process.\n */\n[Throws, ChromeOnly]\nvoid drawWidgetAsOnScreen(Window window);\nTBD:\nhttps://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawWidgetAsOnScreen\nSee also \nhttps://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawWindow", "author": "fscholz@mozilla.com", "id": 10702138, "time": "2015-09-07T10:49:18Z"}, {"text": "Added https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawWidgetAsOnScreen", "author": "fscholz@mozilla.com", "id": 10710594, "time": "2015-09-09T14:15:25Z"}], "cf_last_resolved": "2015-06-05T13:31:29Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "29 Branch", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-09-09T14:15:25Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1173117], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Graphics", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox41": "fixed", "target_milestone": "mozilla41", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "mchang@mozilla.com", "id": 482523, "name": "mchang@mozilla.com", "real_name": "Mason Chang [Inactive]  [:mchang]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "ajones@mozilla.com", "id": 443088, "name": "ajones@mozilla.com", "real_name": "Anthony Jones (:kentuckyfriedtakahe, :k17e)"}, {"email": "bas@basschouten.com", "id": 272464, "name": "bas@basschouten.com", "real_name": "Bas Schouten (:bas.schouten)"}, {"email": "bugs@junglecode.net", "id": 384647, "name": "bugs@junglecode.net", "real_name": "Jet Villegas (:jet)"}, {"email": "dmajor@mozilla.com", "id": 477892, "name": "dmajor@mozilla.com", "real_name": "David Major [:dmajor]"}, {"email": "dtownsend@mozilla.com", "id": 91159, "name": "dtownsend@mozilla.com", "real_name": "Dave Townsend [:mossop]"}, {"email": "dvander@alliedmods.net", "id": 309316, "name": "dvander@alliedmods.net", "real_name": "David Anderson [:dvander] - inactive, e-mail if emergency"}, {"email": "gavin.sharp@gmail.com", "id": 103593, "name": "gavin.sharp@gmail.com", "real_name": ":Gavin Sharp [email: gavin@gavinsharp.com]"}, {"email": "jmuizelaar@mozilla.com", "id": 309398, "name": "jmuizelaar@mozilla.com", "real_name": "Jeff Muizelaar [:jrmuizel]"}, {"email": "jstenback+bmo@gmail.com", "id": 12352, "name": "jstenback+bmo@gmail.com", "real_name": "Johnny Stenback  (:jst)"}, {"email": "khuey@kylehuey.com", "id": 336670, "name": "khuey@kylehuey.com", "real_name": "Kyle Huey [:khuey] (Exited; not receiving bugmail, email if necessary)"}, {"email": "lmandel@mozilla.com", "id": 424995, "name": "lmandel@mozilla.com", "real_name": "Lawrence Mandel [:lmandel] (use needinfo)"}, {"email": "matt.woodrow@gmail.com", "id": 380838, "name": "matt.woodrow@gmail.com", "real_name": "Matt Woodrow (:mattwoodrow)"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mchang@mozilla.com", "id": 482523, "name": "mchang@mozilla.com", "real_name": "Mason Chang [Inactive]  [:mchang]"}, {"email": "mh+mozilla@glandium.org", "id": 47192, "name": "mh+mozilla@glandium.org", "real_name": "Mike Hommey [:glandium]"}, {"email": "milan@mozilla.com", "id": 456486, "name": "milan@mozilla.com", "real_name": "Milan Sreckovic [:milan]"}, {"email": "smooney@mozilla.com", "id": 395208, "name": "smooney@mozilla.com", "real_name": "Sheila Mooney"}, {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, {"email": "vladan.bugzilla@gmail.com", "id": 423812, "name": "vladan.bugzilla@gmail.com", "real_name": "Vladan Djeric (:vladan)"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bas@basschouten.com)"}], "who": "dvander@alliedmods.net", "when": "2015-05-22T06:04:17Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8609199, "added": "1"}], "who": "dvander@alliedmods.net", "when": "2015-05-22T15:50:40Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8609415, "added": "1"}], "who": "dvander@alliedmods.net", "when": "2015-05-22T16:53:05Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dvander@alliedmods.net)"}], "who": "mchang@mozilla.com", "when": "2015-05-22T23:54:59Z"}, {"changes": [{"removed": "needinfo?(dvander@alliedmods.net)", "field_name": "flagtypes.name", "added": ""}], "who": "dvander@alliedmods.net", "when": "2015-05-26T05:55:14Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8609479, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8610954, "added": "review?(matt.woodrow@gmail.com)"}], "who": "dvander@alliedmods.net", "when": "2015-05-27T01:43:56Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8610954, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(matt.woodrow@gmail.com)", "attachment_id": 8610954, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8612641, "added": "review?(matt.woodrow@gmail.com)"}], "who": "dvander@alliedmods.net", "when": "2015-05-29T01:06:28Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(matt.woodrow@gmail.com)", "attachment_id": 8612641, "added": "review+"}], "who": "matt.woodrow@gmail.com", "when": "2015-06-01T00:08:03Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "mchang@mozilla.com", "field_name": "assigned_to", "added": "dvander@alliedmods.net"}, {"removed": "Use OS API snapshotting to verify graphics runtime features rather than reading back the source surface", "field_name": "summary", "added": "Add an API for reading window contents using the OS, rather than the compositor backbuffer"}], "who": "dvander@alliedmods.net", "when": "2015-06-04T21:27:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "khuey@kylehuey.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8612641, "added": "review?(khuey@kylehuey.com)"}], "who": "dvander@alliedmods.net", "when": "2015-06-04T21:28:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(khuey@kylehuey.com)", "attachment_id": 8612641, "added": "review+"}], "who": "khuey@kylehuey.com", "when": "2015-06-04T22:18:55Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla41"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-06-05 06:31:29"}, {"removed": "---", "field_name": "cf_status_firefox41", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-06-05T13:31:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tnikkel@gmail.com"}], "who": "tnikkel@gmail.com", "when": "2015-06-05T19:52:58Z"}, {"changes": [{"removed": "1156135", "field_name": "depends_on", "added": ""}], "who": "dvander@alliedmods.net", "when": "2015-06-09T20:54:31Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1173117"}], "who": "dvander@alliedmods.net", "when": "2015-06-09T20:56:38Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed"}], "who": "fscholz@mozilla.com", "when": "2015-09-07T10:49:18Z"}, {"changes": [{"removed": "needinfo?(bas@basschouten.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dvander@alliedmods.net", "when": "2015-09-08T18:15:14Z"}, {"changes": [{"removed": "dev-doc-needed", "field_name": "keywords", "added": "dev-doc-complete"}], "who": "fscholz@mozilla.com", "when": "2015-09-09T14:15:25Z"}], "resolution": "FIXED", "op_sys": "Mac OS X", "cf_fx_points": "---", "cf_blocking_fennec": "---"}