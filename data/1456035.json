{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "kmaglione+bmo@mozilla.com", "mentors_detail": [], "depends_on": [1457012, 1458723], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["perf"], "cc_detail": [{"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (Vacation Jun 16-24) (no decent commit message means r-)"}, {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, {"email": "florian@queze.net", "id": 149052, "name": "florian@queze.net", "real_name": "Florian Qu\u00e8ze [:florian]"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (he/him)"}, {"email": "jorgk@jorgk.com", "id": 176914, "name": "jorgk@jorgk.com", "real_name": "Jorg K (GMT+2)"}, {"email": "kernp25@yahoo.com", "id": 436361, "name": "kernp25@yahoo.com", "real_name": ""}, {"email": "kvijayan@mozilla.com", "id": 436087, "name": "kvijayan@mozilla.com", "real_name": "Kannan Vijayan [:djvj]"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "mconley@mozilla.com", "id": 403756, "name": "mconley@mozilla.com", "real_name": "Mike Conley (:mconley) (:\u2699\ufe0f) (Catching up on needinfos / reviews)"}, {"email": "nfroyd@mozilla.com", "id": 417288, "name": "nfroyd@mozilla.com", "real_name": "Nathan Froyd [:froydnj]"}], "cf_last_resolved": "2018-05-29T23:29:12Z", "attachments": [{"creator": "kmaglione+bmo@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-25T20:25:26Z", "type_id": 4, "creation_date": "2018-04-23T04:00:23Z", "id": 1747501, "setter": "bzbarsky@mit.edu"}], "content_type": "text/x-review-board-request", "id": 8970068}, {"creator": "kmaglione+bmo@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-24T17:08:49Z", "type_id": 4, "creation_date": "2018-04-23T04:00:23Z", "id": 1747502, "setter": "continuation@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8970069}, {"creator": "kmaglione+bmo@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-23T21:56:58Z", "type_id": 4, "creation_date": "2018-04-23T04:00:23Z", "id": 1747503, "setter": "continuation@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8970070}, {"creator": "kmaglione+bmo@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-23T23:43:39Z", "type_id": 4, "creation_date": "2018-04-23T04:00:23Z", "id": 1747504, "setter": "continuation@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8970071}, {"creator": "kmaglione+bmo@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-24T16:12:52Z", "type_id": 4, "creation_date": "2018-04-23T20:01:31Z", "id": 1747887, "setter": "continuation@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8970312}, {"creator": "pulgasaur@mozilla.bugs", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/x-github-pull-request", "id": 8972399}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 46, "comments": [{"text": "This has been one of my pet peeves for a while.\n\nOur JS QueryInterface implementations get are expensive, and get called *a lot*. A native implementation could be much more efficient, even if it only cut out all of the XPC call overhead for equality checks. But removing the C++->JS call overhead should be a sizable added bonus.", "author": "kmaglione+bmo@mozilla.com", "id": 13225767, "time": "2018-04-23T03:19:32Z"}, {"text": "Created attachment 8970068\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks.\n\nReview commit: https://reviewboard.mozilla.org/r/238824/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/238824/", "author": "kmaglione+bmo@mozilla.com", "id": 13225787, "time": "2018-04-23T04:00:23Z"}, {"text": "Created attachment 8970069\nBug 1456035: Part 2 - Add fast path for XPCWrappedJS QueryInterface with native helper.\n\nWhen the QueryInterface method for an XPCWrappedJS class is implemented by the\nnative helper, we can avoid a lot of overhead by simply asking it if it\nsupports a given interface rather than going through all of the JSAPI call and\nexception handling overhead we'd need otherwise.\n\nReview commit: https://reviewboard.mozilla.org/r/238826/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/238826/", "author": "kmaglione+bmo@mozilla.com", "id": 13225788, "time": "2018-04-23T04:00:23Z"}, {"text": "Created attachment 8970070\nBug 1456035: Part 3 - Replace XPCOMUtils.generateQI with a stub for ChromeUtils.generateQI.\n\nReview commit: https://reviewboard.mozilla.org/r/238828/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/238828/", "author": "kmaglione+bmo@mozilla.com", "id": 13225789, "time": "2018-04-23T04:00:23Z"}, {"text": "Created attachment 8970071\nBug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI.\n\nThis also removes any redundant Ci.nsISupports elements in the interface\nlists.\n\nThis was done using the following script:\n\nhttps://bitbucket.org/kmaglione/m-c-rewrites/src/acecb401b76cfcc6ff7f0ba3ae69929955716152/processors/chromeutils-generateQI.jsm\n\nReview commit: https://reviewboard.mozilla.org/r/238830/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/238830/", "author": "kmaglione+bmo@mozilla.com", "id": 13225790, "time": "2018-04-23T04:00:23Z"}, {"text": "Comment on attachment 8970068\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/238824/diff/1-2/", "author": "kmaglione+bmo@mozilla.com", "id": 13225806, "time": "2018-04-23T04:22:53Z"}, {"text": "Comment on attachment 8970069\nBug 1456035: Part 2 - Add fast path for XPCWrappedJS QueryInterface with native helper.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/238826/diff/1-2/", "author": "kmaglione+bmo@mozilla.com", "id": 13225807, "time": "2018-04-23T04:22:53Z"}, {"text": "Comment on attachment 8970070\nBug 1456035: Part 3 - Replace XPCOMUtils.generateQI with a stub for ChromeUtils.generateQI.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/238828/diff/1-2/", "author": "kmaglione+bmo@mozilla.com", "id": 13225808, "time": "2018-04-23T04:22:53Z"}, {"text": "Comment on attachment 8970071\nBug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/238830/diff/1-2/", "author": "kmaglione+bmo@mozilla.com", "id": 13225809, "time": "2018-04-23T04:22:53Z"}, {"text": "Created attachment 8970312\nBug 1456035: Part 5 - Convert manual QueryInterface to ChromeUtils.generateQI.\n\nManually-implemented QueryInterface functions don't benefit from the\nMozQueryInterface optimizaions, and a lot of them are in hot code, and\nimplement a large number of interfaces.\n\nReview commit: https://reviewboard.mozilla.org/r/239114/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/239114/", "author": "kmaglione+bmo@mozilla.com", "id": 13227609, "time": "2018-04-23T20:01:31Z"}, {"text": "Comment on attachment 8970071\nBug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/238830/diff/2-3/", "author": "kmaglione+bmo@mozilla.com", "id": 13227610, "time": "2018-04-23T20:01:31Z"}, {"text": "Comment on attachment 8970070\nBug 1456035: Part 3 - Replace XPCOMUtils.generateQI with a stub for ChromeUtils.generateQI.\n\nhttps://reviewboard.mozilla.org/r/238828/#review244812\n\n::: js/xpconnect/loader/XPCOMUtils.jsm:104\n(Diff revision 2)\n>     * If the JS object has a classInfo property it'll be returned for the\n>     * nsIClassInfo IID, generateCI can be used to generate the classInfo\n>     * property.\n>     */\n>    generateQI: function XPCU_generateQI(interfaces) {\n> -    /* Note that Ci[Ci.x] == Ci.x for all x */\n> +    return ChromeUtils.generateQI(interfaces);\n\nYou should put in a comment here saying that it is better to call ChromeUtils.generateQI directly. I guess you didn't remove this entirely because you are worried about the handful of out-of-tree chrome JS users? Or is there some other reason you can't get rid of it after part 4?", "author": "continuation@gmail.com", "id": 13227892, "time": "2018-04-23T21:56:58Z"}, {"text": "Comment on attachment 8970070\nBug 1456035: Part 3 - Replace XPCOMUtils.generateQI with a stub for ChromeUtils.generateQI.\n\nhttps://reviewboard.mozilla.org/r/238828/#review244812\n\n> You should put in a comment here saying that it is better to call ChromeUtils.generateQI directly. I guess you didn't remove this entirely because you are worried about the handful of out-of-tree chrome JS users? Or is there some other reason you can't get rid of it after part 4?\n\nYeah, partly out-of-tree callers, and partly some uses in devtools that are hard to rewrite without manually rejiggering some imports in the files.\n\nI think we should probably aim to this when ChromeUtils.generateQI is available on all channels, so we don't need to worry about compatibility problems for system extensions.", "author": "kmaglione+bmo@mozilla.com", "id": 13227898, "time": "2018-04-23T21:59:59Z"}, {"text": "Comment on attachment 8970071\nBug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI.\n\nhttps://reviewboard.mozilla.org/r/238830/#review244828\n\nBe sure to post to dev-firefox and dev-platform about this after it lands.\n\n::: browser/extensions/pdfjs/content/PdfStreamConverter.jsm:812\n(Diff revision 3)\n>    contractID: \"@mozilla.org/streamconv;1?from=application/pdf&to=*/*\",\n>  \n>    classID2: Components.ID(\"{d0c5195d-e798-49d4-b1d3-9324328b2292}\"),\n>    contractID2: \"@mozilla.org/streamconv;1?from=application/pdf&to=text/html\",\n>  \n> -  QueryInterface: XPCOMUtils.generateQI([\n> +  QueryInterface: ChromeUtils.generateQI([Ci.nsIStreamConverter, Ci.nsIStreamListener, Ci.nsIRequestObserver]),\n\nI think you'll need to upstream these changes to pdf.js, or they'll get overwritten in the next update.\n\n::: caps/tests/mochitest/test_extensionURL.html:94\n(Diff revision 3)\n>    SubstitutionObserver.prototype = {\n>      onSetSubstitution: SpecialPowers.wrapCallback(function(root, uri) {\n>        popSubstitutionCallback(root);\n>      }),\n>      QueryInterface:\n> -      XPCOMUtils.generateQI([SpecialPowers.Ci.nsISupports,\n> +      ChromeUtils.generateQI([SpecialPowers.Ci.nsISupports,\n\nCan you remove this SpecialPowers.Ci.nsISupports here?\n\n::: taskcluster/docker/periodic-updates/scripts/getHSTSPreloadList.js:163\n(Diff revision 3)\n>    asyncPromptAuth(channel, callback, context, level, authInfo) {\n>      throw new Error(Cr.NS_ERROR_NOT_IMPLEMENTED);\n>    },\n>  \n>    getInterface(iid) {\n> -    return this.QueryInterface(iid);\n> +    return this.QueryInterfChromeUtils.generateQIryInterface: XPCOMUtils.generateQI([Ci.nsIChannelEventSink, Ci.nsIAuthPrompt2])\n\nSomething has gone terribly wrong here. :)\n\n::: toolkit/mozapps/extensions/internal/AddonTestUtils.jsm:161\n(Diff revision 3)\n>    getPluginBlocklistState(plugin, version, appVersion, toolkitVersion) {\n>      return Ci.nsIBlocklistService.STATE_NOT_BLOCKED;\n>    }\n>  }\n>  \n> -MockBlocklist.prototype.QueryInterface = XPCOMUtils.generateQI([\"nsIBlocklistService\"]);\n> +MockBlocklist.prototype.QueryInterface = ChromeUtils.generateQI([\"nsIBlocklistService\"]);\n\nDoes passing in a string like this work? Seems weird.", "author": "continuation@gmail.com", "id": 13228101, "time": "2018-04-23T23:43:39Z"}, {"text": "Comment on attachment 8970071\nBug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI.\n\nhttps://reviewboard.mozilla.org/r/238830/#review244828\n\n> Something has gone terribly wrong here. :)\n\nOof. I read over the patch twice. I guess that wasn't enough...", "author": "kmaglione+bmo@mozilla.com", "id": 13228111, "time": "2018-04-23T23:53:00Z"}, {"text": "I guess bug 1425616 is basically a dupe of this now? :-)", "author": "gijskruitbosch+bugs@gmail.com", "id": 13228118, "time": "2018-04-23T23:55:38Z"}, {"text": "(In reply to :Gijs (he/him) from comment #15)\n> I guess bug 1425616 is basically a dupe of this now? :-)\n\nOh, yeah. I remembered talking with people about it, but I couldn't find an existing bug. Thanks", "author": "kmaglione+bmo@mozilla.com", "id": 13228125, "time": "2018-04-23T23:57:38Z"}, {"text": "*** Bug 1425616 has been marked as a duplicate of this bug. ***", "author": "kmaglione+bmo@mozilla.com", "id": 13228127, "time": "2018-04-23T23:57:57Z"}, {"text": "Comment on attachment 8970312\nBug 1456035: Part 5 - Convert manual QueryInterface to ChromeUtils.generateQI.\n\nhttps://reviewboard.mozilla.org/r/239114/#review245080", "author": "continuation@gmail.com", "id": 13229988, "time": "2018-04-24T16:12:52Z"}, {"text": "Comment on attachment 8970068\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks.\n\nhttps://reviewboard.mozilla.org/r/238824/#review245082\n\n::: dom/base/MozQueryInterface.h:17\n(Diff revision 2)\n> +#include \"mozilla/ErrorResult.h\"\n> +\n> +namespace mozilla {\n> +namespace dom {\n> +\n> +class MozQueryInterface final : public NonRefcountedDOMObject\n\nI think the name of this class, or at least a comment, should indicate that this is only intended for use from JS. Also, this needs a comment indicating that the reason for this is to make QIs faster.\n\nAs a side note, a nice aspect of the way this is set up is that you could potentially create alternate implementations with a statically fixed of interfaces if somehow the C++ QI itself shows up as being too slow. I guess at that level the JS to C++ overhead is probably higher.", "author": "continuation@gmail.com", "id": 13230031, "time": "2018-04-24T16:25:43Z"}, {"text": "You should add a failure test case with a non-empty QI. I think your current tests would all pass if you had |return true| instead of |return CompareIIDs(aIID, aOther)| in QueriesTo.", "author": "continuation@gmail.com", "id": 13230101, "time": "2018-04-24T16:49:33Z"}, {"text": "Comment on attachment 8970069\nBug 1456035: Part 2 - Add fast path for XPCWrappedJS QueryInterface with native helper.\n\nhttps://reviewboard.mozilla.org/r/238826/#review245072\n\n::: js/xpconnect/src/XPCWrappedJSClass.cpp:238\n(Diff revision 2)\n>          }\n>      }\n>  \n> -    id = xpc_NewIDObject(cx, jsobj, aIID);\n> -    if (id) {\n> +    dom::MozQueryInterface* mozQI = nullptr;\n> +    if (NS_SUCCEEDED(UNWRAP_OBJECT(MozQueryInterface, &fun, mozQI))) {\n> +        success = mozQI->QueriesTo(aIID);\n\nYou could make this\nif (mozQI->QueriesTo(aIID))\n  return jsobj.get();\nelse\n  return nullptr;\nrather than dealing with this weird |success| thing. Then you also wouldn't need to touch the rest of the function.", "author": "continuation@gmail.com", "id": 13230168, "time": "2018-04-24T17:08:49Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #20)\n> You should add a failure test case with a non-empty QI. I think your current\n> tests would all pass if you had |return true| instead of |return\n> CompareIIDs(aIID, aOther)| in QueriesTo.\n\nThis test should cover that case:\n\n  Assert.throws(() => checkQI([], Ci.nsIPropertyBag),\n                e => e.result == Cr.NS_ERROR_NO_INTERFACE);", "author": "kmaglione+bmo@mozilla.com", "id": 13230490, "time": "2018-04-24T18:39:35Z"}, {"text": "Oh, right, an empty QI implicitly has nsISupports in the list.", "author": "continuation@gmail.com", "id": 13230494, "time": "2018-04-24T18:40:28Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #19)\n> As a side note, a nice aspect of the way this is set up is that you could\n> potentially create alternate implementations with a statically fixed of\n> interfaces if somehow the C++ QI itself shows up as being too slow. I guess\n> at that level the JS to C++ overhead is probably higher.\n\nI think the dynamic version would probably be faster at this point, because it sorts the IIDs and then does a binary search at query time. Unfortunately, there's no good way to sort a static list at compile time...\n\nIt might make the construction a bit faster if we had static lists, but I think the call-time overhead tends to be more important.\n\nThat said, in my profiles, the ~9ms of startup overhead from creating QueryInterface methods and ~15ms from calling them dropped to ~1ms after these changes. So we're probably in a pretty good situation for the time being.", "author": "kmaglione+bmo@mozilla.com", "id": 13230515, "time": "2018-04-24T18:48:20Z"}, {"text": "This seems like a big win at face value.  JS-based QI implementations are a pretty big deal and speeding them up is good.  Unless presented with arguments otherwise, I'm inclined to mark this p1 for 64.  Seeing as a bunch of the work is done and waiting for review, the landing confidence seems high as well.", "author": "kvijayan@mozilla.com", "id": 13230697, "time": "2018-04-24T19:44:40Z"}, {"text": "Comment on attachment 8970068\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks.\n\nhttps://reviewboard.mozilla.org/r/238824/#review245452\n\n::: dom/base/MozQueryInterface.h:17\n(Diff revision 2)\n> +#include \"mozilla/ErrorResult.h\"\n> +\n> +namespace mozilla {\n> +namespace dom {\n> +\n> +class MozQueryInterface final : public NonRefcountedDOMObject\n\nA class comment in this file (after the include guards, in a /** */ block) that describes what it's implementing would be nice.\n\n::: dom/base/MozQueryInterface.cpp:20\n(Diff revision 2)\n> +#include \"xpcjsid.h\"\n> +\n> +namespace mozilla {\n> +namespace dom {\n> +\n> +constexpr size_t IID_SIZE = 16;\n\nIs there a reason this can't be sizeof(nsIID)?\n\n::: dom/base/MozQueryInterface.cpp:81\n(Diff revision 2)\n> +    if (val.isNullOrUndefined()) {\n> +      continue;\n\nDoing this means that mis-spelling an interface will just silently be ignored.  Why is that the behavior we want?  I guess that's what you get now if you hand-write your QI...\n\nAt the very least this continue needs some documentation explaining why this is the behavior.\n\n::: dom/base/MozQueryInterface.cpp:84\n(Diff revision 2)\n> +    }\n> +\n> +    if (val.isNullOrUndefined()) {\n> +      continue;\n> +    }\n> +    if (!val.isObject() || !xpc::IsReflector(&val.toObject())) {\n\nWhy do you need the IsReflector() check here?  If that fails, UnwrapReflectorToISupports will just return null and we'll throw anyway, right?  So the IsReflector() check is redundant.\n\n::: dom/base/MozQueryInterface.cpp:109\n(Diff revision 2)\n> +  // We use BinarySearchIf here because nsTArray::ContainsSorted requires\n> +  // twice as many comparisons.\n\nAh, because it does an Equals(), then a LessThan()?\n\nThis is worth filing a followup bug on nsTArray.  It seems like we should be able to support having a comparator that provides a \"Compare\" operation returning a tristate, with fallback to the current setup if there is no \"Compare\".\n\n::: dom/base/MozQueryInterface.cpp:125\n(Diff revision 2)\n> +  } else if (!thisv.isObject()) {\n> +    aRv.Throw(NS_ERROR_UNEXPECTED);\n\nDo we really care about that case?  That is, can we just declare the legacycaller to return \"any\" and return thisv, whatever it is, if the IID matches.  One fewer compare in the common case, and if someone pulls a QI method off an object and calls it with a bogus \"this\".... well, it's no different from what happens right now with \"return this\" in XPCOMUtils_QueryInterface.\n\n::: dom/bindings/Bindings.conf:616\n(Diff revision 2)\n>      'headerFile': 'mozilla/storage/mozStorageStatementRow.h',\n>      'nativeType': 'mozilla::storage::StatementRow',\n>  },\n>  \n> +'MozQueryInterface': {\n> +    'wrapperCache': False,\n\nI wonder whether we can just automatically do this for the non-refcounted DOM object case... May be worth a followup.\n\n::: dom/chrome-webidl/ChromeUtils.webidl:8\n(Diff revision 2)\n>   * License, v. 2.0. If a copy of the MPL was not distributed with this file,\n>   * You can obtain one at http://mozilla.org/MPL/2.0/.\n>   */\n>  \n> +[ChromeOnly, Exposed=(Window,System,Worker)]\n> +interface MozQueryInterface {\n\nThis needs to be documented in terms of its semantics (e.g. what it returns).\n\n::: dom/chrome-webidl/ChromeUtils.webidl:213\n(Diff revision 2)\n> +   * Returns an optimized QueryInterface method which, when called from\n> +   * JavaScript, acts as an ordinary QueryInterface function call, and when\n> +   * called from XPConnect, circumvents JSAPI entirely.\n> +   */\n> +  [Affects=Nothing, NewObject, Throws]\n> +  MozQueryInterface generateQI(sequence<(DOMString or IID)> interfaces);\n\nShould document a few things:\n\n1)  What the DOMString bits of the sequence should be.\n2)  That nsISupports is auto-added and must not be passed in.\n3)  What happens with unrecognized strings.\n4)  What happens with \"unrecognized\" IID instances.", "author": "bzbarsky@mit.edu", "id": 13233628, "time": "2018-04-25T20:25:26Z"}, {"text": "Comment on attachment 8970068\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks.\n\nhttps://reviewboard.mozilla.org/r/238824/#review245452\n\n> Is there a reason this can't be sizeof(nsIID)?\n\nIt probably can. I meant to add a `static_assert(IID_SIZE <= sizeof(nsIID))`, but forgot before I pushed, but just defining it to sizeof(nsIID) might make more sense.\n\n> Doing this means that mis-spelling an interface will just silently be ignored.  Why is that the behavior we want?  I guess that's what you get now if you hand-write your QI...\n> \n> At the very least this continue needs some documentation explaining why this is the behavior.\n\nI don't particularly like it, but it's the behavior we get now with XPCOMUtils.generateQI, and there's some code that depends on it for interfaces that only exist in some places (e.g., Windows).\n\nI guess I could try removing it and make the callers that break explicitly check for interfaces that might not exist.\n\n> Why do you need the IsReflector() check here?  If that fails, UnwrapReflectorToISupports will just return null and we'll throw anyway, right?  So the IsReflector() check is redundant.\n\nI guess I don't.\n\n> Ah, because it does an Equals(), then a LessThan()?\n> \n> This is worth filing a followup bug on nsTArray.  It seems like we should be able to support having a comparator that provides a \"Compare\" operation returning a tristate, with fallback to the current setup if there is no \"Compare\".\n\nYeah, agreed. I'll file a follow-up for that.\n\n> Do we really care about that case?  That is, can we just declare the legacycaller to return \"any\" and return thisv, whatever it is, if the IID matches.  One fewer compare in the common case, and if someone pulls a QI method off an object and calls it with a bogus \"this\".... well, it's no different from what happens right now with \"return this\" in XPCOMUtils_QueryInterface.\n\nI guess it can. We don't actually call this method from the C++ side, so it only matters for JS callers anyway. But returning a non-object from QueryInterface is technically invalid...\n\n> This needs to be documented in terms of its semantics (e.g. what it returns).\n\nWill document here and in the header.", "author": "kmaglione+bmo@mozilla.com", "id": 13233669, "time": "2018-04-25T20:43:00Z"}, {"text": "I'm going to have to land this in two parts so that android hostutils can be updated again. :(\n\nI'll land the first part with a check in XPCOMUtils.generateQI to use ChromeUtils.generateQI if it exists and fall back to the old method if it doesn't, then back that out when I can land the rest.", "author": "kmaglione+bmo@mozilla.com", "id": 13233774, "time": "2018-04-25T21:20:29Z"}, {"text": "> and there's some code that depends on it for interfaces that only exist in some places\n\nOK.  Just document the behavior clearly, then.", "author": "bzbarsky@mit.edu", "id": 13233809, "time": "2018-04-25T21:32:06Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/a442c0b9dbbe4266c14928aad8e04b9b08e0429b\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks. r=bz\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0102a61e38ae9c52d35b8239ccb24f48718a2b5b\nBug 1456035: Part 2 - Add fast path for XPCWrappedJS QueryInterface with native helper. r=mccr8\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/affc06c38acd82a0773dd09465c2602e636fc08e\nBug 1456035: Part 3 - Replace XPCOMUtils.generateQI with a stub for ChromeUtils.generateQI. r=mccr8\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/2add2de30c229733a3d0f11843695fcda818fe94\nBug 1456035: Part 3.1 - Add temporary fallback XPCOMUtils.generateQI implementation for Android hostutils. r=me", "author": "kmaglione+bmo@mozilla.com", "id": 13234045, "time": "2018-04-25T23:13:34Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/63241afeab2051961234964ef091add0bde387cc\nBug 1456035: Follow-up: Delete redundant test_extensionURL.html, which fails with wrapper errors. r=me f=aswan CLOSED TREE", "author": "kmaglione+bmo@mozilla.com", "id": 13234141, "time": "2018-04-26T00:02:22Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/3e771c2f48b037b8fa9b6be2c4634e8debd2a2d1\nBug 1456035: Follow-up: Fix wrapper error in plain mochitest. r=bustage", "author": "kmaglione+bmo@mozilla.com", "id": 13234165, "time": "2018-04-26T00:37:36Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/a442c0b9dbbe\nhttps://hg.mozilla.org/mozilla-central/rev/0102a61e38ae\nhttps://hg.mozilla.org/mozilla-central/rev/affc06c38acd\nhttps://hg.mozilla.org/mozilla-central/rev/2add2de30c22\nhttps://hg.mozilla.org/mozilla-central/rev/63241afeab20\nhttps://hg.mozilla.org/mozilla-central/rev/3e771c2f48b0", "author": "apavel@mozilla.com", "id": 13234474, "time": "2018-04-26T06:15:04Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/abedb29f91fd6b736ed109dcefad1951450c7271\nBacked out changeset 2add2de30c22 (bug 1456035)\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c58f0b4dd8494f4a81c69b0315af223576660200\nBug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI. r=mccr8\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/8db81ce4d3a29fa0f9f69b904d2868e3b954bf39\nBug 1456035: Part 5 - Convert manual QueryInterface to ChromeUtils.generateQI. r=mccr8", "author": "kmaglione+bmo@mozilla.com", "id": 13239380, "time": "2018-04-27T22:36:28Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/ce1d5d55b9a4de3b1bff8cec17b2895a5b83e73a\nBug 1456035: Fix robocop bustage. r=bustage", "author": "kmaglione+bmo@mozilla.com", "id": 13239474, "time": "2018-04-28T00:13:38Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/c58f0b4dd849\nhttps://hg.mozilla.org/mozilla-central/rev/8db81ce4d3a2\nhttps://hg.mozilla.org/mozilla-central/rev/ce1d5d55b9a4", "author": "apavel@mozilla.com", "id": 13239959, "time": "2018-04-28T17:33:39Z"}, {"text": "Kris, what do we need to port here? Part 4 and 5? When will the original code stop working?", "author": "jorgk@jorgk.com", "id": 13239985, "time": "2018-04-28T18:01:21Z"}, {"text": "Just part 4. Part 5 is mostly just an optimization.\n\nXPCOMUtils.generateQI will keep working until at least 64, but if you have any calls with nsISupports in the interface list, they'll assert in debug builds.", "author": "kmaglione+bmo@mozilla.com", "id": 13240012, "time": "2018-04-28T18:52:06Z"}, {"text": "Just noticed :-( - Bug 1457713.", "author": "jorgk@jorgk.com", "id": 13240017, "time": "2018-04-28T19:00:47Z"}, {"text": "Comment on attachment 8970068\nBug 1456035: Part 1 - Add helper to generate native QueryInterface callbacks.\n\nhttps://reviewboard.mozilla.org/r/238824/#review245452\n\n> Yeah, agreed. I'll file a follow-up for that.\n\nFiled bug 1457728.", "author": "kmaglione+bmo@mozilla.com", "id": 13240117, "time": "2018-04-28T21:40:23Z"}, {"text": "Created attachment 8972399\nLink to GitHub pull-request: https://github.com/mozilla/activity-stream/pull/4131", "author": "pulgasaur@mozilla.bugs", "id": 13246797, "time": "2018-05-01T18:36:56Z"}, {"text": "Commit pushed to master at https://github.com/mozilla/activity-stream\n\nhttps://github.com/mozilla/activity-stream/commit/4cfb63564d2616726e67d63a761f529ceed767d7\nchore(mc): Port Bug 1456035: Part 4 - Convert callers of XPCOMUtils.generateQI to ChromeUtils.generateQI. r=mccr8 (#4131)", "author": "mozilla+bugcloser@davedash.com", "id": 13246806, "time": "2018-05-01T18:41:49Z"}, {"text": "Is this work pretty much wrapped? Can we remove the leave-open and close this out yet?", "author": "mconley@mozilla.com", "id": 13372913, "time": "2018-05-29T23:21:16Z"}, {"text": "Oh, yeah. Sorry.", "author": "kmaglione+bmo@mozilla.com", "id": 13372929, "time": "2018-05-29T23:29:12Z"}, {"text": "No worries! Thanks for your work here!", "author": "mconley@mozilla.com", "id": 13372959, "time": "2018-05-29T23:47:01Z"}], "id": 1456035, "priority": "P3", "cc": ["bzbarsky@mit.edu", "continuation@gmail.com", "florian@queze.net", "gijskruitbosch+bugs@gmail.com", "jorgk@jorgk.com", "kernp25@yahoo.com", "kvijayan@mozilla.com", "mcastelluccio@mozilla.com", "mconley@mozilla.com", "nfroyd@mozilla.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1457728"], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1425466, 1460092], "qa_contact": "", "creation_time": "2018-04-23T03:19:32Z", "cf_status_firefox_esr52": "---", "component": "XPConnect", "assigned_to_detail": {"email": "kmaglione+bmo@mozilla.com", "id": 106098, "name": "kmaglione+bmo@mozilla.com", "real_name": "Kris Maglione [:kmag]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "kmaglione+bmo@mozilla.com", "id": 106098, "name": "kmaglione+bmo@mozilla.com", "real_name": "Kris Maglione [:kmag]"}, "whiteboard": "[qf:p1:f64]", "mentors": [], "summary": "Add native QueryInterface helper with fast path for XPCWrappedJS", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-29T23:47:01Z", "assigned_to": "kmaglione+bmo@mozilla.com", "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970068, "added": "review?(bzbarsky@mit.edu)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970069, "added": "review?(continuation@gmail.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970070, "added": "review?(continuation@gmail.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970071, "added": "review?(continuation@gmail.com)"}, {"removed": "", "field_name": "cc", "added": "bzbarsky@mit.edu, continuation@gmail.com"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-04-23T04:00:23Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kernp25@yahoo.com"}], "who": "kernp25@yahoo.com", "when": "2018-04-23T13:03:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970312, "added": "review?(continuation@gmail.com)"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-04-23T20:01:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(continuation@gmail.com)", "attachment_id": 8970070, "added": "review+"}], "who": "continuation@gmail.com", "when": "2018-04-23T21:56:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(continuation@gmail.com)", "attachment_id": 8970071, "added": "review+"}], "who": "continuation@gmail.com", "when": "2018-04-23T23:43:39Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gijskruitbosch+bugs@gmail.com"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-04-23T23:54:12Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1425466"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-04-23T23:55:38Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-24T00:05:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nfroyd@mozilla.com"}], "who": "nfroyd@mozilla.com", "when": "2018-04-24T00:28:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(continuation@gmail.com)", "attachment_id": 8970312, "added": "review+"}], "who": "continuation@gmail.com", "when": "2018-04-24T16:12:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "florian@queze.net"}], "who": "florian@queze.net", "when": "2018-04-24T16:26:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(continuation@gmail.com)", "attachment_id": 8970069, "added": "review+"}], "who": "continuation@gmail.com", "when": "2018-04-24T17:08:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kvijayan@mozilla.com"}, {"removed": "[qf]", "field_name": "whiteboard", "added": "[qf:p1:f64]"}], "who": "kvijayan@mozilla.com", "when": "2018-04-24T19:44:40Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}], "who": "bugs@pettay.fi", "when": "2018-04-25T10:44:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8970068, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2018-04-25T20:25:26Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "leave-open"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-04-25T21:20:29Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1457012"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-04-25T22:39:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jorgk@jorgk.com"}], "who": "jorgk@jorgk.com", "when": "2018-04-28T18:01:21Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1457728"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-04-28T21:39:03Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mconley@mozilla.com"}], "who": "mconley@mozilla.com", "when": "2018-04-30T21:15:03Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1458723"}], "who": "jan@ikenmeyer.eu", "when": "2018-05-02T23:16:36Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1460092"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-05-08T23:21:06Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kmaglione+bmo@mozilla.com)"}], "who": "mconley@mozilla.com", "when": "2018-05-29T23:21:16Z"}, {"changes": [{"removed": "leave-open", "field_name": "keywords", "added": ""}, {"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "needinfo?(kmaglione+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-29 23:29:12"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-05-29T23:29:12Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}