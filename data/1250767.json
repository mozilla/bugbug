{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bobbyholley@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-02-24T03:02:52Z", "type_id": 4, "creation_date": "2016-02-24T02:51:13Z", "id": 1347878, "setter": "cam@mcc.id.au"}], "content_type": "text/plain", "id": 8722804}, {"creator": "bobbyholley@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-02-24T03:05:53Z", "type_id": 4, "creation_date": "2016-02-24T02:51:26Z", "id": 1347879, "setter": "cam@mcc.id.au"}, {"status": "+", "name": "review", "modification_date": "2016-02-24T03:51:25Z", "type_id": 4, "creation_date": "2016-02-24T02:51:26Z", "id": 1347880, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8722805}, {"creator": "bobbyholley@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-02-24T03:11:17Z", "type_id": 4, "creation_date": "2016-02-24T02:51:39Z", "id": 1347881, "setter": "cam@mcc.id.au"}, {"status": "+", "name": "review", "modification_date": "2016-02-24T03:50:02Z", "type_id": 4, "creation_date": "2016-02-24T02:51:39Z", "id": 1347882, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8722806}], "classification": "Components", "creator": "bobbyholley@gmail.com", "cc": ["bobbyholley@gmail.com", "bugs@pettay.fi", "bzbarsky@mit.edu", "cam@mcc.id.au"], "depends_on": [1250379], "creation_time": "2016-02-24T02:40:25Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Implement basic DOM bindings for Servo", "id": 1250767, "assigned_to_detail": {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (:bholley)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "bobbyholley@gmail.com", "comment_count": 18, "comments": [{"text": "We've had these scattered across a bunch of patches, and it's time to get them in the tree.", "author": "bobbyholley@gmail.com", "id": 11190140, "time": "2016-02-24T02:40:25Z"}, {"text": "Created attachment 8722804\nPart 1 - Basic Servo Bindings. v1", "author": "bobbyholley@gmail.com", "id": 11190157, "time": "2016-02-24T02:51:13Z"}, {"text": "Created attachment 8722805\nPart 2 - Add support for hanging servo node data off Gecko nodes. v1", "author": "bobbyholley@gmail.com", "id": 11190158, "time": "2016-02-24T02:51:26Z"}, {"text": "Created attachment 8722806\nPart 3 - Reorder Gecko EventState to match Servo's ElementState, and add an API to let Servo access it. v1", "author": "bobbyholley@gmail.com", "id": 11190160, "time": "2016-02-24T02:51:39Z"}, {"text": "Comment on attachment 8722804\nPart 1 - Basic Servo Bindings. v1\n\nReview of attachment 8722804:\n-----------------------------------------------------------------\n\n::: layout/style/ServoBindings.cpp\n@@ +100,5 @@\n> +\n> +int\n> +Gecko_IsLink(RawGeckoElement* aElement)\n> +{\n> +  return aElement->State().HasAtLeastOneOfStates(NS_EVENT_STATE_VISITED | NS_EVENT_STATE_UNVISITED);\n\nUse nsCSSRuleProcessor::IsLink() to save repeating the HasAtLeastOneOfStates(...), and to use StyleState() so that selector matching takes notice of any locked state set from devtools.\n\n@@ +111,5 @@\n> +\n> +int\n> +Gecko_IsVisitedLink(RawGeckoElement* aElement)\n> +{\n> +  return aElement->State().HasState(NS_EVENT_STATE_VISITED);\n\nUse StyleState().\n\n@@ +117,5 @@\n> +\n> +int\n> +Gecko_IsUnvisitedLink(RawGeckoElement* aElement)\n> +{\n> +  return aElement->State().HasState(NS_EVENT_STATE_UNVISITED);\n\nAnd here.\n\n::: layout/style/ServoBindings.h\n@@ +1,1 @@\n> +/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\nFWIW this differs from https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Coding_Style#Mode_Line\n\n@@ +3,5 @@\n> + * License, v. 2.0. If a copy of the MPL was not distributed with this\n> + * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n> +\n> +#ifndef mozilla_servo_ExternalAPI_h\n> +#define mozilla_servo_ExternalAPI_h\n\ns/ExternalAPI/ServoBindings/\n\n@@ +66,5 @@\n> +#ifdef __cplusplus\n> +} // extern \"C\"\n> +#endif\n> +\n> +#endif // mozilla_servo_ExternalAPI_h\n\nAnd here.", "author": "cam@mcc.id.au", "id": 11190174, "time": "2016-02-24T03:02:52Z"}, {"text": "Comment on attachment 8722805\nPart 2 - Add support for hanging servo node data off Gecko nodes. v1\n\nReview of attachment 8722805:\n-----------------------------------------------------------------\n\nr=me on the layout/ bits.\n\n::: dom/base/nsINode.cpp\n@@ +25,5 @@\n>  #include \"mozilla/css/StyleRule.h\"\n>  #include \"mozilla/dom/Element.h\"\n>  #include \"mozilla/dom/Event.h\"\n>  #include \"mozilla/dom/ShadowRoot.h\"\n> +#include \"mozilla/servo/ExternalAPI.h\"\n\n\"mozilla/ServoBindings.h\"", "author": "cam@mcc.id.au", "id": 11190180, "time": "2016-02-24T03:05:53Z"}, {"text": "Comment on attachment 8722806\nPart 3 - Reorder Gecko EventState to match Servo's ElementState, and add an API to let Servo access it. v1\n\nReview of attachment 8722806:\n-----------------------------------------------------------------\n\n::: dom/events/EventStates.h\n@@ +179,5 @@\n> + * long as Servo never supports a state that Gecko doesn't).\n> + *\n> + * This is unfortunately rather fragile for now, but we should soon have\n> + * the infrastructure to statically-assert that these match up. If you\n> + * need to change these, please notify somebody involved with Stylo.\n\nCan you add a link in the comment here to Servo's ElementState definition?  (And also add a corresponding comment to element_state.rs?)\n\n::: layout/style/ServoBindings.cpp\n@@ +94,5 @@\n>  \n> +uint8_t\n> +Gecko_ElementState(RawGeckoElement* aElement)\n> +{\n> +  return aElement->State().GetInternalValue() & ((1 << (NS_EVENT_STATE_HIGHEST_SERVO_BIT + 1)) - 1);\n\nStyleState()\n\nAnd please wrap at 80 columns.", "author": "cam@mcc.id.au", "id": 11190186, "time": "2016-02-24T03:11:17Z"}, {"text": "Comment on attachment 8722806\nPart 3 - Reorder Gecko EventState to match Servo's ElementState, and add an API to let Servo access it. v1\n\nSo any time Servo adds a state we will need to do more reordering here, right?\n\nThat's fairly annoying, and _definitely_ fragile.  Can we get Servo to use states with values that match the Gecko ones, possibly?\n\nr=me, I guess, but I'm not super-happy with this...", "author": "bzbarsky@mit.edu", "id": 11190223, "time": "2016-02-24T03:50:02Z"}, {"text": "Comment on attachment 8722805\nPart 2 - Add support for hanging servo node data off Gecko nodes. v1\n\nr=me", "author": "bzbarsky@mit.edu", "id": 11190225, "time": "2016-02-24T03:51:25Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #7)\n> Comment on attachment 8722806\n> Part 3 - Reorder Gecko EventState to match Servo's ElementState, and add an\n> API to let Servo access it. v1\n> \n> So any time Servo adds a state we will need to do more reordering here,\n> right?\n> \n> That's fairly annoying, and _definitely_ fragile.  Can we get Servo to use\n> states with values that match the Gecko ones, possibly?\n> \n> r=me, I guess, but I'm not super-happy with this...\n\nIt's possible that, with a more advanced binding generator and various other things, we might be able to use the gecko values directly from servo. It would be tricky though, because we'd somehow need to associate NS_EVENT_STATE_HOVER with :hover in a stylesheet, which is tough to do automatically.\n\nAnyway, I'm not super happy with it either, but I don't think there's much point in worrying about it for now. I'll add it to the list of things to sort out if we go production with this.", "author": "bobbyholley@gmail.com", "id": 11190294, "time": "2016-02-24T05:18:16Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=3d1889ab2d81", "author": "bobbyholley@gmail.com", "id": 11190319, "time": "2016-02-24T05:48:45Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=3e0d3ed9f499", "author": "bobbyholley@gmail.com", "id": 11192705, "time": "2016-02-24T21:02:30Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/24309d9b5c7e\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/59ee7ae2519d\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/796b681561a7", "author": "pulsebot@bots.tld", "id": 11192708, "time": "2016-02-24T21:03:02Z"}, {"text": "Backed out for Windows bustage: https://treeherder.mozilla.org/#/jobs?repo=mozilla-inbound&revision=2dd26535e73c\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/2dd26535e73c\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/198c8498c62e\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0b3ff4c722a6\n\nPush with failures: https://treeherder.mozilla.org/#/jobs?repo=mozilla-inbound&revision=796b681561a7\nFailure log: https://treeherder.mozilla.org/logviewer.html#?job_id=22312413&repo=mozilla-inbound\n\n13:22:37     INFO -  c:\\builds\\moz2_slave\\m-in-w32-000000000000000000000\\build\\src\\dom\\html\\nsGenericHTMLElement.h(348) : error C3668: 'nsGenericHTMLElement::GetClassNameW' : method with override specifier 'override' did not override any base class methods\n13:22:37     INFO -  c:\\builds\\moz2_slave\\m-in-w32-000000000000000000000\\build\\src\\dom\\html\\nsGenericHTMLElement.h(348) : error C2039: 'GetClassNameW' : is not a member of 'mozilla::dom::Element'\n13:22:37     INFO -          c:\\builds\\moz2_slave\\m-in-w32-000000000000000000000\\build\\src\\obj-firefox\\dist\\include\\mozilla/dom/Element.h(141) : see declaration of 'mozilla::dom::Element'\n13:22:37     INFO -  c:/builds/moz2_slave/m-in-w32-000000000000000000000/build/src/layout/style/nsStyleStruct.cpp(3760) : error C2872: 'Side' : ambiguous symbol\n13:22:37     INFO -          could be 'c:\\builds\\moz2_slave\\m-in-w32-000000000000000000000\\build\\src\\layout\\style\\nsStyleConsts.h(19) : mozilla::Side mozilla::css::Side'\n13:22:37     INFO -          or       'c:\\builds\\moz2_slave\\m-in-w32-000000000000000000000\\build\\src\\obj-firefox\\dist\\include\\mozilla\\gfx\\Types.h(376) : mozilla::Side'\n13:22:37     INFO -  c:/builds/moz2_slave/m-in-w32-000000000000000000000/build/src/config/rules.mk:964: recipe for target 'Unified_cpp_layout_style3.obj' failed\n13:22:37     INFO -  mozmake.EXE[5]: *** [Unified_cpp_layout_style3.obj] Error 2\n13:22:37     INFO -  mozmake.EXE[5]: Leaving directory 'c:/builds/moz2_slave/m-in-w32-000000000000000000000/build/src/obj-firefox/layout/style'\n13:22:37     INFO -  c:/builds/moz2_slave/m-in-w32-000000000000000000000/build/src/config/recurse.mk:71: recipe for target 'layout/style/target' failed\n13:22:37     INFO -  mozmake.EXE[4]: *** [layout/style/target] Error 2\n13:22:37     INFO -  mozmake.EXE[4]: *** Waiting for unfinished jobs....", "author": "aryx.bugmail@gmx-topmail.de", "id": 11192906, "time": "2016-02-24T21:59:24Z"}, {"text": "I think I found the culprit.  Try run with the fix: https://treeherder.mozilla.org/#/jobs?repo=try&revision=5d14ad785657", "author": "cam@mcc.id.au", "id": 11192986, "time": "2016-02-24T22:13:39Z"}, {"text": "If that fixes it, please file a bug on moving AnnotateCrashReport to a less evil header?", "author": "bzbarsky@mit.edu", "id": 11193011, "time": "2016-02-24T22:16:42Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/ee63c83bf272\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7661eb78c9ac\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/a746bcde4833\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/b5859c104f63", "author": "pulsebot@bots.tld", "id": 11193341, "time": "2016-02-25T00:09:44Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/ee63c83bf272\nhttps://hg.mozilla.org/mozilla-central/rev/7661eb78c9ac\nhttps://hg.mozilla.org/mozilla-central/rev/a746bcde4833\nhttps://hg.mozilla.org/mozilla-central/rev/b5859c104f63", "author": "cbook@mozilla.com", "id": 11194550, "time": "2016-02-25T11:16:11Z"}], "cf_last_resolved": "2016-02-25T11:16:11Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-02-29T17:41:37Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1243581, 1250788], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "CSS Parsing and Computation", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla47", "cf_status_firefox47": "fixed", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (:bholley)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (:bholley)"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (no decent commit message means r-)"}, {"email": "cam@mcc.id.au", "id": 54040, "name": "cam@mcc.id.au", "real_name": "Cameron McCormack (:heycam) (away for the moment)"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "cf_qa_whiteboard": "", "history": [{"changes": [{"removed": "", "field_name": "depends_on", "added": "1250379"}], "who": "bobbyholley@gmail.com", "when": "2016-02-24T02:48:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8722804, "added": "review?(cam@mcc.id.au)"}], "who": "bobbyholley@gmail.com", "when": "2016-02-24T02:51:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8722805, "added": "review?(cam@mcc.id.au), review?(bzbarsky@mit.edu)"}], "who": "bobbyholley@gmail.com", "when": "2016-02-24T02:51:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8722806, "added": "review?(cam@mcc.id.au), review?(bzbarsky@mit.edu)"}], "who": "bobbyholley@gmail.com", "when": "2016-02-24T02:51:39Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Part 3- Reorder Gecko EventState to match Servo's ElementState, and add an API to let Servo access it. v1", "attachment_id": 8722806, "added": "Part 3 - Reorder Gecko EventState to match Servo's ElementState, and add an API to let Servo access it. v1"}], "who": "bobbyholley@gmail.com", "when": "2016-02-24T02:51:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(cam@mcc.id.au)", "attachment_id": 8722804, "added": "review+"}], "who": "cam@mcc.id.au", "when": "2016-02-24T03:02:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(cam@mcc.id.au)", "attachment_id": 8722805, "added": "review+"}], "who": "cam@mcc.id.au", "when": "2016-02-24T03:05:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(cam@mcc.id.au)", "attachment_id": 8722806, "added": "review+"}], "who": "cam@mcc.id.au", "when": "2016-02-24T03:11:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8722806, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2016-02-24T03:50:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8722805, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2016-02-24T03:51:25Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1250788"}], "who": "cam@mcc.id.au", "when": "2016-02-24T06:00:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bobbyholley@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bobbyholley@gmail.com)"}], "who": "aryx.bugmail@gmx-topmail.de", "when": "2016-02-24T21:59:24Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla47"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-02-25 03:16:11"}, {"removed": "---", "field_name": "cf_status_firefox47", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-02-25T11:16:11Z"}, {"changes": [{"removed": "needinfo?(bobbyholley@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bobbyholley@gmail.com", "when": "2016-02-29T17:41:37Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}