{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "+", "cf_tracking_firefox62": "---", "creator": "igoldan@mozilla.com", "mentors_detail": [], "depends_on": [1457510, 1458333], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox59": "unaffected", "keywords": ["perf", "regression", "talos-regression"], "cc_detail": [{"email": "bgrinstead@mozilla.com", "id": 476442, "name": "bgrinstead@mozilla.com", "real_name": "Brian Grinstead [:bgrins]"}, {"email": "enndeakin@gmail.com", "id": 6102, "name": "enndeakin@gmail.com", "real_name": "Neil Deakin"}, {"email": "igoldan@mozilla.com", "id": 590618, "name": "igoldan@mozilla.com", "real_name": "Ionu\u021b Goldan [:igoldan], Performance Sheriffing"}, {"email": "jan@ikenmeyer.eu", "id": 580271, "name": "jan@ikenmeyer.eu", "real_name": "Jan Andre Ikenmeyer [:darkspirit]"}, {"email": "jmaher@mozilla.com", "id": 324370, "name": "jmaher@mozilla.com", "real_name": "Joel Maher ( :jmaher ) (UTC-4)"}, {"email": "mconley@mozilla.com", "id": 403756, "name": "mconley@mozilla.com", "real_name": "Mike Conley (:mconley) (:\u2699\ufe0f) (Catching up on needinfos / reviews)"}, {"email": "rwood@mozilla.com", "id": 447387, "name": "rwood@mozilla.com", "real_name": "Robert Wood [:rwood]"}, {"email": "ryanvm@gmail.com", "id": 75935, "name": "ryanvm@gmail.com", "real_name": "Ryan VanderMeulen [:RyanVM]"}, {"email": "timdream@gmail.com", "id": 185001, "name": "timdream@gmail.com", "real_name": "Tim Guan-tin Chien [:timdream] (please needinfo)"}, {"email": "xidorn+moz@upsuper.org", "id": 373403, "name": "xidorn+moz@upsuper.org", "real_name": "Xidorn Quan [:xidorn] UTC+10"}], "cf_last_resolved": "2018-05-02T09:29:34Z", "attachments": [{"creator": "timdream@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-01T20:20:46Z", "type_id": 4, "creation_date": "2018-05-01T19:46:59Z", "id": 1751322, "setter": "mconley@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8971720}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 50, "comments": [{"text": "Talos has detected a Firefox performance regression from push:\n\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=2a760b1c0759ef67bb3fd7892a8cbac787f0a899&tochange=d3b5dfca6a90a05875837d846c3b299690b6e10b\n\nAs author of one of the patches included in that push, we need your help to address this regression.\n\nRegressions:\n\n  8%  cpstartup content-process-startup linux64 opt e10s stylo     196.50 -> 212.45\n  7%  cpstartup content-process-startup linux64 pgo e10s stylo     190.00 -> 203.08\n\n\nYou can find links to graphs and comparison views for each of the above tests at: https://treeherder.mozilla.org/perf.html#/alerts?id=12892\n\nOn the page above you can see an alert for each affected platform as well as a link to a graph showing the history of scores for this test. There is also a link to a treeherder page showing the Talos jobs in a pushlog format.\n\nTo learn more about the regressing test(s), please see: https://wiki.mozilla.org/Buildbot/Talos/Tests\n\nFor information on reproducing and debugging the regression, either on try or locally, see: https://wiki.mozilla.org/Buildbot/Talos/Running\n\n*** Please let us know your plans within 3 business days, or the offending patch(es) will be backed out! ***\n\nOur wiki page outlines the common responses and expectations: https://wiki.mozilla.org/Buildbot/Talos/RegressionBugsHandling", "author": "igoldan@mozilla.com", "id": 13231832, "time": "2018-04-25T07:28:22Z"}, {"text": ":timdream It looks like bug 1445214 caused a performance regression on Linux platforms. Is this something we can fix or should we consider accepting it or backing it out?", "author": "igoldan@mozilla.com", "id": 13231849, "time": "2018-04-25T07:40:44Z"}, {"text": "gecko profiles:\n\nbefore: https://perf-html.io/from-url/https%3A%2F%2Fqueue.taskcluster.net%2Fv1%2Ftask%2FJJvlgqdBS36xRPu0t8P-pw%2Fruns%2F0%2Fartifacts%2Fpublic%2Ftest_info%2Fprofile_cpstartup.zip\n\nafter: https://perf-html.io/from-url/https%3A%2F%2Fqueue.taskcluster.net%2Fv1%2Ftask%2FUTBApocORiWvLyCiqmTOZA%2Fruns%2F0%2Fartifacts%2Fpublic%2Ftest_info%2Fprofile_cpstartup.zip", "author": "jmaher@mozilla.com", "id": 13231862, "time": "2018-04-25T07:44:59Z"}, {"text": "I wouldn't have expected too much of a change from that patch since we are still building the same DOM. Interesting that it's only on Linux though.", "author": "bgrinstead@mozilla.com", "id": 13232515, "time": "2018-04-25T14:13:33Z"}, {"text": "Is there zero impact on this test on other platforms, or is it just a smaller regression that didn't get alerted?", "author": "bgrinstead@mozilla.com", "id": 13232643, "time": "2018-04-25T14:57:02Z"}, {"text": "We are building the same DOM but on a different timing, perhaps multiple times during start-up if bindings get load later.\n\nI'll look into this.", "author": "timdream@gmail.com", "id": 13232696, "time": "2018-04-25T15:13:36Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #4)\n> Is there zero impact on this test on other platforms, or is it just a\n> smaller regression that didn't get alerted?\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=autoland&originalRevision=2a760b1c0759ef67bb3fd7892a8cbac787f0a899&newProject=autoland&newRevision=d3b5dfca6a90a05875837d846c3b299690b6e10b&framework=1\n\nIt varies... I am re-triggering tests to find out with more confidence.", "author": "timdream@gmail.com", "id": 13233247, "time": "2018-04-25T18:11:54Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #6)\n> (In reply to Brian Grinstead [:bgrins] from comment #4)\n> > Is there zero impact on this test on other platforms, or is it just a\n> > smaller regression that didn't get alerted?\n\nActually, for this particular test, we don't seem to trigger it on all platforms. I have trouble with my account so I can't trigger it. Will have to wait for my account fixed.", "author": "timdream@gmail.com", "id": 13233565, "time": "2018-04-25T20:01:18Z"}, {"text": "OK. I don't know what happened to treeherder, but I can reproduce the performance regression on macOS.\n\nLet me try to fix this before the merge, backout if we couldn't find out a fix before that.", "author": "timdream@gmail.com", "id": 13233986, "time": "2018-04-25T22:45:38Z"}, {"text": "What I trying to do right now is to locate the call site that makes the things run slower. Surprisingly, I can make it slow not by implementing nothing in nsScrollbarFrame and just remove the -moz-binding in CSS.\n\nI don't find any reference to scrollbar that is relevant.\n\nThe next thing I will do is to look at the profile produced locally.", "author": "timdream@gmail.com", "id": 13234162, "time": "2018-04-26T00:35:23Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #9)\n> What I trying to do right now is to locate the call site that makes the\n> things run slower. Surprisingly, I can make it slow not by implementing\n> nothing in nsScrollbarFrame and just remove the -moz-binding in CSS.\n\nThat is.. surprising. Why would removing a binding attachment slow things down?", "author": "bgrinstead@mozilla.com", "id": 13235728, "time": "2018-04-26T15:34:51Z"}, {"text": "Hi Mike,\n\nWould you mind give me some pointers here? I am not entirely sure what I am seeing here. Let me know if you have some ideas that you would like me to try out. Thanks!", "author": "timdream@gmail.com", "id": 13236568, "time": "2018-04-26T20:19:33Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #10)\n> That is.. surprising. Why would removing a binding attachment slow things\n> down?\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=60c7341fb0a9&newProject=try&newRevision=6e5e3f3a6d76&framework=1\n\nFalse alarm; without both the patch and the binding speeds things up. I am probably not using Talos correctly locally here...", "author": "timdream@gmail.com", "id": 13236791, "time": "2018-04-26T21:29:24Z"}, {"text": "Looking at profiles from comment 2...", "author": "mconley@mozilla.com", "id": 13236813, "time": "2018-04-26T21:37:46Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #12)\n> (In reply to Brian Grinstead [:bgrins] from comment #10)\n> > That is.. surprising. Why would removing a binding attachment slow things\n> > down?\n> \n> https://treeherder.mozilla.org/perf.html#/\n> compare?originalProject=try&originalRevision=60c7341fb0a9&newProject=try&newR\n> evision=6e5e3f3a6d76&framework=1\n> \n> False alarm; without both the patch and the binding speeds things up. I am\n> probably not using Talos correctly locally here...\n\nWow, the results there imply there are some real perf gains to be had by speeding up scrollbars (i.e. by implementing them with a single layout frame). Looks like there are significant improvements in:\n* a11yr\n* cpstartup\n* sessionrestore\n* sessionrestore_many_windows\n* sessionrestore_no_auto_restore\n* tabpaint\n* tpaint\n* ts_paint\n\nI wonder if in the meantime we could limit the amount of NAC that we generate based on platform. For example, don't create extra scrollbarbuttons if they don't get rendered on that platform (right now that's controlled by media queries like -moz-scrollbar-start-backward).", "author": "bgrinstead@mozilla.com", "id": 13236981, "time": "2018-04-26T22:26:40Z"}, {"text": "It also disproves one theory I had which was that the XBL binding got lazily attached *after* whatever event cpstartup was waiting for, but that the NAC gets created before it. If that were the case I wouldn't expect cpstartup to budge when you removed the -moz-binding rule.", "author": "bgrinstead@mozilla.com", "id": 13236995, "time": "2018-04-26T22:31:07Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #14)\n> I wonder if in the meantime we could limit the amount of NAC that we\n> generate based on platform. For example, don't create extra scrollbarbuttons\n> if they don't get rendered on that platform (right now that's controlled by\n> media queries like -moz-scrollbar-start-backward).\n\nMaybe this the easy way out to make the nsScrolbarFrame implementation quicker than the XBL implementation :)\n\n--\n\nAnyway, for the profiles, I couldn't find any relevant functions with the word \"scroll\" in it so I started looking at the flame graph directly. The only box that is longer than 10ms in the \"after\" profiles comparing to the \"before\" profiles is \"(root scope) chrome://browser/content/content.js\". Could the difference of the DOM tree at the time affect the execution time of the script? I wonder if we iterate the DOM in any way from there.", "author": "timdream@gmail.com", "id": 13237017, "time": "2018-04-26T22:40:52Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #16)\n> (In reply to Brian Grinstead [:bgrins] from comment #14)\n> > I wonder if in the meantime we could limit the amount of NAC that we\n> > generate based on platform. For example, don't create extra scrollbarbuttons\n> > if they don't get rendered on that platform (right now that's controlled by\n> > media queries like -moz-scrollbar-start-backward).\n> \n> Maybe this the easy way out to make the nsScrolbarFrame implementation\n> quicker than the XBL implementation :)\n\nI guess you could do a compare push where you unconditionally remove them just to get a sense of how much potential win there is. Another thing to check could be to create the full NAC but don't propagate any attributes onto the children.", "author": "bgrinstead@mozilla.com", "id": 13237103, "time": "2018-04-26T23:18:51Z"}, {"text": "I did two other try pushes in an attempt to get higher resolution profiles\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=272ba72132105be7a779e0cf789463f41b453ea3 with patch\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=8e4f05dd7bdeb592febbfc3e5255fa727961a7cc without patch\n\nOther than content.js, this time, I can also see gtk_init slows down a lot. Could this be related?", "author": "timdream@gmail.com", "id": 13237181, "time": "2018-04-27T00:13:53Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #17)\n> I guess you could do a compare push where you unconditionally remove them\n> just to get a sense of how much potential win there is. Another thing to\n> check could be to create the full NAC but don't propagate any attributes\n> onto the children.\n\nYou would think improvement like this will show up in the profile, but it didn't. Is it possible that this function is fast but being called for too many times, so it didn't show up on the profile?\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=60c7341fb0a9&newProject=try&newRevision=f8392445a6aea4ff97c304a6438cb5bcb0713d5d&framework=1\n\n(The patch to test here is https://hg.mozilla.org/try/rev/c5be4fbe6626ec15bda877f05bc0cb6232bed2e3, which makes nsScrollbarFrame::UpdateChildrenAttributeValue() no-op)\n\n(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #16)\n> (In reply to Brian Grinstead [:bgrins] from comment #14)\n> > I wonder if in the meantime we could limit the amount of NAC that we\n> > generate based on platform. For example, don't create extra scrollbarbuttons\n> > if they don't get rendered on that platform (right now that's controlled by\n> > media queries like -moz-scrollbar-start-backward).\n> \n> Maybe this the easy way out to make the nsScrolbarFrame implementation\n> quicker than the XBL implementation :)\n\nI am tempted to just start working on this. Simply, probing LookAndFeel from nsScrolbarFrame and get rid of the CSS selectors and style. If this is done before the branch we should be able to avoid a backout from beta?", "author": "timdream@gmail.com", "id": 13237403, "time": "2018-04-27T04:22:09Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #19)\n> (In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment\n> #16)\n> > (In reply to Brian Grinstead [:bgrins] from comment #14)\n> > > I wonder if in the meantime we could limit the amount of NAC that we\n> > > generate based on platform. For example, don't create extra scrollbarbuttons\n> > > if they don't get rendered on that platform (right now that's controlled by\n> > > media queries like -moz-scrollbar-start-backward).\n> > \n> > Maybe this the easy way out to make the nsScrolbarFrame implementation\n> > quicker than the XBL implementation :)\n> \n> I am tempted to just start working on this. Simply, probing LookAndFeel from\n> nsScrolbarFrame and get rid of the CSS selectors and style. If this is done\n> before the branch we should be able to avoid a backout from beta?\n\nI'd like to see some initial numbers that would indicate if doing this will fix the regression (like a try push that just removes those elements unconditionally). If it's not looking like a pretty easy fix we should consult with :mconley on the impact/reliability of this test, but I'm guessing we should back out to give ourselves more time to figure it out with the merge coming up.", "author": "bgrinstead@mozilla.com", "id": 13237427, "time": "2018-04-27T04:52:20Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #20)\n> > I am tempted to just start working on this. Simply, probing LookAndFeel from\n> > nsScrolbarFrame and get rid of the CSS selectors and style. If this is done\n> > before the branch we should be able to avoid a backout from beta?\n> \n> I'd like to see some initial numbers that would indicate if doing this will\n> fix the regression (like a try push that just removes those elements\n> unconditionally). If it's not looking like a pretty easy fix we should\n> consult with :mconley on the impact/reliability of this test, but I'm\n> guessing we should back out to give ourselves more time to figure it out\n> with the merge coming up.\n\nOh wait, is the compare link in Comment 19 doing that? Because if so, that's a pretty serious potential improvement on a bunch of tests.. so it's definitely worth trying!", "author": "bgrinstead@mozilla.com", "id": 13237431, "time": "2018-04-27T04:55:46Z"}, {"text": "Here are the first runs for each of the profiles that timdream generated in comment 18:\n\nWithout patch (\"good\"): https://perfht.ml/2Hzg1aC\nWith patch (\"bad\"): https://perfht.ml/2HA53lt\n\nA few things stand out to me:\n\n1. The biggest difference seems to be the length of time that we're waiting for the content process to initialize and start showing samples in the profiler. Using the end of the \"CreateBrowser\" samples in the parent process main thread as a starting point, the amount of waiting time waiting for the content process to start showing samples is:\n\nWithout patch (\"good\"): ~864ms\nWith patch (\"bad\"): ~2000ms\n\nThat's pretty staggering. Looking at the second run with the patch, the gap drops a bit down to ~1100s.\n\nI'm going to request yet another set of profiles, but ask for all threads to be sampled.\n\n2. As timdream already noted, gtk_init seems to take longer to run with the patch applied:\n\nWithout patch (\"good\"): https://perfht.ml/2vQrt0d (~18ms)\nWith patch (\"bad\"): https://perfht.ml/2HCRr8M (~43ms)\n\n3. XRE_InitEmbedding2 also seems to take longer:\n\nWithout patch (\"good\"): https://perfht.ml/2vXM5DI (~32ms)\nWith patch (\"bad\"): https://perfht.ml/2vRr121 (~41ms)\n\n4. The run with the patch seems to take a little longer running process and frame scripts, but I wouldn't call it a huge difference.\n\n\nI think (1) is the one worth investigating first.", "author": "mconley@mozilla.com", "id": 13238347, "time": "2018-04-27T14:53:14Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #21)\n> Oh wait, is the compare link in Comment 19 doing that? Because if so, that's\n> a pretty serious potential improvement on a bunch of tests.. so it's\n> definitely worth trying!\n\nSadly this is again false. It looks like I cannot generate Talos result with artifact mode. Look the difference with and without --artifact.\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=60c7341fb0a9&newProject=try&newRevision=d3231d0a83c923f65ba9486e860ef8892138dcfa&framework=1\n\n======\n\nThis is the result if I no-op nsScrollbarFrame::UpdateChildrenAttributeValue, it doesn't make any observable difference.\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=d3231d0a83c923f65ba9486e860ef8892138dcfa&newProject=try&newRevision=f8392445a6aea4ff97c304a6438cb5bcb0713d5d&framework=1\n\nThis is the result if I no-op nsScrollbarFrame::CreateAnonymousContent (still building)\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=d3231d0a83c923f65ba9486e860ef8892138dcfa&newProject=try&newRevision=77e4e58fbfadc992b25dad5e899cf88f6f758522&framework=1", "author": "timdream@gmail.com", "id": 13238634, "time": "2018-04-27T16:33:14Z"}, {"text": "(In reply to Mike Conley (:mconley) (:\u2699\ufe0f) (Totally backlogged on reviews and needinfos) from comment #22)\n> Here are the first runs for each of the profiles that timdream generated in\n> comment 18:\n> \n> Without patch (\"good\"): https://perfht.ml/2Hzg1aC\n> With patch (\"bad\"): https://perfht.ml/2HA53lt\n> \n> A few things stand out to me:\n> \n> 1. The biggest difference seems to be the length of time that we're waiting\n> for the content process to initialize and start showing samples in the\n> profiler. Using the end of the \"CreateBrowser\" samples in the parent process\n> main thread as a starting point, the amount of waiting time waiting for the\n> content process to start showing samples is:\n> \n> Without patch (\"good\"): ~864ms\n> With patch (\"bad\"): ~2000ms\n\nSorry, the \"with patch\" profile here is build with artifact mode. I am going to spin up a non-artifact mode profile now.", "author": "timdream@gmail.com", "id": 13238650, "time": "2018-04-27T16:43:54Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #24)\n> > Without patch (\"good\"): ~864ms\n> > With patch (\"bad\"): ~2000ms\n> \n> Sorry, the \"with patch\" profile here is build with artifact mode. I am going\n> to spin up a non-artifact mode profile now.\n\nI noticed the same thing on a different bug yesterday - is there a known issue with comparing artifact/non-artifact builds on talos?", "author": "bgrinstead@mozilla.com", "id": 13238659, "time": "2018-04-27T16:48:04Z"}, {"text": "I've confused myself as well, so this is all the valid, non-artifact-mode, pushes\n\nBase, central (with patch):\nTalos:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=d3231d0a83c923f65ba9486e860ef8892138dcfa\nProfile:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=5988f1036f54a31631b857ada74fa7569693b1ca\n\nBackout (without patch):\nTalos:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=63adbdfb2cdb911eb379801b54fe2980277566c6\nProfile:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=8e4f05dd7bdeb592febbfc3e5255fa727961a7cc\n\nno-op nsScrollbarFrame::CreateAnonymousContent\nTalos: \nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=77e4e58fbfadc992b25dad5e899cf88f6f758522\nProfile: \nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=62245b088d0a47713bd4e674b038a7f0ae553325\n\nno-op nsScrollbarFrame::UpdateChildrenAttributeValue\nTalos:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=f8392445a6aea4ff97c304a6438cb5bcb0713d5d\nProfile:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=e96ec1c535b4a4f87c79d6ef6d6aad3b9eab6bd2\n\nBackout and also remove moz-binding:\nTalos:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=6e5e3f3a6d76679a6b61aeddfea9636015eb1550", "author": "timdream@gmail.com", "id": 13238703, "time": "2018-04-27T17:00:55Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #20)\n> > I am tempted to just start working on this. Simply, probing LookAndFeel from\n> > nsScrolbarFrame and get rid of the CSS selectors and style. If this is done\n> > before the branch we should be able to avoid a backout from beta?\n> \n> I'd like to see some initial numbers that would indicate if doing this will\n> fix the regression (like a try push that just removes those elements\n> unconditionally).\n\nCrippling nsScrollbarFrame doesn't do us any favor. This is no longer a viable route.\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=d3231d0a83c923f65ba9486e860ef8892138dcfa&newProject=try&newRevision=77e4e58fbfadc992b25dad5e899cf88f6f758522&framework=1\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=d3231d0a83c923f65ba9486e860ef8892138dcfa&newProject=try&newRevision=f8392445a6aea4ff97c304a6438cb5bcb0713d5d&framework=1", "author": "timdream@gmail.com", "id": 13238738, "time": "2018-04-27T17:24:18Z"}, {"text": "Comparing the backout with the backout+remove -moz-binding is surprising:\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=63adbdfb2cdb911eb379801b54fe2980277566c6&newProject=try&newRevision=6e5e3f3a6d76679a6b61aeddfea9636015eb1550&framework=1\n\nIn this case we seem to get the same regression that triggered this bug by simply _removing_ the -moz-binding. This would imply that the new code itself isn't the problem (also evidenced by the fact that we don't see it in any profiles). But something very strange is happening where doing less work (not attaching the binding) is slower than attaching it.", "author": "bgrinstead@mozilla.com", "id": 13239043, "time": "2018-04-27T19:59:27Z"}, {"text": "\\(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #26)\n> Backout and also remove moz-binding:\n> Talos:\n> https://treeherder.mozilla.org/#/\n> jobs?repo=try&revision=6e5e3f3a6d76679a6b61aeddfea9636015eb1550\nProfile:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=eb2dba70be8305144ddd90a4487557209206dd38", "author": "timdream@gmail.com", "id": 13239061, "time": "2018-04-27T20:09:35Z"}, {"text": "Looking at the profiles with and without the patch, it seems as if framescripts just take longer to run for some reason:\n\nWithout patch (\"good\"): https://perfht.ml/2HxyjsZ\nWith patch (\"bad\"): https://perfht.ml/2vRuwoZ", "author": "mconley@mozilla.com", "id": 13239093, "time": "2018-04-27T20:28:46Z"}, {"text": "I'm wondering if having the binding on scrollbar is triggering some side effect (like warming up a cache) earlier than it otherwise would. Tim's working on a build that attaches an empty XBL binding to <scrollbar> to see if that's plausible.", "author": "bgrinstead@mozilla.com", "id": 13239102, "time": "2018-04-27T20:32:34Z"}, {"text": "I suspect this is going to be one of those annoying things where, because we remove a -moz-binding, we alter timing such that, via some Rube Goldberg style cause and effect, some thread ends up holding a lock and delaying the main thread in the content process or something. :/", "author": "mconley@mozilla.com", "id": 13239103, "time": "2018-04-27T20:33:05Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #31)\n\nThat's a great idea, yeah. That smells like the kind of problem we're dealing with here.", "author": "mconley@mozilla.com", "id": 13239104, "time": "2018-04-27T20:33:34Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #31)\n> I'm wondering if having the binding on scrollbar is triggering some side\n> effect (like warming up a cache) earlier than it otherwise would. Tim's\n> working on a build that attaches an empty XBL binding to <scrollbar> to see\n> if that's plausible.\n\nempty scrollbar binding\n\nTalos (and other tests):\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=766d084731263d8aced50d7a61a48186a01b0355\nProfile:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=ad65a0021859beb48409f68a7bd514b8f589b30c", "author": "timdream@gmail.com", "id": 13239114, "time": "2018-04-27T20:37:05Z"}, {"text": "Yep, the empty binding makes the regression disappear. Lovely.\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=try&newRevision=766d08473126&framework=1&showOnlyImportant=1&selectedTimeRange=172800", "author": "mconley@mozilla.com", "id": 13239203, "time": "2018-04-27T21:23:53Z"}, {"text": "Bring back the empty binding!", "author": "bgrinstead@mozilla.com", "id": 13239228, "time": "2018-04-27T21:35:23Z"}, {"text": "(In reply to Brian Grinstead [:bgrins] from comment #36)\n> Bring back the empty binding!\n\nIn all seriousness - I'd prefer if we could land the empty binding here and figure out the timing weirdness in another bug instead of backing out Bug 1431246. We had to do something similar in Bug 1436351 with a XBL race condition.", "author": "bgrinstead@mozilla.com", "id": 13239240, "time": "2018-04-27T21:39:16Z"}, {"text": "Created attachment 8971720\nBug 1456728 - Bind an empty binding on scrollbar\n\nFor some reason, removing the scrollbar binding triggers\ncontent process performance regression on Linux.\n\nWe'll add an empty binding for now until we find the real cause.\n\nReview commit: https://reviewboard.mozilla.org/r/240484/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/240484/", "author": "timdream@gmail.com", "id": 13239248, "time": "2018-04-27T21:42:58Z"}, {"text": "Brian and I have found a reference to nsGkAtoms::scrollbar in nsXBLService.cpp. This might be the reason XBL cache get set up at different time because of the scrollbar binding.\n\nThis is the try push that restores the empty binding *and* removes the bit\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=d22d8f13057d8394803181f0aecbea7609200e95\n\n(That bit is actually something we should clean up given that we shouldn't have binding scrollbar and thumb bindings anymore, hopefully)", "author": "timdream@gmail.com", "id": 13239263, "time": "2018-04-27T21:49:11Z"}, {"text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #39)\n> Brian and I have found a reference to nsGkAtoms::scrollbar in\n> nsXBLService.cpp. This might be the reason XBL cache get set up at different\n> time because of the scrollbar binding.\n> \n> This is the try push that restores the empty binding *and* removes the bit\n> \n> https://treeherder.mozilla.org/#/\n> jobs?repo=try&revision=d22d8f13057d8394803181f0aecbea7609200e95\n\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=try&originalRevision=766d084731263d8aced50d7a61a48186a01b0355&newProject=try&newRevision=d22d8f13057d8394803181f0aecbea7609200e95&framework=1\n\nAlright. This doesn't change anything.\n\nBrian and I spoke a bit and I am going to find out what's triggered by the empty binding. Hopefully, we can find a right place to call it via other methods. If I couldn't find it in time, we should check the empty binding in and do it in a follow-up.\n\nThanks, everyone for the help!", "author": "timdream@gmail.com", "id": 13239443, "time": "2018-04-27T23:28:01Z"}, {"text": "The other thing worthy to point out is that none of the related stack like Loader::CreateSheet() or nsXBLService::LoadBindingDocumentInfo() shows up in the profiles on the main thread of content processes. I assume this is because it happens in the early stages? Regardless, this will takes some time to investigate.", "author": "timdream@gmail.com", "id": 13239450, "time": "2018-04-27T23:42:00Z"}, {"text": "Also: the fact that the cpstartup page loads over a chrome URI could give misleading results (i.e. if there are branches that only run in chrome contexts). I originally thought this could have been a source of this regression issue since, for example, Loader::CreateSheet only calls nsXULPrototypeCache::GetInstance in the case of a chrome URI. Then if the scrollbar binding warmed that up then maybe it would be faster in this case. It turned out this wasn't the problem - since apparently we run this block early on any content process startup due to pluginProblemBinding.css (https://searchfox.org/mozilla-central/source/toolkit/pluginproblem/pluginGlue.manifest#1).\n\nStill, might be worth switching the cpstartup page to load over resource:// or http:// just to better match the real world case.", "author": "bgrinstead@mozilla.com", "id": 13239460, "time": "2018-04-27T23:54:49Z"}, {"text": "Update on what I have right now:\n\nI am trying to locate the code that causes us to be faster by identifying and bisecting the code path triggered by the empty binding.\n\nI started from |if (display->mBinding) {| in nsCSSFrameConstructor::AddFrameConstructionItemsInternal().\nhttps://searchfox.org/mozilla-central/rev/8837610b6c999451435695e800f38d4acbc0a644/layout/base/nsCSSFrameConstructor.cpp#5670\n\nEventually, I've got to nsSyncLoadService::PushSyncStreamToListener() where is the binding XBL document gets read from the disk. It took some time for me to make sure I didn't fall into confirmation bias, but I am now certain that something called from OnStartRequest() and OnStopRequest() in there are the cause. This ruled out what'd actually read from the disk.", "author": "timdream@gmail.com", "id": 13246630, "time": "2018-05-01T17:37:46Z"}, {"text": "A proper fix would take more time to find & it would probably be not safe to land before merge. Let's get the workaround check-in for now.", "author": "timdream@gmail.com", "id": 13246977, "time": "2018-05-01T19:50:02Z"}, {"text": "Comment on attachment 8971720\nBug 1456728 - Bind an empty binding on scrollbar\n\nhttps://reviewboard.mozilla.org/r/240484/#review246812\n\nThanks!\n\n::: toolkit/content/widgets/general.xml:12\n(Diff revision 1)\n> +  <!-- This binding is needed on <scrollbar> to prevent content process\n> +       startup performance regression -->\n> +  <binding id=\"empty\"/>\n\nIf one doesn't already exist, can you get a new bug on file for investigating this weirdness, and then refer to it here with a comment, and at each point where you use the empty binding?", "author": "mconley@mozilla.com", "id": 13247047, "time": "2018-05-01T20:20:46Z"}, {"text": "Comment on attachment 8971720\nBug 1456728 - Bind an empty binding on scrollbar\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/240484/diff/1-2/", "author": "timdream@gmail.com", "id": 13247288, "time": "2018-05-01T22:02:39Z"}, {"text": "Pushed by timdream@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/efbdd0a0a0ba\nBind an empty binding on scrollbar r=mconley", "author": "pulsebot@bots.tld", "id": 13247449, "time": "2018-05-01T23:36:52Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/efbdd0a0a0ba", "author": "csabou@mozilla.com", "id": 13248116, "time": "2018-05-02T09:29:34Z"}, {"text": "Push from comment 47 fixed the perf regression! \\o/\n\n== Change summary for alert #13013 (as of Tue, 01 May 2018 20:36:40 GMT) ==\n\nImprovements:\n\n  7%  cpstartup content-process-startup linux64 pgo e10s stylo     204.08 -> 189.42\n  7%  cpstartup content-process-startup linux64 opt e10s stylo     211.33 -> 196.75\n\nFor up to date results, see: https://treeherder.mozilla.org/perf.html#/alerts?id=13013", "author": "igoldan@mozilla.com", "id": 13251218, "time": "2018-05-03T05:20:36Z"}], "id": 1456728, "priority": "--", "cc": ["bgrinstead@mozilla.com", "enndeakin@gmail.com", "igoldan@mozilla.com", "jan@ikenmeyer.eu", "jmaher@mozilla.com", "mconley@mozilla.com", "rwood@mozilla.com", "ryanvm@gmail.com", "timdream@gmail.com", "xidorn+moz@upsuper.org"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1457509", "https://bugzilla.mozilla.org/show_bug.cgi?id=1436351", "https://bugzilla.mozilla.org/show_bug.cgi?id=1458375"], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1445214, 1431246], "qa_contact": "", "creation_time": "2018-04-25T07:28:22Z", "cf_status_firefox_esr52": "unaffected", "component": "XUL", "assigned_to_detail": {"email": "timdream@gmail.com", "id": 185001, "name": "timdream@gmail.com", "real_name": "Tim Guan-tin Chien [:timdream] (please needinfo)"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "fixed", "cf_status_firefox60": "unaffected", "target_milestone": "mozilla61", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "igoldan@mozilla.com", "id": 590618, "name": "igoldan@mozilla.com", "real_name": "Ionu\u021b Goldan [:igoldan], Performance Sheriffing"}, "whiteboard": "", "mentors": [], "summary": "6.89 - 8.12% cpstartup content-process-startup (linux64) regression on push d3b5dfca6a90 (Tue Apr 24 2018)", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-09T17:53:06Z", "assigned_to": "timdream@gmail.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(timdream@gmail.com)"}], "who": "igoldan@mozilla.com", "when": "2018-04-25T07:40:44Z"}, {"changes": [{"removed": "Untriaged", "field_name": "component", "added": "XUL"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}], "who": "igoldan@mozilla.com", "when": "2018-04-25T07:41:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bgrinstead@mozilla.com"}], "who": "bgrinstead@mozilla.com", "when": "2018-04-25T14:13:33Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "timdream@gmail.com"}, {"removed": "needinfo?(timdream@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "timdream@gmail.com", "when": "2018-04-25T15:13:36Z"}, {"changes": [{"removed": "---", "field_name": "cf_tracking_firefox61", "added": "+"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "affected"}, {"removed": "", "field_name": "cc", "added": "ryanvm@gmail.com"}, {"removed": "---", "field_name": "cf_status_firefox_esr52", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_firefox59", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_firefox60", "added": "unaffected"}], "who": "ryanvm@gmail.com", "when": "2018-04-26T19:35:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mconley@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mconley@mozilla.com)"}], "who": "timdream@gmail.com", "when": "2018-04-26T20:19:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "xidorn+moz@upsuper.org"}], "who": "bgrinstead@mozilla.com", "when": "2018-04-26T22:26:40Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1457509"}], "who": "timdream@gmail.com", "when": "2018-04-27T17:07:03Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1457510"}], "who": "mconley@mozilla.com", "when": "2018-04-27T17:14:36Z"}, {"changes": [{"removed": "needinfo?(mconley@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mconley@mozilla.com", "when": "2018-04-27T21:23:53Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1436351"}], "who": "bgrinstead@mozilla.com", "when": "2018-04-27T21:35:23Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1458333"}], "who": "timdream@gmail.com", "when": "2018-05-01T19:32:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8971720, "added": "review?(mconley@mozilla.com)"}], "who": "timdream@gmail.com", "when": "2018-05-01T19:46:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mconley@mozilla.com)", "attachment_id": 8971720, "added": "review+"}], "who": "mconley@mozilla.com", "when": "2018-05-01T20:20:46Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1458375"}], "who": "timdream@gmail.com", "when": "2018-05-01T22:01:03Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-02 09:29:34"}, {"removed": "affected", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "csabou@mozilla.com", "when": "2018-05-02T09:29:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jan@ikenmeyer.eu"}], "who": "jan@ikenmeyer.eu", "when": "2018-05-09T17:53:06Z"}], "resolution": "FIXED", "op_sys": "Linux", "cf_fx_points": "---", "cf_blocking_fennec": "---"}