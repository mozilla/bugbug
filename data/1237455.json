{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bkelly@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8709175}, {"creator": "bkelly@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8709176}, {"creator": "bkelly@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8709179}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-19T20:08:55Z", "type_id": 4, "creation_date": "2016-01-19T16:28:45Z", "id": 1326056, "setter": "ehsan@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-01-21T13:30:37Z", "type_id": 720, "creation_date": "2016-01-19T21:56:31Z", "id": 1326349, "setter": "sledru@mozilla.com"}, {"status": "-", "name": "approval-mozilla-beta", "modification_date": "2016-01-19T22:16:45Z", "type_id": 721, "creation_date": "2016-01-19T21:56:31Z", "id": 1326350, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8709449}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-19T20:09:44Z", "type_id": 4, "creation_date": "2016-01-19T16:29:30Z", "id": 1326058, "setter": "ehsan@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-01-21T13:30:10Z", "type_id": 720, "creation_date": "2016-01-19T21:57:24Z", "id": 1326352, "setter": "sledru@mozilla.com"}, {"status": "-", "name": "approval-mozilla-beta", "modification_date": "2016-01-19T22:17:19Z", "type_id": 721, "creation_date": "2016-01-19T21:57:24Z", "id": 1326353, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8709451}, {"creator": "bkelly@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-19T20:23:15Z", "type_id": 4, "creation_date": "2016-01-19T16:32:53Z", "id": 1326060, "setter": "ehsan@mozilla.com"}], "content_type": "text/plain", "id": 8709452}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-19T20:24:26Z", "type_id": 4, "creation_date": "2016-01-19T16:34:57Z", "id": 1326063, "setter": "ehsan@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-01-21T13:30:04Z", "type_id": 720, "creation_date": "2016-01-19T21:57:39Z", "id": 1326354, "setter": "sledru@mozilla.com"}, {"status": "-", "name": "approval-mozilla-beta", "modification_date": "2016-01-19T22:17:36Z", "type_id": 721, "creation_date": "2016-01-19T21:57:39Z", "id": 1326355, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8709453}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-19T20:26:37Z", "type_id": 4, "creation_date": "2016-01-19T16:36:46Z", "id": 1326069, "setter": "ehsan@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-01-21T13:29:59Z", "type_id": 720, "creation_date": "2016-01-19T21:57:58Z", "id": 1326356, "setter": "sledru@mozilla.com"}, {"status": "-", "name": "approval-mozilla-beta", "modification_date": "2016-01-19T22:17:53Z", "type_id": 721, "creation_date": "2016-01-19T21:57:58Z", "id": 1326357, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8709454}, {"creator": "bkelly@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-19T21:50:43Z", "type_id": 4, "creation_date": "2016-01-19T21:50:43Z", "id": 1326346, "setter": "bkelly@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-01-21T13:29:55Z", "type_id": 720, "creation_date": "2016-01-19T21:58:25Z", "id": 1326358, "setter": "sledru@mozilla.com"}, {"status": "-", "name": "approval-mozilla-beta", "modification_date": "2016-01-19T22:18:09Z", "type_id": 721, "creation_date": "2016-01-19T21:58:25Z", "id": 1326359, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8709631}], "classification": "Components", "creator": "jrconlin@mozilla.com", "cc": ["bkelly@mozilla.com", "cbook@mozilla.com", "darin.moz@gmail.com", "ehsan@mozilla.com", "Florian.P.Nierhaus@gmail.com", "honzab.moz@firemni.cz", "jrconlin@mozilla.com", "mcastelluccio@mozilla.com", "nalexander@mozilla.com", "rkothari@mozilla.com", "sledru@mozilla.com"], "depends_on": [1241020], "creation_time": "2016-01-07T00:00:39Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "fetch() function not always applying Headers to outbound requests.", "id": 1237455, "assigned_to_detail": {"email": "bkelly@mozilla.com", "id": 465500, "name": "bkelly@mozilla.com", "real_name": "Ben Kelly [PTO, back late March][:bkelly]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_status_firefox45": "fixed", "cf_has_regression_range": "---", "assigned_to": "bkelly@mozilla.com", "comment_count": 67, "comments": [{"text": "Using Nightly on either x64 Linux or Windows, I've noticed that fetch() does not always send out headers. It usually fails. I have tried setting headers as either a Headers object, or as a standard object, both fail equally.\n\nSteps to reproduce:\n1) visit https://evilonastick.com/push \n2) You will be asked if you wish to receive notifications, please accept.\n3) Open the Web Console and refresh the page. \nNote the following lines:\n```\nFetching: \"https://updates.push.services.mozilla.com...\" Object { method: \"POST\", headers: Object, body: Uint8Array[36], salt: Uint8Array[16], dh: ArrayBuffer, endpoint: \"https://updates.push.services.mozil\u2026\", pheaders: Object } webpush.js:297:9\n```\nThis is the arguments that are to be sent to the fetch() command. Using the console, you can verify that the headers are present.\n\n```\nEncryption-Key header keyid=p256dh;dh=BK9x_zoXeJ5qP4fzZDGgc_pPw6DMqvT_c2H0KuBHD7tvEvlKUK2CE3W_Pn6FdBj-Z1TsQwkK4vRPvio411L479A webpush.js:298:9\n```\nThis is a further sanity check that the required header is indeed present.\n\n```\nServer returned 400. Probably missing headers. Try refreshing to see if fetch() will send them. webpush.js:303:25\n\nSend Failed:  Error: fetch() failed to include headers. Refresh\nStack trace:\nwebpush/</<@https://evilonastick.com/push/webpush.js:306:31\npromise callback*webpush/<@https://evilonastick.com/push/webpush.js:299:9\npromise callback*webpush@https://evilonastick.com/push/webpush.js:241:12\npromise callback*@https://evilonastick.com/push/:305:1\n webpush.js:313:18\n```\nAnd that's fetch failing. The server returns error code 400 if headers are not present.\n\nYou can examine the outbound Request object to note that the headers are not being sent. \n\nPlease note that the page works fine using Firefox 45.", "author": "jrconlin@mozilla.com", "id": 11052797, "time": "2016-01-07T00:00:39Z"}, {"text": "I suspect the AsyncOpen2() refactor of fetch().  Leaving need info to remind me to investigate.", "author": "bkelly@mozilla.com", "id": 11055787, "time": "2016-01-07T19:34:42Z"}, {"text": "Note, this is doing a CORS request with a preflight.  The CORS headers look correct to me.", "author": "bkelly@mozilla.com", "id": 11055807, "time": "2016-01-07T19:36:56Z"}, {"text": "> Please note that the page works fine using Firefox 45.\n\nThe AsyncOpen2 change landed in Gecko 44, so if this worked in 45, then that's not the problem.\n\nWe do have tests which set headers, and those tests are passing, so at least things work under some circumstances.\n\nIs your test by any chance ever redirecting the request using a 302 (or similar) response? Looking at the fetch() implementation, I would expect added headers to disappear upon redirect.", "author": "jonas@sicking.cc", "id": 11056036, "time": "2016-01-07T20:41:39Z"}, {"text": "Hmm.. If this is a CORS request with preflight, then you're likely not doing a redirect, so that's likely not the problem.", "author": "jonas@sicking.cc", "id": 11056045, "time": "2016-01-07T20:43:20Z"}, {"text": "The server doesn't do redirects. What the server does do is check if the incoming request contains \"encryption\", \"encryption-key\" and \"content-type\" headers. If those aren't present, then it returns a 400. \n\nLike I said, I'm able to pull up the outbound request using the web console and see that the headers aren't being included in the call, even though they're included in the fetch options object.", "author": "jrconlin@mozilla.com", "id": 11056182, "time": "2016-01-07T21:26:30Z"}, {"text": "Hey folks, this is a pretty significant issue -- but at least I see it consistently in Fennec, giving me hope it can be addressed easily.  jrconlin, could you extract a smaller test case that does not rely on Push in Fennec?  Perhaps you don't really need Push at all to see this on your existing page (https://evilonastick.com/push), but I haven't verified.", "author": "nalexander@mozilla.com", "id": 11073381, "time": "2016-01-13T18:38:55Z"}, {"text": "Oddly, I'm not able to reproduce this using a simple test page. Even more oddly, I note that there are more headers going out for the simple test page than the push page. \n\ne.g. for the WebPush page:\nHost: updates.push.services.mozilla.com\n   User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:46.0) Gecko/20100101 Firefox/46.0\n   Accept: */*\n   Accept-Language: en-US,en;q=0.5\n   Accept-Encoding: gzip, deflate, br\n   Content-Length: 36\n   Referer: https://evilonastick.com/push_dev/\n   Connection: keep-alive\n\nvs. the simple test page:\n + Host: updates.push.services.mozilla.com\n   User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:46.0) Gecko/20100101 Firefox/46.0\n   Accept: */*\n   Accept-Language: en-US,en;q=0.5\n   Accept-Encoding: gzip, deflate, br\n   encryption-key: keyid=p256dh;dh=RandoStringOfCrap-gZ4xNvJnSUd6xd8MWpiZ0l8HN5jGb-52bM0z2nQoos7WArEUQ59gwpq4NIbZ4qNmgpPwE\n   encryption: keyid=p256;salt=AnotherRandoString1234\n   Content-Encoding: aesgcm128\n + Content-Type: text/plain;charset=UTF-8\n   Referer: http://192.168.40.128/fetchTest/\n + Origin: http://192.168.40.128\n   Content-Length: 29\n   Connection: keep-alive\n\nI'm not sure why there's a difference between the two, or why the webpush fetcher is not including the additional headers. \n\nWill continue to poke at both to see what I can determine might be causing the problem.", "author": "jrconlin@mozilla.com", "id": 11077248, "time": "2016-01-14T19:43:02Z"}, {"text": "Ok, REALLY odd. \n\nNot sure if the problem has gone away or if this is a work around, but I've applied the following and things seem to work. Sort of.\n\nIf I compose the Uint8Array as a string buffer, that seems to let the headers get added. \n\ne.g.\n\n   let body = \"\";\n   results.payload.forEach(x=>{ body += String.fromCharCode(x); });\n\nand then passing body as the body element of options. \n\nThis works if I shift reload the page. \n\nIf I just reload, however, the headers are not applied. (Shift reloading again still resolves correctly). \n\nhttps://jrconlin.github.io/WebPushDataTestPage/\nhas been updated with the latest changes.", "author": "jrconlin@mozilla.com", "id": 11077620, "time": "2016-01-14T21:26:43Z"}, {"text": "FWIW this is still on my list to investigate.  It's just been a hectic week.  Sorry for the delay.", "author": "bkelly@mozilla.com", "id": 11078140, "time": "2016-01-15T00:02:55Z"}, {"text": "I can reproduce this... Sometimes refreshing gives me headers and sometimes it doesn't.  Very odd.", "author": "bkelly@mozilla.com", "id": 11080195, "time": "2016-01-15T16:13:42Z"}, {"text": "This is whats happening:\n\n1) Because there is a service worker registered we are firing a fetch event.\n2) The fetch event is not intercepted because the SW is push-only.\n3) FetchEventRunnable::ResumeRequest::Run() triggers an internal redirect on the channel to start the processing again.\n4) The internal redirect does not appears to copy the non-standard headers to the new channel.\n\nThis is why a shift-reload works.  It bypasses the service worker.\n\nSeems like we should be preserving all headers on these redirects...", "author": "bkelly@mozilla.com", "id": 11080427, "time": "2016-01-15T17:20:41Z"}, {"text": ":bkelly, Oh, man! Good hunting on that one. That also explains why the stand-alone wasn't reproducing the error. Thanks!", "author": "jrconlin@mozilla.com", "id": 11080521, "time": "2016-01-15T17:41:18Z"}, {"text": "Patrick suggests that internal redirects should always preserve headers.  I will try writing a patch for that and a test for this particular method of triggering it in service workers.", "author": "bkelly@mozilla.com", "id": 11080551, "time": "2016-01-15T17:47:19Z"}, {"text": "I just tested that this is happening as far back as beta 44.  We should consider uplifting it there if there is time.  Otherwise, we'll just get it into 45 and let the trains ride.", "author": "bkelly@mozilla.com", "id": 11080567, "time": "2016-01-15T17:51:35Z"}, {"text": "Side question:  Is there a reason your website is trying to redirect https requests to http?\n\n  https://www.dropbox.com/s/vgsyq0qgwbr0fky/Screenshot%202016-01-15%2012.53.59.png?dl=0\n\nI guess maybe its the /push to /push/ normalization?", "author": "bkelly@mozilla.com", "id": 11080592, "time": "2016-01-15T17:55:18Z"}, {"text": "Yeah, I think that's a normalization error. I'll see if I can fix things up to not do that.", "author": "jrconlin@mozilla.com", "id": 11080598, "time": "2016-01-15T17:57:42Z"}, {"text": "(In reply to JR Conlin [:jrconlin,:jconlin] from comment #16)\nHrm, might be a cloudproxy issue confusing things. I note that going to https://evilonastick.com/push/ does not bring in http resources, nor try to redirect to http. \n\nThe page doesn't enforce either http or https for any link, relying on the default page protocol.", "author": "jrconlin@mozilla.com", "id": 11080650, "time": "2016-01-15T18:15:02Z"}, {"text": "Honza, do you know why internal redirects do not copy the original channel's headers?  It seems odd we would strip the site's custom headers from HSTS upgrades, for example.", "author": "bkelly@mozilla.com", "id": 11080794, "time": "2016-01-15T18:48:21Z"}, {"text": "Also note that this only happens with non-e10s service workers because in e10s mode we \"resume\" the channel in a different way.", "author": "bkelly@mozilla.com", "id": 11080983, "time": "2016-01-15T19:38:58Z"}, {"text": "It seems headers are propagated across redirects by client redirect callbacks.  For example, xhr sets the headers explicitly here:\n\n  https://dxr.mozilla.org/mozilla-central/source/dom/base/nsXMLHttpRequest.cpp#3356\n\nWe don't get this callback for the internal redirect.\n\nAlso, I think there is a separate bug that fetch() does not propagate headers on redirects.\n\nI'm going to write some tests.", "author": "bkelly@mozilla.com", "id": 11081381, "time": "2016-01-15T21:41:30Z"}, {"text": "Created attachment 8709175\nP1 Make file_CrossSiteXHR_server.sjs check headers on redirects. r=ehsan", "author": "bkelly@mozilla.com", "id": 11085854, "time": "2016-01-18T21:39:55Z"}, {"text": "Created attachment 8709176\nP2 Test headers on redirects in fetch mochitests. r=ehsan\n\nThis test shows we fail to send headers for normal redirects in fetch().", "author": "bkelly@mozilla.com", "id": 11085858, "time": "2016-01-18T21:40:58Z"}, {"text": "Created attachment 8709179\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan\n\nThis test reroutes test_fetch_cors.js through an empty service worker which exposes the issue in comment 0.  All requests end up going through the ResumeRequest() code path.\n\nWe have about 139 failures in the test with this empty service worker.", "author": "bkelly@mozilla.com", "id": 11085874, "time": "2016-01-18T21:51:59Z"}, {"text": "Created attachment 8709449\nP1 Make file_CrossSiteXHR_server.sjs check headers on redirects. r=ehsan", "author": "bkelly@mozilla.com", "id": 11087468, "time": "2016-01-19T15:21:36Z"}, {"text": "Since FetchDriver gets redirect callbacks, I don't have to do anything special for internal redirects.", "author": "bkelly@mozilla.com", "id": 11087474, "time": "2016-01-19T15:22:16Z"}, {"text": "Created attachment 8709451\nP2 Test headers on redirects in fetch mochitests. r=ehsan", "author": "bkelly@mozilla.com", "id": 11087477, "time": "2016-01-19T15:22:37Z"}, {"text": "Created attachment 8709452\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan", "author": "bkelly@mozilla.com", "id": 11087481, "time": "2016-01-19T15:23:05Z"}, {"text": "Created attachment 8709453\nP4 Create helper method to set fetch request headers. r=ehsan", "author": "bkelly@mozilla.com", "id": 11087483, "time": "2016-01-19T15:23:22Z"}, {"text": "Created attachment 8709454\nP5 Set headers on fetch() redirects. r=ehsan\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=10cf5c7caf71&selectedJob=15622343", "author": "bkelly@mozilla.com", "id": 11087484, "time": "2016-01-19T15:23:38Z"}, {"text": "Comment on attachment 8709449\nP1 Make file_CrossSiteXHR_server.sjs check headers on redirects. r=ehsan\n\nThis improves our main cors/header sjs test fixture by:\n\n1) Making it give a 500 response if a header is missing instead of throwing in the sjs.  This is basically just for better error messages.\n2) Propagating the expected headers when redirecting through hops.", "author": "bkelly@mozilla.com", "id": 11087796, "time": "2016-01-19T16:28:45Z"}, {"text": "Comment on attachment 8709451\nP2 Test headers on redirects in fetch mochitests. r=ehsan\n\nThis makes us specify expected headers in test_fetch_cors.js for redirects.  There were already headers in the cors case, but I had to add a test case for no-cors.", "author": "bkelly@mozilla.com", "id": 11087799, "time": "2016-01-19T16:29:30Z"}, {"text": "Comment on attachment 8709452\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan\n\nAdd new tests that are similar to the *_sw_reroute.html tests, but instead of doing evt.respondWith(fetch(evt.request)) it instead uses an empty service worker.  This tests the internal redirect used by ResumeRequest() and reflects what the original reporter's push-only service worker was doing.", "author": "bkelly@mozilla.com", "id": 11087814, "time": "2016-01-19T16:32:53Z"}, {"text": "Comment on attachment 8709453\nP4 Create helper method to set fetch request headers. r=ehsan\n\nRefactor by moving header setting code into a separate method.\n\nNote, this has a slight functional change in that we silently skip setting the origin header if nsContentUtils::GetUTFOrigin() fails.  The original code rejected the fetch().  I can restore that behavior if you like, but I don't think it really matters in practice.", "author": "bkelly@mozilla.com", "id": 11087825, "time": "2016-01-19T16:34:57Z"}, {"text": "Comment on attachment 8709454\nP5 Set headers on fetch() redirects. r=ehsan\n\nThis puts the FetchDriver::AsyncOnChannelRedirected() callback back in place so we can set headers on redirect.  I basically restored the previous setup code and just modified it to call the new SetRequestHeaders() helper method.", "author": "bkelly@mozilla.com", "id": 11087840, "time": "2016-01-19T16:36:46Z"}, {"text": "Comment on attachment 8709452\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan\n\nReview of attachment 8709452:\n-----------------------------------------------------------------\n\n::: dom/tests/mochitest/fetch/mochitest.ini\n@@ +30,5 @@\n>  [test_fetch_basic.html]\n>  skip-if = (e10s && debug && os == 'win')\n>  [test_fetch_basic_sw_reroute.html]\n>  skip-if = buildapp == 'b2g' || (e10s && debug && os == 'win') # Bug 1137683\n> +[test_fetch_basic_sw_empty_reroute.html]\n\nI wouldn't be surprised if you would need to copy the above skip-if here.  This will definitely not work on b2g at least.\n\n@@ +35,5 @@\n>  [test_fetch_basic_http.html]\n>  skip-if = (e10s && debug && os == 'win')\n>  [test_fetch_basic_http_sw_reroute.html]\n>  skip-if = buildapp == 'b2g' || (e10s && debug && os == 'win') # Bug 1137683\n> +[test_fetch_basic_http_sw_empty_reroute.html]\n\nDitto.\n\n@@ +40,5 @@\n>  [test_fetch_cors.html]\n>  skip-if = buildapp == 'b2g' || (toolkit == 'android' && debug) || (e10s && debug && os == 'win') # Bug 1210552 && 1210282\n>  [test_fetch_cors_sw_reroute.html]\n>  skip-if = buildapp == 'b2g' || (toolkit == 'android' && debug) || (e10s && debug && os == 'win') # Bug 1137683 && 1210282\n> +[test_fetch_cors_sw_empty_reroute.html]\n\nAnd this.\n\n::: dom/tests/mochitest/fetch/sw_empty_reroute.js\n@@ +16,5 @@\n>              [\"dom.serviceWorkers.testing.enabled\", true],\n>              [\"dom.serviceWorkers.exemptFromPerDomainMax\", true]]\n>    }, function() {\n>      navigator.serviceWorker.ready.then(setupSW);\n> +    navigator.serviceWorker.register(\"empty.js\", {scope: \"/\"});\n\nCan you please add a comment to the beginning of sw_reroute.js to mention that if that file is changed, this one should probably change as well, and vice versa?\n\nEven better, you can avoid the need for sw_empty_reroute.js completely by improving the logic in testScript.  For example, here you can decide the URL to the service worker by checking |location.href.includes(\"sw_empty_reroute.html\")| and use \"empty.js\" instead of \"reroute.js\" in that case.\n\nEither works for me!", "author": "ehsan@mozilla.com", "id": 11088799, "time": "2016-01-19T20:23:15Z"}, {"text": "Comment on attachment 8709454\nP5 Set headers on fetch() redirects. r=ehsan\n\nReview of attachment 8709454:\n-----------------------------------------------------------------\n\nCan you also file a Necko follow-up bug to clarify what should happen in the case of other internal redirects, such as the ones used for secure upgrades?  Thanks!", "author": "ehsan@mozilla.com", "id": 11088809, "time": "2016-01-19T20:26:37Z"}, {"text": "(In reply to :Ehsan Akhgari from comment #36)\n> Can you also file a Necko follow-up bug to clarify what should happen in the\n> case of other internal redirects, such as the ones used for secure upgrades?\n> Thanks!\n\nThis should be automatically handled by the code making the network request via the normal AsyncOnChannelRedirect() callback.  If a caller, like xhr or fetch, is adding headers for normal redirects then they also add them for internal redirects.  So its totally up to the behavior the creator of the channel wants.  I don't think we have to do anything special for internal redirects in necko.\n\nDoes that make sense?", "author": "bkelly@mozilla.com", "id": 11088827, "time": "2016-01-19T20:30:11Z"}, {"text": "(In reply to :Ehsan Akhgari from comment #35)\n> >  [test_fetch_basic_sw_reroute.html]\n> >  skip-if = buildapp == 'b2g' || (e10s && debug && os == 'win') # Bug 1137683\n> > +[test_fetch_basic_sw_empty_reroute.html]\n> \n> I wouldn't be surprised if you would need to copy the above skip-if here. \n> This will definitely not work on b2g at least.\n\nTry suggests I only need to skip b2g.", "author": "bkelly@mozilla.com", "id": 11089059, "time": "2016-01-19T21:37:17Z"}, {"text": "Created attachment 8709631\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan", "author": "bkelly@mozilla.com", "id": 11089111, "time": "2016-01-19T21:50:43Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/f030e115c50f\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/f3d08382b352\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/58ac8b7c319e\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/321a4125d242\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/1b87526faf78", "author": "pulsebot@bots.tld", "id": 11089134, "time": "2016-01-19T21:54:54Z"}, {"text": "Comment on attachment 8709449\nP1 Make file_CrossSiteXHR_server.sjs check headers on redirects. r=ehsan\n\nApproval Request Comment\n[Feature/regressing bug #]: Service workers and fetch()\n[User impact if declined]: Users will see broken behavior on sites that use custom headers.  Even if their service worker is for push events and does not intercept, the headers will be stripped from fetch() network requests.  Similarly, any fetch() request that gets redirected will have custom headers stripped.\n[Describe test coverage new/current, TreeHerder]:  Tests included.\n[Risks and why]: Minimal.  Only effects service workers and fetch().\n[String/UUID change made/needed]: None.", "author": "bkelly@mozilla.com", "id": 11089143, "time": "2016-01-19T21:56:31Z"}, {"text": "Comment on attachment 8709451\nP2 Test headers on redirects in fetch mochitests. r=ehsan\n\nSee comment 41.", "author": "bkelly@mozilla.com", "id": 11089147, "time": "2016-01-19T21:57:24Z"}, {"text": "Comment on attachment 8709453\nP4 Create helper method to set fetch request headers. r=ehsan\n\nSee comment 41.", "author": "bkelly@mozilla.com", "id": 11089148, "time": "2016-01-19T21:57:39Z"}, {"text": "Comment on attachment 8709454\nP5 Set headers on fetch() redirects. r=ehsan\n\nSee comment 41.", "author": "bkelly@mozilla.com", "id": 11089150, "time": "2016-01-19T21:57:58Z"}, {"text": "Comment on attachment 8709631\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan\n\nSee comment 41.", "author": "bkelly@mozilla.com", "id": 11089154, "time": "2016-01-19T21:58:25Z"}, {"text": "The fetch() redirect bits still affect FF39 to FF43.  The service worker issue does not become a problem until it ships in FF44.", "author": "bkelly@mozilla.com", "id": 11089175, "time": "2016-01-19T22:01:43Z"}, {"text": "Hi Ben, did you mean for these to get uplifted to Beta44? We are in RC mode and 4 days away from going live. Unless these are ship-stoppers, I cannot take them in Fx44. And even if they were ship-stoppers, this late in the cycle, I would suggest disabling Service Workers feature instead of taking a complex fix like this. Sorry!", "author": "rkothari@mozilla.com", "id": 11089232, "time": "2016-01-19T22:13:02Z"}, {"text": "Comment on attachment 8709449\nP1 Make file_CrossSiteXHR_server.sjs check headers on redirects. r=ehsan\n\nThis does not meet the Fx44 RC bar, please see comment 47.", "author": "rkothari@mozilla.com", "id": 11089258, "time": "2016-01-19T22:16:45Z"}, {"text": "Comment on attachment 8709451\nP2 Test headers on redirects in fetch mochitests. r=ehsan\n\nThis does not meet the Fx44 RC bar, please see comment 47.", "author": "rkothari@mozilla.com", "id": 11089265, "time": "2016-01-19T22:17:19Z"}, {"text": "Comment on attachment 8709453\nP4 Create helper method to set fetch request headers. r=ehsan\n\nThis does not meet the Fx44 RC bar, please see comment 47.", "author": "rkothari@mozilla.com", "id": 11089267, "time": "2016-01-19T22:17:36Z"}, {"text": "Comment on attachment 8709454\nP5 Set headers on fetch() redirects. r=ehsan\n\nThis does not meet the Fx44 RC bar, please see comment 47.", "author": "rkothari@mozilla.com", "id": 11089268, "time": "2016-01-19T22:17:53Z"}, {"text": "Comment on attachment 8709631\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan\n\nThis does not meet the Fx44 RC bar, please see comment 47.", "author": "rkothari@mozilla.com", "id": 11089269, "time": "2016-01-19T22:18:09Z"}, {"text": "No problem on the beta-.  I just wanted to ask in case.", "author": "bkelly@mozilla.com", "id": 11089273, "time": "2016-01-19T22:19:23Z"}, {"text": "(In reply to Ben Kelly [:bkelly] from comment #37)\n> (In reply to :Ehsan Akhgari from comment #36)\n> > Can you also file a Necko follow-up bug to clarify what should happen in the\n> > case of other internal redirects, such as the ones used for secure upgrades?\n> > Thanks!\n> \n> This should be automatically handled by the code making the network request\n> via the normal AsyncOnChannelRedirect() callback.  If a caller, like xhr or\n> fetch, is adding headers for normal redirects then they also add them for\n> internal redirects.  So its totally up to the behavior the creator of the\n> channel wants.  I don't think we have to do anything special for internal\n> redirects in necko.\n> \n> Does that make sense?\n\nDepends on what the intended API is.  I still find it very surprising that the default behavior in the case of redirects is to lose the request headers.  We definitely have quite a few call sites that do not setup AsyncOnChannelRedirect() callbacks to propagate the headers, so whatever the intention is, our code is not expecting this in many places.\n\n<https://dxr.mozilla.org/mozilla-central/source/docshell/base/nsDocShell.cpp#550>\n<https://dxr.mozilla.org/mozilla-central/source/dom/base/nsScriptLoader.cpp#336>\n<https://dxr.mozilla.org/mozilla-central/source/dom/html/HTMLMediaElement.cpp#4487>\n\n(Note that these are just a few example call sites I found in <1 minute.  I didn't do an exhastive search.)", "author": "ehsan@mozilla.com", "id": 11089520, "time": "2016-01-19T23:15:22Z"}, {"text": "(Having the Necko discussion in a place with Necko folks is probably better!  I filed bug 1240929 myself.)", "author": "ehsan@mozilla.com", "id": 11089530, "time": "2016-01-19T23:18:41Z"}, {"text": "(In reply to :Ehsan Akhgari from comment #54)\n> Depends on what the intended API is.  I still find it very surprising that\n> the default behavior in the case of redirects is to lose the request\n> headers.  We definitely have quite a few call sites that do not setup\n> AsyncOnChannelRedirect() callbacks to propagate the headers, so whatever the\n> intention is, our code is not expecting this in many places.\n> \n> <https://dxr.mozilla.org/mozilla-central/source/docshell/base/nsDocShell.\n> cpp#550>\n> <https://dxr.mozilla.org/mozilla-central/source/dom/base/nsScriptLoader.\n> cpp#336>\n> <https://dxr.mozilla.org/mozilla-central/source/dom/html/HTMLMediaElement.\n> cpp#4487>\n> \n> (Note that these are just a few example call sites I found in <1 minute.  I\n> didn't do an exhastive search.)\n\nIf these sites require non-standard headers to be propagates across redirects then they should be doing so via a redirect callback.  Its pretty clear to me thats the API.\n\nIf you want to argue this should change, feel free to file a bug against necko.  But I don't really see a problem with the current situation.\n\nFor example, in this case I think its a media bug that it twiddles headers, but doesn't handle that on redirect.  Of course, I have no idea if these media channels even support redirects.", "author": "bkelly@mozilla.com", "id": 11089594, "time": "2016-01-19T23:33:33Z"}, {"text": "(In reply to Ben Kelly [:bkelly] from comment #56)\n> If these sites require non-standard headers to be propagates across\n> redirects then they should be doing so via a redirect callback.  Its pretty\n> clear to me thats the API.\n> \n> If you want to argue this should change, feel free to file a bug against\n> necko.  But I don't really see a problem with the current situation.\n> \n> For example, in this case I think its a media bug that it twiddles headers,\n> but doesn't handle that on redirect.  Of course, I have no idea if these\n> media channels even support redirects.\n\nResponded in bug 1240929 comment 1.", "author": "ehsan@mozilla.com", "id": 11089639, "time": "2016-01-19T23:40:47Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/f030e115c50f\nhttps://hg.mozilla.org/mozilla-central/rev/f3d08382b352\nhttps://hg.mozilla.org/mozilla-central/rev/58ac8b7c319e\nhttps://hg.mozilla.org/mozilla-central/rev/321a4125d242\nhttps://hg.mozilla.org/mozilla-central/rev/1b87526faf78", "author": "cbook@mozilla.com", "id": 11091356, "time": "2016-01-20T14:42:56Z"}, {"text": "Comment on attachment 8709631\nP3 Add a version of test_fetch_cors that reroutes through an empty service worker. r=ehsan\n\nLet's take them in aurora/45.", "author": "sledru@mozilla.com", "id": 11095002, "time": "2016-01-21T13:29:55Z"}, {"text": "ben, this has problems uplifting to aurora, could you rebase this for aurora ? thanks!", "author": "cbook@mozilla.com", "id": 11095103, "time": "2016-01-21T14:11:02Z"}, {"text": "(This landed on Aurora <https://treeherder.mozilla.org/#/jobs?repo=mozilla-aurora&revision=c018fbb65ecb>)", "author": "ehsan@mozilla.com", "id": 11096171, "time": "2016-01-21T18:46:29Z"}, {"text": "*** Bug 1243453 has been marked as a duplicate of this bug. ***", "author": "bkelly@mozilla.com", "id": 11117035, "time": "2016-01-28T17:09:54Z"}, {"text": "Can verify that things are working on the test page. Thanks all!", "author": "jrconlin@mozilla.com", "id": 11117074, "time": "2016-01-28T17:22:05Z"}, {"text": "*** Bug 1243453 has been marked as a duplicate of this bug. ***", "author": "Florian.P.Nierhaus@gmail.com", "id": 11117408, "time": "2016-01-28T18:51:33Z"}, {"text": "Tested this in a couple of firefox versions and am concerned this bug still affects Firefox 45.\n\n45.0b1 released today fails for me (1243453):\n\nOK:\n2016-01-25-00-40-10-mozilla-aurora/firefox-45.0a2.en-US.linux-x86_64\n2016-01-28-00-40-12-mozilla-aurora/firefox-46.0a2.en-US.linux-x86_64\n2016-01-28-03-02-08-mozilla-central/firefox-47.0a1.en-US.linux-x86_64", "author": "Florian.P.Nierhaus@gmail.com", "id": 11117695, "time": "2016-01-28T20:07:40Z"}, {"text": "*** Bug 216828 has been marked as a duplicate of this bug. ***", "author": "bkelly@mozilla.com", "id": 11296333, "time": "2016-04-02T12:40:27Z"}], "cf_last_resolved": "2016-01-20T14:42:56Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "46 Branch", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-04-02T12:40:27Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "DOM", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla46", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "http://evilonastick.com/push", "creator_detail": {"email": "jrconlin@mozilla.com", "id": 402014, "name": "jrconlin@mozilla.com", "real_name": "JR Conlin [:jrconlin,:jconlin]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "bkelly@mozilla.com", "id": 465500, "name": "bkelly@mozilla.com", "real_name": "Ben Kelly [PTO, back late March][:bkelly]"}, {"email": "cbook@mozilla.com", "id": 277293, "name": "cbook@mozilla.com", "real_name": "Carsten Book [:Tomcat]"}, {"email": "darin.moz@gmail.com", "id": 20048, "name": "darin.moz@gmail.com", "real_name": "Darin Fisher"}, {"email": "ehsan@mozilla.com", "id": 251051, "name": "ehsan@mozilla.com", "real_name": ":Ehsan Akhgari"}, {"email": "Florian.P.Nierhaus@gmail.com", "id": 561854, "name": "Florian.P.Nierhaus@gmail.com", "real_name": ""}, {"email": "honzab.moz@firemni.cz", "id": 269762, "name": "honzab.moz@firemni.cz", "real_name": "Honza Bambas (:mayhemer)"}, {"email": "jrconlin@mozilla.com", "id": 402014, "name": "jrconlin@mozilla.com", "real_name": "JR Conlin [:jrconlin,:jconlin]"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "nalexander@mozilla.com", "id": 432887, "name": "nalexander@mozilla.com", "real_name": "Nick Alexander :nalexander"}, {"email": "rkothari@mozilla.com", "id": 538805, "name": "rkothari@mozilla.com", "real_name": "Ritu Kothari (:ritu)"}, {"email": "sledru@mozilla.com", "id": 495955, "name": "sledru@mozilla.com", "real_name": "Sylvestre Ledru [:sylvestre]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "mar.castelluccio@studenti.unina.it"}, {"removed": "General", "field_name": "component", "added": "DOM"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}], "who": "mcastelluccio@mozilla.com", "when": "2016-01-07T19:18:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bkelly@mozilla.com, bzbarsky@mit.edu"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bkelly@mozilla.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-01-07T19:27:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jonas@sicking.cc"}], "who": "bkelly@mozilla.com", "when": "2016-01-07T19:34:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jrconlin@mozilla.com, nalexander@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jrconlin@mozilla.com)"}], "who": "nalexander@mozilla.com", "when": "2016-01-13T18:38:55Z"}, {"changes": [{"removed": "needinfo?(jrconlin@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jrconlin@mozilla.com", "when": "2016-01-14T19:43:02Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bkelly@mozilla.com"}, {"removed": "needinfo?(bkelly@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bkelly@mozilla.com", "when": "2016-01-15T16:13:42Z"}, {"changes": [{"removed": "bzbarsky@mit.edu", "field_name": "cc", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2016-01-15T17:49:51Z"}, {"changes": [{"removed": "---", "field_name": "cf_status_firefox43", "added": "disabled"}, {"removed": "---", "field_name": "cf_status_firefox44", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox45", "added": "affected"}], "who": "bkelly@mozilla.com", "when": "2016-01-15T17:51:35Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jrconlin@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-15T17:55:18Z"}, {"changes": [{"removed": "needinfo?(jrconlin@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jrconlin@mozilla.com", "when": "2016-01-15T17:57:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "honzab.moz@firemni.cz"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(honzab.moz@firemni.cz)"}], "who": "bkelly@mozilla.com", "when": "2016-01-15T18:48:21Z"}, {"changes": [{"removed": "jonas@sicking.cc", "field_name": "cc", "added": ""}], "who": "jonas@sicking.cc", "when": "2016-01-15T23:57:47Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8709175, "added": "1"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T15:21:36Z"}, {"changes": [{"removed": "needinfo?(honzab.moz@firemni.cz)", "field_name": "flagtypes.name", "added": ""}], "who": "bkelly@mozilla.com", "when": "2016-01-19T15:22:16Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8709176, "added": "1"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T15:22:37Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8709179, "added": "1"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T15:23:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ehsan@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709449, "added": "review?(ehsan@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T16:28:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709451, "added": "review?(ehsan@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T16:29:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709452, "added": "review?(ehsan@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T16:32:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709453, "added": "review?(ehsan@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T16:34:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709454, "added": "review?(ehsan@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T16:36:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ehsan@mozilla.com)", "attachment_id": 8709449, "added": "review+"}], "who": "ehsan@mozilla.com", "when": "2016-01-19T20:08:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ehsan@mozilla.com)", "attachment_id": 8709451, "added": "review+"}], "who": "ehsan@mozilla.com", "when": "2016-01-19T20:09:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ehsan@mozilla.com)", "attachment_id": 8709452, "added": "review+"}], "who": "ehsan@mozilla.com", "when": "2016-01-19T20:23:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ehsan@mozilla.com)", "attachment_id": 8709453, "added": "review+"}], "who": "ehsan@mozilla.com", "when": "2016-01-19T20:24:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ehsan@mozilla.com)", "attachment_id": 8709454, "added": "review+"}], "who": "ehsan@mozilla.com", "when": "2016-01-19T20:26:37Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(ehsan@mozilla.com)"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T20:30:11Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8709452, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709631, "added": "review+"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T21:50:43Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709449, "added": "approval-mozilla-aurora?, approval-mozilla-beta?"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T21:56:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709451, "added": "approval-mozilla-aurora?, approval-mozilla-beta?"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T21:57:24Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709453, "added": "approval-mozilla-aurora?, approval-mozilla-beta?"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T21:57:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709454, "added": "approval-mozilla-aurora?, approval-mozilla-beta?"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T21:57:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8709631, "added": "approval-mozilla-aurora?, approval-mozilla-beta?"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T21:58:25Z"}, {"changes": [{"removed": "---", "field_name": "cf_status_firefox42", "added": "affected"}, {"removed": "disabled", "field_name": "cf_status_firefox43", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox_esr38", "added": "unaffected"}], "who": "bkelly@mozilla.com", "when": "2016-01-19T22:01:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rkothari@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bkelly@mozilla.com)"}], "who": "rkothari@mozilla.com", "when": "2016-01-19T22:13:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8709449, "added": "approval-mozilla-beta-"}], "who": "rkothari@mozilla.com", "when": "2016-01-19T22:16:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8709451, "added": "approval-mozilla-beta-"}], "who": "rkothari@mozilla.com", "when": "2016-01-19T22:17:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8709453, "added": "approval-mozilla-beta-"}], "who": "rkothari@mozilla.com", "when": "2016-01-19T22:17:36Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8709454, "added": "approval-mozilla-beta-"}], "who": "rkothari@mozilla.com", "when": "2016-01-19T22:17:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8709631, "added": "approval-mozilla-beta-"}], "who": "rkothari@mozilla.com", "when": "2016-01-19T22:18:09Z"}, {"changes": [{"removed": "needinfo?(bkelly@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bkelly@mozilla.com", "when": "2016-01-19T22:19:23Z"}, {"changes": [{"removed": "needinfo?(ehsan@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "ehsan@mozilla.com", "when": "2016-01-19T23:15:22Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla46"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-01-20 06:42:56"}, {"removed": "affected", "field_name": "cf_status_firefox46", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-01-20T14:42:56Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1241020"}], "who": "bkelly@mozilla.com", "when": "2016-01-20T18:49:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sledru@mozilla.com"}, {"removed": "affected", "field_name": "cf_status_firefox42", "added": "wontfix"}, {"removed": "affected", "field_name": "cf_status_firefox43", "added": "wontfix"}, {"removed": "affected", "field_name": "cf_status_firefox44", "added": "wontfix"}], "who": "sledru@mozilla.com", "when": "2016-01-21T13:28:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8709631, "added": "approval-mozilla-aurora+"}], "who": "sledru@mozilla.com", "when": "2016-01-21T13:29:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8709454, "added": "approval-mozilla-aurora+"}], "who": "sledru@mozilla.com", "when": "2016-01-21T13:29:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8709453, "added": "approval-mozilla-aurora+"}], "who": "sledru@mozilla.com", "when": "2016-01-21T13:30:04Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8709451, "added": "approval-mozilla-aurora+"}], "who": "sledru@mozilla.com", "when": "2016-01-21T13:30:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8709449, "added": "approval-mozilla-aurora+"}], "who": "sledru@mozilla.com", "when": "2016-01-21T13:30:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cbook@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bkelly@mozilla.com)"}], "who": "cbook@mozilla.com", "when": "2016-01-21T14:11:02Z"}, {"changes": [{"removed": "needinfo?(bkelly@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(ehsan@mozilla.com)"}], "who": "ehsan@mozilla.com", "when": "2016-01-21T14:51:13Z"}, {"changes": [{"removed": "needinfo?(ehsan@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"removed": "affected", "field_name": "cf_status_firefox45", "added": "fixed"}], "who": "ehsan@mozilla.com", "when": "2016-01-21T15:06:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "Florian.P.Nierhaus@gmail.com"}], "who": "bkelly@mozilla.com", "when": "2016-01-28T17:09:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "darin.moz@gmail.com"}], "who": "bkelly@mozilla.com", "when": "2016-04-02T12:40:27Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}