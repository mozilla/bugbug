{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "thomas@inqualitymedia.com", "mentors_detail": [], "depends_on": [1166140, 1170112, 1170958], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_backlog": "---", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["dev-doc-needed", "site-compat"], "summary": "Implement MediaStream.addTrack()/removeTrack()", "cf_last_resolved": "2015-09-30T20:51:14Z", "attachments": [{"creator": "apehrson@mozilla.com", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8607342}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T10:51:37Z", "type_id": 4, "creation_date": "2015-09-24T10:50:08Z", "id": 1258879, "setter": "apehrson@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8618701}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T10:52:55Z", "type_id": 4, "creation_date": "2015-09-24T10:50:10Z", "id": 1258880, "setter": "apehrson@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8618702}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T05:48:10Z", "type_id": 4, "creation_date": "2015-09-24T04:15:52Z", "id": 1258648, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8657704}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T04:49:56Z", "type_id": 4, "creation_date": "2015-09-18T07:06:22Z", "id": 1255054, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8662784}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T05:02:40Z", "type_id": 4, "creation_date": "2015-09-24T04:15:56Z", "id": 1258650, "setter": "roc@ocallahan.org"}], "content_type": "text/x-review-board-request", "id": 8665255}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T05:04:27Z", "type_id": 4, "creation_date": "2015-09-24T04:15:59Z", "id": 1258651, "setter": "roc@ocallahan.org"}, {"status": "+", "name": "review", "modification_date": "2015-09-25T13:51:15Z", "type_id": 4, "creation_date": "2015-09-25T03:58:03Z", "id": 1259528, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8665256}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T05:41:50Z", "type_id": 4, "creation_date": "2015-09-24T04:16:01Z", "id": 1258652, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8665257}, {"creator": "apehrson@mozilla.com", "is_obsolete": 1, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-24T04:21:26Z", "type_id": 4, "creation_date": "2015-09-24T04:21:26Z", "id": 1258655, "setter": "apehrson@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2015-09-24T05:44:05Z", "type_id": 4, "creation_date": "2015-09-24T05:44:05Z", "id": 1258699, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8665258}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-29T20:29:41Z", "type_id": 4, "creation_date": "2015-09-29T16:42:22Z", "id": 1261893, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8667366}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-29T21:06:31Z", "type_id": 4, "creation_date": "2015-09-29T16:42:25Z", "id": 1261894, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8667367}, {"creator": "apehrson@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-29T23:21:25Z", "type_id": 4, "creation_date": "2015-09-29T16:42:28Z", "id": 1261895, "setter": "jib@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8667368}], "votes": 5, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 119, "comments": [{"text": "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36\n\nSteps to reproduce:\n\nMediaStream in Firefox does not support the addTrack() method.\n\n\nActual results:\n\nThis prevents the use of video together with WebAudio processed streams in WebRTC, as the two have to be combined later into one MediaStream.\n\n\nExpected results:\n\nIt should be possible to add a video track to a MediaStream from createMediaStreamDestination().", "author": "thomas@inqualitymedia.com", "id": 9624150, "time": "2014-11-21T22:45:18Z"}, {"text": "Any ETA or comment about this? It is a very important feature IMHO.", "author": "ibc@aliax.net", "id": 9781375, "time": "2015-01-12T12:59:06Z"}, {"text": "I intend to implement addTrack() and removeTrack() as part of this bug. I have some WIP patches already.", "author": "apehrson@mozilla.com", "id": 10282621, "time": "2015-05-19T01:59:04Z"}, {"text": "Created attachment 8607342\nMozReview Request: bz://1103188/pehrsons\n\n/r/8989 - Bug 1103188 - Part 1. Implement DOMMediaStream::AddTrack/RemoveTrack. r=\n/r/8991 - Bug 1103188 - Part 2. Add MediaStream::AddTrack/RemoveTrack mochitests. r=\n\nPull down these commits:\n\nhg pull -r 3151f9e32b8ced9b72c850232bc63b74888520b5 https://reviewboard-hg.mozilla.org/gecko/", "author": "apehrson@mozilla.com", "id": 10283245, "time": "2015-05-19T05:43:09Z"}, {"text": "Comment on attachment 8607342\nMozReview Request: bz://1103188/pehrsons\n\nStill quite WIP.", "author": "apehrson@mozilla.com", "id": 10283248, "time": "2015-05-19T05:44:25Z"}, {"text": "Comment on attachment 8607342\nMozReview Request: bz://1103188/pehrsons", "author": "apehrson@mozilla.com", "id": 10367371, "time": "2015-06-10T15:18:32Z"}, {"text": "Created attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib", "author": "apehrson@mozilla.com", "id": 10367372, "time": "2015-06-10T15:18:32Z"}, {"text": "Created attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc", "author": "apehrson@mozilla.com", "id": 10367373, "time": "2015-06-10T15:18:32Z"}, {"text": "*** Bug 1021647 has been marked as a duplicate of this bug. ***", "author": "apehrson@mozilla.com", "id": 10421941, "time": "2015-06-25T14:33:30Z"}, {"text": "Could you please let us know which version of nightly build this is targeted for? as this would help plan us accordingly.\n\nthanks.", "author": "rajkumaradass@avaya.com", "id": 10643608, "time": "2015-08-21T09:15:49Z"}, {"text": "I want to land it as soon as I can but it depends on how long it takes for blockers to get resolved and how long reviews need.\n\nLet's say 44. That shouldn't be an overestimation.", "author": "apehrson@mozilla.com", "id": 10643631, "time": "2015-08-21T09:25:46Z"}, {"text": "See bug 1170958 comment 56 for a test we should write.", "author": "apehrson@mozilla.com", "id": 10690471, "time": "2015-09-03T04:31:49Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nBug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib", "author": "apehrson@mozilla.com", "id": 10701708, "time": "2015-09-07T08:04:43Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nBug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc", "author": "apehrson@mozilla.com", "id": 10701709, "time": "2015-09-07T08:04:45Z"}, {"text": "Created attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 3. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "author": "apehrson@mozilla.com", "id": 10701710, "time": "2015-09-07T08:04:47Z"}, {"text": "(In reply to Andreas Pehrson [:pehrsons] (Telenor) from comment #11)\n> See bug 1170958 comment 56 for a test we should write.\n\nWe can't write this test now because we don't yet remove tracks as they end (e.g., when captured from a media element).\n\nWhen we have implemented MediaStreamTrack.ended and MediaStream's \"removetrack\" event, this seems like a very good thing to test.", "author": "apehrson@mozilla.com", "id": 10701717, "time": "2015-09-07T08:08:53Z"}, {"text": "Did you mean to request review here? None of the review flags are set in either bugzilla or mozReview, so I never got any email above my bugzilla noise filter, but from your commit messages it looks like you're seeking review.", "author": "jib@mozilla.com", "id": 10728173, "time": "2015-09-14T16:05:28Z"}, {"text": "(In reply to Jan-Ivar Bruaroey [:jib] from comment #16)\n> Did you mean to request review here? None of the review flags are set in\n> either bugzilla or mozReview, so I never got any email above my bugzilla\n> noise filter, but from your commit messages it looks like you're seeking\n> review.\n\nI meant to use this for safe storage (and perhaps show some progress) until bug 1170958 got stable enough :-)\nI think we're there now, so I'll soon update the patches and request review for real (tm).", "author": "apehrson@mozilla.com", "id": 10730834, "time": "2015-09-15T03:21:10Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nBug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib", "author": "apehrson@mozilla.com", "id": 10731365, "time": "2015-09-15T07:03:47Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nBug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc", "author": "apehrson@mozilla.com", "id": 10731366, "time": "2015-09-15T07:03:50Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 3. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "author": "apehrson@mozilla.com", "id": 10731368, "time": "2015-09-15T07:03:53Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nPer spec add/removeTrack() never throw exceptions.\nSo, remove [Throws] from .webidl\n\n(If we think the methods should throw exceptions in some cases,\nthen it is ok to keep [Throws] but a spec bug must be filed. )", "author": "bugs@pettay.fi", "id": 10731868, "time": "2015-09-15T10:25:02Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nhttps://reviewboard.mozilla.org/r/8991/#review17219", "author": "roc@ocallahan.org", "id": 10731980, "time": "2015-09-15T11:15:31Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nhttps://reviewboard.mozilla.org/r/18417/#review17221\n\nGreat!!!", "author": "roc@ocallahan.org", "id": 10732005, "time": "2015-09-15T11:16:56Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nhttps://reviewboard.mozilla.org/r/8989/#review17231\n\n::: dom/webidl/MediaStream.webidl:32\n(Diff revision 3)\n> +//  Constructor (sequence<MediaStreamTrack> tracks)]\n\nAnd Exposed=Window, if we care about commented-out code.\n\n::: dom/webidl/MediaStream.webidl:34\n(Diff revision 3)\n> -    readonly attribute DOMString    id;\n> -    sequence<AudioStreamTrack> getAudioTracks();\n> -    sequence<VideoStreamTrack> getVideoTracks();\n> -    sequence<MediaStreamTrack> getTracks();\n> +    readonly    attribute DOMString    id;\n> +    sequence<AudioStreamTrack> getAudioTracks ();\n> +    sequence<VideoStreamTrack> getVideoTracks ();\n> +    sequence<MediaStreamTrack> getTracks ();\n\nThese are whitespace-only changes. Are they necessary? (I wish I knew why specs seem to favor space-before-paren, so I admit bias here). I'll defer to smaug.", "author": "jib@mozilla.com", "id": 10732508, "time": "2015-09-15T13:58:52Z"}, {"text": "Specs don't favor space before paren, but apparently this particular spec uses unusual style.", "author": "bugs@pettay.fi", "id": 10732532, "time": "2015-09-15T14:07:46Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nhttps://reviewboard.mozilla.org/r/18417/#review17235\n\nVery nice audio track tests!\n\n::: dom/media/tests/mochitest/head.js:330\n(Diff revision 2)\n> +  tracks.forEach(t => ok(mediaStream.getTracks().includes(t),\n\nIs .includes finally riding the trains? If so, yay! (if not, nay).\n\n::: dom/media/tests/mochitest/head.js:330\n(Diff revision 2)\n> +  tracks.forEach(t => ok(mediaStream.getTracks().includes(t),\n> +                         (message ? message + \": \" : \"\") +\n> +                         \"MediaStream \" + mediaStream.id +\n> +                         \" contains track \" + t.id));\n> +  is(mediaStream.getTracks().length, tracks.length,\n> +     (message ? message + \": \" : \"\") +\n> +     \"MediaStream \" + mediaStream.id + \" contains no extra tracks\");\n\nStyle-nit: maybe easier to read if we first do:\n\n message += message ? \": \" : \"\";\n \n ?\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:18\n(Diff revision 2)\n> +    var audioStream, videoStream, audioVideoStream;\n> +    var audioTrack1, audioTrack2;\n> +    var videoTrack1, videoTrack2;\n\nstyle-idea: These are effectively global already. If we moved these out, we'd save one indent on the whole thing (plus {} brackets and return).\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:23\n(Diff revision 2)\n> +      .then(() => getUserMedia({audio: true, video: false})).then(s => audioStream = s)\n> +      .then(() => getUserMedia({audio: false, video: true})).then(s => videoStream = s)\n> +      .then(() => getUserMedia({audio: true, video: true})).then(s => audioVideoStream = s)\n> +      .then(() => {\n> +        info(\"Test media stream tracks\");\n> +        checkMediaStreamTracks({audio: true}, audioStream, \"Initial audio-only gUM\");\n> +        checkMediaStreamTracks({video: true}, videoStream, \"Initial video-only gUM\");\n> +        checkMediaStreamTracks({audio: true, video: true}, audioVideoStream, \"Initial audio-video gUM\");\n\nBetter to keep constraints args identical. Also, the three gums and three tests here could be rolled into a sub-function that reuses the same constraints argument for both functions. That would reduce the possibility of maintenance mistakes by removing the need to visually inspect that these match up.\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:48\n(Diff revision 2)\n> +        var playback = new LocalMediaStreamPlayback(testElem, stream);\n> +        return playback.playMedia(false);\n\nDoes this stop track afterwards? If not, we should probably `track.stop()` explicitly here if we're not going to use it again (I know they're fake, but it still seems wrong to leave them active until gc).\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:75\n(Diff revision 2)\n> +        stream.removeTrack(videoTrack1);\n> +        checkMediaStreamContains(stream, [track], \"Removed added video\");\n> +\n> +        stream.removeTrack(videoTrack1);\n> +        checkMediaStreamContains(stream, [track], \"Re-removed added video\");\n> +\n> +        stream.removeTrack(track);\n> +        checkMediaStreamContains(stream, [], \"Removed original video\");\n\nGreat, just checking: would removing the original track before the added one exercise any different code paths or state?\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:87\n(Diff revision 2)\n> +        elem.mozSrcObject = stream;\n\nelem.srcObject = stream;\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:89\n(Diff revision 2)\n> +        return wait(500).then(() => {\n> +          ok(!loadeddata, \"Stream without tracks shall not raise 'loadeddata' on media element\");\n\nIs 500 ms sufficient on emulators? I guess there's no intermittent risk here, so who cares I suppose.\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:92\n(Diff revision 2)\n> +          elem.mozSrcObject = null;\n\nditto\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:96\n(Diff revision 2)\n> +          checkMediaStreamContains(stream, [track], \"Re-added added then removed track\");\n\nMaybe commas in that sentence?\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:104\n(Diff revision 2)\n> +          var audioStreamTrack = audioStream.getTracks()[0];\n> +          var videoStreamTrack = videoStream.getTracks()[0];\n\nMaybe just audioTrack and videoTrack?\n\n::: dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html:120\n(Diff revision 2)\n> +        function createOscillator(ac, frequency) {\n\ncreateOscillatorStream?", "author": "jib@mozilla.com", "id": 10733149, "time": "2015-09-15T15:41:09Z"}, {"text": "(In reply to Olli Pettay [:smaug] from comment #25)\n> Specs don't favor space before paren, but apparently this particular spec\n> uses unusual style.\n\nFwiw, the style seems enforced by whatever tool the w3c uses for class=\"idl\", e.g. \"getAudioTracks()\" in the source becomes \"getAudioTracks ()\" on output. It seems to be their preferred style from a quick polling:\n\nhttp://w3c.github.io/screen-orientation/ (space)\nhttp://w3c.github.io/push-api/ (space)\nhttp://w3c.github.io/webrtc-pc/ (space)\nhttp://slightlyoff.github.io/ServiceWorker/spec/service_worker/ (no space)", "author": "jib@mozilla.com", "id": 10733296, "time": "2015-09-15T16:08:49Z"}, {"text": "https://reviewboard.mozilla.org/r/8989/#review17231\n\n> These are whitespace-only changes. Are they necessary? (I wish I knew why specs seem to favor space-before-paren, so I admit bias here). I'll defer to smaug.\n\nNot strictly necessary, but they make us follow the spec to the letter.", "author": "apehrson@mozilla.com", "id": 10741179, "time": "2015-09-17T07:24:01Z"}, {"text": "(In reply to Olli Pettay [:smaug] from comment #21)\n> Comment on attachment 8618701\n> MozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with\n> addTrack/removeTrack. r?smaug,jib\n> \n> Per spec add/removeTrack() never throw exceptions.\n> So, remove [Throws] from .webidl\n\nDone.", "author": "apehrson@mozilla.com", "id": 10741180, "time": "2015-09-17T07:24:39Z"}, {"text": "https://reviewboard.mozilla.org/r/18417/#review17235\n\nThanks to padenot, mostly :)\n\n> Is .includes finally riding the trains? If so, yay! (if not, nay).\n\nRiding the 43 train per bug 1070767, yay!\n\n> Style-nit: maybe easier to read if we first do:\n> \n>  message += message ? \": \" : \"\";\n>  \n>  ?\n\nJust tried this. With =+ on `undefined` you'll get \"undefinedsomething\". I'll do `message = message ? (message + \": \") : \"\";` instead.\n\n> style-idea: These are effectively global already. If we moved these out, we'd save one indent on the whole thing (plus {} brackets and return).\n\nNice, done.\n\n> Better to keep constraints args identical. Also, the three gums and three tests here could be rolled into a sub-function that reuses the same constraints argument for both functions. That would reduce the possibility of maintenance mistakes by removing the need to visually inspect that these match up.\n\nThis `getUserMedia` actually comes from head.js. I think we should always check the tracks when calling gUM so I'm adding it there instead. I'll make that a new patch for you to review though.\n\n> Does this stop track afterwards? If not, we should probably `track.stop()` explicitly here if we're not going to use it again (I know they're fake, but it still seems wrong to leave them active until gc).\n\nIt does not. Fixed.\n\n> Great, just checking: would removing the original track before the added one exercise any different code paths or state?\n\nIt shouldn't really, but I'm testing that case in the webaudio tests below. I reckon that is sufficient.\n\n> elem.srcObject = stream;\n\nDone.\n\n> Is 500 ms sufficient on emulators? I guess there's no intermittent risk here, so who cares I suppose.\n\nProbably not but as you say I don't think it's an issue.\n\n> Maybe commas in that sentence?\n\nI turned it into \"Re-added added-then-removed track\" to avoid ambiguity.\n\n> Maybe just audioTrack and videoTrack?\n\nDone.\n\n> createOscillatorStream?\n\nDone.", "author": "apehrson@mozilla.com", "id": 10741353, "time": "2015-09-17T08:23:01Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nBug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib", "author": "apehrson@mozilla.com", "id": 10746288, "time": "2015-09-18T07:06:14Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nBug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc", "author": "apehrson@mozilla.com", "id": 10746290, "time": "2015-09-18T07:06:17Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 3. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "author": "apehrson@mozilla.com", "id": 10746291, "time": "2015-09-18T07:06:19Z"}, {"text": "Created attachment 8662784\nMozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 4. Always check tracks on getUserMedia(). r?jib", "author": "apehrson@mozilla.com", "id": 10746292, "time": "2015-09-18T07:06:22Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nCarries r=smaug,jib.", "author": "apehrson@mozilla.com", "id": 10746293, "time": "2015-09-18T07:06:57Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nCarries r=roc.", "author": "apehrson@mozilla.com", "id": 10746305, "time": "2015-09-18T07:08:02Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nCarries r=jib,roc.", "author": "apehrson@mozilla.com", "id": 10746307, "time": "2015-09-18T07:08:52Z"}, {"text": "Comment on attachment 8662784\nMozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib\n\nhttps://reviewboard.mozilla.org/r/19571/#review17709\n\nlgtm\n\n::: dom/media/tests/mochitest/head.js:218\n(Diff revision 1)\n> -  return navigator.mediaDevices.getUserMedia(constraints);\n> +  return navigator.mediaDevices.getUserMedia(constraints)\n> +    .then(stream => checkMediaStreamTracks(constraints, stream) || stream);\n\nMaybe\n\n    .then(stream => (checkMediaStreamTracks(constraints, stream), stream)) ?\n\nThen as a reader I don't have to look up what checkMediaStreamTracks returns.", "author": "jib@mozilla.com", "id": 10748165, "time": "2015-09-18T16:03:34Z"}, {"text": "(In reply to Jan-Ivar Bruaroey [:jib] from comment #26)\n> Does this stop track afterwards? If not, we should probably `track.stop()`\n> explicitly here if we're not going to use it again (I know they're fake, but\n> it still seems wrong to leave them active until gc).\n\nThis revealed a problem. I changed to using `playWithMediaStreamStop()` in the test and that automatically calls `stream.stop()` after finishing.\n\nNow, MediaStream::stop() is no longer in the spec but we still have it from older versions of said spec. The way our MediaStreams treat stream stops is by ending all tracks they own (so not stopping tracks added by `addTrack()`).\n\nHow do you think we should treat `stop()` to not break backwards compatibility too much?\n\nI see a couple of options:\n\n* Remove stop() and break some sites\n* Stop everything owned and removeTrack() what else is in the stream\n* Stop everything owned and also stop() other tracks in the stream\n* Remove stream.stop() from our addTrackRemoveTrack test (use track.stop() instead) and let behavior be undefined when stopping a stream with addTrack()ed tracks.", "author": "apehrson@mozilla.com", "id": 10759185, "time": "2015-09-22T06:14:24Z"}, {"text": "The symptoms of stream.stop() when the stream has addTrack()ed tracks right now: https://treeherder.mozilla.org/#/jobs?repo=try&revision=83c7c020307c\n\nStream does not end because the video track is still live. Audio stops though, per my local testrun.", "author": "apehrson@mozilla.com", "id": 10759192, "time": "2015-09-22T06:17:16Z"}, {"text": "IMHO, MediaStream class for end-users (web developers) is just a means for playing actual tracks. So tracks appended by addTrack should be treated as owned and thus stopped altogether with other tracks of the MediaStream", "author": "kirill@radical.fm", "id": 10759205, "time": "2015-09-22T06:26:30Z"}, {"text": "(In reply to Andreas Pehrson [:pehrsons] (Telenor) from comment #39)\n> I see a couple of options:\n> \n> * Remove stop() and break some sites\n> * Stop everything owned and removeTrack() what else is in the stream\n> * Stop everything owned and also stop() other tracks in the stream\n> * Remove stream.stop() from our addTrackRemoveTrack test (use track.stop()\n> instead) and let behavior be undefined when stopping a stream with\n> addTrack()ed tracks.\n..* Stop all tracks currently in the stream (all tracks returned by `getTracks()`)\n\nYeah, I think this makes the most sense. Much like Kyrylo says in comment 41. This will allow us to retain current behavior for non-addTrack/removeTrack uses while still making some sort of sense for the addTrack/removeTrack cases. I'll add a patch and you can give your feedback jib.", "author": "apehrson@mozilla.com", "id": 10759390, "time": "2015-09-22T07:43:19Z"}, {"text": "(In reply to Andreas Pehrson [:pehrsons] (Telenor) from comment #42)\n> ..* Stop all tracks currently in the stream (all tracks returned by\n> `getTracks()`)\n> \n> Yeah, I think this makes the most sense. Much like Kyrylo says in comment\n> 41. This will allow us to retain current behavior for\n> non-addTrack/removeTrack uses while still making some sort of sense for the\n> addTrack/removeTrack cases. I'll add a patch and you can give your feedback\n> jib.\n\nThough `stop()` is only available for local tracks (i.e., gUM, not remote side of peerconnection). If tracks in a stream are a mix of local and remote, this gets tricky. I'm leaning towards undefined behavior now (plus a warning in the console).", "author": "apehrson@mozilla.com", "id": 10759412, "time": "2015-09-22T07:54:54Z"}, {"text": "(In reply to Andreas Pehrson [:pehrsons] (Telenor) from comment #39)\n> * Remove stop() and break some sites\n\nNo, since we want to stay backwards compatible I think.\n\n> * Remove stream.stop() from our addTrackRemoveTrack test (use track.stop()\n> instead)\n\nDefinitely this, regardless of whatever else we do on this.\n\n> and let behavior be undefined when stopping a stream with addTrack()ed tracks.\n\nThis. While it's a tricky question, I'm fairly hard-line [1] on not adding new functionality that is non-spec, and stream.stop() is gone. To me, backwards compatible means: support code already written, but not support new code written the old way. If you touch old code then that's when you should fix it the right way.\n\nI feel this way because getting rid of old APIs is harder than adding new ones, and touching old code is an opportune moment to push for convergence (that doesn't break old code).\n\n> I'm leaning towards undefined behavior now (plus a warning in the console).\n\nYes, definitely a console warning, even of type JS error, since the desired behavior wont be met.\n\n[1] https://github.com/webrtc/adapter/issues/58", "author": "jib@mozilla.com", "id": 10760739, "time": "2015-09-22T14:51:03Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nBug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib", "author": "apehrson@mozilla.com", "id": 10769616, "time": "2015-09-24T04:15:49Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nBug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc", "author": "apehrson@mozilla.com", "id": 10769617, "time": "2015-09-24T04:15:51Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib", "author": "apehrson@mozilla.com", "id": 10769618, "time": "2015-09-24T04:15:53Z"}, {"text": "Comment on attachment 8662784\nMozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib", "author": "apehrson@mozilla.com", "id": 10769619, "time": "2015-09-24T04:15:55Z"}, {"text": "Created attachment 8665255\nMozReview Request: Bug 1103188 - Part 5. Break out MediaTrackListListener to an interface. r?roc\n\nBug 1103188 - Part 5. Break out MediaTrackListListener to an interface. r?roc\nOther modules than MediaTrackLists may want to receive updates on a\nDOMMediaStream's track set. This moves the MediaTrackListListener out of\nthe MediaTrackList class into DOMMediaStream as a general interface.\n\nThe logic for adding MediaTracks to the MediaTrackList when\nMediaStreamTracks are added or removed from a DOMMediaStream is moved to\nHTMLMediaElement as this fits the model better - HTMLMediaElement is the\nowner of the MediaTrackLists.", "author": "apehrson@mozilla.com", "id": 10769620, "time": "2015-09-24T04:15:56Z"}, {"text": "Created attachment 8665256\nMozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc\n\nBug 1103188 - Part 6. End playback in HTMLMediaElement when a stream we are playing no longer has any tracks. r?roc", "author": "apehrson@mozilla.com", "id": 10769621, "time": "2015-09-24T04:15:59Z"}, {"text": "Created attachment 8665257\nMozReview Request: Bug 1103188 - Always check tracks on getUserMedia(). r?jib\n\nBug 1103188 - Part 7. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "author": "apehrson@mozilla.com", "id": 10769622, "time": "2015-09-24T04:16:01Z"}, {"text": "Created attachment 8665258\nMozReview Request: Bug 1103188 - Part 8. Always check tracks on getUserMedia(). r?jib\n\nBug 1103188 - Part 8. Always check tracks on getUserMedia(). r?jib", "author": "apehrson@mozilla.com", "id": 10769623, "time": "2015-09-24T04:16:03Z"}, {"text": "Comment on attachment 8662784\nMozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib\n\nChanging order of commits in mozreview might not be such a good idea.", "author": "apehrson@mozilla.com", "id": 10769628, "time": "2015-09-24T04:17:57Z"}, {"text": "Comment on attachment 8665257\nMozReview Request: Bug 1103188 - Always check tracks on getUserMedia(). r?jib\n\nCarries r=roc", "author": "apehrson@mozilla.com", "id": 10769629, "time": "2015-09-24T04:18:33Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nCarries r=smaug,jib", "author": "apehrson@mozilla.com", "id": 10769630, "time": "2015-09-24T04:19:12Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nCarries r=roc.", "author": "apehrson@mozilla.com", "id": 10769632, "time": "2015-09-24T04:19:39Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nNot sure what went wrong here.", "author": "apehrson@mozilla.com", "id": 10769633, "time": "2015-09-24T04:20:21Z"}, {"text": "Comment on attachment 8665258\nMozReview Request: Bug 1103188 - Part 8. Always check tracks on getUserMedia(). r?jib\n\nCarries r=jib.", "author": "apehrson@mozilla.com", "id": 10769634, "time": "2015-09-24T04:21:26Z"}, {"text": "Comment on attachment 8662784\nMozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib\n\nhttps://reviewboard.mozilla.org/r/19571/#review18105\n\nlgtm with nits\n\n::: dom/locales/en-US/chrome/dom/dom.properties:110\n(Diff revision 2)\n> +# LOCALIZATION NODE: Do not translate \"MediaStream\", \"stop()\" and \"MediaStreamTrack\"\n\nNOTE\n\n::: dom/media/DOMMediaStream.cpp:951\n(Diff revision 2)\n> +  nsIDocument* document = nullptr;\n> +  if (pWindow) {\n> +    document = pWindow->GetExtantDoc();\n> +  }\n\nDon't like ? : ?\n\n::: dom/media/DOMMediaStream.cpp:955\n(Diff revision 2)\n> +  nsContentUtils::ReportToConsole(nsIScriptError::warningFlag,\n> +                                  NS_LITERAL_CSTRING(\"Media\"),\n> +                                  document,\n\nIs ReportToConsole ok to call with a nullptr document?", "author": "jib@mozilla.com", "id": 10769680, "time": "2015-09-24T04:49:56Z"}, {"text": "Comment on attachment 8665255\nMozReview Request: Bug 1103188 - Part 5. Break out MediaTrackListListener to an interface. r?roc\n\nhttps://reviewboard.mozilla.org/r/20175/#review18109", "author": "roc@ocallahan.org", "id": 10769690, "time": "2015-09-24T05:02:40Z"}, {"text": "Comment on attachment 8665256\nMozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc\n\nhttps://reviewboard.mozilla.org/r/20177/#review18111", "author": "roc@ocallahan.org", "id": 10769699, "time": "2015-09-24T05:04:27Z"}, {"text": "Comment on attachment 8665257\nMozReview Request: Bug 1103188 - Always check tracks on getUserMedia(). r?jib\n\nhttps://reviewboard.mozilla.org/r/20179/#review18115\n\nlgtm!\n\n::: dom/media/tests/mochitest/mediaStreamPlayback.js:188\n(Diff revision 1)\n> +  stopTracksForStreamInMediaPlayback: {\n> +    value: function () {\n> +      return new Promise((resolve, reject) => {\n\nLong Promise constructor executor function. How about:\n\n  stopTracksForStreamInMediaPlayback: {\n    value: function () {\n      var stop = () => new Promise(resolve => {\n        this.mediaElement.addEventListener('ended', function stopped() {\n          this.mediaElement.removeEventListener('ended', stopped);\n          resolve();\n        });\n        // TODO Also check that all the tracks are local.\n        this.mediaStream.getTracks().forEach(t => t.stop());\n      });\n      var timeout = (ms, msg) => wait(ms).then(() => Promise.reject(new Error(msg)));\n\n      return Promise.race([stop(),\n                           timeout(ENDED_TIMEOUT_LENGTH, \"ended event never fired\")])\n        .then(() => ok(true, \"ended event successfully fired\"));\n    },\n\n? hmm, almost more code, but more self explanatory maybe? dunno", "author": "jib@mozilla.com", "id": 10769767, "time": "2015-09-24T05:41:50Z"}, {"text": "https://reviewboard.mozilla.org/r/19571/#review18105\n\n> NOTE\n\nWups.\n\n> Don't like ? : ?\n\nYes I do :)\nFixed.\n\n> Is ReportToConsole ok to call with a nullptr document?\n\nYes. I didn't investigate how nullptr is handled but it's for instance done here: https://dxr.mozilla.org/mozilla-central/rev/abe43c30d78d7546ed7c622c5cf62d265709cdfd/dom/json/nsJSON.cpp#57", "author": "apehrson@mozilla.com", "id": 10769771, "time": "2015-09-24T05:43:27Z"}, {"text": "Comment on attachment 8665258\nMozReview Request: Bug 1103188 - Part 8. Always check tracks on getUserMedia(). r?jib\n\nhttps://reviewboard.mozilla.org/r/20181/#review18119", "author": "jib@mozilla.com", "id": 10769773, "time": "2015-09-24T05:44:05Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nhttps://reviewboard.mozilla.org/r/18417/#review18121", "author": "jib@mozilla.com", "id": 10769781, "time": "2015-09-24T05:48:10Z"}, {"text": "https://reviewboard.mozilla.org/r/20179/#review18115\n\n> Long Promise constructor executor function. How about:\n> \n>   stopTracksForStreamInMediaPlayback: {\n>     value: function () {\n>       var stop = () => new Promise(resolve => {\n>         this.mediaElement.addEventListener('ended', function stopped() {\n>           this.mediaElement.removeEventListener('ended', stopped);\n>           resolve();\n>         });\n>         // TODO Also check that all the tracks are local.\n>         this.mediaStream.getTracks().forEach(t => t.stop());\n>       });\n>       var timeout = (ms, msg) => wait(ms).then(() => Promise.reject(new Error(msg)));\n> \n>       return Promise.race([stop(),\n>                            timeout(ENDED_TIMEOUT_LENGTH, \"ended event never fired\")])\n>         .then(() => ok(true, \"ended event successfully fired\"));\n>     },\n> \n> ? hmm, almost more code, but more self explanatory maybe? dunno\n\nI made another alternative where I moved the timeout logic to head.js. Up for you to review soon.", "author": "apehrson@mozilla.com", "id": 10769915, "time": "2015-09-24T06:34:17Z"}, {"text": "https://reviewboard.mozilla.org/r/20177/#review18111\n\nOK, I have to revise this slightly. When ending media elements after tracks are gone I ran into a lot of other issues because this behavior is not expected by tests (or code, like mediaElement.captureStream was originally not made with this in mind).\n\nI think we can live with a slight hack in the addTrackRemoveTrack test for now, and I'll revisit this after we have fixed mediaElement.captureStream streams to not modify their track set on seek, and after we have implemented MediaStream's active/inactive state.", "author": "apehrson@mozilla.com", "id": 10770578, "time": "2015-09-24T09:45:24Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nBug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib", "author": "apehrson@mozilla.com", "id": 10770783, "time": "2015-09-24T10:50:08Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nBug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc", "author": "apehrson@mozilla.com", "id": 10770784, "time": "2015-09-24T10:50:11Z"}, {"text": "Comment on attachment 8657704\nMozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib", "author": "apehrson@mozilla.com", "id": 10770785, "time": "2015-09-24T10:50:13Z"}, {"text": "Comment on attachment 8662784\nMozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib\n\nBug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib", "author": "apehrson@mozilla.com", "id": 10770786, "time": "2015-09-24T10:50:15Z"}, {"text": "Comment on attachment 8665255\nMozReview Request: Bug 1103188 - Part 5. Break out MediaTrackListListener to an interface. r?roc\n\nBug 1103188 - Part 5. Break out MediaTrackListListener to an interface. r?roc\nOther modules than MediaTrackLists may want to receive updates on a\nDOMMediaStream's track set. This moves the MediaTrackListListener out of\nthe MediaTrackList class into DOMMediaStream as a general interface.\n\nThe logic for adding MediaTracks to the MediaTrackList when\nMediaStreamTracks are added or removed from a DOMMediaStream is moved to\nHTMLMediaElement as this fits the model better - HTMLMediaElement is the\nowner of the MediaTrackLists.", "author": "apehrson@mozilla.com", "id": 10770787, "time": "2015-09-24T10:50:16Z"}, {"text": "Comment on attachment 8665256\nMozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc\n\nBug 1103188 - Part 6. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "author": "apehrson@mozilla.com", "id": 10770788, "time": "2015-09-24T10:50:19Z"}, {"text": "Comment on attachment 8665257\nMozReview Request: Bug 1103188 - Always check tracks on getUserMedia(). r?jib\n\nBug 1103188 - Part 7. Always check tracks on getUserMedia(). r?jib", "author": "apehrson@mozilla.com", "id": 10770789, "time": "2015-09-24T10:50:21Z"}, {"text": "Comment on attachment 8618701\nMozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib\n\nCarries r=smaug,jib.", "author": "apehrson@mozilla.com", "id": 10770791, "time": "2015-09-24T10:51:37Z"}, {"text": "Comment on attachment 8618702\nMozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc\n\nCarries r=roc.", "author": "apehrson@mozilla.com", "id": 10770793, "time": "2015-09-24T10:52:55Z"}, {"text": "https://reviewboard.mozilla.org/r/20177/#review18185\n\nThe interdiff is not working because of the reordered commits, so I'll just point out what got updated.\n\n::: dom/media/tests/mochitest/head.js:360\n(Diff revision 2)\n> +    , wait(time).then(() => Promise.reject(new Error(timeoutMsg)))\n\nI moved the timeout utility function to head.js per my previous comment.\n\n::: dom/media/tests/mochitest/mediaStreamPlayback.js:203\n(Diff revision 2)\n> +      this.mediaStream.stop();\n\nThere's a dummy mediaStream.stop() that doesn't belong here. It's just there for now so the media element will end playback. When we get active state for MediaStreams and we fix media element captureStream to spec we can remove this.", "author": "apehrson@mozilla.com", "id": 10770856, "time": "2015-09-24T10:58:56Z"}, {"text": "Comment on attachment 8665256\nMozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc\n\nhttps://reviewboard.mozilla.org/r/20177/#review18189\n\n::: dom/media/tests/mochitest/mediaStreamPlayback.js:198\n(Diff revision 2)\n> +      // TODO Also check that all the tracks are local.\n> +      this.mediaStream.getTracks().forEach(t => t.stop());\n> +\n> +      // XXX When we implement MediaStream.active, do not stop the stream.\n> +      // We just do it now so the media element will raise 'ended'.\n\nMaybe add bug numbers.", "author": "jib@mozilla.com", "id": 10771104, "time": "2015-09-24T12:30:27Z"}, {"text": "https://reviewboard.mozilla.org/r/20177/#review18191\n\n::: dom/media/tests/mochitest/head.js:357\n(Diff revision 2)\n> +function timeout(promise, time, timeoutMsg) {\n> +  return Promise.race(\n> +    [ promise\n> +    , wait(time).then(() => Promise.reject(new Error(timeoutMsg)))\n> +    ]);\n> +}\n\nHow bout\n\nvar timeout = (p, ms, msg) => Promise.race([p, wait(ms).then(() => Promise.reject(new Error(timeoutMsg)))]);\n\n? :)", "author": "jib@mozilla.com", "id": 10771121, "time": "2015-09-24T12:35:01Z"}, {"text": "Comment on attachment 8665256\nMozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc\n\nBug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "author": "apehrson@mozilla.com", "id": 10774629, "time": "2015-09-25T03:58:03Z"}, {"text": "Comment on attachment 8665257\nMozReview Request: Bug 1103188 - Always check tracks on getUserMedia(). r?jib\n\nBug 1103188 - Always check tracks on getUserMedia(). r?jib", "author": "apehrson@mozilla.com", "id": 10774630, "time": "2015-09-25T03:58:05Z"}, {"text": "Comment on attachment 8665256\nMozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc\n\nhttps://reviewboard.mozilla.org/r/20177/#review18319", "author": "jib@mozilla.com", "id": 10776752, "time": "2015-09-25T13:51:15Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/6da8f4905060\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/de8cc967f8eb\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/ca97d52bf144\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/cc6b5f5ba444\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bb656022a1a7\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/dbe0ebdebad5\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/f0f33a8ef14c", "author": "pulsebot@bots.tld", "id": 10777183, "time": "2015-09-25T15:29:43Z"}, {"text": "https://treeherder.mozilla.org/logviewer.html#?job_id=14723851&repo=mozilla-inbound started happening frequently after this and bug 1170958 landed.\n\nBacked out in https://hg.mozilla.org/integration/mozilla-inbound/rev/5ab984256b2d", "author": "kwierso@gmail.com", "id": 10778441, "time": "2015-09-25T20:09:37Z"}, {"text": "I was able to reproduce on Mac as well if I use the real camera stream intead of the fake one, and run the test a couple of times per:\n> ./mach mochitest dom/media/tests/mochitest/test_getUserMedia_addTrackRemoveTrack.html --e10s --run-until-failure\n\nI seem to be triggering an existing bug because I do gumStream.stop() and getUserMedia() repeatedly and without delays in between.\n\nCamerasParent is failing when calling AddRenderer at [1]. In the logs it looked like some commands from CamerasChild came in the wrong order when it failed, but I'm still trying to verify exactly what's going on.\n\n[1] https://dxr.mozilla.org/mozilla-central/rev/6256ec9113c115141aab089c45ee69438884b680/dom/media/systemservices/CamerasParent.cpp#682", "author": "apehrson@mozilla.com", "id": 10782656, "time": "2015-09-28T11:10:11Z"}, {"text": "Mac specific failures might be fixed by bug 1205164, which avoids race conditions in the Mac shared memory implementation.", "author": "gpascutto@mozilla.com", "id": 10783115, "time": "2015-09-28T13:25:44Z"}, {"text": "(In reply to Gian-Carlo Pascutto [:gcp] from comment #86)\n> Mac specific failures might be fixed by bug 1205164, which avoids race\n> conditions in the Mac shared memory implementation.\n\nStill happens. I'll dig deeper.", "author": "apehrson@mozilla.com", "id": 10787213, "time": "2015-09-29T06:12:30Z"}, {"text": "A normal case looks like:\n\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::AllocateCaptureDevice(mozilla::camera::CaptureEngine, const char *, const unsigned int, int &)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplyAllocateCaptureDevice(const int &)\n> 544964608[113281e80]: Capture Device allocated: 4097\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::StartCapture(mozilla::camera::CaptureEngine, const int, webrtc::CaptureCapability &, webrtc::ExternalRenderer *)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplySuccess()\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvFrameSizeChange(const int &, const int &, const int &, const int &)\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::StopCapture(mozilla::camera::CaptureEngine, const int)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplySuccess()\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::ReleaseCaptureDevice(mozilla::camera::CaptureEngine, const int)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplySuccess()\n\n\nBut when it fails it looks like:\n\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::AllocateCaptureDevice(mozilla::camera::CaptureEngine, const char *, const unsigned int, int &)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplyAllocateCaptureDevice(const int &)\n> 544964608[113281e80]: Capture Device allocated: 4097\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::ReleaseCaptureDevice(mozilla::camera::CaptureEngine, const int)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplySuccess()\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::StartCapture(mozilla::camera::CaptureEngine, const int, webrtc::CaptureCapability &, webrtc::ExternalRenderer *)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplyFailure()\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::StopCapture(mozilla::camera::CaptureEngine, const int)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplySuccess()\n> 544964608[113281e80]: int mozilla::camera::CamerasChild::ReleaseCaptureDevice(mozilla::camera::CaptureEngine, const int)\n> 551325696[113550680]: virtual bool mozilla::camera::CamerasChild::RecvReplySuccess()\n\n\nNow we for some reason get:\n> Allocate()\n> Release() <- wut?\n> Start()\n> Stop()\n> Release()\n\nThis looks wrong. Trying to see what's causing this.", "author": "apehrson@mozilla.com", "id": 10787229, "time": "2015-09-29T06:25:35Z"}, {"text": "We have something like this going on in MediaManager:\n\ngUM() -> dispatches GetUserMediaTask\nMSG stream finished -> dispatches MediaOperationTask with MEDIA_STOP\nGetUserMediaTask runs -> calls Allocate() -> dispatches MediaOperationTask with MEDIA_START\nMediaOperationTask with MEDIA_STOP runs -> calls Release() <-- this is from an old gUM request\nMediaOperationTask with MEDIA_START runs -> calls Start() -> fails because camera was deallocated -> calls stop to clean up", "author": "apehrson@mozilla.com", "id": 10787520, "time": "2015-09-29T08:37:59Z"}, {"text": "Created attachment 8667366\nMozReview Request: Bug 1103188 - Always call MediaManager::NotifyFinished/NotifyRemoved on main thread. r?jib\n\nBug 1103188 - Always call MediaManager::NotifyFinished/NotifyRemoved on main thread. r?jib", "author": "apehrson@mozilla.com", "id": 10789512, "time": "2015-09-29T16:42:22Z"}, {"text": "Created attachment 8667367\nMozReview Request: Bug 1103188 - Keep track of capture stop only in gUM stream listener. r?jib\n\nBug 1103188 - Keep track of capture stop only in gUM stream listener. r?jib", "author": "apehrson@mozilla.com", "id": 10789514, "time": "2015-09-29T16:42:25Z"}, {"text": "Created attachment 8667368\nMozReview Request: Bug 1103188 - Keep track of stopped tracks in gUM stream listener. r?jib\n\nBug 1103188 - Keep track of stopped tracks in gUM stream listener. r?jib\nThis is needed to avoid something like:\n* [old stream] stop track 1 -> deallocate MediaDevice for track 1\n* [new stream] gUM() -> allocate MediaDevice for track 1\n* [old stream] stop stream -> deallocate MediaDevice for track 1\n* [new stream] gUM() -> start MediaDevice for track 1 (oops, MediaDevice was no more!)", "author": "apehrson@mozilla.com", "id": 10789516, "time": "2015-09-29T16:42:28Z"}, {"text": "Comment on attachment 8667366\nMozReview Request: Bug 1103188 - Always call MediaManager::NotifyFinished/NotifyRemoved on main thread. r?jib\n\nhttps://reviewboard.mozilla.org/r/20733/#review18583\n\nNice cleanup.\n\n::: dom/media/MediaManager.h:240\n(Diff revision 1)\n>      NS_ASSERTION(NS_IsMainThread(), \"Only call on main thread\");\n\nMaybe change to MOZ_ASSERT here too while you're at it?\n\n::: dom/media/MediaManager.h:275\n(Diff revision 1)\n> -        NotifyFinished(aGraph);\n> +        NS_DispatchToMainThread(\n> +          NS_NewRunnableMethod(this, &GetUserMediaCallbackMediaStreamListener::NotifyFinished));\n\nI suppose the invariant that guarantees that 'this' is alive when the runnable executes is that the runnable is the one removing it?\n\nCan a listener be removed any other way?\n\nI see the pattern repeated in e.g. GetUserMediaCallbackMediaStreamListener::Invalidate, so hopefully it's ok there too.\n\n::: dom/media/MediaManager.h:280\n(Diff revision 1)\n> +          NS_NewRunnableMethod(this, &GetUserMediaCallbackMediaStreamListener::NotifyRemoved));\n\nHow about using lambdas here? :) See media::NewRunnableFrom if you're interested.\n\n::: dom/media/MediaManager.cpp:2349\n(Diff revision 1)\n> +  MOZ_ASSERT(NS_IsMainThread(), \"Only call on main thread\");\n\nPerhaps subjective, but I find the second argument to MOZ_ASSERT redundant in most cases (like here).", "author": "jib@mozilla.com", "id": 10790731, "time": "2015-09-29T20:29:41Z"}, {"text": "Comment on attachment 8667367\nMozReview Request: Bug 1103188 - Keep track of capture stop only in gUM stream listener. r?jib\n\nhttps://reviewboard.mozilla.org/r/20735/#review18591\n\nlgtm.\n\n::: dom/media/MediaManager.cpp:3028\n(Diff revision 1)\n>  // XXX refactor to combine with Invalidate()?\n\nremove?\n\n::: dom/media/MediaManager.cpp:3032\n(Diff revision 1)\n> -  NS_ASSERTION(NS_IsMainThread(), \"Only call on main thread\");\n> +  MOZ_ASSERT(NS_IsMainThread(), \"Only call on main thread\");\n\nAgain I vote to remove the second argument.\n\n::: dom/media/MediaManager.cpp:3038\n(Diff revision 1)\n> +    if (!mAudioDevice) {\n> +      Invalidate();\n> +    } else {\n\nYour change here seems neutral, so this isn't a comment on your patch. Just curious:\n\nCan mAudioDevice->GetMediaSource() == dom::MediaSourceEnum::AudioCapture here, and if so, is it ok that the code further down that does test for this and does something I don't fully understand, doesn't run in this case? I can't tell.", "author": "jib@mozilla.com", "id": 10790939, "time": "2015-09-29T21:06:32Z"}, {"text": "Comment on attachment 8667368\nMozReview Request: Bug 1103188 - Keep track of stopped tracks in gUM stream listener. r?jib\n\nhttps://reviewboard.mozilla.org/r/20737/#review18605\n\nShip it with fix.\n\n::: dom/media/MediaManager.cpp:3014\n(Diff revision 1)\n>    mStopped = true;\n>  \n> +  AudioDevice* audioDevice = nullptr;\n> +  VideoDevice* videoDevice = nullptr;\n> +  if (!mAudioStopped) {\n> +    audioDevice = mAudioDevice.get();\n> +  }\n> +  if (!mVideoStopped) {\n> +    videoDevice = mVideoDevice.get();\n> +  }\n> +\n>    // We can't take a chance on blocking here, so proxy this to another\n>    // thread.\n>    // Pass a ref to us (which is threadsafe) so it can query us for the\n>    // source stream info.\n>    MediaManager::PostTask(FROM_HERE,\n>      new MediaOperationTask(MEDIA_STOP,\n>                             this, nullptr, nullptr,\n> -                           mAudioDevice, mVideoDevice,\n> +                           audioDevice, videoDevice,\n>                             mFinished, mWindowID, nullptr));\n> +  mAudioStopped = !!audioDevice;\n> +  mVideoStopped = !!videoDevice;\n\nIsn't this just:\n\n    MediaManager::PostTask(FROM_HERE,\n      new MediaOperationTask(MEDIA_STOP,\n                             this, nullptr, nullptr,\n                             (!mAudioStopped? audioDevice.get() : nullptr),\n                             (!mVideoStopped? videoDevice.get() : nullptr),\n                             mFinished, mWindowID, nullptr));\n    mStopped = mAudioStopped = mVideoStopped = true;\n\n?\n\n::: dom/media/MediaManager.cpp:3177\n(Diff revision 1)\n> +    AudioDevice* audioDevice = aIsAudio  && !mAudioStopped ? mAudioDevice.get() : nullptr;\n> +    VideoDevice* videoDevice = !aIsAudio && !mVideoStopped ? mVideoDevice.get() : nullptr;\n>      MediaManager::PostTask(FROM_HERE,\n>        new MediaOperationTask(MEDIA_STOP_TRACK,\n>                               this, nullptr, nullptr,\n> -                             aIsAudio  ? mAudioDevice.get() : nullptr,\n> +                             audioDevice, videoDevice,\n> -                             !aIsAudio ? mVideoDevice.get() : nullptr,\n>                               mFinished, mWindowID, nullptr));\n> +    mAudioStopped = !!audioDevice;\n> +    mVideoStopped = !!videoDevice;\n\nIf mAudioStopped or mVideoStopped are already set, this code clears them, which seems wrong. How about:\n\n    bool stopAudio = aIsAudio && !mAudioStopped;\n    bool stopVideo = !aIsAudio && !mVideoStopped;\n\n    MediaManager::PostTask(FROM_HERE,\n      new MediaOperationTask(MEDIA_STOP_TRACK,\n                             this, nullptr, nullptr,\n                             (stopAudio? mAudioDevice.get() : nullptr)\n                             (stopVideo? mVideoDevice.get() : nullptr,\n                             mFinished, mWindowID, nullptr));\n    mAudioStopped |= stopAudio;\n    mVideoStopped |= stopVideo;\n\n?", "author": "jib@mozilla.com", "id": 10791595, "time": "2015-09-29T23:21:25Z"}, {"text": "https://reviewboard.mozilla.org/r/20733/#review18583\n\n> I suppose the invariant that guarantees that 'this' is alive when the runnable executes is that the runnable is the one removing it?\n> \n> Can a listener be removed any other way?\n> \n> I see the pattern repeated in e.g. GetUserMediaCallbackMediaStreamListener::Invalidate, so hopefully it's ok there too.\n\nSafer to pass a refptr to a lambda I guess. `this` has threadsafe refcounting so we should be good.\n\n> How about using lambdas here? :) See media::NewRunnableFrom if you're interested.\n\nOh, yes! Looks much nicer.\n\n> Perhaps subjective, but I find the second argument to MOZ_ASSERT redundant in most cases (like here).\n\nAgree. But then I'll change all the other ones too :-)", "author": "apehrson@mozilla.com", "id": 10792589, "time": "2015-09-30T04:45:18Z"}, {"text": "https://reviewboard.mozilla.org/r/20735/#review18591\n\n> remove?\n\nDone.\n\n> Your change here seems neutral, so this isn't a comment on your patch. Just curious:\n> \n> Can mAudioDevice->GetMediaSource() == dom::MediaSourceEnum::AudioCapture here, and if so, is it ok that the code further down that does test for this and does something I don't fully understand, doesn't run in this case? I can't tell.\n\nThe checks below run if mAudioDevice is set, and `mAudioDevice` is only set to an instance on `Activate()`, never to nullptr. Could be a problem if you have both video and audio screen capture I suppose? Well, audio capture is experimental and behind a flag anyways.", "author": "apehrson@mozilla.com", "id": 10792590, "time": "2015-09-30T04:45:37Z"}, {"text": "https://reviewboard.mozilla.org/r/20737/#review18605\n\n> Isn't this just:\n> \n>     MediaManager::PostTask(FROM_HERE,\n>       new MediaOperationTask(MEDIA_STOP,\n>                              this, nullptr, nullptr,\n>                              (!mAudioStopped? audioDevice.get() : nullptr),\n>                              (!mVideoStopped? videoDevice.get() : nullptr),\n>                              mFinished, mWindowID, nullptr));\n>     mStopped = mAudioStopped = mVideoStopped = true;\n> \n> ?\n\nYou're right.\n\n> If mAudioStopped or mVideoStopped are already set, this code clears them, which seems wrong. How about:\n> \n>     bool stopAudio = aIsAudio && !mAudioStopped;\n>     bool stopVideo = !aIsAudio && !mVideoStopped;\n> \n>     MediaManager::PostTask(FROM_HERE,\n>       new MediaOperationTask(MEDIA_STOP_TRACK,\n>                              this, nullptr, nullptr,\n>                              (stopAudio? mAudioDevice.get() : nullptr)\n>                              (stopVideo? mVideoDevice.get() : nullptr,\n>                              mFinished, mWindowID, nullptr));\n>     mAudioStopped |= stopAudio;\n>     mVideoStopped |= stopVideo;\n> \n> ?\n\nYou're right again! I was a bit stressed when I wrote this. Thanks :)", "author": "apehrson@mozilla.com", "id": 10792666, "time": "2015-09-30T05:31:50Z"}, {"text": "https://reviewboard.mozilla.org/r/20733/#review18583\n\n> Safer to pass a refptr to a lambda I guess. `this` has threadsafe refcounting so we should be good.\n\nNS_NewRunnableMethod() will ensure a reference is held to its aPtr argument.\nhttps://hg.mozilla.org/mozilla-central/annotate/acdb22976ff86539dc10413c5f366e1fb429a680/xpcom/glue/nsThreadUtils.h#l306\n\n> Oh, yes! Looks much nicer.\n\nLambdas can look nicer but AFAIK we're missing support for move construction of lambda closures.  When the closures contain smart pointers, copy construction would produce unnecessary ref-count manipulation, which is a bit more expensive for atomic ref-counts.", "author": "karlt@mozbugz.karlt.net", "id": 10792667, "time": "2015-09-30T05:33:37Z"}, {"text": "https://reviewboard.mozilla.org/r/20733/#review18583\n\n> NS_NewRunnableMethod() will ensure a reference is held to its aPtr argument.\n> https://hg.mozilla.org/mozilla-central/annotate/acdb22976ff86539dc10413c5f366e1fb429a680/xpcom/glue/nsThreadUtils.h#l306\n\nAh, great info. Then I'm switching back to NS_NewRunnableMethod() for its conciseness.", "author": "apehrson@mozilla.com", "id": 10792840, "time": "2015-09-30T07:03:12Z"}, {"text": "Try push for m-e10s-2: https://treeherder.mozilla.org/#/jobs?repo=try&revision=82b9e5d0773d\nTry push (builds only) for comment fixes: https://treeherder.mozilla.org/#/jobs?repo=try&revision=429346341fe5", "author": "apehrson@mozilla.com", "id": 10792842, "time": "2015-09-30T07:04:25Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/db0763589cc3\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/8fd114d99c70\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/1fee52040539\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/46c662547624\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7e11e0cb6416\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/29309e60a4bf\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/b4cd802ae577\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/56468656b77f\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7580a7086ff1\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/8ad5cb2c028d", "author": "pulsebot@bots.tld", "id": 10792847, "time": "2015-09-30T07:08:18Z"}, {"text": "(In reply to Karl Tomlinson (ni?:karlt) from comment #99)\n> NS_NewRunnableMethod() will ensure a reference is held to its aPtr argument.\n\nMakes sense now that I read the docs and see that it's specifically written for ref-counted objects, thanks!\n\n> Lambdas can look nicer but AFAIK we're missing support for move construction\n> of lambda closures.  When the closures contain smart pointers, copy\n> construction would produce unnecessary ref-count manipulation, which is a\n> bit more expensive for atomic ref-counts.\n\nGood point in this case where we don't have an nsRefPtr to start, and create one solely for passing (not always an issue in general, but I'm all for not disturbing atomic ref-counts unnecessarily).", "author": "jib@mozilla.com", "id": 10795416, "time": "2015-09-30T17:33:17Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/db0763589cc3\nhttps://hg.mozilla.org/mozilla-central/rev/8fd114d99c70\nhttps://hg.mozilla.org/mozilla-central/rev/1fee52040539\nhttps://hg.mozilla.org/mozilla-central/rev/46c662547624\nhttps://hg.mozilla.org/mozilla-central/rev/7e11e0cb6416\nhttps://hg.mozilla.org/mozilla-central/rev/29309e60a4bf\nhttps://hg.mozilla.org/mozilla-central/rev/b4cd802ae577\nhttps://hg.mozilla.org/mozilla-central/rev/56468656b77f\nhttps://hg.mozilla.org/mozilla-central/rev/7580a7086ff1\nhttps://hg.mozilla.org/mozilla-central/rev/8ad5cb2c028d", "author": "kwierso@gmail.com", "id": 10796510, "time": "2015-09-30T20:51:14Z"}, {"text": "I'm writing the site compatibility doc. This is my understanding but correct?\n\n> navigator.mediaDevices.getUserMedia({ audio: false, video: true }).then(input => {\n>   // input.stop(); // Deprecated\n>   input.getVideoTracks()[0].stop(); // Recommended\n> });", "author": "kohei.yoshino@gmail.com", "id": 10797077, "time": "2015-09-30T23:20:56Z"}, {"text": "(In reply to Kohei Yoshino [:kohei] from comment #105)\n> I'm writing the site compatibility doc. This is my understanding but correct?\n> \n> > navigator.mediaDevices.getUserMedia({ audio: false, video: true }).then(input => {\n> >   // input.stop(); // Deprecated\n> >   input.getVideoTracks()[0].stop(); // Recommended\n> > });\n\nCorrect!\n\nThere are still some quirks here. For instance HTMLMediaElement should raise \"ended\" when the stream (`input` in your example) becomes inactive (no longer has live tracks).\n\nFor now we don't have the either active/inactive state on streams or \"ended\" on no tracks (\"ended\" needs `input.stop()` to happen, or that the source ends the stream, which will happen for getUserMedia). I'm hoping to get most of this fixed in 44 but there's a dependency on bug 1172394 that might take some time to resolve.", "author": "apehrson@mozilla.com", "id": 10797418, "time": "2015-10-01T02:36:48Z"}, {"text": "Thanks Andreas! I just posted the site compat doc only describing MediaStream.stop for now:\n\nhttps://www.fxsitecompat.com/en-US/docs/2015/mediastream-stop-has-been-deprecated/", "author": "kohei.yoshino@gmail.com", "id": 10800404, "time": "2015-10-01T21:02:44Z"}, {"text": "(In reply to Kohei Yoshino [:kohei] from comment #107)\n> Thanks Andreas! I just posted the site compat doc only describing\n> MediaStream.stop for now:\n> \n> https://www.fxsitecompat.com/en-US/docs/2015/mediastream-stop-has-been-\n> deprecated/\n\nAfter reading that article I started to use MediaStreamTrack.stop() in Chrome (that also deprecated MediaStream.stop() in M45) but this does not seem to work in Firefox (41.0.2 on OSX 10.10), MediaStreamTrack.stop() doesn't disable the camera(light) at all. Should I file a new bug for this? (its driving me insane)", "author": "info@collab.nl", "id": 10848216, "time": "2015-10-17T14:30:41Z"}, {"text": "(In reply to info from comment #108)\n> (In reply to Kohei Yoshino [:kohei] from comment #107)\n> > Thanks Andreas! I just posted the site compat doc only describing\n> > MediaStream.stop for now:\n> > \n> > https://www.fxsitecompat.com/en-US/docs/2015/mediastream-stop-has-been-\n> > deprecated/\n> \n> After reading that article I started to use MediaStreamTrack.stop() in\n> Chrome (that also deprecated MediaStream.stop() in M45) but this does not\n> seem to work in Firefox (41.0.2 on OSX 10.10), MediaStreamTrack.stop()\n> doesn't disable the camera(light) at all. Should I file a new bug for this?\n> (its driving me insane)\n\nIt should work (see the snippet in comment 105 for an example).  Please verify you're seeing the set of tracks, perhaps in the debugger.  If you're pretty sure you have it right, please file a new bug, preferably with a simple testcase.", "author": "rjesup@jesup.org", "id": 10849033, "time": "2015-10-18T17:41:27Z"}, {"text": "I have updated my own app, and it worked fine.\n\nhttps://github.com/bzdeck/bzdeck/commit/1859459", "author": "kohei.yoshino@gmail.com", "id": 10849203, "time": "2015-10-18T22:03:25Z"}, {"text": "(In reply to info from comment #108)\n> After reading that article I started to use MediaStreamTrack.stop() in\n> Chrome (that also deprecated MediaStream.stop() in M45) but this does not\n> seem to work in Firefox (41.0.2 on OSX 10.10), MediaStreamTrack.stop()\n> doesn't disable the camera(light) at all. Should I file a new bug for this?\n> (its driving me insane)\n\nThe deprecation happened in 44 so that's really from when support for track.stop() can be expected to be fully supported.\n\nWe had bug 1192170 land in 44 as well, so you need at least that version for your code to work as expected.\n\nYou can try it with Nightly (https://nightly.mozilla.org/), and please do report a bug if it doesn't work there!", "author": "apehrson@mozilla.com", "id": 10849847, "time": "2015-10-19T03:55:03Z"}, {"text": "It works provided you stop the tracks in the right order. See Bug 1192170 comment 10.", "author": "jib@mozilla.com", "id": 10851493, "time": "2015-10-19T15:38:03Z"}, {"text": "Thanks everyone, tested it in nightly 44 and the light is off now. Any suggestions on how to check for this functionality (<44) without checking for browser/version nr? :-/", "author": "info@collab.nl", "id": 10852233, "time": "2015-10-19T18:41:57Z"}, {"text": "I can't think of an easy way. Is the workaround in Bug 1192170 comment 10 insufficient?", "author": "jib@mozilla.com", "id": 10852675, "time": "2015-10-19T20:48:35Z"}, {"text": "If you have to support stopping the stream anyway because of old Firefox installations, checking for the existence of MediaStream.stop would be a way to stay compatible. Not sure when it will actually be removed though.\n\nAnother way would be to check for MediaStream.addTrack, but it's more of \"This implementation is sufficiently up to date so stopping the tracks should be fine\". At least track.stop and stream.addTrack goes hand in hand since a major reason why you'd want track.stop over stream.stop is that you can mix tracks from different streams.", "author": "apehrson@mozilla.com", "id": 10854157, "time": "2015-10-20T08:35:58Z"}, {"text": "(In reply to Jan-Ivar Bruaroey [:jib] from comment #114)\n> Is the workaround in Bug 1192170 comment 10 insufficient?\n\nTurned out I was wrong there. Also, in the end, that bug was about the Firefox camera indicator, not the light. If you see a problem with the camera light then please file a new bug on it.", "author": "jib@mozilla.com", "id": 10855286, "time": "2015-10-20T14:29:45Z"}, {"text": "addTrack() is now documented: https://developer.mozilla.org/en-US/docs/Web/API/MediaStream.addTrack\n\nremoveTrack() not done yet.", "author": "eshepherd@mozilla.com", "id": 10940908, "time": "2015-11-17T20:36:07Z"}, {"text": "What's the ETA on removeTrack?", "author": "pedro.spinsomewebs@gmail.com", "id": 11301710, "time": "2016-04-05T15:20:24Z"}], "id": 1103188, "priority": "--", "cc": ["aleh.zasypkin@gmail.com", "apehrson@mozilla.com", "bugs@pettay.fi", "ctai@mozilla.com", "gijskruitbosch+bugs@gmail.com", "gp@jitsi.org", "gpascutto@mozilla.com", "ibc@aliax.net", "info@collab.nl", "jib@mozilla.com", "jypenator@gmail.com", "kakukogou@gmail.com", "kilik.kuo@gmail.com", "kirill@radical.fm", "kohei.yoshino@gmail.com", "kwierso@gmail.com", "padenot@mozilla.com", "pedro.spinsomewebs@gmail.com", "rajkumaradass@avaya.com", "rjesup@jesup.org", "roc@ocallahan.org", "rolly@luma.co.nz", "sescalante@mozilla.com", "soulhunter1987@post.ru", "steve@one47.co.uk", "suro001@gmail.com", "thomas@appear.in", "thomas@inqualitymedia.com"], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1137255", "https://bugzilla.mozilla.org/show_bug.cgi?id=1192170"], "cf_tracking_thunderbird_esr60": "---", "cf_rank": null, "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [910249, 985265, 1258143, 1070216, 1208316, 1223696], "qa_contact": "", "creation_time": "2014-11-21T22:45:18Z", "cf_status_firefox_esr52": "---", "component": "Audio/Video: MediaStreamGraph", "assigned_to_detail": {"email": "apehrson@mozilla.com", "id": 489889, "name": "apehrson@mozilla.com", "real_name": "Andreas Pehrson [:pehrsons]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "mozilla44", "cf_status_firefox44": "fixed", "is_cc_accessible": true, "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "thomas@inqualitymedia.com", "id": 524379, "name": "thomas@inqualitymedia.com", "real_name": "Thomas Auge"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "aleh.zasypkin@gmail.com", "id": 495401, "name": "aleh.zasypkin@gmail.com", "real_name": "Oleg Zasypkin [:azasypkin][\u23f0UTC+1]"}, {"email": "apehrson@mozilla.com", "id": 489889, "name": "apehrson@mozilla.com", "real_name": "Andreas Pehrson [:pehrsons]"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "ctai@mozilla.com", "id": 453475, "name": "ctai@mozilla.com", "real_name": "Chia-hung Tai [:ctai :ctai_mozilla :cht]"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (he/him)"}, {"email": "gp@jitsi.org", "id": 526510, "name": "gp@jitsi.org", "real_name": "George Politis [:gp]"}, {"email": "gpascutto@mozilla.com", "id": 151147, "name": "gpascutto@mozilla.com", "real_name": "Gian-Carlo Pascutto [:gcp]"}, {"email": "ibc@aliax.net", "id": 463320, "name": "ibc@aliax.net", "real_name": "I\u00f1aki Baz Castillo"}, {"email": "info@collab.nl", "id": 552842, "name": "info@collab.nl", "real_name": "Thijs Triemstra"}, {"email": "jib@mozilla.com", "id": 456498, "name": "jib@mozilla.com", "real_name": "Jan-Ivar Bruaroey [:jib] (needinfo? me)"}, {"email": "jypenator@gmail.com", "id": 248150, "name": "jypenator@gmail.com", "real_name": "Jean-Yves Perrier [:teoli]"}, {"email": "kakukogou@gmail.com", "id": 521651, "name": "kakukogou@gmail.com", "real_name": "Tzuhao Kuo [:kaku]"}, {"email": "kilik.kuo@gmail.com", "id": 505627, "name": "kilik.kuo@gmail.com", "real_name": "Kilik Kuo [:kikuo] (inactive)"}, {"email": "kirill@radical.fm", "id": 530754, "name": "kirill@radical.fm", "real_name": "Kyrylo Slatin"}, {"email": "kohei.yoshino@gmail.com", "id": 232883, "name": "kohei.yoshino@gmail.com", "real_name": "Kohei Yoshino [:kohei]"}, {"email": "kwierso@gmail.com", "id": 308534, "name": "kwierso@gmail.com", "real_name": "Wes Kocher (:KWierso)"}, {"email": "padenot@mozilla.com", "id": 404637, "name": "padenot@mozilla.com", "real_name": "Paul Adenot (:padenot)"}, {"email": "pedro.spinsomewebs@gmail.com", "id": 563502, "name": "pedro.spinsomewebs@gmail.com", "real_name": ""}, {"email": "rajkumaradass@avaya.com", "id": 507073, "name": "rajkumaradass@avaya.com", "real_name": "rajkumaradass"}, {"email": "rjesup@jesup.org", "id": 11539, "name": "rjesup@jesup.org", "real_name": "Randell Jesup [:jesup]"}, {"email": "roc@ocallahan.org", "id": 5038, "name": "roc@ocallahan.org", "real_name": "Robert O'Callahan (:roc) (email my personal email if necessary)"}, {"email": "rolly@luma.co.nz", "id": 447499, "name": "rolly@luma.co.nz", "real_name": ""}, {"email": "sescalante@mozilla.com", "id": 501107, "name": "sescalante@mozilla.com", "real_name": ":shell escalante"}, {"email": "soulhunter1987@post.ru", "id": 377344, "name": "soulhunter1987@post.ru", "real_name": "Dmitry"}, {"email": "steve@one47.co.uk", "id": 30028, "name": "steve@one47.co.uk", "real_name": "Steve Davies"}, {"email": "suro001@gmail.com", "id": 469171, "name": "suro001@gmail.com", "real_name": "JW Wang [:jwwang] [:jw_wang]"}, {"email": "thomas@appear.in", "id": 459875, "name": "thomas@appear.in", "real_name": "Thomas Bruun"}, {"email": "thomas@inqualitymedia.com", "id": 524379, "name": "thomas@inqualitymedia.com", "real_name": "Thomas Auge"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2016-04-05T15:20:24Z", "assigned_to": "apehrson@mozilla.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "auge@virtues.net"}], "who": "thomas@inqualitymedia.com", "when": "2014-11-21T22:46:53Z"}, {"changes": [{"removed": "Untriaged", "field_name": "component", "added": "WebRTC"}, {"removed": "Firefox", "field_name": "product", "added": "Core"}, {"removed": "", "field_name": "cc", "added": "gijskruitbosch+bugs@gmail.com"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2014-11-21T22:49:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ibc@aliax.net"}], "who": "ibc@aliax.net", "when": "2015-01-12T12:59:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jib@mozilla.com"}], "who": "jib@mozilla.com", "when": "2015-02-26T18:10:13Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1137255"}], "who": "jib@mozilla.com", "when": "2015-02-26T18:19:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gp@jitsi.org"}], "who": "gp@jitsi.org", "when": "2015-03-10T11:40:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "azasypkin@mozilla.com"}], "who": "aleh.zasypkin@gmail.com", "when": "2015-03-24T21:45:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "thomas@appear.in"}], "who": "thomas@appear.in", "when": "2015-04-30T08:03:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ctai@mozilla.com"}], "who": "ctai@mozilla.com", "when": "2015-05-05T09:16:41Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "ASSIGNED"}, {"removed": "36 Branch", "field_name": "version", "added": "unspecified"}, {"removed": "", "field_name": "cc", "added": "pehrsons@gmail.com"}, {"removed": "x86_64", "field_name": "platform", "added": "Unspecified"}, {"removed": "WebRTC", "field_name": "component", "added": "Video/Audio"}, {"removed": "", "field_name": "blocks", "added": "910249, 985265, 1070216"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "pehrsons@gmail.com"}, {"removed": "0", "field_name": "is_confirmed", "added": "1"}, {"removed": "Implement MediaStream.addTrack()", "field_name": "summary", "added": "Implement MediaStream.addTrack()/removeTrack()"}, {"removed": "Windows 7", "field_name": "op_sys", "added": "Unspecified"}], "who": "apehrson@mozilla.com", "when": "2015-05-19T01:59:04Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1166140"}], "who": "apehrson@mozilla.com", "when": "2015-05-19T03:15:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jwwang@mozilla.com"}], "who": "apehrson@mozilla.com", "when": "2015-05-19T05:43:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "steve@one47.co.uk"}], "who": "steve@one47.co.uk", "when": "2015-05-19T09:04:44Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1170112"}], "who": "apehrson@mozilla.com", "when": "2015-06-01T11:05:05Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1170958"}], "who": "apehrson@mozilla.com", "when": "2015-06-03T09:50:39Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8607342, "added": "1"}], "who": "apehrson@mozilla.com", "when": "2015-06-10T15:18:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "soulhunter1987@post.ru"}], "who": "soulhunter1987@post.ru", "when": "2015-06-12T09:06:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rajkumaradass@avaya.com"}], "who": "apehrson@mozilla.com", "when": "2015-06-25T14:33:30Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kikuo@mozilla.com"}], "who": "kilik.kuo@gmail.com", "when": "2015-08-13T06:09:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tkuo@mozilla.com"}], "who": "kakukogou@gmail.com", "when": "2015-08-20T09:42:27Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed"}, {"removed": "", "field_name": "cc", "added": "jypenator@gmail.com"}], "who": "jypenator@gmail.com", "when": "2015-09-01T06:52:00Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(pehrsons@gmail.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-03T04:31:49Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 1. Implement DOMMediaStream::AddTrack/RemoveTrack. r=", "attachment_id": 8618701, "added": "MozReview Request: Bug 1103188 - Part 1. MediaStream WebIDL update with addTrack/removeTrack. r?smaug,jib"}], "who": "apehrson@mozilla.com", "when": "2015-09-07T08:04:43Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 2. Add MediaStream::AddTrack/RemoveTrack mochitests. r=", "attachment_id": 8618702, "added": "MozReview Request: Bug 1103188 - Part 2. MediaStream::AddTrack/RemoveTrack implementation. r?roc"}], "who": "apehrson@mozilla.com", "when": "2015-09-07T08:04:45Z"}, {"changes": [{"removed": "needinfo?(pehrsons@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-07T08:08:53Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(pehrsons@gmail.com)"}], "who": "jib@mozilla.com", "when": "2015-09-14T16:05:28Z"}, {"changes": [{"removed": "needinfo?(pehrsons@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-15T03:21:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8618701, "added": "review?(bugs@pettay.fi), review?(jib@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "bugs@pettay.fi"}], "who": "apehrson@mozilla.com", "when": "2015-09-15T07:03:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8618702, "added": "review?(roc@ocallahan.org)"}, {"removed": "", "field_name": "cc", "added": "roc@ocallahan.org"}], "who": "apehrson@mozilla.com", "when": "2015-09-15T07:03:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8657704, "added": "review?(jib@mozilla.com), review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-15T07:03:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8618701, "added": "review+"}], "who": "bugs@pettay.fi", "when": "2015-09-15T10:25:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8618702, "added": "review+"}], "who": "roc@ocallahan.org", "when": "2015-09-15T11:15:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8657704, "added": "review+"}], "who": "roc@ocallahan.org", "when": "2015-09-15T11:16:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8618701, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-15T13:58:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8657704, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-15T15:41:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "padenot@mozilla.com, rjesup@jesup.org, sescalante@mozilla.com"}, {"removed": "Audio/Video", "field_name": "component", "added": "Audio/Video: MSG/cubeb/GMP"}], "who": "ajones@mozilla.com", "when": "2015-09-15T23:28:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+, review+", "attachment_id": 8618701, "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:06:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8618702, "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:06:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+, review+", "attachment_id": 8657704, "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:06:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8662784, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:06:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8618701, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:06:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8618702, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:08:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8657704, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-18T07:08:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8662784, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-18T16:03:33Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-22T06:14:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kirill@radical.fm"}], "who": "kirill@radical.fm", "when": "2015-09-22T06:26:30Z"}, {"changes": [{"removed": "needinfo?(jib@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jib@mozilla.com", "when": "2015-09-22T14:51:03Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1192170"}], "who": "jib@mozilla.com", "when": "2015-09-22T15:19:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rolly@luma.co.nz"}], "who": "rolly@luma.co.nz", "when": "2015-09-23T05:02:09Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8618701, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:15:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8618702, "added": "review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:15:50Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 3. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "attachment_id": 8657704, "added": "MozReview Request: Bug 1103188 - Part 3. Remove identical override nsDOMUserMediaStream::Stop(). r?jib"}, {"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8657704, "added": "review?(jib@mozilla.com), review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:15:52Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 4. Always check tracks on getUserMedia(). r?jib", "attachment_id": 8662784, "added": "MozReview Request: Bug 1103188 - Part 4. Deprecate DOMMediaStream::Stop(). r?jib"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:15:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665255, "added": "review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:15:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665256, "added": "review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:15:59Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665257, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:16:01Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8662784, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:17:57Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665257, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:18:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8618701, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:19:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8618702, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:19:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8657704, "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:20:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665258, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T04:21:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8662784, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-24T04:49:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8665255, "added": "review+"}], "who": "roc@ocallahan.org", "when": "2015-09-24T05:02:40Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8665256, "added": "review+"}], "who": "roc@ocallahan.org", "when": "2015-09-24T05:04:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8665257, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-24T05:41:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665258, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-24T05:44:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8657704, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-24T05:48:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8618701, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:08Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8618702, "added": "review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8657704, "added": "review?(roc@ocallahan.org)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:12Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 6. End playback in HTMLMediaElement when a stream we are playing no longer has any tracks. r?roc", "attachment_id": 8665256, "added": "MozReview Request: Bug 1103188 - Part 6. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665256, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:19Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 7. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "attachment_id": 8665257, "added": "MozReview Request: Bug 1103188 - Part 7. Always check tracks on getUserMedia(). r?jib"}, {"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8665257, "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:21Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8665258, "added": "1"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8657704, "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:50:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8618701, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:51:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(roc@ocallahan.org)", "attachment_id": 8618702, "added": "review+"}], "who": "apehrson@mozilla.com", "when": "2015-09-24T10:52:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8665256, "added": ""}], "who": "jib@mozilla.com", "when": "2015-09-24T12:30:27Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1208316"}], "who": "apehrson@mozilla.com", "when": "2015-09-25T02:45:01Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 6. MediaStream::AddTrack/RemoveTrack tests. r?jib,roc", "attachment_id": 8665256, "added": "MozReview Request: Bug 1103188 - MediaStream::AddTrack/RemoveTrack tests. r?jib,roc"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8665256, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-25T03:58:03Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1103188 - Part 7. Always check tracks on getUserMedia(). r?jib", "attachment_id": 8665257, "added": "MozReview Request: Bug 1103188 - Always check tracks on getUserMedia(). r?jib"}], "who": "apehrson@mozilla.com", "when": "2015-09-25T03:58:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8665256, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-25T13:51:15Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wkocher@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(pehrsons@gmail.com)"}], "who": "kwierso@gmail.com", "when": "2015-09-25T20:09:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gpascutto@mozilla.com"}, {"removed": "needinfo?(pehrsons@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-09-28T11:10:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8667366, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-29T16:42:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8667367, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-29T16:42:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8667368, "added": "review?(jib@mozilla.com)"}], "who": "apehrson@mozilla.com", "when": "2015-09-29T16:42:28Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8667366, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-29T20:29:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8667367, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-29T21:06:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jib@mozilla.com)", "attachment_id": 8667368, "added": "review+"}], "who": "jib@mozilla.com", "when": "2015-09-29T23:21:25Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla44"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-09-30 13:51:14"}, {"removed": "---", "field_name": "cf_status_firefox44", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2015-09-30T20:51:14Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "site-compat"}, {"removed": "", "field_name": "cc", "added": "kohei.yoshino@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(pehrsons@gmail.com)"}], "who": "kohei.yoshino@gmail.com", "when": "2015-09-30T23:20:56Z"}, {"changes": [{"removed": "needinfo?(pehrsons@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "apehrson@mozilla.com", "when": "2015-10-01T02:36:48Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "info@collab.nl"}], "who": "info@collab.nl", "when": "2015-10-17T14:30:41Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kohei.yoshino@gmail.com)"}], "who": "rjesup@jesup.org", "when": "2015-10-18T17:41:27Z"}, {"changes": [{"removed": "needinfo?(kohei.yoshino@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(info@collab.nl)"}], "who": "kohei.yoshino@gmail.com", "when": "2015-10-18T22:03:25Z"}, {"changes": [{"removed": "needinfo?(info@collab.nl)", "field_name": "flagtypes.name", "added": ""}], "who": "info@collab.nl", "when": "2015-10-19T18:41:57Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1223696"}], "who": "ctai@mozilla.com", "when": "2015-11-11T08:38:52Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1258143"}], "who": "ryanvm@gmail.com", "when": "2016-03-19T21:16:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "pedro.spinsomewebs@gmail.com"}], "who": "pedro.spinsomewebs@gmail.com", "when": "2016-04-05T15:20:24Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}