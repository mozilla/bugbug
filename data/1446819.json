{"cf_tracking_thunderbird_esr52": "---", "status": "NEW", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "choller@mozilla.com", "mentors_detail": [], "depends_on": [], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "ARM64", "keywords": ["assertion", "crash", "jsbugmon", "testcase"], "cc_detail": [{"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, {"email": "cpeterson@mozilla.com", "id": 430528, "name": "cpeterson@mozilla.com", "real_name": "Chris Peterson [:cpeterson]"}, {"email": "fuzzing@mozilla.com", "id": 469204, "name": "fuzzing@mozilla.com", "real_name": "Fuzzing Team"}, {"email": "jorendorff@mozilla.com", "id": 281791, "name": "jorendorff@mozilla.com", "real_name": "Jason Orendorff [:jorendorff]"}, {"email": "lhansen@mozilla.com", "id": 499633, "name": "lhansen@mozilla.com", "real_name": "Lars T Hansen [:lth]"}, {"email": "nth10sd@gmail.com", "id": 132034, "name": "nth10sd@gmail.com", "real_name": "Gary Kwong [:gkw] [:nth10sd]"}, {"email": "sstangl@mozilla.com", "id": 383201, "name": "sstangl@mozilla.com", "real_name": "Sean Stangl [:sstangl]"}], "cf_last_resolved": null, "attachments": [], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 10, "comments": [{"text": "The following testcase crashes on mozilla-central revision fcb11e93adf5+ (build with --enable-posix-nspr-emulation --enable-valgrind --enable-gczeal --disable-tests --disable-profiling --enable-debug --enable-optimize --enable-simulator=arm64, run with --fuzzing-safe):\n\nevaluate(`\nvar g = newGlobal(() => eval(fn(\\`...\\${pattern}, []\\`)), SyntaxError);\ng.parent = this;\ng.eval(\"Debugger(parent).onEnterFrame = function() {};\");\n(function() {\n    for (var assertEq = -10; assertEq < 10; assertEq++) {}\n} (function() {}))\n`);\n\n\nBacktrace:\n\nreceived signal SIGSEGV, Segmentation fault.\n0x000000000049236a in mozalloc_abort (msg=msg@entry=0x1263858 \"Redirecting call to abort() to mozalloc_abort\\n\") at memory/mozalloc/mozalloc_abort.cpp:33\n#0  0x000000000049236a in mozalloc_abort (msg=msg@entry=0x1263858 \"Redirecting call to abort() to mozalloc_abort\\n\") at memory/mozalloc/mozalloc_abort.cpp:33\n#1  0x0000000000492340 in abort () at memory/mozalloc/mozalloc_abort.cpp:80\n#2  0x00000000009bf3c0 in vixl::Simulator::VisitUnallocated (this=<optimized out>, instr=<optimized out>) at js/src/jit/arm64/vixl/Simulator-vixl.cpp:749\n#3  0x000000000094f5b3 in vixl::Decoder::VisitUnallocated (this=<optimized out>, instr=0xfcba3680138) at js/src/jit/arm64/vixl/Decoder-vixl.cpp:872\n#4  0x00000000009d4d75 in vixl::Decoder::Decode (instr=<optimized out>, this=<optimized out>) at js/src/jit/arm64/vixl/Decoder-vixl.h:158\n#5  vixl::Simulator::ExecuteInstruction (this=0x7ffff5f3b000) at js/src/jit/arm64/vixl/MozSimulator-vixl.cpp:195\n#6  0x00000000009d73cc in vixl::Simulator::Run (this=0x7ffff5f3b000) at js/src/jit/arm64/vixl/Simulator-vixl.cpp:68\n#7  0x00000000009d523d in vixl::Simulator::RunFrom (first=0xfcba364f970, this=0x7ffff5f3b000) at js/src/jit/arm64/vixl/Simulator-vixl.cpp:76\n#8  vixl::Simulator::call (this=0x7ffff5f3b000, entry=entry@entry=0xfcba364f970 \"\\376w\\277\\251\\375\\003\", argument_count=argument_count@entry=8) at js/src/jit/arm64/vixl/MozSimulator-vixl.cpp:326\n#9  0x0000000000622e4e in EnterBaseline (data=..., cx=0x7ffff5f16000) at js/src/jit/BaselineJIT.cpp:151\n#10 js::jit::EnterBaselineAtBranch (cx=0x7ffff5f16000, fp=0x7ffff4573140, pc=<optimized out>) at js/src/jit/BaselineJIT.cpp:226\n#11 0x000000000056d278 in Interpret (cx=0x7ffff5f16000, state=...) at js/src/vm/Interpreter.cpp:2038\n#12 0x000000000056d805 in js::RunScript (cx=0x7ffff5f16000, state=...) at js/src/vm/Interpreter.cpp:417\n#13 0x00000000005709bd in js::ExecuteKernel (cx=0x7ffff5f16000, script=..., script@entry=..., envChainArg=..., newTargetValue=..., evalInFrame=..., evalInFrame@entry=..., result=result@entry=0x7ffff4573090) at js/src/vm/Interpreter.cpp:700\n#14 0x0000000000570ea1 in js::Execute (cx=cx@entry=0x7ffff5f16000, script=script@entry=..., envChainArg=..., rval=rval@entry=0x7ffff4573090) at js/src/vm/Interpreter.cpp:733\n#15 0x0000000000a17d76 in ExecuteScript (cx=cx@entry=0x7ffff5f16000, scope=scope@entry=..., script=script@entry=..., rval=rval@entry=0x7ffff4573090) at js/src/jsapi.cpp:4712\n#16 0x0000000000a18354 in ExecuteScript (cx=0x7ffff5f16000, envChain=..., scriptArg=..., rval=0x7ffff4573090) at js/src/jsapi.cpp:4731\n#17 0x0000000000a183ea in JS_ExecuteScript (cx=<optimized out>, envChain=..., scriptArg=..., scriptArg@entry=..., rval=...) at js/src/jsapi.cpp:4752\n#18 0x000000000046d5f9 in Evaluate (cx=0x7ffff5f16000, argc=<optimized out>, vp=<optimized out>) at js/src/shell/js.cpp:2025\n#19 0x00000000005796fd in js::CallJSNative (cx=0x7ffff5f16000, native=0x46cb30 <Evaluate(JSContext*, unsigned int, JS::Value*)>, args=...) at js/src/vm/JSContext-inl.h:290\n[...]\n#33 0x0000000000442f92 in main (argc=<optimized out>, argv=<optimized out>, envp=<optimized out>) at js/src/shell/js.cpp:9410\nrax\t0x0\t0\nrbx\t0x7ffff6eef700\t140737336243968\nrcx\t0x7ffff6c212dd\t140737333301981\nrdx\t0x0\t0\nrsi\t0x7ffff6ef0770\t140737336248176\nrdi\t0x7ffff6eef540\t140737336243520\nrbp\t0x7fffffffbe80\t140737488338560\nrsp\t0x7fffffffbe70\t140737488338544\nr8\t0x7ffff6ef0770\t140737336248176\nr9\t0x7ffff7fe4780\t140737354024832\nr10\t0x0\t0\nr11\t0x0\t0\nr12\t0x7ffff5f59068\t140737319899240\nr13\t0xfcba3680138\t17367294279992\nr14\t0x7fffffffc100\t140737488339200\nr15\t0x7fffffffc070\t140737488339056\nrip\t0x49236a <mozalloc_abort(char const*)+42>\n=> 0x49236a <mozalloc_abort(char const*)+42>:\tmovl   $0x0,0x0\n   0x492375 <mozalloc_abort(char const*)+53>:\tud2", "author": "choller@mozilla.com", "id": 13136701, "time": "2018-03-18T20:30:51Z"}, {"text": "Tail of the instruction trace:\n\n...\n0x00000b1333c73b24  910003fc\t\tmov     x28, sp\n0x00000b1333c73b28  f940039c\t\tldr     x28, [x28]\n0x00000b1333c73b2c  f840879e\t\tldr     x30, [x28], #8\n0x00000b1333c73b30  9100039f\t\tmov     sp, x28\n0x00000b1333c73b34  a8c15f93\t\tldp     x19, x23, [x28], #16\n0x00000b1333c73b38  9100639c\t\tadd     x28, x28, #0x18 (24)\n0x00000b1333c73b3c  9100c2f7\t\tadd     x23, x23, #0x30 (48)\n0x00000b1333c73b40  72001c1f\t\ttst     w0, #0xff\n0x00000b1333c73b44  54000040\t\tb.eq    #+0x8 (addr 0xb1333c73b4c)\n0x00000b1333c73b48  d61f0260\t\tbr      x19\n0x00000b1333ca4138  ffff00ac\t\tunallocated (Unallocated)\nUnallocated instruction at 0xb1333ca4138: 0xffff00ac\n\nThis looks bad but it also looks a lot like bug 1445992 and they both could in principle be caused by bug 1445907 so it's hard to say for sure without fixing some other things first.", "author": "lhansen@mozilla.com", "id": 13138961, "time": "2018-03-19T08:49:44Z"}, {"text": "I just noticed that this is triggering super frequent, marking fuzzblocker. Especially because the machines fuzzing ARM64 are only a few and not very powerful, getting top crashers out of the way is really important to find other bugs.", "author": "choller@mozilla.com", "id": 13235563, "time": "2018-04-26T14:58:53Z"}, {"text": "Looks like a wild pointer loaded and used for a branch target.\n\nThis is JS, not wasm, maybe Sean has some cycles to look into it (since it crashes on Simulator).", "author": "lhansen@mozilla.com", "id": 13237508, "time": "2018-04-27T06:45:45Z"}, {"text": "Sean, do you have any updates on this ARM64 abort? It's blocking ARM64 fuzzing from finding other bugs.", "author": "cpeterson@mozilla.com", "id": 13277166, "time": "2018-05-14T21:34:00Z"}, {"text": "I'm not able to reproduce the crash. Decoder, is this still showing up in fuzzing? If it's a fuzzblocker, could you please attach another testcase that works with the latest m-c? A bunch of ARM64 bugs were fixed in the meantime, and it's possible this could be a dup of one of those.", "author": "sstangl@mozilla.com", "id": 13282874, "time": "2018-05-16T21:38:27Z"}, {"text": "This is an automated crash issue comment:\n\nSummary: Crash [@ mozalloc_abort]\nBuild version: mozilla-central revision 3c9d69736f4a\nBuild flags: --enable-posix-nspr-emulation --enable-valgrind --enable-gczeal --disable-tests --disable-profiling --enable-debug --enable-optimize --enable-simulator=arm64\nRuntime options: --fuzzing-safe\n\nTestcase:\n\nvar lfLogBuffer = `\n  var g = newGlobal(\"/* 3/* */\");\n  g.parent = this;\n  g.eval(\"Debugger(parent).onEnterFrame = function() {};\");\n  \\`Assertion failed: expected exception \\${ctor.name}, got \\${exc}\\`;\n`;\nuntemplate = function(s) { return s.replace(/\\\\/g, '\\\\\\\\\\\\').replace(/`/g, '\\\\\\`').replace(/\\$/g, '\\\\\\$'); }\nloadFile(lfLogBuffer);\nloadFile(lfLogBuffer);\nfunction loadFile(lfVarx) {\n    try {\n      evaluate(lfVarx);\n    } catch (lfVare) {}\n    lfVarx = untemplate(lfVarx);\n}\n\nBacktrace:\n\nreceived signal SIGSEGV, Segmentation fault.\n0x0000000000495e4a in mozalloc_abort (msg=msg@entry=0x12973d0 \"Redirecting call to abort() to mozalloc_abort\\n\") at memory/mozalloc/mozalloc_abort.cpp:34\n#0  0x0000000000495e4a in mozalloc_abort (msg=msg@entry=0x12973d0 \"Redirecting call to abort() to mozalloc_abort\\n\") at memory/mozalloc/mozalloc_abort.cpp:34\n#1  0x0000000000495e20 in abort () at memory/mozalloc/mozalloc_abort.cpp:81\n#2  0x0000000000a192b0 in vixl::Simulator::VisitUnallocated (this=<optimized out>, instr=<optimized out>) at js/src/jit/arm64/vixl/Simulator-vixl.cpp:751\n#3  0x00000000009ac393 in vixl::Decoder::VisitUnallocated (this=<optimized out>, instr=0x1a89d02e4244) at js/src/jit/arm64/vixl/Decoder-vixl.cpp:872\n#4  0x00000000009e9f35 in vixl::Decoder::Decode (instr=<optimized out>, this=<optimized out>) at js/src/jit/arm64/vixl/Decoder-vixl.h:158\n#5  vixl::Simulator::ExecuteInstruction (this=this@entry=0x7ffff5f3b000) at js/src/jit/arm64/vixl/MozSimulator-vixl.cpp:195\n#6  0x0000000000a3475c in vixl::Simulator::Run (this=0x7ffff5f3b000) at js/src/jit/arm64/vixl/Simulator-vixl.cpp:70\n#7  0x00000000009fdffc in vixl::Simulator::call (this=0x7ffff5f3b000, entry=entry@entry=0x1a89d02b9960 \"\\376w\\277\\251\\375\\003\", argument_count=argument_count@entry=8) at js/src/jit/arm64/vixl/MozSimulator-vixl.cpp:327\n#8  0x000000000067673b in EnterBaseline (data=..., cx=0x7ffff5f17000) at js/src/jit/BaselineJIT.cpp:151\n#9  js::jit::EnterBaselineAtBranch (cx=0x7ffff5f17000, fp=0x7ffff458b390, pc=<optimized out>) at js/src/jit/BaselineJIT.cpp:226\n#10 0x00000000005a9209 in Interpret (cx=0x7ffff5f17000, state=...) at js/src/vm/Interpreter.cpp:2037\n[...]\n#20 main (argc=<optimized out>, argv=<optimized out>, envp=<optimized out>) at js/src/shell/js.cpp:9301\nrax\t0x0\t0\nrbx\t0x7ffff6ef6700\t140737336272640\nrcx\t0x7ffff6c282ad\t140737333330605\nrdx\t0x0\t0\nrsi\t0x7ffff6ef7770\t140737336276848\nrdi\t0x7ffff6ef6540\t140737336272192\nrbp\t0x7fffffffc590\t140737488340368\nrsp\t0x7fffffffc580\t140737488340352\nr8\t0x7ffff6ef7770\t140737336276848\nr9\t0x7ffff7fe4780\t140737354024832\nr10\t0x0\t0\nr11\t0x0\t0\nr12\t0x7ffff5f59068\t140737319899240\nr13\t0x1a89d02e4244\t29179205534276\nr14\t0x7fffffffc820\t140737488341024\nr15\t0x7fffffffc790\t140737488340880\nrip\t0x495e4a <mozalloc_abort(char const*)+42>\n=> 0x495e4a <mozalloc_abort(char const*)+42>:\tmovl   $0x0,0x0\n   0x495e55 <mozalloc_abort(char const*)+53>:\tud2", "author": "choller@mozilla.com", "id": 13282949, "time": "2018-05-16T22:04:43Z"}, {"text": "Still reproduces per comment 6.", "author": "choller@mozilla.com", "id": 13282950, "time": "2018-05-16T22:05:10Z"}, {"text": "I took a look at the crash in Comment 6. The ARM64 code is failing in the EnterJIT trampoline in case of OSR -- it sets a fake return address of 0x0, and then calls out to js::InitBaselineFrameForOsr() to fill in the return address.\n\nThat makes its way to initForOsr(), which, since (fp->isDebugge()), calls Debugger::replaceFrameGuts().\n\nIt looks like replaceFrameGuts() doesn't like the layout of the ARM64 stack, even though the code itself looks identical with the x64/ARM/etc. trampoline code used by every other platform.\n\nI'm not familiar with the Debugger internals, but I'll take a look. In the meantime, since this was blocking fuzzing, it looks like you can work around the issue by passing --ion-osr=off, or avoiding using Debugger objects.", "author": "sstangl@mozilla.com", "id": 13372459, "time": "2018-05-29T21:06:22Z"}, {"text": "(In reply to Sean Stangl [:sstangl] from comment #8)\n> \n> I'm not familiar with the Debugger internals, but I'll take a look. In the\n> meantime, since this was blocking fuzzing, it looks like you can work around\n> the issue by passing --ion-osr=off, or avoiding using Debugger objects.\n\nThe test in comment 6 also reproduces with --ion-osr=off. Avoiding the Debugger object is not trivial because you can get it back in various ways (newGlobal, evalnworker, etc).", "author": "choller@mozilla.com", "id": 13382101, "time": "2018-06-02T10:34:44Z"}], "id": 1446819, "priority": "P3", "cc": ["choller@mozilla.com", "cpeterson@mozilla.com", "fuzzing@mozilla.com", "jorendorff@mozilla.com", "lhansen@mozilla.com", "nth10sd@gmail.com", "sstangl@mozilla.com"], "cf_crash_signature": "[@ mozalloc_abort]", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [676763, 1446898], "qa_contact": "", "creation_time": "2018-03-18T20:30:51Z", "cf_status_firefox_esr52": "---", "component": "JavaScript Engine", "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "affected", "cf_status_firefox61": "affected", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "critical", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, "whiteboard": "[jsbugmon:update,bisect][fuzzblocker][geckoview:crow]", "mentors": [], "summary": "Crash [@ mozalloc_abort] with UNIMPLEMENTED abort message and Debugger", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"requestee": "sstangl@mozilla.com", "status": "?", "name": "needinfo", "modification_date": "2018-04-27T06:45:45Z", "type_id": 800, "creation_date": "2018-04-27T06:45:45Z", "id": 1749801, "setter": "lhansen@mozilla.com"}], "last_change_time": "2018-06-02T10:34:44Z", "assigned_to": "nobody@mozilla.org", "is_open": true, "history": [{"changes": [{"removed": "", "field_name": "blocks", "added": "1446898"}], "who": "lhansen@mozilla.com", "when": "2018-03-19T07:34:30Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}, {"removed": "", "field_name": "cc", "added": "jorendorff@mozilla.com"}], "who": "jorendorff@mozilla.com", "when": "2018-03-19T20:21:31Z"}, {"changes": [{"removed": "[jsbugmon:update,bisect]", "field_name": "whiteboard", "added": "[jsbugmon:update,bisect][fuzzblocker]"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(lhansen@mozilla.com)"}], "who": "choller@mozilla.com", "when": "2018-04-26T14:58:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sstangl@mozilla.com"}, {"removed": "needinfo?(lhansen@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(sstangl@mozilla.com)"}], "who": "lhansen@mozilla.com", "when": "2018-04-27T06:45:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "cpeterson@mozilla.com"}, {"removed": "[jsbugmon:update,bisect][fuzzblocker]", "field_name": "whiteboard", "added": "[jsbugmon:update,bisect][fuzzblocker][geckoview:crow]"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "affected"}], "who": "cpeterson@mozilla.com", "when": "2018-05-14T21:34:00Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(choller@mozilla.com)"}], "who": "sstangl@mozilla.com", "when": "2018-05-16T21:38:27Z"}, {"changes": [{"removed": "needinfo?(choller@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "choller@mozilla.com", "when": "2018-05-16T22:05:10Z"}], "resolution": "", "op_sys": "Linux", "cf_fx_points": "---", "cf_blocking_fennec": "---"}