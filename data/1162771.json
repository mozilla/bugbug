{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "dflanagan@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/html", "id": 8603048}, {"creator": "bugmail@mozilla.staktrace.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T22:14:16Z", "type_id": 4, "creation_date": "2016-08-17T16:46:15Z", "id": 1440727, "setter": "bugs@pettay.fi"}], "content_type": "text/plain", "id": 8782047}, {"creator": "bugmail@mozilla.staktrace.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T22:18:10Z", "type_id": 4, "creation_date": "2016-08-17T16:47:07Z", "id": 1440728, "setter": "bugs@pettay.fi"}], "content_type": "text/plain", "id": 8782048}, {"creator": "bugmail@mozilla.staktrace.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T22:27:47Z", "type_id": 4, "creation_date": "2016-08-17T16:48:02Z", "id": 1440730, "setter": "bugs@pettay.fi"}], "content_type": "text/plain", "id": 8782050}, {"creator": "bugmail@mozilla.staktrace.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-17T22:37:03Z", "type_id": 4, "creation_date": "2016-08-17T16:49:00Z", "id": 1440733, "setter": "bugs@pettay.fi"}], "content_type": "text/plain", "id": 8782052}], "classification": "Components", "creator": "dflanagan@gmail.com", "cc": ["bugmail@mozilla.staktrace.com", "bugs@pettay.fi"], "depends_on": [1298130], "creation_time": "2015-05-07T22:37:49Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "ARM", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "touchend event on media element is not sent if element is hidden on touchstart", "id": 1162771, "cf_status_firefox51": "fixed", "assigned_to_detail": {"email": "bugmail@mozilla.staktrace.com", "id": 426788, "name": "bugmail@mozilla.staktrace.com", "real_name": "Kartikaya Gupta (email:kats@mozilla.com)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "bugmail@mozilla.staktrace.com", "comment_count": 25, "comments": [{"text": "One of the nice things about touch events is that the touchend is always delivered to the event that touchstart was delivered too.  This even happens if the element is hidden after the touchstart: the touchend gets delivered to the hidden element when the user lifts their finger.\n\nBut it turns out that that is not happening for video elements and for audio elements with the control attribute, and this caused FirefoxOS bug 1160408.\n\nThe issue is demonstrated with the sample code at http://djf.net/tt.html, and affects FirefoxOS and Firefox for Android.  \n\nSTR: \n\n- load djf.net/tt.html into the FirefoxOS browser or into Firefox on Android\n\n- see three colored boxes. From left to right they are a <video> element, and <audio controls> element and a <div> element.  Each one has event handlers that hide it on touchstart.\n\n- tap on each box in turn to hide.\n\n- the test displays a log of events received. Note that for the video and audio elements, only a touchstart event is sent.  For the div element (the rightmost box) we get a touchstart and a touchend even though the element is hidden before the user lifts their finger.\n\nI imagine that this has something to do with the fact that audio and video elements have xul or shadow dom or something for their controls.", "author": "dflanagan@gmail.com", "id": 10245027, "time": "2015-05-07T22:37:49Z"}, {"text": "Kats: this is a followup to bug 1160408. I'm going to attempt a gaia-based workaround for that bug, and have filed this one for the gecko fix.", "author": "dflanagan@gmail.com", "id": 10245032, "time": "2015-05-07T22:39:18Z"}, {"text": "Created attachment 8603048\nreduced test case\n\nI'm attaching a local copy of the test case from http://djf.net/tt.html", "author": "dflanagan@gmail.com", "id": 10245038, "time": "2015-05-07T22:41:08Z"}, {"text": "Note also that the bug does not occur in Chrome for Android.  In that browser the touchend is delivered properly in all three cases.\n\nAnd also, the <audio> element only causes the bug if it has the controls attribute. The <video> element causes the bug even without controls. The test case doesn't actually play a video or any music, but I have verified that the bug also occurs when a video is playing.", "author": "dflanagan@gmail.com", "id": 10245047, "time": "2015-05-07T22:44:07Z"}, {"text": "Awesome, thanks a lot for the reduced test case!", "author": "bugmail@mozilla.staktrace.com", "id": 10245573, "time": "2015-05-08T01:27:43Z"}, {"text": "This appears to still be an issue in Fennec nightly. I didn't check desktop but marking it blocking bug 1244402 so that we investigate this before shipping touch on desktop.", "author": "bugmail@mozilla.staktrace.com", "id": 11596184, "time": "2016-08-03T17:26:40Z"}, {"text": "This is an issue on Windows desktop as well, and it doesn't happen in Chrome.", "author": "bugmail@mozilla.staktrace.com", "id": 11596848, "time": "2016-08-03T20:47:29Z"}, {"text": "So I spent some time tracing through the code. It looks like the target of the event is a HTMLDivElement that's inside the anonymous subtree under the HTMLVideoElement. When the touchstart sets the display of the video element to 'none', the HTMLDivElement's parent gets set to null.\n\nHowever it's a bit racy - sometimes the touchend event will sneak through before that happens, and in those cases the test page works as expected. If it doesn't sneak through, then the PreHandleEvent call at [1] goes into FragmentOrElement::PreHandleEvent on the HTMLDivElement, and at [2] parent comes out as null. The ComposedDoc() for the element is all null, so at [3] the mParentTarget gets set to null, and consequently the loop at [4] never iterates and nothing seems to fire.\n\nIt's not really clear to me why the target stored in the touch in the gTouchList is the anonymous HTMLDivElement rather than the HTMLVideoElement.\n\n[1] http://searchfox.org/mozilla-central/rev/d9a04f71630ce4203ff0a5e26722723045d035b5/dom/events/EventDispatcher.cpp#637\n[2] http://searchfox.org/mozilla-central/rev/d9a04f71630ce4203ff0a5e26722723045d035b5/dom/base/FragmentOrElement.cpp#776\n[3] http://searchfox.org/mozilla-central/rev/d9a04f71630ce4203ff0a5e26722723045d035b5/dom/base/FragmentOrElement.cpp#905\n[4] http://searchfox.org/mozilla-central/rev/d9a04f71630ce4203ff0a5e26722723045d035b5/dom/events/EventDispatcher.cpp#654", "author": "bugmail@mozilla.staktrace.com", "id": 11599535, "time": "2016-08-04T17:07:48Z"}, {"text": "I wrote a naive patch that walks out of anonymous subtrees when picking the touch target. Try push to see what breaks:\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=332272e4493c", "author": "bugmail@mozilla.staktrace.com", "id": 11599762, "time": "2016-08-04T17:58:44Z"}, {"text": "Doesn't that break touch events on native anonymous content?", "author": "bugs@pettay.fi", "id": 11600064, "time": "2016-08-04T19:37:27Z"}, {"text": "Probably, yes. I'm not sure what relies on that behaviour and was hoping test failures would provide some insight. Right now it looks like layout/forms/test/test_textarea_resize.html is the only consistently failing test as a result of this change.\n\nAnother option is to maybe cache both the anonymous subtree node (the HTMLDivElement) and its non-anonymous content parent (the HTMLVideoElement) in the gTouchList somewhere, and if the anonymous one gets disconnected, we pick up the non-anonymous parent. I'm not sure how well that would work, but it's something I can try. If you have other suggestions I'm happy to try those too.", "author": "bugmail@mozilla.staktrace.com", "id": 11600233, "time": "2016-08-04T20:32:21Z"}, {"text": "(In reply to (away Aug5-14) Kartikaya Gupta (email:kats@mozilla.com) from comment #10)\n> Another option is to maybe cache both the anonymous subtree node (the\n> HTMLDivElement) and its non-anonymous content parent (the HTMLVideoElement)\n> in the gTouchList somewhere, and if the anonymous one gets disconnected, we\n> pick up the non-anonymous parent. I'm not sure how well that would work, but\n> it's something I can try. If you have other suggestions I'm happy to try\n> those too.\nThat might work quite easily. Just need to check if the native anon isn't in composed doc anymore and switch to use the non-nac element.", "author": "bugs@pettay.fi", "id": 11600256, "time": "2016-08-04T20:40:52Z"}, {"text": "I'm looking into doing the change in comment 10 / comment 11. It seems like I will need to store the non-native element for each touch point, correct? I'm planning on changing the gCaptureTouchList from\n  nsRefPtrHashtable<nsUint32HashKey, dom::Touch>*\nto\n  nsDataHashtable<nsUint32HashKey, TouchInfo>*\n\nwhere TouchInfo is something like\n\nstruct TouchInfo {\n  RefPtr<mozilla::dom::Touch> mTouch;\n  nsCOMPtr<nsIContent> mNonAnonymousTarget;\n};\n\nDoes that seem reasonable? Or are there some simplifying assumptions I can make somewhere, like just keeping one non-anonymous target in TouchManager?", "author": "bugmail@mozilla.staktrace.com", "id": 11629571, "time": "2016-08-16T17:26:08Z"}, {"text": "So if mTouch's target is native anonymous and isn't in composed document anymore, we would use\nmNonAnonymousTarget as target?\nLooks reasonable and simple.", "author": "bugs@pettay.fi", "id": 11629593, "time": "2016-08-16T17:31:46Z"}, {"text": "I guess it's conceptually simple but I did a bunch of code cleanup to encapsulate the code a bit more before implementing the fix. Try push with the patches:\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=12b1a6e914a3", "author": "bugmail@mozilla.staktrace.com", "id": 11632637, "time": "2016-08-17T14:57:05Z"}, {"text": "Created attachment 8782047\nPart 1 - Refactoring to better encapsulate gCaptureTouchList", "author": "bugmail@mozilla.staktrace.com", "id": 11633016, "time": "2016-08-17T16:46:15Z"}, {"text": "Created attachment 8782048\nPart 2 - Rename gCaptureTouchList to sCaptureTouchList\n\nI can take this out if you want, but I thought it was more appropriate since it's a static member now (used to be global before TouchManager existed).", "author": "bugmail@mozilla.staktrace.com", "id": 11633019, "time": "2016-08-17T16:47:07Z"}, {"text": "Created attachment 8782050\nPart 3 - Store the non-anonymous ancestor in the touch list\n\nAs proposed in comment 12", "author": "bugmail@mozilla.staktrace.com", "id": 11633024, "time": "2016-08-17T16:48:02Z"}, {"text": "Created attachment 8782052\nPart 4 - Actual fix and test\n\nThis is the actual fix and a test to go with it. I adapted the minimal test case that djf provided into a mochitest.", "author": "bugmail@mozilla.staktrace.com", "id": 11633028, "time": "2016-08-17T16:49:00Z"}, {"text": "Comment on attachment 8782047\nPart 1 - Refactoring to better encapsulate gCaptureTouchList\n\n>+/*static*/ already_AddRefed<nsIContent>\n>+TouchManager::GetCapturedTouchTarget()\n>+{\n>+  nsCOMPtr<nsIContent> result = nullptr;\n\n\n>+  if (gCaptureTouchList->Count() == 0) {\n>+    return result.forget();\n>+  }\n>+  for (auto iter = gCaptureTouchList->Iter(); !iter.Done(); iter.Next()) {\n>+    RefPtr<dom::Touch>& touch = iter.Data();\n>+    if (touch) {\n>+      dom::EventTarget* target = touch->GetTarget();\n>+      if (target) {\n>+        result = do_QueryInterface(target);\n>+        break;\n>+      }\n>+    }\n>+  }\n>+  return result.forget();\nHmm, so this returns just any target in the list.\nCould we call this method GetAnyCapturedTouchTarget\n\n>+}\n>+\n>+/*static*/ bool\n>+TouchManager::HasCapturedTouch(int32_t aId)\n>+{\n>+  return gCaptureTouchList->Get(aId, nullptr);\n>+}\nDon't we have Contains()?", "author": "bugs@pettay.fi", "id": 11634117, "time": "2016-08-17T22:14:16Z"}, {"text": "Comment on attachment 8782050\nPart 3 - Store the non-anonymous ancestor in the touch list\n\n>@@ -123,17 +133,18 @@ TouchManager::PreHandleEvent(WidgetEvent* aEvent,\n>       for (uint32_t i = 0; i < touchEvent->mTouches.Length(); ++i) {\n>         dom::Touch* touch = touchEvent->mTouches[i];\n>         int32_t id = touch->Identifier();\n>         if (!sCaptureTouchList->Get(id, nullptr)) {\n>           // If it is not already in the queue, it is a new touch\n>           touch->mChanged = true;\n>         }\n>         touch->mMessage = aEvent->mMessage;\n>-        sCaptureTouchList->Put(id, touch);\n>+        TouchInfo info = { touch, GetNonAnonymousAncestor(touch->mTarget) };\n>+        sCaptureTouchList->Put(id, info);\nSo here we store the Non-Anon in sCaptureTouchList\n\n>-        sCaptureTouchList->Put(id, touch);\n>+        info.mTouch = touch;\n>+        sCaptureTouchList->Put(id, info);\nbut here we just update info.mTouch. Could you add some comment to this latter case, that the old non-anon is still valid.\n\n>-  static nsRefPtrHashtable<nsUint32HashKey, mozilla::dom::Touch>* sCaptureTouchList;\n>+  struct TouchInfo {\nNit, { goes to its own line", "author": "bugs@pettay.fi", "id": 11634168, "time": "2016-08-17T22:27:47Z"}, {"text": "Comment on attachment 8782052\nPart 4 - Actual fix and test\n\nI assume you tested other browsers send touchend similarly.\nBased on the comments in the bug, that is the case at least on Android Chrome.", "author": "bugs@pettay.fi", "id": 11634197, "time": "2016-08-17T22:37:03Z"}, {"text": "Updated patches to address all review comments. And yeah I also tested in Chrome for desktop (Windows) and it sends the touchend properly. I don't have access to an iOS device to test safari touch.", "author": "bugmail@mozilla.staktrace.com", "id": 11635614, "time": "2016-08-18T11:11:19Z"}, {"text": "Pushed by kgupta@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/47b7bf339876\nEncapsulate the gCaptureTouchList so that it's not exposed outside of the TouchManager class. r=smaug\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/e2eed81cdcff\nRename gCaptureTouchList to sCaptureTouchList. r=smaug\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/a92dc8fb7769\nStore the non-anonymous ancestor content along with the touch info the captured touch list. r=smaug\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d7b6142bbcd5\nFall back to using the non-anonymous ancestor node of the target if the anonymous target is disconnected from the document. r=smaug", "author": "pulsebot@bots.tld", "id": 11635620, "time": "2016-08-18T11:14:54Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/47b7bf339876\nhttps://hg.mozilla.org/mozilla-central/rev/e2eed81cdcff\nhttps://hg.mozilla.org/mozilla-central/rev/a92dc8fb7769\nhttps://hg.mozilla.org/mozilla-central/rev/d7b6142bbcd5", "author": "ryanvm@gmail.com", "id": 11639403, "time": "2016-08-19T13:58:41Z"}], "cf_last_resolved": "2016-08-19T13:58:41Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-08-25T19:05:33Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1244402], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1160408"], "cf_fx_iteration": "---", "component": "DOM: Events", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox40": "affected", "target_milestone": "mozilla51", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "dflanagan@gmail.com", "id": 416398, "name": "dflanagan@gmail.com", "real_name": "David Flanagan [:djf]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "bugmail@mozilla.staktrace.com", "id": 426788, "name": "bugmail@mozilla.staktrace.com", "real_name": "Kartikaya Gupta (email:kats@mozilla.com)"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "bugmail.mozilla@staktrace.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bugmail.mozilla@staktrace.com)"}], "who": "dflanagan@gmail.com", "when": "2015-05-07T22:39:18Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1160408"}], "who": "dflanagan@gmail.com", "when": "2015-05-07T22:45:12Z"}, {"changes": [{"removed": "needinfo?(bugmail.mozilla@staktrace.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bugmail@mozilla.staktrace.com", "when": "2015-05-08T01:27:43Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1244402"}, {"removed": "Gonk (Firefox OS)", "field_name": "op_sys", "added": "Android"}, {"removed": "---", "field_name": "cf_status_firefox51", "added": "affected"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-03T17:26:40Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bugmail@mozilla.staktrace.com"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-03T21:09:59Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugs@pettay.fi"}], "who": "bugs@pettay.fi", "when": "2016-08-04T19:37:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8782047, "added": "review?(bugs@pettay.fi)"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-17T16:46:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8782048, "added": "review?(bugs@pettay.fi)"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-17T16:47:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8782050, "added": "review?(bugs@pettay.fi)"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-17T16:48:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8782052, "added": "review?(bugs@pettay.fi)"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-17T16:49:00Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8782047, "added": "review+"}], "who": "bugs@pettay.fi", "when": "2016-08-17T22:14:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8782048, "added": "review+"}], "who": "bugs@pettay.fi", "when": "2016-08-17T22:18:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8782050, "added": "review+"}], "who": "bugs@pettay.fi", "when": "2016-08-17T22:27:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bugs@pettay.fi)", "attachment_id": 8782052, "added": "review+"}], "who": "bugs@pettay.fi", "when": "2016-08-17T22:37:03Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla51"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-08-19 13:58:41"}, {"removed": "affected", "field_name": "cf_status_firefox51", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2016-08-19T13:58:41Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1298130"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-08-25T19:05:33Z"}], "resolution": "FIXED", "op_sys": "Android", "cf_fx_points": "---", "cf_blocking_fennec": "---"}