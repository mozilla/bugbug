{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2014-10-15T19:06:47Z", "type_id": 607, "creation_date": "2014-10-15T18:37:09Z", "id": 1005838, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8505639}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-10-27T22:01:43Z", "type_id": 4, "creation_date": "2014-10-17T14:36:28Z", "id": 1007998, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8506960}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-10-31T20:34:17Z", "type_id": 4, "creation_date": "2014-10-31T20:34:17Z", "id": 1021769, "setter": "dteller@mozilla.com"}], "content_type": "text/plain", "id": 8515234}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-11-05T22:11:08Z", "type_id": 4, "creation_date": "2014-10-31T21:39:27Z", "id": 1021852, "setter": "bzbarsky@mit.edu"}], "content_type": "text/plain", "id": 8515286}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-10-31T22:32:21Z", "type_id": 4, "creation_date": "2014-10-31T22:32:21Z", "id": 1021895, "setter": "dteller@mozilla.com"}], "content_type": "text/plain", "id": 8515319}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-11-19T19:26:59Z", "type_id": 4, "creation_date": "2014-11-19T19:26:59Z", "id": 1037817, "setter": "dteller@mozilla.com"}], "content_type": "text/plain", "id": 8525505}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-11-20T10:12:44Z", "type_id": 4, "creation_date": "2014-11-20T10:12:44Z", "id": 1038455, "setter": "dteller@mozilla.com"}], "content_type": "text/plain", "id": 8525938}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8532655}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-03-12T12:00:32Z", "type_id": 4, "creation_date": "2015-03-12T12:00:32Z", "id": 1120539, "setter": "dteller@mozilla.com"}], "content_type": "text/plain", "id": 8576621}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2015-03-13T20:21:37Z", "type_id": 4, "creation_date": "2015-03-12T13:22:51Z", "id": 1120585, "setter": "khuey@kylehuey.com"}], "content_type": "text/plain", "id": 8576622}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/x-review-board-request", "id": 8583782}, {"creator": "dteller@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8591003}, {"creator": "dteller@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-04-10T19:14:13Z", "type_id": 4, "creation_date": "2015-04-10T19:14:13Z", "id": 1144123, "setter": "dteller@mozilla.com"}], "content_type": "text/plain", "id": 8591004}], "classification": "Components", "creator": "dteller@mozilla.com", "cc": ["ajvincent@gmail.com", "bzbarsky@mit.edu", "cbook@mozilla.com", "dteller@mozilla.com", "fb+mozdev@quantumedia.de", "jryans@gmail.com", "khuey@kylehuey.com", "nfitzgerald@mozilla.com", "paolo.mozmail@amadzone.org"], "depends_on": [1083989, 1119360, 1157714], "creation_time": "2014-10-15T18:34:20Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Expose an API to track DOM Promise which are left uncaught", "id": 1083361, "assigned_to_detail": {"email": "dteller@mozilla.com", "id": 181388, "name": "dteller@mozilla.com", "real_name": "David Teller [:Yoric] (please use \"needinfo\")"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "dteller@mozilla.com", "comment_count": 60, "comments": [{"text": "", "author": "dteller@mozilla.com", "id": 9451861, "time": "2014-10-15T18:34:20Z"}, {"text": "Created attachment 8505639\nPossible API\n\nIf this seems ok to you, I can start looking at how to implement this.", "author": "dteller@mozilla.com", "id": 9451880, "time": "2014-10-15T18:37:09Z"}, {"text": "Comment on attachment 8505639\nPossible API\n\nPer offline discussion, looks like a good start.", "author": "bzbarsky@mit.edu", "id": 9452117, "time": "2014-10-15T19:06:47Z"}, {"text": "Created attachment 8506960\nImplementation\n\nHere we go for a v1.\nA few changes since our conversations:\n- there is no reason to keep the promise ID only for these callbacks, so I moved it to PromiseDebugging;\n- I feel that the data argument passed to callbacks is better served by using PromiseDebugging inspect the Promise itself and decide what to capture.\n\nNote the comments in PromiseDebugging.webidl for an oddity: I have found a case in which `onConsumed` is called without `onLeftUncaught` being called.", "author": "dteller@mozilla.com", "id": 9462158, "time": "2014-10-17T14:36:28Z"}, {"text": "Comment on attachment 8506960\nImplementation\n\nI'm sorry for the horrible lag on this review.  :(\n\n>+++ b/dom/promise/Promise.cpp\n> NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN(Promise)\n>+tmp->mResult = JS::UndefinedValue();\n\nPlease indent by 2.\n\n> Promise::AppendCallbacks(PromiseCallback* aResolveCallback,\n>+    // Note that we may not have had the opportunity to call\n>+    // RunResolveTask() yet, so we may never have called\n\nIf RunResolveTask hasn't happened, our mState won't be PromiseState::Rejected, right?  So I don't think we need to worry about this case.\n\n>@@ -1140,58 +1106,28 @@ Promise::RunResolveTask(JS::Handle<JS::V\n>-    mFeature = new PromiseReportRejectFeature(this);\n\nWe can remove the PromiseReportRejectFeature class altogether, right?\n\n>+++ b/dom/promise/Promise.h\n>+  bool IsLastInChain() {\n\nPlease make that a const method.\n\n>+++ b/dom/promise/PromiseDebugging.cpp\n>+    sIDPrefix.Append(NS_LITERAL_STRING(\".\"));\n\n  sIDPrefix.Append('.');\n\n>+PromiseDebugging::AddUncaughtRejectionObserver(GlobalObject&,\n>+                                              UncaughtRejectionObserver& aObserver)\n\nThe indentation here is weird.  Tabs or something?\n\n>+  nsRefPtr<UncaughtRejectionObserver> observer = &aObserver;\n>+  observers.AppendElement(observer.forget());\n\nYou can just do:\n\n  observers.AppendElement(&aObserver);\n\n>+PromiseDebugging::RemoveUncaughtRejectionObserver(GlobalObject&,\n>+  for (size_t i = 0; i < observers.Length(); ++i) {\n\nWhy not just:\n\n  observers.RemoveElement(&aObserver);\n\n?\n\n>+PromiseDebugging::FlushUncaughtRejections()\n\n>+  AutoJSAPI api;\n\nThis seems to be unused.\n\n>+      observers[j]->OnLeftUncaught(*promise, rv);\n\nSo this looks like it will possibly notify OnConsumed for promises for which we never notified OnLeftUncaught (because they stopped being last between calling AddUncaughtRejection and this function being called), right?\n\nIdeally we'd flag a promise at the point when we call OnLeftUncaught on it and only do OnConsumed for the ones that actually did OnLeftUncaught.\n\nr=me with the above bits fixed.\n\nWe still need to actually have devtools add such an observer to replace the reporting we have right now that this patch is removing, right?", "author": "bzbarsky@mit.edu", "id": 9507520, "time": "2014-10-27T22:01:43Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #4)\n> We still need to actually have devtools add such an observer to replace the\n> reporting we have right now that this patch is removing, right?\n\nRight. Nick, do you feel we need to do that immediately or that we can afford to land this patch first? If this does not involve delving too deep into devtools code, I can add that observer, but I'll need some guidance.", "author": "dteller@mozilla.com", "id": 9522861, "time": "2014-10-30T10:55:07Z"}, {"text": "If we don't integrate this new hook w/ devtools, and land now, can we leave the old mechanism and only remove that once devtools uses the new hook? If so, then +1 to landing now. If not, then I think we should also do the devtools integration here.\n\nThis API is the stream of \"unhandled rejected promise\" and \"oops, nevermind, that promise got handled now\" events, right?\n\nI think what we would want to do is (with links to code to modify and/or crib from):\n\n1. Create a new listener service for these events in the server.\n\n   http://dxr.mozilla.org/mozilla-central/source/toolkit/devtools/server/actors/webconsole.js#530\n   http://dxr.mozilla.org/mozilla-central/source/toolkit/devtools/webconsole/utils.js#1384\n\n2. When the frontend attaches to the server, tell it to start the new listener service:\n\n   http://dxr.mozilla.org/mozilla-central/source/browser/devtools/webconsole/webconsole.js#4981\n\n3. When the frontend gets unhandled-promise-rejection events, output a message to the console:\n\n   http://dxr.mozilla.org/mozilla-central/source/browser/devtools/webconsole/webconsole.js#4942\n   http://dxr.mozilla.org/mozilla-central/source/browser/devtools/webconsole/webconsole.js#1345\n   http://dxr.mozilla.org/mozilla-central/source/browser/devtools/webconsole/webconsole.js#2054\n\n4. When the frontend gets a nevermind-promise-was-handled, find the corresponding unhandled-promise-rejection message's dom node and make it faded out and strike-through'd. We don't do anything like this now, so you'll have to implement more machinery for this part yourself.", "author": "nfitzgerald@mozilla.com", "id": 9525773, "time": "2014-10-30T19:40:24Z"}, {"text": "Created attachment 8515234\n1. Implementation, v2\n\nApplied feedback, rebased.", "author": "dteller@mozilla.com", "id": 9531253, "time": "2014-10-31T20:34:17Z"}, {"text": "(In reply to Nick Fitzgerald [:fitzgen] from comment #6)\n> If we don't integrate this new hook w/ devtools, and land now, can we leave\n> the old mechanism and only remove that once devtools uses the new hook? If\n> so, then +1 to landing now. If not, then I think we should also do the\n> devtools integration here.\n> \n> This API is the stream of \"unhandled rejected promise\" and \"oops, nevermind,\n> that promise got handled now\" events, right?\n> \n> I think what we would want to do is (with links to code to modify and/or\n> crib from):\n> [...]\n\nThat sound was my internal scope creep alert. I suspect that if I go and perform those changes, some people might be unhappy because my other Q4 priorities will go unfulfilled.\n\nI'll find a way to put both mechanisms.", "author": "dteller@mozilla.com", "id": 9531335, "time": "2014-10-31T20:46:44Z"}, {"text": "(that is, the stream and the old behavior)\n\nI'll then proceed with the testsuite and I'll let you handle the devtools part.\n\nIs that ok with you, Nick?", "author": "dteller@mozilla.com", "id": 9531339, "time": "2014-10-31T20:47:29Z"}, {"text": "Maybe me, maybe someone else, sometime in the future...\n\nSounds good to me.", "author": "nfitzgerald@mozilla.com", "id": 9531408, "time": "2014-10-31T21:00:44Z"}, {"text": "Created attachment 8515286\n2. Keeping in place the old mechanism until we have a replacement", "author": "dteller@mozilla.com", "id": 9531601, "time": "2014-10-31T21:39:27Z"}, {"text": "Created attachment 8515319\n1. Implementation, v3\n\nI realize that I had forgotten to attach the tests.", "author": "dteller@mozilla.com", "id": 9531774, "time": "2014-10-31T22:32:21Z"}, {"text": "Boris?", "author": "dteller@mozilla.com", "id": 9549520, "time": "2014-11-05T16:18:04Z"}, {"text": "Planning to get to this this afternoon; I was out on Monday and most of Tuesday.", "author": "bzbarsky@mit.edu", "id": 9549798, "time": "2014-11-05T17:14:47Z"}, {"text": "Comment on attachment 8515286\n2. Keeping in place the old mechanism until we have a replacement\n\nr=me.  Thank you for doing this, and sorry for the long weekend lag.  :(", "author": "bzbarsky@mit.edu", "id": 9551502, "time": "2014-11-05T22:11:08Z"}, {"text": "Created attachment 8525505\nImplementation\n\nFolded the patch, fixed trivial issues.", "author": "dteller@mozilla.com", "id": 9612644, "time": "2014-11-19T19:26:59Z"}, {"text": "Try: https://treeherder.mozilla.org/ui/#/jobs?repo=try&revision=84f768a4657c", "author": "dteller@mozilla.com", "id": 9612645, "time": "2014-11-19T19:27:14Z"}, {"text": "sorry Yoric had to back this out for bustage like https://treeherder.mozilla.org/ui/logviewer.html#?job_id=4067353&repo=mozilla-inbound", "author": "cbook@mozilla.com", "id": 9615409, "time": "2014-11-20T09:02:05Z"}, {"text": "Created attachment 8525938\nImplementation, v2\n\nTry: https://treeherder.mozilla.org/ui/#/jobs?repo=try&revision=7bf8498cd574", "author": "dteller@mozilla.com", "id": 9615648, "time": "2014-11-20T10:12:44Z"}, {"text": "I have been tracking the pdf.js bustage for a few days.\nApparently, it crashes between the time we dispatch the instance of `FlushRejections` and the time we execute it. Neither `Cancel()` nor the `WorkerFeature` I have added experimentally gets executed.\n\nStill investigating.", "author": "dteller@mozilla.com", "id": 9632047, "time": "2014-11-24T23:13:12Z"}, {"text": "Additionally, even if I patch PromiseDebugging to not add Promise to the array of uncaught rejections, we manage to execute FlushRejections, but we still crash:\n\n16:00:36 WARNING - PROCESS-CRASH | chrome://mochitests/content/browser/browser/extensions/pdfjs/test/browser_pdfjs_navigation.js | application crashed [@ nsTArrayInfallibleResult nsTArray_base<nsTArrayInfallibleAllocator, nsTArray_CopyWithMemutils>::SwapArrayElements<nsTArrayInfallibleAllocator>(nsTArray_base<nsTArrayInfallibleAllocator, nsTArray_CopyWithMemutils>&, unsigned long, unsigned long)]\n\nhttps://treeherder.mozilla.org/ui/logviewer.html#?job_id=3358207&repo=try\n\nNote that this array is an empty arrays.\n\nIn other words, it seems rather clear to me that there is a problem with the way we use CycleCollectedJSRuntime. Perhaps we fail to initialize it, perhaps we use it after it is initialized, or perhaps we need to declare some cycles.\n\nAny suggestion, Boris?", "author": "dteller@mozilla.com", "id": 9633953, "time": "2014-11-25T08:52:33Z"}, {"text": "Look at WorkerThreadPrimaryRunnable::Run.  WorkerJSRuntime goes out of scope before ScheduleDeletion is called, so your CycleCollectedJSRuntime is null here.", "author": "khuey@kylehuey.com", "id": 9635307, "time": "2014-11-25T15:24:04Z"}, {"text": "This makes sense, although I'm not sure where how you link this to ScheduleDeletion. In other words, CycleCollectedJSRuntime is clearly not the right data structure for me. However, I believe that we do not have any kind of TLS for heap-allocated stuff, nor do I see how we could implement one.\n\nOption 1: If CycleCollectedJSRuntime is `null`, give up. Unfortunately, we will lose error reports. Probably not that bad, but still rather unsatisfying.\nOption 2: Attach the data to WorkerPrivate instead of CycleCollectedJSRuntime.\nOption 3: Attach it to the Runtime.\nOption 4: Add yet another object for the purpose of storing the data.\n\nI think that the least bad options are 1 and 2.\n\nAny preference, Boris? Kyle?", "author": "dteller@mozilla.com", "id": 9635600, "time": "2014-11-25T16:15:34Z"}, {"text": "(In reply to David Rajchenbach-Teller [:Yoric] (away until November 17th - use \"needinfo\") from comment #23)\n> This makes sense, although I'm not sure where how you link this to\n> ScheduleDeletion.\n\nFrom the stack you're crashing at.\n\n> Option 1: If CycleCollectedJSRuntime is `null`, give up. Unfortunately, we\n> will lose error reports. Probably not that bad, but still rather\n> unsatisfying.\n> Option 2: Attach the data to WorkerPrivate instead of\n> CycleCollectedJSRuntime.\n> Option 3: Attach it to the Runtime.\n> Option 4: Add yet another object for the purpose of storing the data.\n> \n> I think that the least bad options are 1 and 2.\n> \n> Any preference, Boris? Kyle?\n\nOption 2 is the best, I think.", "author": "khuey@kylehuey.com", "id": 9635675, "time": "2014-11-25T16:27:21Z"}, {"text": "CycleCollectedJSRuntime really should be the right data structure, since once that's gone we won't be able to properly manage the lifetime of UncaughtRejectionObserver (since that's a cycle-collected object).  In other words, if any of this stuff outlives the CycleCollectedJSRuntime, we have a serious problem as far as I can see.  For example, calling Release on an UncaughtRejectionObserver will crash after CycleCollectedJSRuntime is gone, as far as I can tell (via calling NS_CycleCollectorSuspect3 which touches sCollectorData which is nulled out in nsCycleCollector_forgetJSRuntime called from ~CycleCollectedJSRuntime).\n\nI assume ScheduleDeletion is relevant in that it calls ClearMainEventQueue, which will process runnables.  And if the runnable that calls FlushUncaughtRejections is one of the pending runnables, we'll process it after we kill off the CycleCollectedJSRuntime.\n\nSo I think the only reasonable options are comment 23 option 1 and making sure that our FlushRejections runnable keeps the CycleCollectedJSRuntime alive while it's alive.  Kyle, is that the sort of thing that adding a feature for the lifetime of that runnable would do?", "author": "bzbarsky@mit.edu", "id": 9635741, "time": "2014-11-25T16:37:45Z"}, {"text": "Actually, in my latest versions, FlushRejections::DispatchNeeded() creates a WorkerFeature when it is called the first time. In this test, according to the logs, the WorkerFeature is never even notified before the crash.", "author": "dteller@mozilla.com", "id": 9635848, "time": "2014-11-25T16:55:07Z"}, {"text": "Let's talk about this in person in PDX next week.", "author": "khuey@kylehuey.com", "id": 9641995, "time": "2014-11-26T19:31:48Z"}, {"text": "Created attachment 8532655\nAttempting to block shutdown with a WorkerFeature\n\nThis is what I attempted to fix the issue.\n\nSTR:\n- launch the tests of browser/extensions/pdfjs/test in RELEASE (part of mochitest-browser-chrome-2);\n- almost-perma orange, although not always in the same test;\n\nAs we discussed, the call to `worker->AddFeature` in `FlushRejections::ThreadInit` returns `false`.", "author": "dteller@mozilla.com", "id": 9664846, "time": "2014-12-05T21:44:56Z"}, {"text": "Kyle, this is a blocker for a big ongoing refactoring. Can you suggest a solution?", "author": "dteller@mozilla.com", "id": 9699875, "time": "2014-12-16T16:14:41Z"}, {"text": "I discussed this with bent today and we think that AddFeature should probably only be rejecting calls once we get to the Killing state.  Can you make that change and see if it fixes your patch?  If so, I'll write up a patch and audit the relevant code to see if there are any other issues.", "author": "khuey@kylehuey.com", "id": 9701005, "time": "2014-12-16T20:12:05Z"}, {"text": "Works for me.", "author": "dteller@mozilla.com", "id": 9701019, "time": "2014-12-16T20:15:45Z"}, {"text": "Great!", "author": "khuey@kylehuey.com", "id": 9701490, "time": "2014-12-16T21:47:15Z"}, {"text": "I spun that off to bug 1119360.", "author": "khuey@kylehuey.com", "id": 9769689, "time": "2015-01-08T18:07:07Z"}, {"text": "What's the status of this bug?", "author": "paolo.mozmail@amadzone.org", "id": 9923269, "time": "2015-02-16T14:03:25Z"}, {"text": "Blocked on bug 1119360, no?", "author": "bzbarsky@mit.edu", "id": 9934577, "time": "2015-02-19T05:23:42Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #35)\n> Blocked on bug 1119360, no?\n\nHeh, wondered if it was still a hard dependency.\n\nBut I may ask for the status of that bug as well.", "author": "paolo.mozmail@amadzone.org", "id": 9935411, "time": "2015-02-19T14:21:26Z"}, {"text": "Comment on attachment 8532655\nAttempting to block shutdown with a WorkerFeature\n\nWe moved fixing this off to the other bug.", "author": "khuey@kylehuey.com", "id": 9967909, "time": "2015-02-27T18:55:13Z"}, {"text": "After investigating the test failures, I've changed my mind, and don't think we should allow WorkerFeatures to be added in the close handler.\n\nSo let's recap the requirements here.  Do we need to be able to check for uncaught rejections after we have GCd everything?  Or only after we've stopped processing events?", "author": "khuey@kylehuey.com", "id": 10012371, "time": "2015-03-10T23:09:59Z"}, {"text": "The latter should be fine.  We want to check after there is no chance of anyone calling catch() on promises, but no more event processing should be able to guarantee that, right?", "author": "bzbarsky@mit.edu", "id": 10012938, "time": "2015-03-11T01:39:03Z"}, {"text": "(In reply to Not doing reviews right now from comment #39)\n> The latter should be fine.  We want to check after there is no chance of\n> anyone calling catch() on promises, but no more event processing should be\n> able to guarantee that, right?\n\nIt should, yes.  In that case we can hook in somewhere in http://hg.mozilla.org/mozilla-central/annotate/a9aff724afc7/dom/workers/WorkerPrivate.cpp#l4689.", "author": "khuey@kylehuey.com", "id": 10012999, "time": "2015-03-11T01:57:34Z"}, {"text": "Yes, \"no more event processing\" looks correct. Do workers have an equivalent of `onbeforeunload`, or `onunload`? If so, we'll need to triple-check that we get them correctly.\n\nPatching `DoRunLoop` to integrate Promise seems a little weird, but I can work with that.", "author": "dteller@mozilla.com", "id": 10013850, "time": "2015-03-11T07:56:47Z"}, {"text": "It's a little weird, yes, but the existing primitive (WorkerFeature) is used for \"I want to do some async stuff\" more than \"I want to block shutdown\", and having to change all of the uses of it to handle the case where you can't do any more async stuff seems worse than hardcoding this in somewhere.\n\nPromises already have interesting interactions with the event loops anyways.\n\nThe close handler is the worker equivalent of onunload.", "author": "khuey@kylehuey.com", "id": 10016526, "time": "2015-03-11T18:37:06Z"}, {"text": "Created attachment 8576621\n1. Implementation, v3\n\nUnbitrotten.", "author": "dteller@mozilla.com", "id": 10020154, "time": "2015-03-12T12:00:32Z"}, {"text": "Created attachment 8576622\n2. Flushing durint shutdown", "author": "dteller@mozilla.com", "id": 10020163, "time": "2015-03-12T12:03:21Z"}, {"text": "Comment on attachment 8576622\n2. Flushing durint shutdown\n\nA big part of that patch is removing a dependency from CycleCollectedJSRuntime towards DOM Promise, as this dependency doesn't build anymore.\n\nSince bz is not taking reviews, Kyle, it's your turn.", "author": "dteller@mozilla.com", "id": 10020426, "time": "2015-03-12T13:22:51Z"}, {"text": "Comment on attachment 8576622\n2. Flushing durint shutdown\n\nReview of attachment 8576622:\n-----------------------------------------------------------------\n\nr- for the DOM_PROMISE_DEPRECATED_REPORTING issue, but it looks pretty good.\n\n::: dom/promise/Promise.h\n@@ +32,2 @@\n>  #include \"mozilla/dom/workers/bindings/WorkerFeature.h\"\n> +#endif // defined(DOM_PROMISE_DEPRECATED_REPORTING)\n\nI don't really understand what's going on here, since this is a duplicate of what's immediately below it.\n\n::: xpcom/base/CycleCollectedJSRuntime.h\n@@ +298,5 @@\n> +  // from xpcom to dom/promise, but they can really only have a single concrete\n> +  // type.\n> +  nsTArray<nsCOMPtr<nsISupports /* Promise */>> mUncaughtRejections;\n> +  nsTArray<nsCOMPtr<nsISupports /* Promise */ >> mConsumedRejections;\n> +  nsTArray<nsRefPtr<nsISupports /* UncaughtRejectionObserver */ >> mUncaughtRejectionObservers;\n\nWhy isn't this one nsCOMPtr too?", "author": "khuey@kylehuey.com", "id": 10028177, "time": "2015-03-13T20:21:37Z"}, {"text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #46)\n> I don't really understand what's going on here, since this is a duplicate of\n> what's immediately below it.\n\nAh, right, merge error. Fixed.\n\n> \n> ::: xpcom/base/CycleCollectedJSRuntime.h\n> @@ +298,5 @@\n> > +  // from xpcom to dom/promise, but they can really only have a single concrete\n> > +  // type.\n> > +  nsTArray<nsCOMPtr<nsISupports /* Promise */>> mUncaughtRejections;\n> > +  nsTArray<nsCOMPtr<nsISupports /* Promise */ >> mConsumedRejections;\n> > +  nsTArray<nsRefPtr<nsISupports /* UncaughtRejectionObserver */ >> mUncaughtRejectionObservers;\n> \n> Why isn't this one nsCOMPtr too?\n\nWell, I cannot QI to UncaughtRejectionObserver, I assume because the class has been generated from a \"callback interface\" by webidl, so making it a nsCOMPtr doesn't very useful. I can change that if you prefer.", "author": "dteller@mozilla.com", "id": 10076068, "time": "2015-03-25T15:21:27Z"}, {"text": "Created attachment 8583782\nMozReview Request: bz://1083361/Yoric\n\n/r/6033 - Bug 1083361 - Exposing a PromiseDebugging API to monitor uncaught DOM Promise;r=bz\n/r/6035 - Bug 1083361 - Handling Promise rejections that arrive during worker shutdown;r=khuey\n/r/6037 - Bug 1083361 - Applied feedback;r=khuey\n\nPull down these commits:\n\nhg pull review -r 583de7bcfb1693625ddf2b48e3392470393df44e", "author": "dteller@mozilla.com", "id": 10080803, "time": "2015-03-26T12:44:49Z"}, {"text": "Comment on attachment 8583782\nMozReview Request: bz://1083361/Yoric\n\n/r/6033 - Bug 1083361 - Exposing a PromiseDebugging API to monitor uncaught DOM Promise;r=bz\n/r/6035 - Bug 1083361 - Handling Promise rejections that arrive during worker shutdown;r=khuey\n/r/6037 - Bug 1083361 - Applied feedback;r=khuey\n\nPull down these commits:\n\nhg pull review -r 583de7bcfb1693625ddf2b48e3392470393df44e", "author": "dteller@mozilla.com", "id": 10080804, "time": "2015-03-26T12:45:14Z"}, {"text": "https://reviewboard.mozilla.org/r/6035/#review5289\n\n::: dom/promise/PromiseDebugging.h\n(Diff revision 1)\n> +}\n\nDoes this actually build on all platforms?  Forward declarations in anonymous namespaces didn't work a couple years ago.\n\n::: dom/promise/PromiseDebugging.cpp\n(Diff revision 1)\n> -  NS_IMETHOD Run()\n> +  static void FlushSync() {\n\nnit: \\n between functions\n\n::: dom/promise/PromiseDebugging.cpp\n(Diff revision 1)\n> +  NS_IMETHOD Run() {\n\nhere too\n\n::: dom/promise/PromiseDebugging.cpp\n(Diff revision 1)\n> +\n\nnit: extraneous \\n being added.\n\n::: xpcom/base/CycleCollectedJSRuntime.h\n(Diff revision 1)\n> +  nsTArray<nsRefPtr<nsISupports /* UncaughtRejectionObserver */ >> mUncaughtRejectionObservers;\n\nIt should be nsCOMPtr<nsISupports>, like the others.\n\n::: dom/promise/PromiseDebugging.cpp\n(Diff revision 1)\n> +\n\nnit: extraneous \\n\n\n::: dom/webidl/PromiseDebugging.webidl\n(Diff revision 1)\n> -  static void removeUncaughtRejectionObserver(UncaughtRejectionObserver o);\n> +  static boolean removeUncaughtRejectionObserver(UncaughtRejectionObserver o);\n\nIs the return value here actually being used?", "author": "khuey@kylehuey.com", "id": 10097236, "time": "2015-03-30T20:13:26Z"}, {"text": "https://reviewboard.mozilla.org/r/6035/#review5717\n\n> Is the return value here actually being used?\n\nYes, in tests.\n\n> Does this actually build on all platforms?  Forward declarations in anonymous namespaces didn't work a couple years ago.\n\nAh, you're right, this doesn't build on all platforms. I've moved the class out of the anonymous namespace.", "author": "dteller@mozilla.com", "id": 10141102, "time": "2015-04-10T12:46:09Z"}, {"text": "Created attachment 8591003\npromise.diff", "author": "dteller@mozilla.com", "id": 10142836, "time": "2015-04-10T19:13:12Z"}, {"text": "Created attachment 8591004\nMerged patch\n\nTry: https://treeherder.mozilla.org/#/jobs?repo=try&revision=cec42b4f4017", "author": "dteller@mozilla.com", "id": 10142843, "time": "2015-04-10T19:14:13Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/331d71cabe1e", "author": "cbook@mozilla.com", "id": 10152574, "time": "2015-04-14T12:11:43Z"}, {"text": "Awesome.  So now we need to switch the devtools UI to this new setup and then we can remove the GC-dependent old setup?  David, do you know whether there's a bug tracking that work?", "author": "bzbarsky@mit.edu", "id": 10153774, "time": "2015-04-14T16:29:09Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/331d71cabe1e", "author": "ryanvm@gmail.com", "id": 10155011, "time": "2015-04-14T20:14:27Z"}, {"text": "(weird, this needinfo doesn't show up in my dashboard)\n\nI do not have plans to work on the debugger side at the moment \u2013 I'm not familiar with that code, and I'm already working on several high-priority features/refactorings about:performance. Nick, could you handle this (or find someone to do it)?", "author": "dteller@mozilla.com", "id": 10174422, "time": "2015-04-20T09:25:04Z"}, {"text": "(In reply to David Rajchenbach-Teller [:Yoric] (use \"needinfo\") from comment #57)\n> (weird, this needinfo doesn't show up in my dashboard)\n> \n> I do not have plans to work on the debugger side at the moment \u2013 I'm not\n> familiar with that code, and I'm already working on several high-priority\n> features/refactorings about:performance. Nick, could you handle this (or\n> find someone to do it)?\n\nWhat is the scope of the devtools UI changes required here? Is this to show the \"x promise was rejected and uncaught\" message in the console, and then gray it out or strike it out or hide it if the promise rejection is later handled? Or is this pause on uncaught rejection in the debugger?", "author": "nfitzgerald@mozilla.com", "id": 10176369, "time": "2015-04-20T17:47:34Z"}, {"text": "Well, the scope is filing both, implementing the former to begin with :)", "author": "dteller@mozilla.com", "id": 10176688, "time": "2015-04-20T18:42:12Z"}], "cf_last_resolved": "2015-04-14T20:14:27Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-04-23T14:51:13Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1156467, 1156474, 939636, 989960, 1095267, 1156178, 1156180], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "DOM", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox40": "fixed", "target_milestone": "mozilla40", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "dteller@mozilla.com", "id": 181388, "name": "dteller@mozilla.com", "real_name": "David Teller [:Yoric] (please use \"needinfo\")"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "ajvincent@gmail.com", "id": 16665, "name": "ajvincent@gmail.com", "real_name": "Alex Vincent [:WeirdAl]"}, {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (no decent commit message means r-)"}, {"email": "cbook@mozilla.com", "id": 277293, "name": "cbook@mozilla.com", "real_name": "Carsten Book [:Tomcat]"}, {"email": "dteller@mozilla.com", "id": 181388, "name": "dteller@mozilla.com", "real_name": "David Teller [:Yoric] (please use \"needinfo\")"}, {"email": "fb+mozdev@quantumedia.de", "id": 413779, "name": "fb+mozdev@quantumedia.de", "real_name": "Florian Bender"}, {"email": "jryans@gmail.com", "id": 282978, "name": "jryans@gmail.com", "real_name": "J. Ryan Stinnett [:jryans] (use ni?)"}, {"email": "khuey@kylehuey.com", "id": 336670, "name": "khuey@kylehuey.com", "real_name": "Kyle Huey [:khuey] (Exited; not receiving bugmail, email if necessary)"}, {"email": "nfitzgerald@mozilla.com", "id": 417695, "name": "nfitzgerald@mozilla.com", "real_name": "Nick Fitzgerald [:fitzgen] [\u23f0PST; UTC-8]"}, {"email": "paolo.mozmail@amadzone.org", "id": 332229, "name": "paolo.mozmail@amadzone.org", "real_name": ":Paolo Amadini"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"status": "+", "name": "in-testsuite", "modification_date": "2015-04-14T20:14:27Z", "type_id": 37, "creation_date": "2015-04-14T20:14:27Z", "id": 1146449, "setter": "ryanvm@gmail.com"}], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8505639, "added": "feedback?(bzbarsky@mit.edu)"}, {"removed": "", "field_name": "cc", "added": "bzbarsky@mit.edu"}], "who": "dteller@mozilla.com", "when": "2014-10-15T18:37:09Z"}, {"changes": [{"removed": "General", "field_name": "component", "added": "DOM"}, {"removed": "Add-on SDK", "field_name": "product", "added": "Core"}], "who": "dteller@mozilla.com", "when": "2014-10-15T18:37:43Z"}, {"changes": [{"removed": "Expose DOM Promise which are left uncaught", "field_name": "summary", "added": "Expose an API to track DOM Promise which are left uncaught"}], "who": "dteller@mozilla.com", "when": "2014-10-15T18:37:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(bzbarsky@mit.edu)", "attachment_id": 8505639, "added": "feedback+"}], "who": "bzbarsky@mit.edu", "when": "2014-10-15T19:06:47Z"}, {"changes": [{"removed": "856878", "field_name": "blocks", "added": "939636"}], "who": "dteller@mozilla.com", "when": "2014-10-16T15:13:14Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8505639, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8506960, "added": "review?(bzbarsky@mit.edu)"}], "who": "dteller@mozilla.com", "when": "2014-10-17T14:36:28Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1083989"}], "who": "dteller@mozilla.com", "when": "2014-10-17T14:37:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "fb+mozdev@quantumedia.de"}], "who": "fb+mozdev@quantumedia.de", "when": "2014-10-23T19:56:08Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8506960, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2014-10-27T22:01:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nfitzgerald@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(nfitzgerald@mozilla.com)"}], "who": "dteller@mozilla.com", "when": "2014-10-30T10:55:07Z"}, {"changes": [{"removed": "needinfo?(nfitzgerald@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "nfitzgerald@mozilla.com", "when": "2014-10-30T19:40:24Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8506960, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8515234, "added": "review+"}], "who": "dteller@mozilla.com", "when": "2014-10-31T20:34:17Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(nfitzgerald@mozilla.com)"}], "who": "dteller@mozilla.com", "when": "2014-10-31T20:47:29Z"}, {"changes": [{"removed": "needinfo?(nfitzgerald@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "nfitzgerald@mozilla.com", "when": "2014-10-31T21:00:44Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8515286, "added": "review?(bzbarsky@mit.edu)"}], "who": "dteller@mozilla.com", "when": "2014-10-31T21:39:27Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8515234, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8515319, "added": "review+"}], "who": "dteller@mozilla.com", "when": "2014-10-31T22:32:21Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "dteller@mozilla.com", "when": "2014-11-05T16:18:04Z"}, {"changes": [{"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2014-11-05T17:14:47Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bzbarsky@mit.edu)", "attachment_id": 8515286, "added": "review+"}], "who": "bzbarsky@mit.edu", "when": "2014-11-05T22:11:08Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1095267"}], "who": "dteller@mozilla.com", "when": "2014-11-14T16:10:45Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "ajvincent@gmail.com"}], "who": "ajvincent@gmail.com", "when": "2014-11-15T16:43:09Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "989960"}], "who": "dteller@mozilla.com", "when": "2014-11-19T10:31:33Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8515286, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8515319, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8525505, "added": "review+"}], "who": "dteller@mozilla.com", "when": "2014-11-19T19:26:59Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "dteller@mozilla.com", "when": "2014-11-19T19:27:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jryans@gmail.com"}], "who": "jryans@gmail.com", "when": "2014-11-20T08:07:22Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}, {"removed": "", "field_name": "cc", "added": "cbook@mozilla.com"}], "who": "cbook@mozilla.com", "when": "2014-11-20T09:02:05Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8525505, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8525938, "added": "review+"}], "who": "dteller@mozilla.com", "when": "2014-11-20T10:12:44Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "dteller@mozilla.com", "when": "2014-11-25T08:52:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "khuey@kylehuey.com"}], "who": "khuey@kylehuey.com", "when": "2014-11-25T15:24:04Z"}, {"changes": [{"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": "needinfo?(khuey@kylehuey.com)"}], "who": "bzbarsky@mit.edu", "when": "2014-11-25T16:37:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8532655, "added": "feedback?(khuey@kylehuey.com)"}], "who": "dteller@mozilla.com", "when": "2014-12-05T21:44:56Z"}, {"changes": [{"removed": "needinfo?(khuey@kylehuey.com)", "field_name": "flagtypes.name", "added": ""}], "who": "khuey@kylehuey.com", "when": "2014-12-10T17:47:25Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(khuey@kylehuey.com)"}], "who": "dteller@mozilla.com", "when": "2014-12-16T16:14:41Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dteller@mozilla.com"}, {"removed": "needinfo?(khuey@kylehuey.com)", "field_name": "flagtypes.name", "added": "needinfo?(dteller@mozilla.com)"}], "who": "khuey@kylehuey.com", "when": "2014-12-16T20:12:05Z"}, {"changes": [{"removed": "needinfo?(dteller@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dteller@mozilla.com", "when": "2014-12-16T20:15:45Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(khuey@kylehuey.com)"}], "who": "khuey@kylehuey.com", "when": "2014-12-16T21:47:23Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1119360"}], "who": "khuey@kylehuey.com", "when": "2015-01-08T18:06:46Z"}, {"changes": [{"removed": "1119360", "field_name": "depends_on", "added": ""}, {"removed": "needinfo?(khuey@kylehuey.com)", "field_name": "flagtypes.name", "added": ""}], "who": "khuey@kylehuey.com", "when": "2015-01-08T18:07:07Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1119360"}], "who": "khuey@kylehuey.com", "when": "2015-01-08T18:07:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "paolo.mozmail@amadzone.org"}], "who": "paolo.mozmail@amadzone.org", "when": "2015-02-16T14:03:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(khuey@kylehuey.com)", "attachment_id": 8532655, "added": ""}], "who": "khuey@kylehuey.com", "when": "2015-02-27T18:55:13Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dteller@mozilla.com)"}], "who": "khuey@kylehuey.com", "when": "2015-03-10T23:09:59Z"}, {"changes": [{"removed": "needinfo?(dteller@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dteller@mozilla.com", "when": "2015-03-11T07:56:47Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8525938, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8576621, "added": "review+"}], "who": "dteller@mozilla.com", "when": "2015-03-12T12:00:32Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8532655, "added": "1"}], "who": "dteller@mozilla.com", "when": "2015-03-12T12:03:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8576622, "added": "review?(khuey@kylehuey.com)"}], "who": "dteller@mozilla.com", "when": "2015-03-12T13:22:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(khuey@kylehuey.com)", "attachment_id": 8576622, "added": "review-"}], "who": "khuey@kylehuey.com", "when": "2015-03-13T20:21:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8583782, "added": "review?(khuey@kylehuey.com)"}], "who": "dteller@mozilla.com", "when": "2015-03-26T12:45:13Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8576621, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8576622, "added": "1"}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8583782, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(khuey@kylehuey.com)", "attachment_id": 8583782, "added": ""}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8591003, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8591004, "added": "review+"}], "who": "dteller@mozilla.com", "when": "2015-04-10T19:14:13Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "dteller@mozilla.com", "when": "2015-04-13T12:36:23Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "cbook@mozilla.com", "when": "2015-04-14T12:11:43Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dteller@mozilla.com)"}], "who": "bzbarsky@mit.edu", "when": "2015-04-14T16:29:09Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla40"}, {"removed": "", "field_name": "flagtypes.name", "added": "in-testsuite+"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-04-14 13:14:27"}, {"removed": "---", "field_name": "cf_status_firefox40", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2015-04-14T20:14:27Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1156178"}], "who": "dteller@mozilla.com", "when": "2015-04-20T07:21:58Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1156180"}], "who": "dteller@mozilla.com", "when": "2015-04-20T07:22:46Z"}, {"changes": [{"removed": "needinfo?(dteller@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(nfitzgerald@mozilla.com)"}], "who": "dteller@mozilla.com", "when": "2015-04-20T09:25:04Z"}, {"changes": [{"removed": "needinfo?(nfitzgerald@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "nfitzgerald@mozilla.com", "when": "2015-04-20T17:47:34Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1156467"}], "who": "nfitzgerald@mozilla.com", "when": "2015-04-20T20:41:12Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1156474"}], "who": "nfitzgerald@mozilla.com", "when": "2015-04-20T21:07:04Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1157714"}], "who": "ryanvm@gmail.com", "when": "2015-04-23T14:51:13Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}