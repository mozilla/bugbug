{"cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Components", "creator": "mcastelluccio@mozilla.com", "cc": ["gmierz2@outlook.com"], "depends_on": [1431753], "creation_time": "2018-04-19T18:34:40Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "summary": "Upload per-test coverage reports as artifacts", "cf_last_resolved": "2018-04-26T08:28:32Z", "attachments": [{"creator": "mcastelluccio@mozilla.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "-", "name": "review", "modification_date": "2018-04-24T14:08:36Z", "type_id": 4, "creation_date": "2018-04-24T00:05:43Z", "id": 1747992, "setter": "gmierz2@outlook.com"}], "content_type": "text/plain", "id": 8970384}, {"creator": "mcastelluccio@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-25T13:54:04Z", "type_id": 4, "creation_date": "2018-04-24T23:41:24Z", "id": 1748564, "setter": "gmierz2@outlook.com"}], "content_type": "text/plain", "id": 8970757}], "assigned_to_detail": {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_crash_signature": "", "comments": [{"text": "With bug 1454629 we have the infrastructure to generate them, but we are not uploading them yet.", "author": "mcastelluccio@mozilla.com", "id": 13219357, "time": "2018-04-19T18:34:40Z"}, {"text": "Created attachment 8970384\nPatch\n\nFor now, the output format is the coveralls one. I think it will be faster to handle than jsdcov, as we don't need to do any translation (we already have the coveralls format as it's the output of grcov).\n\nI could add jsdcov support to grcov, but I think that the coveralls format will also make it easier to diff with the baseline (also because the coveralls format contains hit counts, the jsdcov format doesn't).\n\nThis will need some changes on ActiveData (namely, adding a new reader), but it should be pretty easy as it's just JSON.", "author": "mcastelluccio@mozilla.com", "id": 13228137, "time": "2018-04-24T00:05:43Z"}, {"text": "Comment on attachment 8970384\nPatch\n\nReview of attachment 8970384:\n-----------------------------------------------------------------\n\nGood work! Just some questions/comments that need to be addressed and changes made accordingly if needed.\n\n::: testing/mozharness/mozharness/mozilla/testing/codecoverage.py\n@@ +260,5 @@\n> +        with open(grcov_file, 'r') as f:\n> +            report = json.load(f)\n> +        os.remove(grcov_file)\n> +\n> +        # TODO: Diff this coverage report with the baseline one\n\nI think we should do the diffing in the final phase - during the post-action listener. Otherwise, we will have to enforce that the baseline test is always run first so that we can diff it with all the next tests. And we might also have different suites running in a single chunk that would require a specific baseline to be subtracted.\n\n@@ +265,5 @@\n> +\n> +        dest = os.path.join('per-test-coverage-reports', str(uuid.uuid4()) + '.json')\n> +\n> +        with open(dest, 'w') as f:\n> +            json.dump({'test': test, 'report': report}, f)\n\nIs it possible to add the flavor (suite/sub-suite) of the test to this JSON? At least as an intermediate data point before the diffing. I think it'll make it much easier to find the correct baseline's for each test when multiple suites are run in the same TC chunk.\n\n@@ +291,5 @@\n>  \n>          if not self.code_coverage_enabled:\n>              return\n>  \n>          if self.per_test_coverage:\n\nIn here is where I think we should diff the baseline's with the reports.\n\n::: testing/mozharness/scripts/desktop_unittest.py\n@@ +853,5 @@\n>                  # full coverage of the test and the baseline coverage and only get\n>                  # the coverage data specific to the test.\n>                  if self.per_test_coverage:\n>                      gcov_dir, jsvm_dir = self.set_coverage_env(env)\n>                      # TODO: Run basic startup/shutdown test to collect baseline coverage.\n\nIf we remove the baseline later in the post-action listener, we can remove this TODO as well. Same for 347-349 in web_platform_tests.py", "author": "gmierz2@outlook.com", "id": 13229561, "time": "2018-04-24T14:08:36Z"}, {"text": "Created attachment 8970757\nPatch", "author": "mcastelluccio@mozilla.com", "id": 13231358, "time": "2018-04-24T23:41:24Z"}, {"text": "With these changes test-coverage should now output some per-test JSONs, even though they are not diffed. The patch looks great to me, but can you test it out on try before we land it?", "author": "gmierz2@outlook.com", "id": 13232465, "time": "2018-04-25T13:53:49Z"}, {"text": "(In reply to Greg Mierzwinski [:sparky] from comment #4)\n> With these changes test-coverage should now output some per-test JSONs, even\n> though they are not diffed. The patch looks great to me, but can you test it\n> out on try before we land it?\n\nHere's the (green) try build: https://treeherder.mozilla.org/#/jobs?repo=try&revision=7994e6c880c28515fa989cf113d9859293d692e0.\nIt's only on Linux, but I wouldn't expect the Windows build to be different.", "author": "mcastelluccio@mozilla.com", "id": 13232676, "time": "2018-04-25T15:08:04Z"}, {"text": "This looks great to me! Two tests are run in that try push in test-coverage (TC) and two JSONs are uploaded in the artifact as well.", "author": "gmierz2@outlook.com", "id": 13232745, "time": "2018-04-25T15:25:37Z"}, {"text": "Landed with the wrong bug number...\n\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bf368c4e5c0a\n\nhttps://hg.mozilla.org/mozilla-central/rev/bf368c4e5c0a", "author": "mcastelluccio@mozilla.com", "id": 13234730, "time": "2018-04-26T08:28:32Z"}], "id": 1455400, "priority": "--", "mentors_detail": [], "comment_count": 8, "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox62": "---", "status": "RESOLVED", "product": "Testing", "cf_fx_iteration": "---", "blocks": [], "qa_contact": "", "see_also": [], "cf_status_firefox_esr52": "---", "component": "Code Coverage", "votes": 0, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "is_cc_accessible": true, "groups": [], "url": "", "creator_detail": {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "gmierz2@outlook.com", "id": 560562, "name": "gmierz2@outlook.com", "real_name": "Greg Mierzwinski [:sparky]"}], "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-04-26T08:28:32Z", "cf_status_firefox_esr60": "---", "assigned_to": "mcastelluccio@mozilla.com", "is_open": false, "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "history": [{"changes": [{"removed": "1454629", "field_name": "depends_on", "added": "1431753"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-19T18:39:25Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-20T12:13:24Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gmierz2@outlook.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970384, "added": "review?(gmierz2@outlook.com)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-24T00:05:43Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gmierz2@outlook.com)", "attachment_id": 8970384, "added": "review-"}], "who": "gmierz2@outlook.com", "when": "2018-04-24T14:08:36Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8970384, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8970757, "added": "review?(gmierz2@outlook.com)"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-24T23:41:24Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com)"}], "who": "gmierz2@outlook.com", "when": "2018-04-25T13:53:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gmierz2@outlook.com)", "attachment_id": 8970757, "added": "review+"}], "who": "gmierz2@outlook.com", "when": "2018-04-25T13:54:04Z"}, {"changes": [{"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-25T15:08:04Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-04-26 08:28:32"}], "who": "mcastelluccio@mozilla.com", "when": "2018-04-26T08:28:32Z"}]}