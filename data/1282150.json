{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bzbarsky@mit.edu", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-27T16:58:21Z", "type_id": 4, "creation_date": "2016-06-24T22:42:52Z", "id": 1413953, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8765068}, {"creator": "bzbarsky@mit.edu", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-27T16:59:35Z", "type_id": 4, "creation_date": "2016-06-24T22:43:03Z", "id": 1413954, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8765069}, {"creator": "bzbarsky@mit.edu", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-27T17:08:27Z", "type_id": 4, "creation_date": "2016-06-24T22:43:12Z", "id": 1413955, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8765070}, {"creator": "bzbarsky@mit.edu", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-27T17:10:22Z", "type_id": 4, "creation_date": "2016-06-24T22:43:19Z", "id": 1413956, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8765071}, {"creator": "bzbarsky@mit.edu", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-27T17:10:56Z", "type_id": 4, "creation_date": "2016-06-24T22:43:25Z", "id": 1413957, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8765072}, {"creator": "bzbarsky@mit.edu", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-06-27T17:11:25Z", "type_id": 4, "creation_date": "2016-06-24T22:43:43Z", "id": 1413958, "setter": "bobbyholley@gmail.com"}], "content_type": "text/plain", "id": 8765073}], "classification": "Components", "creator": "bzbarsky@mit.edu", "mentors_detail": [], "depends_on": [767938], "cf_has_str": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "Rename all our JSContext stuff to be nicer", "cf_last_resolved": "2016-07-08T10:12:24Z", "cf_status_firefox50": "fixed", "votes": 0, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 24, "comments": [{"text": "Or not, as the case may be.  Specifically, the plan is to add mozilla::dom::danger::GetJSContext() and mozilla::dom::GetJSRuntime(), both going via CycleCollectedJSRuntime::Get().  Then we replace our existing users of GetDefaultJSContextForThread with either the runtime (when used for rooting, if we can) or the danger thing in the few cases when it's really needed.  Then we see about some of the other bits, like RootingCxForThread and GetSafeJSContext.", "author": "bzbarsky@mit.edu", "id": 11501365, "time": "2016-06-24T19:48:47Z"}, {"text": "Created attachment 8765068\npart 1.  Add a mozilla::dom::danger::GetJSContext API", "author": "bzbarsky@mit.edu", "id": 11501687, "time": "2016-06-24T22:42:52Z"}, {"text": "Created attachment 8765069\npart 2.  Get rid of GetDefaultJSContextForThread", "author": "bzbarsky@mit.edu", "id": 11501688, "time": "2016-06-24T22:43:03Z"}, {"text": "Created attachment 8765070\npart 3.  Add a way to get the JSRuntime for the thread, and use it in various places for rooting", "author": "bzbarsky@mit.edu", "id": 11501689, "time": "2016-06-24T22:43:12Z"}, {"text": "Created attachment 8765071\npart 4.  Have just one way of getting the rooting JSContext, and call it nsContentUtils::RootingCx()", "author": "bzbarsky@mit.edu", "id": 11501690, "time": "2016-06-24T22:43:19Z"}, {"text": "Created attachment 8765072\npart 5.  Kill off all the unused GetJSContextForEventHandlers cruft", "author": "bzbarsky@mit.edu", "id": 11501691, "time": "2016-06-24T22:43:25Z"}, {"text": "Created attachment 8765073\npart 6.  Get rid of GetSafeJSContext", "author": "bzbarsky@mit.edu", "id": 11501692, "time": "2016-06-24T22:43:43Z"}, {"text": "bz, do you see any problems with converting APIs that take JSRuntime* to take JSContext* instead, and then to stop exposing JSRuntime to JSAPI?\n\nI'm asking because you're adding a \"danger\" namespace for GetJSContext, while GetJSRuntime is more readily available.", "author": "jdemooij@mozilla.com", "id": 11502238, "time": "2016-06-25T18:56:17Z"}, {"text": "(In reply to Jan de Mooij [:jandem] from comment #7)\n> bz, do you see any problems with converting APIs that take JSRuntime* to\n> take JSContext* instead, and then to stop exposing JSRuntime to JSAPI?\n> \n> I'm asking because you're adding a \"danger\" namespace for GetJSContext,\n> while GetJSRuntime is more readily available.\n\nThe point of the 'danger' namespace is that in reminds the caller that they should be getting the JSContext via the AutoJSAPI-derived RAII helpers. The historical confusion around \"which JSContext is the right one?\" ironically provided a good incentive for people to use the helpers, and in a single-cx world I'm worried we'll start to screw that up.\n\nHistorically, things that took JSRuntimes were generally less dependent on the particular state of the stack (setting runtime callbacks and whatnot), which is why it feels less important to use proper RAII hygiene in those cases. If we're converting APIs to take a JSRuntime, then we should just put GetJSRuntime in the danger namespace as well.", "author": "bobbyholley@gmail.com", "id": 11504982, "time": "2016-06-27T16:50:44Z"}, {"text": "Comment on attachment 8765070\npart 3.  Add a way to get the JSRuntime for the thread, and use it in various places for rooting\n\nReview of attachment 8765070:\n-----------------------------------------------------------------\n\n::: dom/base/ScriptSettings.cpp\n@@ +296,5 @@\n> +JSRuntime*\n> +GetJSRuntime()\n> +{\n> +  return CycleCollectedJSRuntime::Get()->Runtime();\n> +} \n\nWhitespace error.", "author": "bobbyholley@gmail.com", "id": 11505067, "time": "2016-06-27T17:08:27Z"}, {"text": "Comment on attachment 8765071\npart 4.  Have just one way of getting the rooting JSContext, and call it nsContentUtils::RootingCx()\n\nReview of attachment 8765071:\n-----------------------------------------------------------------\n\nHm, do we need this at all anymore? What APIs do we have that actually still require a cx to root rather than an rt? I thought those had gone away?\n\nr=me I guess, but please file a followup for eliminating this baggage.", "author": "bobbyholley@gmail.com", "id": 11505073, "time": "2016-06-27T17:10:22Z"}, {"text": "Comment on attachment 8765072\npart 5.  Kill off all the unused GetJSContextForEventHandlers cruft\n\nReview of attachment 8765072:\n-----------------------------------------------------------------\n\n\\o/", "author": "bobbyholley@gmail.com", "id": 11505076, "time": "2016-06-27T17:10:56Z"}, {"text": "Comment on attachment 8765073\npart 6.  Get rid of GetSafeJSContext\n\nReview of attachment 8765073:\n-----------------------------------------------------------------\n\n\\o/", "author": "bobbyholley@gmail.com", "id": 11505078, "time": "2016-06-27T17:11:25Z"}, {"text": "(In reply to Bobby Holley (busy) from comment #8)\n> If we're converting APIs to take a JSRuntime, then we should just put\n> GetJSRuntime in the danger namespace as well.\n\nThe other way around - all/most APIs will take JSContext instead of JSRuntime, but I see your point. We'll have to use danger::JSContext more probably. I think a lot of these JSRuntime* APIs are initialization stuff, so there probably won't be that many places that have to change (famous last words).", "author": "jdemooij@mozilla.com", "id": 11505171, "time": "2016-06-27T17:38:52Z"}, {"text": "With any sort of luck init stuff will have just created the context/runtime and won't need to danger::JSContext at all.\n\n> Whitespace error.\n\nFixed.\n\n> What APIs do we have that actually still require a cx to root\n\nAnything that inherits from CustomAutoRooter, for a start.  But also js::Add/RemoveRawValueRoot.  Basically anything I touched in part 4 requires a cx to root; I switched the things that didn't to use the runtime in part 3.\n\nI filed bug 1285377 on at least the CustomAutoRooter bits.", "author": "bzbarsky@mit.edu", "id": 11532422, "time": "2016-07-07T22:00:37Z"}, {"text": "(In reply to Boris Zbarsky [:bz] from comment #14)\n> Basically anything I touched in part 4 requires\n> a cx to root; I switched the things that didn't to use the runtime in part 3.\n\nThis week I've been actively working on hiding JSRuntime from the embedding (bug 1283855 for instance), so we only expose JSContext to the API... It seems part 3 is going to make that harder?", "author": "jdemooij@mozilla.com", "id": 11532472, "time": "2016-07-07T22:18:09Z"}, {"text": "> It seems part 3 is going to make that harder?\n\nYes.  I could convert all those places to use RootingCx() instead, I guess.  It wasn't clear to me which direction the JS team was going with all this stuff and I had been lead to believe that JSRuntime was the new hotness for rooting.", "author": "bzbarsky@mit.edu", "id": 11532490, "time": "2016-07-07T22:25:03Z"}, {"text": "So, the basic issue here is that we generally want to have an AutoJSAPI-ish thing on the stack when we call into JSAPI. The easiest way to ensure this is to have these APIs take a JSContext the way they do now, and then make AutoJSAPI the obvious way to get a JSContext. \n\nBut there are also APIs (specifically rooting ones) that we often need to use outside the scope of an AutoJSAPI, and which don't require any of the error reporting state or other machinery that AutoJSAPI sets up. That's why it's nice to have a distinct token that we can pass to the rooting constructors - one that is easily accessible, and that people aren't tempted to use when invoking JS_GetProperty.\n\nThere are various ways to solve this I'm sure. If the JS team wants to remove JSRuntime from the public facing APIs, maybe we can have all the rooting APIs take some other opaque type (that is secretly just a JSContext*), and have JSContext coerce to that type?", "author": "bobbyholley@gmail.com", "id": 11532509, "time": "2016-07-07T22:30:45Z"}, {"text": "OK, looks like nothing in bug 1283855 removes the Rooted(JSRuntime*) bits so I'm ok using them for now.  We can remove them later as needed...", "author": "bzbarsky@mit.edu", "id": 11532670, "time": "2016-07-08T00:05:43Z"}, {"text": "Pushed by bzbarsky@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/e21358504aa9\npart 1.  Add a mozilla::dom::danger::GetJSContext API.  r=bholley\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/57628a2c33d6\npart 2.  Get rid of GetDefaultJSContextForThread.  r=bholley\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9870763b6a4c\npart 3.  Add a way to get the JSRuntime for the thread, and use it in various places for rooting.  r=bholley\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/958a6ec2d7c0\npart 4.  Have just one way of getting the rooting JSContext, and call it nsContentUtils::RootingCx().  r=bholley\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/a54aca4aa8c9\npart 5.  Kill off all the unused GetJSContextForEventHandlers cruft.  r=bholley\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c8029c072776\npart 6.  Get rid of GetSafeJSContext.  r=bholley", "author": "pulsebot@bots.tld", "id": 11532681, "time": "2016-07-08T00:13:02Z"}, {"text": "This added a new rooting hazard from the looks of it:\n\nFunction '_ZN7mozilla3dom18SimpleGlobalObject6CreateENS1_10GlobalTypeEN2JS6HandleINS3_5ValueEEE$JSObject* mozilla::dom::SimpleGlobalObject::Create(int32, class JS::Handle<JS::Value>)' has unrooted '<returnvalue>' of type 'JSObject*' live across GC call '_ZN7mozilla3dom9AutoJSAPID1Ev$void mozilla::dom::AutoJSAPI::~AutoJSAPI()' at dom/bindings/SimpleGlobalObject.cpp:149\n    SimpleGlobalObject.cpp:149: Assign(86,87, return := __temp_32**)\n    SimpleGlobalObject.cpp:149: Call(87,88, globalObject.~SimpleGlobalObject>())\n    SimpleGlobalObject.cpp:149: Call(88,89, ac.~JSAutoCompartment())\n    SimpleGlobalObject.cpp:149: Call(89,90, global.~Rooted())\n    SimpleGlobalObject.cpp:149: Call(90,91, jsapi.~AutoJSAPI()) [[GC call]]\n    SimpleGlobalObject.cpp:150:  [[end of function]]\nGC Function: _ZN7mozilla3dom9AutoJSAPID1Ev$void mozilla::dom::AutoJSAPI::~AutoJSAPI()\n    void mozilla::dom::AutoJSAPI::~AutoJSAPI(int32)\n    void mozilla::dom::AutoJSAPI::ReportException()\n    JSObject* xpc::FindExceptionStackForConsoleReport(nsPIDOMWindowInner*, class JS::Handle<JS::Value>)\n    FieldCall: nsIStackFrame.GetNativeSavedFrame\n\nInbound is closed for this at the moment, so please fix or backout ASAP.", "author": "ryanvm@gmail.com", "id": 11532942, "time": "2016-07-08T02:08:12Z"}, {"text": "Grrr.  Stupid false positive.  Fixing.", "author": "bzbarsky@mit.edu", "id": 11532947, "time": "2016-07-08T02:18:01Z"}, {"text": "Pushed by bzbarsky@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9acdf39431fc\nfollowup: placate the rooting analysis in SimpleGlobalObject::Create so we can reopen the CLOSED TREE", "author": "pulsebot@bots.tld", "id": 11532954, "time": "2016-07-08T02:24:56Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/e21358504aa9\nhttps://hg.mozilla.org/mozilla-central/rev/57628a2c33d6\nhttps://hg.mozilla.org/mozilla-central/rev/9870763b6a4c\nhttps://hg.mozilla.org/mozilla-central/rev/958a6ec2d7c0\nhttps://hg.mozilla.org/mozilla-central/rev/a54aca4aa8c9\nhttps://hg.mozilla.org/mozilla-central/rev/c8029c072776\nhttps://hg.mozilla.org/mozilla-central/rev/9acdf39431fc", "author": "cbook@mozilla.com", "id": 11533590, "time": "2016-07-08T10:12:24Z"}], "id": 1282150, "priority": "--", "cc": ["amarchesini@mozilla.com", "bobbyholley@gmail.com", "bruant.d@gmail.com", "bugs@pettay.fi", "continuation@gmail.com", "jdemooij@mozilla.com", "khuey@kylehuey.com", "Ms2ger@gmail.com", "peterv@propagandism.org"], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_firefox59": "---", "last_change_time": "2016-07-08T10:12:24Z", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1281886], "qa_contact": "", "creation_time": "2016-06-24T19:48:47Z", "cf_status_firefox_esr52": "---", "component": "DOM", "assigned_to_detail": {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (no decent commit message means r-)"}, "cf_status_firefox49": "---", "cf_status_firefox48": "---", "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla50", "is_cc_accessible": true, "cf_rank": null, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "bzbarsky@mit.edu", "id": 20209, "name": "bzbarsky@mit.edu", "real_name": "Boris Zbarsky [:bz] (no decent commit message means r-)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "amarchesini@mozilla.com", "id": 446257, "name": "amarchesini@mozilla.com", "real_name": "Andrea Marchesini [:baku]"}, {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (:bholley)"}, {"email": "bruant.d@gmail.com", "id": 365126, "name": "bruant.d@gmail.com", "real_name": "David Bruant"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, {"email": "jdemooij@mozilla.com", "id": 375297, "name": "jdemooij@mozilla.com", "real_name": "Jan de Mooij [:jandem] (PTO Mar 8)"}, {"email": "khuey@kylehuey.com", "id": 336670, "name": "khuey@kylehuey.com", "real_name": "Kyle Huey [:khuey] (Exited; not receiving bugmail, email if necessary)"}, {"email": "Ms2ger@gmail.com", "id": 302720, "name": "Ms2ger@gmail.com", "real_name": ":Ms2ger (\u231a UTC+1/+2)"}, {"email": "peterv@propagandism.org", "id": 24295, "name": "peterv@propagandism.org", "real_name": "Peter Van der Beken [:peterv]"}], "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "assigned_to": "bzbarsky@mit.edu", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "amarchesini@mozilla.com"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T19:48:59Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1281886"}, {"removed": "", "field_name": "depends_on", "added": "767938"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:41:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8765068, "added": "review?(bobbyholley@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:42:52Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bzbarsky@mit.edu"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:42:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8765069, "added": "review?(bobbyholley@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:43:03Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8765070, "added": "review?(bobbyholley@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:43:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8765071, "added": "review?(bobbyholley@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:43:19Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8765072, "added": "review?(bobbyholley@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:43:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8765073, "added": "review?(bobbyholley@gmail.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-06-24T22:43:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bruant.d@gmail.com"}], "who": "bruant.d@gmail.com", "when": "2016-06-25T11:48:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jdemooij@mozilla.com"}], "who": "jdemooij@mozilla.com", "when": "2016-06-25T18:56:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "Ms2ger@gmail.com"}], "who": "Ms2ger@gmail.com", "when": "2016-06-27T09:13:52Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "continuation@gmail.com"}], "who": "continuation@gmail.com", "when": "2016-06-27T12:29:13Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8765068, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2016-06-27T16:58:21Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8765069, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2016-06-27T16:59:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8765070, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2016-06-27T17:08:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8765071, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2016-06-27T17:10:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8765072, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2016-06-27T17:10:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bobbyholley@gmail.com)", "attachment_id": 8765073, "added": "review+"}], "who": "bobbyholley@gmail.com", "when": "2016-06-27T17:11:25Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jdemooij@mozilla.com)"}], "who": "bzbarsky@mit.edu", "when": "2016-07-07T22:27:16Z"}, {"changes": [{"removed": "needinfo?(jdemooij@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2016-07-08T00:05:43Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(bzbarsky@mit.edu)"}], "who": "ryanvm@gmail.com", "when": "2016-07-08T02:08:12Z"}, {"changes": [{"removed": "needinfo?(bzbarsky@mit.edu)", "field_name": "flagtypes.name", "added": ""}], "who": "bzbarsky@mit.edu", "when": "2016-07-08T02:25:09Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla50"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-07-08 10:12:24"}, {"removed": "affected", "field_name": "cf_status_firefox50", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-07-08T10:12:24Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}