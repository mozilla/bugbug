{"cf_tracking_thunderbird_esr52": "---", "status": "VERIFIED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "jdemooij@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-15T15:53:02Z", "type_id": 4, "creation_date": "2016-01-15T15:48:27Z", "id": 1324527, "setter": "jcoppeard@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-02-11T16:44:04Z", "type_id": 720, "creation_date": "2016-02-11T12:16:06Z", "id": 1340827, "setter": "sledru@mozilla.com"}, {"status": "+", "name": "approval-mozilla-beta", "modification_date": "2016-02-11T16:44:04Z", "type_id": 721, "creation_date": "2016-02-11T12:16:06Z", "id": 1340828, "setter": "sledru@mozilla.com"}, {"status": "+", "name": "sec-approval", "modification_date": "2016-01-19T18:20:26Z", "type_id": 799, "creation_date": "2016-01-18T17:56:48Z", "id": 1325527, "setter": "abillings@mozilla.com"}], "content_type": "text/plain", "id": 8708426}, {"creator": "jdemooij@mozilla.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-15T16:02:50Z", "type_id": 4, "creation_date": "2016-01-15T15:51:56Z", "id": 1324532, "setter": "jcoppeard@mozilla.com"}], "content_type": "text/plain", "id": 8708430}], "classification": "Components", "creator": "choller@mozilla.com", "cc": ["abillings@mozilla.com", "cbook@mozilla.com", "choller@mozilla.com", "continuation@gmail.com", "efaustbmo@gmail.com", "fuzzing@mozilla.com", "jcoppeard@mozilla.com", "jdemooij@mozilla.com", "jruderman@gmail.com", "kwierso@gmail.com", "mark@wolfbeast.com", "nfitzgerald@mozilla.com", "nth10sd@gmail.com", "sledru@mozilla.com", "terrence.d.cole@gmail.com"], "depends_on": [], "creation_time": "2016-01-12T13:55:35Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "x86", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["crash", "csectype-uaf", "regression", "sec-critical", "testcase"], "summary": "Crash [@ ObjectType] or Crash [@ CanInlineSetPropTypeCheck] with use-after-free", "id": 1238935, "assigned_to_detail": {"email": "jdemooij@mozilla.com", "id": 375297, "name": "jdemooij@mozilla.com", "real_name": "Jan de Mooij [:jandem] (PTO Mar 8)"}, "severity": "critical", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "jdemooij@mozilla.com", "comment_count": 24, "comments": [{"text": "The following testcase crashes on mozilla-central revision 6020a4cb41a7 (build with --enable-optimize --enable-posix-nspr-emulation --enable-valgrind --enable-gczeal --target=i686-pc-linux-gnu --disable-tests --disable-debug, run with --fuzzing-safe --no-threads --disable-oom-functions --baseline-eager --ion-eager):\n\nsetJitCompilerOption(\"ion.warmup.trigger\", 20)\nNative = function(k) {\n    d = k.initialize;\n    j = function(n, l, o) n.prototype[l] = o;\n    d.implement = function(m) {\n      for (n in m) \n        j(this, n, m[n]);\n    }\n};\nNative({ initialize: Function });\nfunction $mixin(e) {\n    for (d = 1;;) {\n        var b = arguments[d];\n        for (c in b) \n          e[String];\n        e[c] = $unlink();\n    }\n}\nfunction $type(a) {\n    return typeof a;\n}\nfunction $unlink() {\n    if ($type(c) == \"object\")\n      b = {};\n    return b;\n}\nFunction.implement({\n    extend(a) {\n        for (var b in a)\n          this[b] = a[b];\n        return this;\n    }\n})\nfunction Class(b) {\n    a = function() {\n        Object.reset(this);\n    }.extend(this);\n    a.implement(b);\n    return a;\n}\nObject.reset = function(a, c) {\n    if (c == null)\n      for (e in a) \n        Object.reset(a, e);\n    switch ($type([])) {\n        case \"object\":\n            d = function() {};\n            d.prototype = a[c];\n            var b = new d;\n            a[c] = b;\n    }\n}\nnew Native({ initialize: Class });\nClass.implement({\n    implement(a, d) {\n        if ($type(a) == \"object\")\n            for (e in a) \n              this.implement(e, a[e]);\n        f = Class.Mutators[a];\n        if (f)\n          f.call(this, d);\n        c = this.prototype;\n        switch ($type(d)) {\n            case \"object\":\n                var b = c[a];\n                if ($type(b) == \"object\")\n                  $mixin(b, d);\n                c[a] = $unlink();\n        }\n    }\n})\nClass.Mutators = {\n    Extends(a) {\n      this.prototype = new a;\n    }\n}\nnew Class({\n    Extends: new Class({ options: {} }),\n    options: { postVar : \"\" }\n})\n\n\n\nBacktrace:\n\nProgram received signal SIGSEGV, Segmentation fault.\nObjectType (obj=0xf66003b0) at js/src/vm/TypeInference-inl.h:146\n#0  ObjectType (obj=0xf66003b0) at js/src/vm/TypeInference-inl.h:146\n#1  GetValueType (val=...) at js/src/vm/TypeInference-inl.h:171\n#2  CanInlineSetPropTypeCheck (obj=obj@entry=0xf654c310, id=..., checkTypeset=checkTypeset@entry=0xffffa980, val=...) at js/src/jit/IonCaches.cpp:3179\n#3  0x08225e9f in IsPropertySetInlineable (checkTypeset=0xffffa980, needsTypeBarrier=true, pshape=..., id=..., obj=0xf654c310, val=...) at js/src/jit/IonCaches.cpp:3226\n#4  CanAttachNativeSetProp (checkTypeset=0xffffa980, shape=..., holder=..., needsTypeBarrier=true, id=..., obj=..., cx=0xf7a72040, val=...) at js/src/jit/IonCaches.cpp:3308\n#5  js::jit::SetPropertyIC::tryAttachNative (this=this@entry=0xf7a9c8c0, cx=cx@entry=0xf7a72040, outerScript=outerScript@entry=..., ion=ion@entry=0xf7a9c800, obj=obj@entry=..., id=id@entry=..., emitted=emitted@entry=0xffffaa70, tryNativeAddSlot=tryNativeAddSlot@entry=0xffffaa80) at js/src/jit/IonCaches.cpp:3526\n#6  0x0822ca0a in js::jit::SetPropertyIC::tryAttachStub (this=this@entry=0xf7a9c8c0, cx=cx@entry=0xf7a72040, outerScript=outerScript@entry=..., ion=ion@entry=0xf7a9c800, obj=obj@entry=..., idval=idval@entry=..., value=value@entry=..., id=id@entry=..., emitted=emitted@entry=0xffffaa70, tryNativeAddSlot=tryNativeAddSlot@entry=0xffffaa80) at js/src/jit/IonCaches.cpp:3594\n#7  0x0822cca3 in js::jit::SetPropertyIC::update (cx=0xf7a72040, outerScript=..., cacheIndex=0, obj=..., idval=..., value=...) at js/src/jit/IonCaches.cpp:3691\n#8  0xf7fcb0f5 in ?? ()\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\neax\t0x2b2b2b2b\t724249387\nebx\t0x947c3dc\t155698140\necx\t0xf65495e0\t-162228768\nedx\t0xf64aabd0\t-162878512\nesi\t0xf64aabf0\t-162878480\nedi\t0xf654c310\t-162217200\nebp\t0xf6549000\t4132737024\nesp\t0xffffa920\t4294945056\neip\t0x821222d <CanInlineSetPropTypeCheck(JSObject*, jsid, bool*)+589>\n=> 0x821222d <CanInlineSetPropTypeCheck(JSObject*, jsid, bool*)+589>:\ttestb  $0x2,0xc(%eax)\n   0x8212231 <CanInlineSetPropTypeCheck(JSObject*, jsid, bool*)+593>:\tmov    %eax,0xc(%esp)\n\n\nThe testcase crashes with pattern 0x2b2b2b2b indicating a use-after-free. Marking sec-critical until shown otherwise.", "author": "choller@mozilla.com", "id": 11068207, "time": "2016-01-12T13:55:35Z"}, {"text": "Jon, this looks like some kind of use-after-sweep. Could you take a look at this? Thanks.", "author": "continuation@gmail.com", "id": 11073288, "time": "2016-01-13T18:16:42Z"}, {"text": "tracking since this is sec-critical.  If this affects other versions please mark them affected.", "author": "lhenry@mozilla.com", "id": 11073293, "time": "2016-01-13T18:18:17Z"}, {"text": "We're ending up with a nursery object pointer in SetPropertyIC::value_.  This is a ConstantOrRegister which contains an unbarriered Value.  I guess this is never meant to contain nursery pointers but I'm not sure how this works in the JIT.  \n\nThere's a comment in LIRGenerator::visitPostWriteBarrier that says constant nursery objects are lowered to a register, but that doesn't seem to help in this case.  LIRGenerator::visitSetPropertyCache ends up creating a constant LAllocation for this value by calling LIRGeneratorShared::useBoxOrTypedOrConstant.\n\njandem do you know how this is supposed to work?", "author": "jcoppeard@mozilla.com", "id": 11079095, "time": "2016-01-15T10:13:09Z"}, {"text": "(In reply to Jon Coppeard (:jonco) from comment #3)\n> We're ending up with a nursery object pointer in SetPropertyIC::value_. \n> This is a ConstantOrRegister which contains an unbarriered Value.  I guess\n> this is never meant to contain nursery pointers but I'm not sure how this\n> works in the JIT.  \n\nUgh, good catch. I was wondering why we didn't find this sooner, but it takes some effort to get a nursery JSObject pointer in Ion.\n\nI'll write a patch. Long shot but maybe this will fix some of those crashes on Treeherder.", "author": "jdemooij@mozilla.com", "id": 11079359, "time": "2016-01-15T11:27:54Z"}, {"text": "Created attachment 8708426\nPart 1 - Don't pass nursery pointers to SetPropertyIC\n\nThis ensures we pass nursery pointers in registers, so we don't store these pointers in SetPropertyIC.", "author": "jdemooij@mozilla.com", "id": 11080094, "time": "2016-01-15T15:48:27Z"}, {"text": "Created attachment 8708430\nPart 2 - Add assert and comments\n\nThis adds an assert to check we don't pass nursery pointers to LIR instructions for ICs. The assert fails without the previous patch.", "author": "jdemooij@mozilla.com", "id": 11080111, "time": "2016-01-15T15:51:56Z"}, {"text": "Comment on attachment 8708426\nPart 1 - Don't pass nursery pointers to SetPropertyIC\n\nReview of attachment 8708426:\n-----------------------------------------------------------------\n\nGreat, thanks for taking this!", "author": "jcoppeard@mozilla.com", "id": 11080115, "time": "2016-01-15T15:53:02Z"}, {"text": "Comment on attachment 8708426\nPart 1 - Don't pass nursery pointers to SetPropertyIC\n\n[Security approval request comment]\n* How easily could an exploit be constructed based on the patch?\nNot easily. It's pretty hard to get a nursery pointer baked into Ion code and then make it crash here.\n\n* Do comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?\nNo.\n\n* Which older supported branches are affected by this flaw?\nFirefox 41+.\n\n* If not all supported branches, which bug introduced the flaw?\nBug 1162986.\n\n* Do you have backports for the affected branches? If not, how different, hard to create, and risky will they be?\nShould be trivial.\n\n* How likely is this patch to cause regressions; how much testing does it need?\nUnlikely.", "author": "jdemooij@mozilla.com", "id": 11085441, "time": "2016-01-18T17:56:48Z"}, {"text": "It's possible this will fix some intermittent GC-related crashes like bug 1236316 and bug 1239554. The logs indicate we're accessing swept nursery memory (0x2b2b2b2b) there as well.", "author": "jdemooij@mozilla.com", "id": 11085452, "time": "2016-01-18T18:03:59Z"}, {"text": "Tracking because it is a sec critical.\nToo late for 44 but happy to take a patch for 45.", "author": "sledru@mozilla.com", "id": 11086824, "time": "2016-01-19T11:02:13Z"}, {"text": "(In reply to Jan de Mooij [:jandem] from comment #9)\n> It's possible this will fix some intermittent GC-related crashes like bug\n> 1236316 and bug 1239554. The logs indicate we're accessing swept nursery\n> memory (0x2b2b2b2b) there as well.\n\nNevermind, these crashes are entirely unrelated; fixing them in bug 1236316.", "author": "jdemooij@mozilla.com", "id": 11086936, "time": "2016-01-19T12:21:09Z"}, {"text": "Sec-approval+ for checkin on Feb 9 or later. We can't take this now without exposing ourselves.", "author": "abillings@mozilla.com", "id": 11088287, "time": "2016-01-19T18:20:14Z"}, {"text": "JSBugMon: Bisection requested, result:\n=== Treeherder Build Bisection Results by autoBisect ===\n\nThe \"good\" changeset has the timestamp \"20151026030436\" and the hash \"51036998fbc8f650a2e8d6800b53ed58ab7887ad\".\nThe \"bad\" changeset has the timestamp \"20151026031135\" and the hash \"55a2293db8217d785808f1aeffde63f55cc11956\".\n\nLikely regression window: https://hg.mozilla.org/integration/mozilla-inbound/pushloghtml?fromchange=51036998fbc8f650a2e8d6800b53ed58ab7887ad&tochange=55a2293db8217d785808f1aeffde63f55cc11956", "author": "fuzzing@mozilla.com", "id": 11100016, "time": "2016-01-22T18:53:14Z"}, {"text": "Jan, is bug 1214126 a likely regressor?", "author": "nth10sd@gmail.com", "id": 11100058, "time": "2016-01-22T18:59:46Z"}, {"text": "(In reply to Gary Kwong [:gkw] [:nth10sd] from comment #14)\n> Jan, is bug 1214126 a likely regressor?\n\nLikely for this particular testcase, but the underlying bug is older. Goes back to bug 1162986 I think.", "author": "jdemooij@mozilla.com", "id": 11108491, "time": "2016-01-26T14:30:32Z"}, {"text": "Jan, we will need uplift requests here too, thanks!", "author": "sledru@mozilla.com", "id": 11153473, "time": "2016-02-10T12:10:36Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/b6613e975a08", "author": "cbook@mozilla.com", "id": 11154133, "time": "2016-02-10T16:01:49Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/b6613e975a08", "author": "cbook@mozilla.com", "id": 11157041, "time": "2016-02-11T11:13:15Z"}, {"text": "JSBugMon: This bug has been automatically verified fixed.", "author": "fuzzing@mozilla.com", "id": 11157151, "time": "2016-02-11T12:07:10Z"}, {"text": "Comment on attachment 8708426\nPart 1 - Don't pass nursery pointers to SetPropertyIC\n\nApproval Request Comment\n[Feature/regressing bug #]: Bug 1162986.\n[User impact if declined]: Crashes, security bugs.\n[Describe test coverage new/current, TreeHerder]: We have many tests exercising this code path.\n[Risks and why]: Low risk; just disables a small optimization if we see a nursery-allocated object (which is uncommon).\n[String/UUID change made/needed]: None.", "author": "jdemooij@mozilla.com", "id": 11157159, "time": "2016-02-11T12:16:06Z"}, {"text": "Comment on attachment 8708426\nPart 1 - Don't pass nursery pointers to SetPropertyIC\n\nFix a sec critical issue, taking it.\nShould be in 45 beta 5.", "author": "sledru@mozilla.com", "id": 11158007, "time": "2016-02-11T16:44:04Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/06d13ff7785d", "author": "kwierso@gmail.com", "id": 11158381, "time": "2016-02-11T18:01:10Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-beta/rev/c7b4a20b6294", "author": "kwierso@gmail.com", "id": 11158399, "time": "2016-02-11T18:04:07Z"}], "cf_last_resolved": "2016-02-11T11:13:15Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "[@ ObjectType][@ CanInlineSetPropTypeCheck]", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-12-01T21:31:04Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [676763, 1162986], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1239554"], "cf_fx_iteration": "---", "component": "JavaScript Engine", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla47", "is_cc_accessible": true, "cf_status_firefox46": "fixed", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, "whiteboard": "[jsbugmon:update][adv-main45+]", "mentors": [], "cc_detail": [{"email": "abillings@mozilla.com", "id": 280903, "name": "abillings@mozilla.com", "real_name": "Al Billings [:abillings]"}, {"email": "cbook@mozilla.com", "id": 277293, "name": "cbook@mozilla.com", "real_name": "Carsten Book [:Tomcat]"}, {"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, {"email": "efaustbmo@gmail.com", "id": 442736, "name": "efaustbmo@gmail.com", "real_name": "Eric Faust [:efaust]"}, {"email": "fuzzing@mozilla.com", "id": 469204, "name": "fuzzing@mozilla.com", "real_name": "Fuzzing Team"}, {"email": "jcoppeard@mozilla.com", "id": 443194, "name": "jcoppeard@mozilla.com", "real_name": "Jon Coppeard (:jonco) (PTO until 13th March)"}, {"email": "jdemooij@mozilla.com", "id": 375297, "name": "jdemooij@mozilla.com", "real_name": "Jan de Mooij [:jandem] (PTO Mar 8)"}, {"email": "jruderman@gmail.com", "id": 11608, "name": "jruderman@gmail.com", "real_name": "Jesse Ruderman"}, {"email": "kwierso@gmail.com", "id": 308534, "name": "kwierso@gmail.com", "real_name": "Wes Kocher (:KWierso)"}, {"email": "mark@wolfbeast.com", "id": 364942, "name": "mark@wolfbeast.com", "real_name": "Mark Straver"}, {"email": "nfitzgerald@mozilla.com", "id": 417695, "name": "nfitzgerald@mozilla.com", "real_name": "Nick Fitzgerald [:fitzgen] [\u23f0PST; UTC-8]"}, {"email": "nth10sd@gmail.com", "id": 132034, "name": "nth10sd@gmail.com", "real_name": "Gary Kwong [:gkw] [:nth10sd]"}, {"email": "sledru@mozilla.com", "id": 495955, "name": "sledru@mozilla.com", "real_name": "Sylvestre Ledru [:sylvestre]"}, {"email": "terrence.d.cole@gmail.com", "id": 231770, "name": "terrence.d.cole@gmail.com", "real_name": "Terrence Cole [:terrence]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [{"status": "?", "name": "in-testsuite", "modification_date": "2016-01-18T17:59:05Z", "type_id": 37, "creation_date": "2016-01-18T17:59:05Z", "id": 1325529, "setter": "ryanvm@gmail.com"}], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "jcoppeard@mozilla.com"}], "who": "jcoppeard@mozilla.com", "when": "2016-01-13T12:01:07Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "continuation@gmail.com, terrence@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jcoppeard@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2016-01-13T18:16:42Z"}, {"changes": [{"removed": "---", "field_name": "cf_tracking_firefox46", "added": "+"}], "who": "lhenry@mozilla.com", "when": "2016-01-13T18:17:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nfitzgerald@mozilla.com"}, {"removed": "needinfo?(jcoppeard@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jcoppeard@mozilla.com", "when": "2016-01-14T17:48:22Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1239554"}], "who": "nfitzgerald@mozilla.com", "when": "2016-01-14T17:50:14Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jdemooij@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jdemooij@mozilla.com)"}], "who": "jcoppeard@mozilla.com", "when": "2016-01-15T10:13:09Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "jdemooij@mozilla.com"}, {"removed": "needinfo?(jdemooij@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8708426, "added": "review?(jcoppeard@mozilla.com)"}], "who": "jdemooij@mozilla.com", "when": "2016-01-15T15:48:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8708430, "added": "review?(jcoppeard@mozilla.com)"}], "who": "jdemooij@mozilla.com", "when": "2016-01-15T15:51:56Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jcoppeard@mozilla.com)", "attachment_id": 8708426, "added": "review+"}], "who": "jcoppeard@mozilla.com", "when": "2016-01-15T15:53:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jcoppeard@mozilla.com)", "attachment_id": 8708430, "added": "review+"}], "who": "jcoppeard@mozilla.com", "when": "2016-01-15T16:02:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8708426, "added": "sec-approval?"}], "who": "jdemooij@mozilla.com", "when": "2016-01-18T17:56:48Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "in-testsuite?"}, {"removed": "---", "field_name": "cf_status_firefox42", "added": "wontfix"}, {"removed": "---", "field_name": "cf_status_firefox43", "added": "wontfix"}, {"removed": "---", "field_name": "cf_tracking_firefox44", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox44", "added": "affected"}, {"removed": "---", "field_name": "cf_tracking_firefox45", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox45", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox_esr38", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_firefox_esr45", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_0", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_b2g_2_0m", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_b2g_2_1", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_b2g_2_1_s", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_b2g_2_2", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_b2g_2_5", "added": "affected"}, {"removed": "---", "field_name": "cf_status_b2g_2_2r", "added": "unaffected"}, {"removed": "---", "field_name": "cf_status_b2g_master", "added": "affected"}], "who": "ryanvm@gmail.com", "when": "2016-01-18T17:59:05Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sledru@mozilla.com"}, {"removed": "?", "field_name": "cf_tracking_firefox44", "added": "-"}, {"removed": "affected", "field_name": "cf_status_firefox44", "added": "wontfix"}, {"removed": "?", "field_name": "cf_tracking_firefox45", "added": "+"}], "who": "sledru@mozilla.com", "when": "2016-01-19T11:02:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "abillings@mozilla.com"}, {"removed": "[jsbugmon:update,bisect]", "field_name": "whiteboard", "added": "[jsbugmon:update,bisect][checkin on 2/9]"}], "who": "abillings@mozilla.com", "when": "2016-01-19T18:20:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "sec-approval?", "attachment_id": 8708426, "added": "sec-approval+"}], "who": "abillings@mozilla.com", "when": "2016-01-19T18:20:26Z"}, {"changes": [{"removed": "[jsbugmon:update,bisect][checkin on 2/9]", "field_name": "whiteboard", "added": "[checkin on 2/9] [jsbugmon:update]"}], "who": "fuzzing@mozilla.com", "when": "2016-01-22T18:53:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "efaustbmo@gmail.com"}, {"removed": "", "field_name": "blocks", "added": "1214126"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jdemooij@mozilla.com)"}], "who": "nth10sd@gmail.com", "when": "2016-01-22T18:59:46Z"}, {"changes": [{"removed": "1214126", "field_name": "blocks", "added": "1162986"}, {"removed": "needinfo?(jdemooij@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jdemooij@mozilla.com", "when": "2016-01-26T14:30:32Z"}, {"changes": [{"removed": "---", "field_name": "cf_tracking_firefox47", "added": "+"}, {"removed": "---", "field_name": "cf_status_firefox47", "added": "affected"}], "who": "abillings@mozilla.com", "when": "2016-01-27T18:10:34Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}, {"removed": "[checkin on 2/9] [jsbugmon:update]", "field_name": "whiteboard", "added": "[jsbugmon:update]"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jdemooij@mozilla.com)"}], "who": "sledru@mozilla.com", "when": "2016-02-10T12:10:36Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}, {"removed": "", "field_name": "cc", "added": "cbook@mozilla.com"}], "who": "cbook@mozilla.com", "when": "2016-02-10T16:01:49Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla47"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-02-11 03:13:15"}, {"removed": "affected", "field_name": "cf_status_firefox47", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-02-11T11:13:15Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "fixed", "field_name": "cf_status_firefox47", "added": "verified"}], "who": "fuzzing@mozilla.com", "when": "2016-02-11T12:07:07Z"}, {"changes": [{"removed": "needinfo?(jdemooij@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8708426, "added": "approval-mozilla-aurora?, approval-mozilla-beta?"}], "who": "jdemooij@mozilla.com", "when": "2016-02-11T12:16:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?, approval-mozilla-beta?", "attachment_id": 8708426, "added": "approval-mozilla-aurora+, approval-mozilla-beta+"}], "who": "sledru@mozilla.com", "when": "2016-02-11T16:44:04Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wkocher@mozilla.com"}, {"removed": "affected", "field_name": "cf_status_firefox46", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2016-02-11T18:01:10Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox45", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2016-02-11T18:04:07Z"}, {"changes": [{"removed": "javascript-core-security", "field_name": "groups", "added": "core-security-release"}], "who": "dveditz@mozilla.com", "when": "2016-02-17T02:08:52Z"}, {"changes": [{"removed": "[jsbugmon:update]", "field_name": "whiteboard", "added": "[jsbugmon:update][adv-main45+]"}, {"removed": "affected", "field_name": "cf_status_firefox_esr45", "added": "fixed"}], "who": "abillings@mozilla.com", "when": "2016-02-29T18:30:36Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mark@wolfbeast.com"}], "who": "dveditz@mozilla.com", "when": "2016-03-29T17:53:53Z"}, {"changes": [{"removed": "core-security-release", "field_name": "groups", "added": ""}], "who": "dveditz@mozilla.com", "when": "2016-09-22T21:48:28Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "csectype-uaf"}], "who": "dveditz@mozilla.com", "when": "2016-12-01T21:31:04Z"}], "resolution": "FIXED", "op_sys": "Linux", "cf_fx_points": "---", "cf_blocking_fennec": "---"}