{"cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "standard8@mozilla.com", "mentors_detail": [{"email": "standard8@mozilla.com", "id": 112088, "name": "standard8@mozilla.com", "real_name": "Mark Banner (:standard8)"}], "depends_on": [1455737], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "cc_detail": [{"email": "edilee@mozilla.com", "id": 125983, "name": "edilee@mozilla.com", "real_name": "Ed Lee :Mardak"}, {"email": "mak77@bonardo.net", "id": 240353, "name": "mak77@bonardo.net", "real_name": "Marco Bonardo [::mak]"}, {"email": "paolo.mozmail@amadzone.org", "id": 332229, "name": "paolo.mozmail@amadzone.org", "real_name": ":Paolo Amadini"}, {"email": "reeisesean@gmail.com", "id": 612853, "name": "reeisesean@gmail.com", "real_name": "Sean Reeise [:sreeise]"}, {"email": "usarracini@mozilla.com", "id": 539482, "name": "usarracini@mozilla.com", "real_name": "Ursula Sarracini (:ursula)"}], "cf_last_resolved": "2018-04-22T22:19:24Z", "attachments": [{"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 0, "flags": [], "content_type": "text/plain", "id": 8962026}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8962664}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8964278}, {"creator": "u613185@disabled.tld", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8966021}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8966024}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8968068}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2018-04-17T16:48:45Z", "type_id": 607, "creation_date": "2018-04-17T13:53:23Z", "id": 1744986, "setter": "standard8@mozilla.com"}], "content_type": "text/plain", "id": 8968517}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2018-04-19T13:52:33Z", "type_id": 607, "creation_date": "2018-04-19T05:38:48Z", "id": 1746066, "setter": "standard8@mozilla.com"}], "content_type": "text/plain", "id": 8969170}, {"creator": "reeisesean@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8969396}, {"creator": "reeisesean@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-20T15:16:09Z", "type_id": 4, "creation_date": "2018-04-19T20:06:38Z", "id": 1746536, "setter": "standard8@mozilla.com"}], "content_type": "text/plain", "id": 8969402}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 37, "comments": [{"text": "We've got a few instances of .updatePlaces in test files that we should replace:\n\nhttps://searchfox.org/mozilla-central/search?q=.updatePlaces(&case=false&regexp=false&path=browser%2F**test\nhttps://searchfox.org/mozilla-central/search?q=.updatePlaces(&case=false&regexp=false&path=browser%2F**test\nhttps://searchfox.org/mozilla-central/search?q=.updatePlaces(&case=false&regexp=false&path=toolkit%2Fcomponents%2Fplaces%2Ftests%2Funit\n\nThese should be replaced by the new async function PlacesTestUtils.addVisits:\n\nhttps://searchfox.org/mozilla-central/rev/c217fbde244344fedfd07b57a740c694a456dbca/toolkit/components/places/tests/PlacesTestUtils.jsm#17-35\n\nNote the function is async, whereas the old one is callback based. Though in most places, there's a new Promise wrapper that can be removed, allowing the new function to be called direct.\n\nI'm happy to mentor this, if there's questions please ask.", "author": "standard8@mozilla.com", "id": 13149191, "time": "2018-03-22T17:54:47Z"}, {"text": "(In reply to Mark Banner (:standard8) from comment #0)\n> We've got a few instances of .updatePlaces in test files that we should\n> replace:\n> \n> https://searchfox.org/mozilla-central/search?q=.\n> updatePlaces(&case=false&regexp=false&path=browser%2F**test\n> https://searchfox.org/mozilla-central/search?q=.\n> updatePlaces(&case=false&regexp=false&path=browser%2F**test\n> https://searchfox.org/mozilla-central/search?q=.\n> updatePlaces(&case=false&regexp=false&path=toolkit%2Fcomponents%2Fplaces%2Fte\n> sts%2Funit\n> \n> These should be replaced by the new async function PlacesTestUtils.addVisits:\n> \n> https://searchfox.org/mozilla-central/rev/\n> c217fbde244344fedfd07b57a740c694a456dbca/toolkit/components/places/tests/\n> PlacesTestUtils.jsm#17-35\n> \n> Note the function is async, whereas the old one is callback based. Though in\n> most places, there's a new Promise wrapper that can be removed, allowing the\n> new function to be called direct.\n> \n> I'm happy to mentor this, if there's questions please ask.\n\nHey Mark,\n\nI would like to work on this, and I don't mind at all if you mentor me on this, that would be awesome. I want to ask a couple questions. I can see it specifies to use either href, url, or nsIURI and then there are optional areas. I am trying to understand what the addVisits is doing exactly. Is this for updating the history/bookmarks/downloads and adding the places that have been visited or is there one specific area it is like 'History' that it is for? I want to make sure I understand how it is used to better understand how to fix this. Thanks.", "author": "reeisesean@gmail.com", "id": 13149978, "time": "2018-03-22T22:06:33Z"}, {"text": "(In reply to Sean Reeise from comment #1)\n> I would like to work on this, and I don't mind at all if you mentor me on\n> this, that would be awesome.\n\nGreat.\n\n> I want to ask a couple questions. I can see it\n> specifies to use either href, url, or nsIURI and then there are optional\n> areas. I am trying to understand what the addVisits is doing exactly. Is\n> this for updating the history/bookmarks/downloads and adding the places that\n> have been visited or is there one specific area it is like 'History' that it\n> is for? I want to make sure I understand how it is used to better understand\n> how to fix this. Thanks.\n\nPlacesTestUtils.addVisits is a function that is used only for tests. What it does is to insert history visits into the database so that we can simulate having visited various sites and run various tests based on those.\n\nupdatePlaces is the older API that isn't as nice as addVisits as it is callback based, rather than async based.\n\nNote that since addVisits takes a variety of parameters, we don't generally need to wrap urls in Netutil.newURI or Services.io.newURI etc, e.g. https://searchfox.org/mozilla-central/rev/de5c4376b89c3603341d226a65acea12f8851ec5/toolkit/components/places/tests/unit/test_download_history.js#13,178-184 - though sometimes that wrapping is needed for other functions / checks.\n\nAlso, I didn't mention it earlier, once you've done a build, you can generally run tests with:\n\n./mach test path/to/test", "author": "standard8@mozilla.com", "id": 13151104, "time": "2018-03-23T11:14:20Z"}, {"text": "Created attachment 8962026\nChanging to PlacesTestUtils.addVisits in setupHistory() function.\n\nHey Mark,\n\nSorry it took so long to reply. I wanted to get your feedback on the text attachment. This is for the first link at browser/base/content/test/sanitize/browser_sanitize-timespans.js. It is the setupHistory() function. First, I imported PlacesTestUtils.jsm at the top of the page right below the other const variables like this:\n\nconst {PlacesTestUtils} =\n  ChromeUtils.import(\"resource://testing-common/PlacesTestUtils.jsm\", {});\n\nNote: I wasn't sure about the import statement - is this correct? \nThe attachment is what I changed in the setupHistory() function. I built the changes and ran the tests using ./mach test for browser_sanitize-timespans.js and all tests passed no issues.\n\nIs this about what should be done here, or am I missing anything on how to make these changes?", "author": "reeisesean@gmail.com", "id": 13153353, "time": "2018-03-24T13:31:52Z"}, {"text": "(In reply to Sean Reeise from comment #3)\n> Sorry it took so long to reply. I wanted to get your feedback on the text\n> attachment.\n\nNo problem. Note, if you attach diffs, or push to mozreview it is generally easier for me to comment on with some context.\n\n(https://mozilla-version-control-tools.readthedocs.io/en/latest/mozreview.html)\n\n> First, I imported PlacesTestUtils.jsm at the top of\n> the page right below the other const variables like this:\n> \n> const {PlacesTestUtils} =\n>   ChromeUtils.import(\"resource://testing-common/PlacesTestUtils.jsm\", {});\n\nYes, that's right. Though you could possibly do it before the const variables (we tend to get imports first and then do var/const global definitions).\n\n> The attachment is what I changed in the setupHistory() function. I built the\n> changes and ran the tests using ./mach test for\n> browser_sanitize-timespans.js and all tests passed no issues.\n\nThat's strange, I made the changes locally and I'm seeing test failures, did you run \"./mach test browser_sanitize-timespans.js\" or \"./mach test browser/base/content/test/sanitize/browser_sanitize-timespans.js\" ?\n\nThe first failure I see is:\n\n  FAIL Pretend visit to 10minutes.com should now be deleted - \nStack trace:\nchrome://mochitests/content/browser/browser/base/content/test/sanitize/browser_sanitize-timespans.js:onHistoryReady:97\n\nThe issue here is the addPlace sub-function, you need to remove the visits array and change 'transitionType' to 'transition':\n\n    places.push({\n      uri: aURI,\n      title: aTitle,\n      visitDate: aVisitDate,\n      transition: Ci.nsINavHistoryService.TRANSITION_LINK\n    });\n\nYou can also drop the makeURI wrappers in the function calls to addPlace since addVisits handles that.\n\nAlso don't forget to re-indent the function, since we normally use 2-space indents.", "author": "standard8@mozilla.com", "id": 13155419, "time": "2018-03-26T11:07:44Z"}, {"text": "Created attachment 8962664\nPartial Patch - Made replacements in browser_sanitize-timespans.js\n\nThis replaces updatePlaces with PlacesTestUtils.addVisits in browser_sanitize-timespans.js", "author": "reeisesean@gmail.com", "id": 13158281, "time": "2018-03-27T10:22:08Z"}, {"text": "(In reply to Mark Banner (:standard8) from comment #4)\n> No problem. Note, if you attach diffs, or push to mozreview it is generally\n> easier for me to comment on with some context.\n\nAh I wasn't thinking about importing the changes, I uploaded it as a patch and removed the makeURI parts.\n\n\n> Yes, that's right. Though you could possibly do it before the const\n> variables (we tend to get imports first and then do var/const global\n> definitions).\n\nGotcha, thanks I was not sure on that, I moved it above the var/const declarations.\n\n> The first failure I see is:\n> \n>   FAIL Pretend visit to 10minutes.com should now be deleted - \n> Stack trace:\n> chrome://mochitests/content/browser/browser/base/content/test/sanitize/\n> browser_sanitize-timespans.js:onHistoryReady:97\n> \n> The issue here is the addPlace sub-function, you need to remove the visits\n> array and change 'transitionType' to 'transition':\n> \n>     places.push({\n>       uri: aURI,\n>       title: aTitle,\n>       visitDate: aVisitDate,\n>       transition: Ci.nsINavHistoryService.TRANSITION_LINK\n>     });\n\nI am a little confused on this part, I thought the attachment I added before changed it to 'transition' instead of 'transitionType'. This is probably part of not doing it through a patch, sorry about that.\n\n> Also don't forget to re-indent the function, since we normally use 2-space\n> indents.\n\nRe-indent the addPlace function?\n\nHopefully this partial patch will be easier to see where I made the changes, thanks for the help Mark. I will continue working on the other parts to this bug and put them all in one commit, and will let you know if I run into a problem as well.", "author": "reeisesean@gmail.com", "id": 13158303, "time": "2018-03-27T10:34:38Z"}, {"text": "(In reply to Sean Reeise from comment #6)\n> Ah I wasn't thinking about importing the changes, I uploaded it as a patch\n> and removed the makeURI parts.\n\nGreat, thanks.\n\n> I am a little confused on this part, I thought the attachment I added before\n> changed it to 'transition' instead of 'transitionType'. This is probably\n> part of not doing it through a patch, sorry about that.\n\nSorry that was my fault, I'd missed that when I was copying & pasting. The patch is much better :-)\n\n> > Also don't forget to re-indent the function, since we normally use 2-space\n> > indents.\n> \n> Re-indent the addPlace function?\n\nAll of setupHistory please. Since you removed the `return new Promise(resolve => {` block, all of it needs to be two spaces less. Also, please make sure the properties in the places.push argument are aligned as well.\n\n> I will continue working on the other parts to this\n> bug and put them all in one commit, and will let you know if I run into a\n> problem as well.\n\nYes, that's fine. Thank you for working on this.", "author": "standard8@mozilla.com", "id": 13163162, "time": "2018-03-28T12:58:29Z"}, {"text": "Created attachment 8964278\nParial patch - browser_library_downloads.js and browser_sanitize-timespans.js\n\nAdded replacements browser_library_downloads.js\n\nIn order to get the Downloads folder selected I switched it to await promiseLibrary() - I was not able to get it to work using the same way as before. Based on reading the way the Downloads folder was opening before, I figured this will work pretty much the same way. The tests are the same, it is just the way the downloads folder opens that is different.", "author": "reeisesean@gmail.com", "id": 13173842, "time": "2018-04-02T13:54:18Z"}, {"text": "Hey Mark,\n\nI added a patch that has replacements in browser_library_downloads.js. I tested it on Linux and Windows and both passed the tests for Downloads being opened and the URI matching. Additionally, I was not sure whether to keep the VisitInfo function because it worked regardless of the function being there and using Ci.nsINavHistoryService.TRANSITION_*, but in the patch I used PlacesUtils.history.TRANSITION_* because that is what it tests for. I am thinking that could also mean I did not do it correctly so I wanted to be sure. Is this how opening and checking the Downloads folder should be implemented?\n\nAlso in test_454977.js I am not sure how to resolve the visitId. In order for the test to run all the way through and check both unhidden and hidden visits, the visitId must be resolved in the test currently. When changing to PlacesTestUtils.addVisits I am not sure how to to get the visitId from the addVisits, or another place. Could you possibly point me in the right direction of how to correctly get the visitId? I can add the visits and pass the tests that check for visits in the checkResults() function but because retrieving the placId from the database relies on whether visitId is greater than 0, it will not test for boolean values using Assert.equals().", "author": "reeisesean@gmail.com", "id": 13173866, "time": "2018-04-02T14:12:49Z"}, {"text": "Comment on attachment 8964278\nParial patch - browser_library_downloads.js and browser_sanitize-timespans.js\n\nReview of attachment 8964278:\n-----------------------------------------------------------------\n\nThank you for working on this, there's some comments below. Additionally looking at your changes on browser_library_downloads.js has revealed an existing issue with the test (explained below), so it will be great to get that fixed properly.\n\nRe test_454977.js I'm still thinking about that at the moment.\n\n::: browser/components/places/tests/browser/browser_library_downloads.js\n@@ +25,5 @@\n> +  function addPlace(aURI, aTransitionType) {\n> +    places.push({\n> +      uri: aURI,\n> +      transition: aTransitionType,\n> +      visitDate: VisitInfo(aTransitionType)\n\nWe can drop visitDate since we don't need to supply it if we want to just use `now`, since addVisits sets that for us.\n\nhttps://hg.mozilla.org/mozilla-central/log/tip/toolkit/components/places/tests/PlacesTestUtils.jsm\n\n@@ +34,5 @@\n> +  addPlace(\"http://mozilla.org\", PlacesUtils.history.TRANSITION_TYPED);\n> +  addPlace(\"http://google.com\", PlacesUtils.history.TRANSITION_DOWNLOAD);\n> +  addPlace(\"http://en.wikipedia.org\", PlacesUtils.history.TRANSITION_TYPED);\n> +  addPlace(\"http://ubuntu.org\", PlacesUtils.history.TRANSITION_DOWNLOAD);\n> +  await PlacesTestUtils.addVisits(places);\n\nI think since addPlace is quite simple, in this case we can just use the format of:\n\nawait PlacesTestUtils.addVisits([{\n  uri: \"http://mozilla.org\",\n  transition: PlacesUtils.history.TRANSITION_TYPED,\n}, {\n  ...\n}]);\n\n@@ +36,5 @@\n> +  addPlace(\"http://en.wikipedia.org\", PlacesUtils.history.TRANSITION_TYPED);\n> +  addPlace(\"http://ubuntu.org\", PlacesUtils.history.TRANSITION_DOWNLOAD);\n> +  await PlacesTestUtils.addVisits(places);\n> +\n> +  library = await promiseLibrary(\"Downloads\");\n\nIf you move the registerCleanupFunction to just after this, then you can make this `let library = ... ` and avoid the global.\n\n@@ +42,2 @@\n>          // Make sure Downloads is present.\n> +  isnot(library.PlacesOrganizer._places.selectedNode, null,\n\nPlease switch this to use `Assert.notEqual`, it gives better debug output.\n\n@@ +44,1 @@\n>                \"Downloads is present and selected\");\n\nIs this a diff -w ? The indentation here looks weird. Just a normal patch is fine for now.\n\n@@ +45,5 @@\n>  \n>  \n>          // Check results.\n>          let testURIs = [\"http://ubuntu.org/\", \"http://google.com/\"];\n> +  for (let element of library.ContentArea.currentView\n\nThe issue with the test is here, we're not always letting the library fully fill out the entries before we continue with the test.\n\nRunning with the current state on my machine, I found that it isn't actually checking any URLs.\n\nThere's two problems here, though I think they can be solved with one change.\n\nBefore the for loop we need to add another line, to wait for the entries to be full:\n\nawait BrowserTestUtils.waitForCondition(() =>\n  library.ContentArea.currentView.associatedElement.children.length == testURIs.length);\n\nThis serves two purposes: 1) Making sure the downloads window has filled the list with the expected number of items, 2) making sure we will check all the items that are in testURIs.\n\nEither way, it'll warn us if there are too few entries, or if any of them are missing. That's good enough for this test.\n\n@@ +50,2 @@\n>                                             .associatedElement.children) {\n>            is(element._shell.download.source.url, testURIs.shift(),\n\nPlease make this `Assert.equal`", "author": "standard8@mozilla.com", "id": 13177248, "time": "2018-04-03T17:46:04Z"}, {"text": "(In reply to Sean Reeise from comment #9)\n> Also in test_454977.js I am not sure how to resolve the visitId. In order\n> for the test to run all the way through and check both unhidden and hidden\n> visits, the visitId must be resolved in the test currently. When changing to\n> PlacesTestUtils.addVisits I am not sure how to to get the visitId from the\n> addVisits, or another place.\n\nYou can use PlacesTestUtils.waitForNotification(\"onVisits\", ...) to get the visit id.", "author": "mak77@bonardo.net", "id": 13177909, "time": "2018-04-03T21:21:49Z"}, {"text": "(In reply to Mark Banner (:standard8) from comment #10)\n> Comment on attachment 8964278\n> Parial patch - browser_library_downloads.js and browser_sanitize-timespans.js\n> \n> Review of attachment 8964278:\n> -----------------------------------------------------------------\n> \n> Thank you for working on this, there's some comments below. Additionally\n> looking at your changes on browser_library_downloads.js has revealed an\n> existing issue with the test (explained below), so it will be great to get\n> that fixed properly.\n\nNo problem at all, and I was thinking something looked a little off, so this makes more sense.\n\n> \n> Re test_454977.js I'm still thinking about that at the moment.\n> \n> ::: browser/components/places/tests/browser/browser_library_downloads.js\n> @@ +25,5 @@\n> > +  function addPlace(aURI, aTransitionType) {\n> > +    places.push({\n> > +      uri: aURI,\n> > +      transition: aTransitionType,\n> > +      visitDate: VisitInfo(aTransitionType)\n> \n> We can drop visitDate since we don't need to supply it if we want to just\n> use `now`, since addVisits sets that for us.\n\nSounds good.\n\n> https://hg.mozilla.org/mozilla-central/log/tip/toolkit/components/places/\n> tests/PlacesTestUtils.jsm\n> \n> @@ +34,5 @@\n> > +  addPlace(\"http://mozilla.org\", PlacesUtils.history.TRANSITION_TYPED);\n> > +  addPlace(\"http://google.com\", PlacesUtils.history.TRANSITION_DOWNLOAD);\n> > +  addPlace(\"http://en.wikipedia.org\", PlacesUtils.history.TRANSITION_TYPED);\n> > +  addPlace(\"http://ubuntu.org\", PlacesUtils.history.TRANSITION_DOWNLOAD);\n> > +  await PlacesTestUtils.addVisits(places);\n> \n> I think since addPlace is quite simple, in this case we can just use the\n> format of:\n> \n> await PlacesTestUtils.addVisits([{\n>   uri: \"http://mozilla.org\",\n>   transition: PlacesUtils.history.TRANSITION_TYPED,\n> }, {\n>   ...\n> }]);\n\nYes I was wondering about this, but I wasn't sure whether to change it based on the VisitInfo function, thank you.\n\n> @@ +36,5 @@\n> > +  addPlace(\"http://en.wikipedia.org\", PlacesUtils.history.TRANSITION_TYPED);\n> > +  addPlace(\"http://ubuntu.org\", PlacesUtils.history.TRANSITION_DOWNLOAD);\n> > +  await PlacesTestUtils.addVisits(places);\n> > +\n> > +  library = await promiseLibrary(\"Downloads\");\n> \n> If you move the registerCleanupFunction to just after this, then you can\n> make this `let library = ... ` and avoid the global.\n> \n> @@ +42,2 @@\n> >          // Make sure Downloads is present.\n> > +  isnot(library.PlacesOrganizer._places.selectedNode, null,\n> \n> Please switch this to use `Assert.notEqual`, it gives better debug output.\n\nGotcha, I will change this as well.\n\n> \n> @@ +44,1 @@\n> >                \"Downloads is present and selected\");\n> \n> Is this a diff -w ? The indentation here looks weird. Just a normal patch is\n> fine for now.\n\n\nI am honestly not sure what happened with the patch, this is my fault, sorry about that. I will make sure it is fixed in the next one.\n\n\n> @@ +45,5 @@\n> >  \n> >  \n> >          // Check results.\n> >          let testURIs = [\"http://ubuntu.org/\", \"http://google.com/\"];\n> > +  for (let element of library.ContentArea.currentView\n> \n> The issue with the test is here, we're not always letting the library fully\n> fill out the entries before we continue with the test.\n> \n> Running with the current state on my machine, I found that it isn't actually\n> checking any URLs.\n> \n> There's two problems here, though I think they can be solved with one change.\n> \n> Before the for loop we need to add another line, to wait for the entries to\n> be full:\n> \n> await BrowserTestUtils.waitForCondition(() =>\n>   library.ContentArea.currentView.associatedElement.children.length ==\n> testURIs.length);\n> \n> This serves two purposes: 1) Making sure the downloads window has filled the\n> list with the expected number of items, 2) making sure we will check all the\n> items that are in testURIs.\n> \n> Either way, it'll warn us if there are too few entries, or if any of them\n> are missing. That's good enough for this test.\n\n\nThis makes a lot more sense, thank you. I appreciate your help on this.\n\n\n> @@ +50,2 @@\n> >                                             .associatedElement.children) {\n> >            is(element._shell.download.source.url, testURIs.shift(),\n> \n> Please make this `Assert.equal`\n\n\nGotcha, I will change this as well.", "author": "reeisesean@gmail.com", "id": 13178222, "time": "2018-04-03T23:12:13Z"}, {"text": "(In reply to Marco Bonardo [::mak] from comment #11)\n> (In reply to Sean Reeise from comment #9)\n> > Also in test_454977.js I am not sure how to resolve the visitId. In order\n> > for the test to run all the way through and check both unhidden and hidden\n> > visits, the visitId must be resolved in the test currently. When changing to\n> > PlacesTestUtils.addVisits I am not sure how to to get the visitId from the\n> > addVisits, or another place.\n> \n> You can use PlacesTestUtils.waitForNotification(\"onVisits\", ...) to get the\n> visit id.\n\nThank you Marco, this helps a lot and saves me a lot of time. I will make the change here too.", "author": "reeisesean@gmail.com", "id": 13178226, "time": "2018-04-03T23:15:38Z"}, {"text": "Created attachment 8966021\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nReplaced tests using updatePlaces with PlacesTestUtils.addVisits from PlacesTestUtils.jsm.\nReplaced in:\nbrowser/base/content/test/sanitize/browser_sanitize-timespans.js\nbrowser/components/places/tests/browser/browser_library_downloads.js\ntoolkit/components/places/tests/unit/test_454977.js\ntoolkit/components/places/tests/unit/test_isURIVisited.js", "author": "u613185@disabled.tld", "id": 13189011, "time": "2018-04-08T12:36:30Z"}, {"text": "Created attachment 8966024\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nReplaced tests using updatePlaces with PlacesTestUtils.addVisits from PlacesTestUtils.jsm.\nReplaced in:\nbrowser/base/content/test/sanitize/browser_sanitize-timespans.js\nbrowser/components/places/tests/browser/browser_library_downloads.js\ntoolkit/components/places/tests/unit/test_454977.js\ntoolkit/components/places/tests/unit/test_isURIVisited.js", "author": "reeisesean@gmail.com", "id": 13189021, "time": "2018-04-08T13:05:49Z"}, {"text": "This last attachment has all of the changes. I accidentally configured bzexport with the wrong email and had to resubmit the patch, sorry about that. \n\nIn test_isURIVisited.js, in the original it is going through the callback regardless of errors, which would normally happen with updatePlaces when reaching \"about:\" false in the schemes when reaching the handleError() function. Those cant be added to visits so I am assuming this is intentional to test the isURIVisited api? Currently I just changed the callback to a function and removed the handle error/result/completion functions, and used .then and .catch to recall the callback function. Not sure if this is what we are suppose to do, or if this should be implemented in a different way.", "author": "reeisesean@gmail.com", "id": 13189025, "time": "2018-04-08T13:18:05Z"}, {"text": "Comment on attachment 8964278\nParial patch - browser_library_downloads.js and browser_sanitize-timespans.js\n\nJust to note, bzexport should let you obsolete existing patches when you upload new ones.", "author": "standard8@mozilla.com", "id": 13194822, "time": "2018-04-10T13:33:23Z"}, {"text": "Comment on attachment 8966024\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nReview of attachment 8966024:\n-----------------------------------------------------------------\n\nThank you for the updated patch, we're heading in the right direction. Note also, there's a test_download_history.js to do as well, though that looks a bit simpler.\n\nNext time feel free to set the review or feedback flag to :standard8. That should flag me automatically - you should be able to do this from bzexport as well, iirc.\n\n::: browser/components/places/tests/browser/browser_library_downloads.js\n@@ +30,5 @@\n> +    await library.close();\n> +    await PlacesUtils.history.clear();\n> +  });\n> +\n> +  let library = await promiseLibrary(\"Downloads\");\n\nThis should still be moved before the registerCleanupFunction call, so that library is logically declared before it is used.\n\n::: toolkit/components/places/tests/unit/test_454977.js\n@@ +10,5 @@\n>  // Returns the Place ID corresponding to an added visit.\n>  async function task_add_visit(aURI, aVisitType) {\n> +  // Wait for a visits notification and get the visitId.\n> +  let visitId;\n> +  PlacesTestUtils.waitForNotification(\"onVisits\", visits => {\n\nYou should assign this to a variable as it returns a promise, e.g. let visitsPromise = ...\n\nThen after the addVisits, add a line for `await visitsPromise`. That will ensure the notification has been received and the visitId has definitely been received.\n\n::: toolkit/components/places/tests/unit/test_isURIVisited.js\n@@ +29,5 @@\n>    gRunner = step();\n>    gRunner.next();\n>  }\n>  \n>  function* step() {\n\nSo this test could do with a little bit of rework to handle async better.\n\nFirst step is to drop the run_test function, drop gRunner completely and change this step() to be a:\n\nadd_task(async function test_isURIVisited() {\n\n@@ +39,5 @@\n>      for (let t in PlacesUtils.history.TRANSITIONS) {\n>        info(\"With transition \" + t);\n>        let transition = PlacesUtils.history.TRANSITIONS[t];\n>  \n>        let uri = NetUtil.newURI(scheme + \"mozilla.org/\");\n\nYou should be able to change NetUtil.newURI to Services.io.newURI.\n\n@@ +41,5 @@\n>        let transition = PlacesUtils.history.TRANSITIONS[t];\n>  \n>        let uri = NetUtil.newURI(scheme + \"mozilla.org/\");\n>  \n> +      history.isURIVisited(uri, async function(aURI, aIsVisited) {\n\nThe async callback won't quite work here, as isURIVisited isn't expecting it.\n\nWhat's slightly better to do is:\n\nlet [receivedURI, visited] = await new Promise(resolve => {\n  history.isURVisited(uri, (receivedUri, visited) => {\n    resolve(receivedURI, visited);\n  });\n});\n\nYou can then continue with the Assert.ok etc.\n\n@@ +51,2 @@\n>  \n> +          history.isURIVisited(uri, function(aURI2, aIsVisited2) {\n\nGiven the extra isURIVisited checks, it may be worth making what I said above into a function, so that you can do:\n\n[receivedURI, visited] = await isURIVisited(uri);\n\n@@ +65,3 @@\n>  \n> +        await PlacesTestUtils.addVisits(uri, transition)\n> +          .then(() => callback())\n\nNo need for the .then/.catch here. You can simply do the functions in the callback after the await, e.g. (in sudo code):\n\nawait addVisits();\nawait isURIVisited();\nawait history.clear();\nawait isURIVisited();\n\n@@ +69,2 @@\n>        });\n>        yield undefined;\n\nThis yield can be dropped as well as the do_test_finished() with the above rewrites.", "author": "standard8@mozilla.com", "id": 13194899, "time": "2018-04-10T13:58:56Z"}, {"text": "Created attachment 8968068\nChanging updatePlaces to addVisits. This patch includes test_download_history.js.\n\ntest_download_history.js\n\nWhen using PlacesTestUtils I am getting an error that looks like it is from the last part of addVisits:\n\nStack Trace:\n0:03.54 pid:146852 JavaScript error: , line 0: uncaught exception: Ensure history has been updated and is visible to read-only connections - threw exception: Error: Connection is not open.\n\nThis seems like it could possibly be from the connection being closed from addDownloads but I am not entirely sure. I have tried differnt variations of the function, but have not come to a solution yet. All of the tests pass, but this is going to throw an error regardless. I am still working on this one and wanted to see if you had any thoughts on what could be done here? \n\n\ntest_454977.js\n\nI changed the function to use await visitsPromise after the visits have been added but there is an issue. When the transition is TRANSITION_EMBED, calling await visitsPromise for PlacesTestUtils.waitForNotificaiton will cause the test to stop and eventually timeout. So in the patch, I changed it to call await visitPromise and gets the visitId as long as the transition is not TRANSITION_EMBED. Not exactly sure why it does this, but I believe it has something to do with the visits being hidden? If you want to reproduce, remove the if block and just use 'await visitsPromise'.\n\nAnother option would be to change the first and last 'task_add_visit' calls to just add visits right then. Either way, when adding TRANSITION_EMBED, we don't do anything with visit_count and trying to check for visitId using\nwaitForNotification would stall out. So technically with the first and last task_add_visit calls all we are doing is calling addVisits for those regardless of where we call the function.\n\n\ntest_isURIVisited.js\n\nThe function for testing the isURIVisited api returns an array with the uri object and visited boolean. With these, we can successfully check the results the same way as before. However, when using PlacesTestUtils.addVisits, it will throw and error with certain type of URI's trying to be added. So in the patch I catch the error and use Assert.ok to make sure the error message is from addVisits and not anywhere else since we are just testing the isURIVisited api, and we would already know that those URI's will throw an error anway.\n\n\nbrowser_library_downloads.js\n\nFixed the placement of where the 'library' is initialized.", "author": "reeisesean@gmail.com", "id": 13206816, "time": "2018-04-15T16:16:09Z"}, {"text": "I just realized I didn't change transitionType to transition in test_download_history.js. The test outcome is the same with this fixed, and I will include it as well with the next patch.", "author": "reeisesean@gmail.com", "id": 13206834, "time": "2018-04-15T17:20:35Z"}, {"text": "Created attachment 8968517\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nThis patch has more changes for test_download_history.js. I changed it to use add_task and async await.  I was having issues with 'connection not open' for PlacesTestUtils like I mentioned in the previous patch, so I tried a couple different things and noticed that when changed to async await, PlacesUtils.history.clear() would no longer work within the callback function itself.  I attemtped to use 'await new Promise' and then resolve with history.clear().then(resolve) like test_dh_addBookmarkRemovedDownload is doing, but the same timeout issues occur:\n \nERROR Unexpected exception Ensure history has been updated and is visible to read-only connections - timed out after 50 tries.\n\nSo I changed it to resolve the visit id and referrer id and then do a last Assertion test. At the end I cleared out history with PlacesUtils but I had to remove it from the the Promise. I am not sure it makes much of a difference, except for where clean up is neccesary. The tests passed with correct URI's and the issues with connection are gone.\n\nThere may be a solution im not seeing, so I wanted to get some feedback on the updated patch.", "author": "reeisesean@gmail.com", "id": 13212419, "time": "2018-04-17T13:53:23Z"}, {"text": "Comment on attachment 8968517\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nReview of attachment 8968517:\n-----------------------------------------------------------------\n\nSorry for the delay in responding. Definitely heading in the right direction. I think I've answered your questions below.\n\n::: toolkit/components/places/tests/unit/test_454977.js\n@@ +21,5 @@\n> +    uri: aURI,\n> +    transition: aVisitType\n> +  }]);\n> +\n> +  if (aVisitType != TRANSITION_EMBED) {\n\nThis is fine, I just tested without the patch, and in the TRANSITION_EMBED case, the visitId is 0, which is then skipped in the checks below.\n\n::: toolkit/components/places/tests/unit/test_download_history.js\n@@ +155,5 @@\n>  });\n>  \n> +add_task(async function test_dh_addDownload_referrer() {\n> +  let downloadsPromise = new Promise(resolve => {\n> +    waitForOnVisit(function DHAD_prepareReferrer(aURI, aVisitID) {\n\nYou're definitely heading in the right direction here. \n\nWhat would be slightly better to do is two things:\n\n1) waitForOnVisit can be replaced by `PlacesTestUtils.waitForNotification(\"onVisits\", ...`);\n\nThere's an existing example here: https://searchfox.org/mozilla-central/rev/a30a60eadcff99d2a043241955d215dbeccad876/toolkit/components/places/tests/browser/browser_multi_redirect_frecency.js#45\n\n2) You should then be able to drop this promise, I think, and simplify the test a bit:\n\n```\nlet referrerPromise = PlacesTestUtils.waitForNotification(...);\n\nawait PlacesTestUtils.addVisits(...);\n\nawait referrerPromise;\n\nlet downloadPromise = PlacesTestUtils.waitForNotification(...);\n\ngDownloadHistory.addDownload(...);\n\nawait downloadPromise;\n\n// Final checks\nAssert.equal(...);\n\nawait PlacesUtils.history.clear();\n```\n\nAlong the way you'll need to save the referrer visit ID and the referring ID for the checks.\n\n::: toolkit/components/places/tests/unit/test_isURIVisited.js\n@@ +49,3 @@\n>  \n> +      try {\n> +        await PlacesTestUtils.addVisits([{\n\nRather than the try catch, please can you wrap this in an if statement:\n\nif (PlacesUtils.history.canAddURI(aURI)) {\n  ...\n}\n\n@@ +61,4 @@\n>  \n> +      let [receivedURI2, visited2] = await visitsPromise(aURI);\n> +      Assert.ok(aURI.equals(receivedURI2));\n> +      Assert.ok(SCHEMES[scheme] ? visited2 : !visited2);\n\nPlease can you make this:\n\nAssert.equal(SCHEMES[scheme], visited2);\n\nThat should make it a little clearer as to what it is testing.", "author": "standard8@mozilla.com", "id": 13212984, "time": "2018-04-17T16:48:45Z"}, {"text": "Created attachment 8969170\nChanges for test_download_history.js\n\nThis has the changes for test_download_history, and the other changes from the last review. Thanks for showing me the browser_multi_redirect_frecency.js file, it helped a good bit. Question, should waitForNotification in test_454977.js return uri.equals(aURI) similar to how that file does it?", "author": "reeisesean@gmail.com", "id": 13217519, "time": "2018-04-19T05:38:48Z"}, {"text": "Comment on attachment 8969170\nChanges for test_download_history.js\n\nReview of attachment 8969170:\n-----------------------------------------------------------------\n\nThanks Sean, this is looking good. Just a couple of minor things. For the next one, request review as I think we're pretty much there now.\n\n::: toolkit/components/places/tests/unit/test_454977.js\n@@ +12,5 @@\n> +  // Wait for a visits notification and get the visitId.\n> +  let visitId;\n> +  let visitsPromise = PlacesTestUtils.waitForNotification(\"onVisits\", visits => {\n> +    visitId = visits[0].visitId;\n> +    return true;\n\n> Question, should waitForNotification in test_454977.js return uri.equals(aURI) similar to how that file does it?\n\nYes, I think it should, just to confirm we get the right notification.\n\n::: toolkit/components/places/tests/unit/test_download_history.js\n@@ +159,5 @@\n> +  let visitId;\n> +  let referrerPromise = PlacesTestUtils.waitForNotification(\"onVisits\", visits => {\n> +    visitId = visits[0].visitId;\n> +    let {uri} = visits[0];\n> +    Assert.ok(uri.equals(REFERRER_URI));\n\nNo need to Assert the uri.equals here, as the promise just won't resolved if it isn't received.\n\n@@ +178,5 @@\n> +  let referrerId;\n> +  let downloadPromise = PlacesTestUtils.waitForNotification(\"onVisits\", visits => {\n> +    referrerId = visits[0].referrerId;\n> +    let {uri} = visits[0];\n> +    Assert.ok(uri.equals(DOWNLOAD_URI));\n\nditto wrt \"No need to Assert the uri.equals here, as the promise just won't resolved if it isn't received.\"", "author": "standard8@mozilla.com", "id": 13218494, "time": "2018-04-19T13:52:33Z"}, {"text": "Created attachment 8969396\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nContains all changes for bug 1448081 for review.", "author": "reeisesean@gmail.com", "id": 13219603, "time": "2018-04-19T19:58:23Z"}, {"text": "Created attachment 8969402\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nContains all changes for bug 1448081 for review, and removed blank line from test_454977.js from last patch.", "author": "reeisesean@gmail.com", "id": 13219626, "time": "2018-04-19T20:06:38Z"}, {"text": "Comment on attachment 8969402\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits\n\nReview of attachment 8969402:\n-----------------------------------------------------------------\n\nGreat, thank you for the updates, and for keeping going on this. r=Standard8\n\nI'll get this landed for you.", "author": "standard8@mozilla.com", "id": 13221626, "time": "2018-04-20T15:16:09Z"}, {"text": "Pushed by mbanner@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9c339f571d35\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits. r=Standard8", "author": "pulsebot@bots.tld", "id": 13221656, "time": "2018-04-20T15:25:32Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/9c339f571d35", "author": "dluca@mozilla.com", "id": 13222830, "time": "2018-04-20T23:02:24Z"}, {"text": "Backed out changeset 9c339f571d35 (bug 1448081) for browser chrome failures on browser/components/places/tests/browser/browser_library_downloads.js. a=backout\n\nLog of the failure:\nhttps://treeherder.mozilla.org/logviewer.html#?job_id=174883906&repo=autoland&lineNumber=2819\n\n  INFO - Console message: [JavaScript Error: \"getScreenshot(http://mozilla.org/) failed: Unix error 2 during operation open on file /var/folders/sf/my4n_2117tq9ztcc942qs9lc00000w/T/tmpS8FnZH.mozrunner/thumbnails/bde098adf84ba902f3af189ac6b7c299.png (No such file or directory)\" {file: \"resource://activity-stream/lib/Screenshots.jsm\" line: 76}]\n17:08:28     INFO - getScreenshotForURL@resource://activity-stream/lib/Screenshots.jsm:76:7\n17:08:28     INFO - async*maybeCacheScreenshot@resource://activity-stream/lib/Screenshots.jsm:130:32\n17:08:28     INFO - async*_fetchScreenshot@resource://activity-stream/lib/TopSitesFeed.jsm:226:11\n17:08:28     INFO - async*_fetchIcon@resource://activity-stream/lib/TopSitesFeed.jsm:214:11\n17:08:28     INFO - async*getLinksWithDefaults@resource://activity-stream/lib/TopSitesFeed.jsm:159:11\n17:08:28     INFO - async*refresh@resource://activity-stream/lib/TopSitesFeed.jsm:175:25\n17:08:28     INFO - async*onAction@resource://activity-stream/lib/TopSitesFeed.jsm:398:9\n17:08:28     INFO - _middleware/</<@resource://activity-stream/lib/Store.jsm:51:11\n17:08:28     INFO - Store/this[method]@resource://activity-stream/lib/Store.jsm:29:55\n17:08:28     INFO - customDispatch/this.placesChangedTimer<@resource://activity-stream/lib/PlacesFeed.jsm:205:11\n17:08:28     INFO - \n17:08:28     INFO - Buffered messages finished\n17:08:28     INFO - TEST-UNEXPECTED-FAIL | browser/components/places/tests/browser/browser_library_downloads.js | Uncaught exception - undefined - timed out after 50 tries.\n17:08:28     INFO - Leaving test bound test\n17:08:28     INFO - GECKO(1942) | MEMORY STAT | vsize 4523MB | residentFast 509MB | heapAllocated 122MB\n17:08:28     INFO - TEST-OK | browser/components/places/tests/browser/browser_library_downloads.js | took 5804ms\n17:08:28     INFO - checking window state\n17:08:28     INFO - TEST-START | browser/components/places/tests/browser/browser_library_infoBox.js\n17:08:28     INFO - GECKO(1942) | MEMORY STAT | vsize 4525MB | residentFast 511MB | heapAllocated 128MB\n17:08:28     INFO - TEST-OK | browser/components/places/tests/browser/browser_library_infoBox.js | took 604ms\n17:08:28     INFO - checking window state\n17:08:28     INFO - TEST-START | browser/components/places/tests/browser/browser_library_left_pane_middleclick.js\n17:08:29     INFO - GECKO(1942) | MEMORY STAT | vsize 4539MB | residentFast 518MB | heapAllocated 138MB\n17:08:29     INFO - TEST-OK | browser/components/places/tests/browser/browser_library_left_pane_middleclick.js | took 669ms\n\nBackout:\nhttps://hg.mozilla.org/mozilla-central/rev/d36d2c2ab772c4b5479e2516a87e830cab8da509", "author": "dluca@mozilla.com", "id": 13223029, "time": "2018-04-21T01:53:31Z"}, {"text": "Dorel: I really don't think this should have been backed out. It had landed fine on inbound & central. It wasn't until after it merged across to autoland that a problem was flagged. That means it is more likely something on autoland that caused the issue - it may not have been obvious & you might not have been able to find it which I'm happy with, but it would be nice to have seen this stated on the backout message.\n\n\nAs it is, the test has actually been made more strict - previously it was possible that not all the expected urls would be present.\n\nThe true regressing point for this updated test is bug 1455737 - https://hg.mozilla.org/integration/autoland/rev/40c5d3600d35, I've just tried applying that locally and it causes the issue.\n\nUrsula/Ed, please can you take a look at this?", "author": "standard8@mozilla.com", "id": 13223221, "time": "2018-04-21T09:27:32Z"}, {"text": "Ah yup, this seems to be exactly what Paolo was referring to in bug 1455737 comment 8, which is now backed out. Sorry for landing it too quickly and causing this backout! At least now we know there's a test that would have caught the brokenness -- unfortunately it happened to land on separate integration branches :(", "author": "edilee@mozilla.com", "id": 13223314, "time": "2018-04-21T10:23:41Z"}, {"text": "The backout of bug 1455737 was backed out probably because bug 1433230 also landed in the meantime.", "author": "paolo.mozmail@amadzone.org", "id": 13223472, "time": "2018-04-21T14:53:30Z"}, {"text": "Pushed by edilee@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/6747ccc87604\nReplaced tests using updatePlaces with PlaceTestUtils.addVisits. r=Standard8", "author": "pulsebot@bots.tld", "id": 13223915, "time": "2018-04-22T07:36:19Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/6747ccc87604", "author": "toros@mozilla.com", "id": 13224310, "time": "2018-04-22T22:19:24Z"}, {"text": "Thank you for re-pushing this Ed.\n\nSean: Thank you for working on this.", "author": "standard8@mozilla.com", "id": 13225978, "time": "2018-04-23T08:31:40Z"}], "id": 1448081, "priority": "P2", "cc": ["edilee@mozilla.com", "mak77@bonardo.net", "paolo.mozmail@amadzone.org", "reeisesean@gmail.com", "usarracini@mozilla.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "status": "RESOLVED", "product": "Toolkit", "cf_fx_iteration": "---", "blocks": [1448041], "qa_contact": "", "creation_time": "2018-03-22T17:54:47Z", "cf_status_firefox_esr52": "---", "component": "Places", "assigned_to_detail": {"email": "reeisesean@gmail.com", "id": 612853, "name": "reeisesean@gmail.com", "real_name": "Sean Reeise [:sreeise]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "fixed", "cf_status_firefox60": "---", "target_milestone": "mozilla61", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "standard8@mozilla.com", "id": 112088, "name": "standard8@mozilla.com", "real_name": "Mark Banner (:standard8)"}, "whiteboard": "[fxsearch][lang=js]", "mentors": ["standard8@mozilla.com"], "summary": "Replace remaining unit test usages of updatePlaces with PlacesTestUtils.addVisits", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-04-23T08:31:40Z", "assigned_to": "reeisesean@gmail.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "blocks", "added": "1448041"}], "who": "standard8@mozilla.com", "when": "2018-03-22T17:56:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "reeisesean@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-03-22T22:06:33Z"}, {"changes": [{"removed": "needinfo?(standard8@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "standard8@mozilla.com", "when": "2018-03-23T11:14:20Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-03-24T13:31:52Z"}, {"changes": [{"removed": "needinfo?(standard8@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "standard8@mozilla.com", "when": "2018-03-26T11:07:44Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8962026, "added": "1"}], "who": "reeisesean@gmail.com", "when": "2018-03-27T10:22:08Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-03-27T10:34:38Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "reeisesean@gmail.com"}, {"removed": "needinfo?(standard8@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "standard8@mozilla.com", "when": "2018-03-28T12:58:29Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-02T14:12:49Z"}, {"changes": [{"removed": "needinfo?(standard8@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8962664, "added": "1"}], "who": "standard8@mozilla.com", "when": "2018-04-03T15:00:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mak77@bonardo.net"}], "who": "mak77@bonardo.net", "when": "2018-04-03T21:21:49Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8966021, "added": "1"}], "who": "reeisesean@gmail.com", "when": "2018-04-08T13:05:50Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-08T13:18:05Z"}, {"changes": [{"removed": "needinfo?(standard8@mozilla.com)", "field_name": "flagtypes.name", "added": ""}, {"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8964278, "added": "1"}], "who": "standard8@mozilla.com", "when": "2018-04-10T13:33:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8968068, "added": "review?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-15T16:16:09Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8966024, "added": "1"}], "who": "reeisesean@gmail.com", "when": "2018-04-15T16:16:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8968517, "added": "feedback?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-17T13:53:23Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8968068, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(standard8@mozilla.com)", "attachment_id": 8968068, "added": ""}], "who": "reeisesean@gmail.com", "when": "2018-04-17T13:53:24Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(standard8@mozilla.com)", "attachment_id": 8968517, "added": "feedback+"}], "who": "standard8@mozilla.com", "when": "2018-04-17T16:48:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8969170, "added": "feedback?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-19T05:38:48Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8968517, "added": "1"}], "who": "reeisesean@gmail.com", "when": "2018-04-19T05:38:49Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(standard8@mozilla.com)", "attachment_id": 8969170, "added": "feedback+"}], "who": "standard8@mozilla.com", "when": "2018-04-19T13:52:33Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8969396, "added": "review?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-19T19:58:23Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8969170, "added": "1"}], "who": "reeisesean@gmail.com", "when": "2018-04-19T19:58:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8969402, "added": "review?(standard8@mozilla.com)"}], "who": "reeisesean@gmail.com", "when": "2018-04-19T20:06:38Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8969396, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(standard8@mozilla.com)", "attachment_id": 8969396, "added": ""}], "who": "reeisesean@gmail.com", "when": "2018-04-19T20:06:39Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(standard8@mozilla.com)", "attachment_id": 8969402, "added": "review+"}], "who": "standard8@mozilla.com", "when": "2018-04-20T15:16:09Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-04-20 23:02:24"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "dluca@mozilla.com", "when": "2018-04-20T23:02:24Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "REOPENED"}, {"removed": "FIXED", "field_name": "resolution", "added": ""}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(reeisesean@gmail.com)"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "---"}], "who": "dluca@mozilla.com", "when": "2018-04-21T01:53:31Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "edilee@mozilla.com, usarracini@mozilla.com"}, {"removed": "needinfo?(reeisesean@gmail.com)", "field_name": "flagtypes.name", "added": "needinfo?(edilee@mozilla.com), needinfo?(usarracini@mozilla.com)"}], "who": "standard8@mozilla.com", "when": "2018-04-21T09:27:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "paolo.mozmail@amadzone.org"}, {"removed": "needinfo?(edilee@mozilla.com), needinfo?(usarracini@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "edilee@mozilla.com", "when": "2018-04-21T10:23:41Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1455737"}], "who": "edilee@mozilla.com", "when": "2018-04-22T00:03:07Z"}, {"changes": [{"removed": "REOPENED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "2018-04-20 23:02:24", "field_name": "cf_last_resolved", "added": "2018-04-22 22:19:24"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "toros@mozilla.com", "when": "2018-04-22T22:19:24Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}