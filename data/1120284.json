{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "cam@mcc.id.au", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8547348}, {"creator": "cam@mcc.id.au", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-01-15T00:00:29Z", "type_id": 4, "creation_date": "2015-01-12T06:19:43Z", "id": 1071354, "setter": "dbaron@dbaron.org"}], "content_type": "text/plain", "id": 8547349}, {"creator": "cam@mcc.id.au", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8547350}, {"creator": "cam@mcc.id.au", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8547351}, {"creator": "cam@mcc.id.au", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-01-15T00:06:18Z", "type_id": 4, "creation_date": "2015-01-12T06:22:23Z", "id": 1071357, "setter": "dbaron@dbaron.org"}], "content_type": "text/plain", "id": 8547352}, {"creator": "cam@mcc.id.au", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-01-14T23:58:16Z", "type_id": 4, "creation_date": "2015-01-12T06:28:34Z", "id": 1071371, "setter": "dbaron@dbaron.org"}], "content_type": "text/plain", "id": 8547364}, {"creator": "cam@mcc.id.au", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-01-15T11:27:58Z", "type_id": 4, "creation_date": "2015-01-15T10:58:06Z", "id": 1074858, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8549526}, {"creator": "cam@mcc.id.au", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-01-16T09:47:48Z", "type_id": 4, "creation_date": "2015-01-16T04:26:18Z", "id": 1075764, "setter": "jfkthame@gmail.com"}], "content_type": "text/plain", "id": 8550077}], "classification": "Components", "creator": "cam@mcc.id.au", "cc": ["bas@basschouten.com", "jfkthame@gmail.com", "siqinbilige@gmail.com"], "depends_on": [], "creation_time": "2015-01-12T04:23:37Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "add support for axis-relative and non-shorthand box-edge logical properties", "id": 1120284, "assigned_to_detail": {"email": "cam@mcc.id.au", "id": 54040, "name": "cam@mcc.id.au", "real_name": "Cameron McCormack (:heycam) (away for the moment)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "cam@mcc.id.au", "comment_count": 21, "comments": [{"text": "With bug 649142, we support logical property groups whose physical properties correspond to an existing physical shorthand.\n\nFor bug 1117983, where we are implementing {,max-,min-}{block,inline}-size, we will need support for defining groups of logical properties whose names correspond to axes rather than sides.\n\nFor bug 1120283, we we are implementing offset-{block,inline}-{start,end}, we will need support for defining groups of logical properties whose names correspond to four box sides but which also don't corresponding to an existing shorthand.\n\nThis bug is for adding support for these two kinds of logical properties.", "author": "cam@mcc.id.au", "id": 9779974, "time": "2015-01-12T04:23:37Z"}, {"text": "Created attachment 8547348\nPart 1: Define logical property groups more explicitly.", "author": "cam@mcc.id.au", "id": 9780125, "time": "2015-01-12T06:19:10Z"}, {"text": "Created attachment 8547349\nPart 2: Support non-shorthand-related logical box property groups.", "author": "cam@mcc.id.au", "id": 9780126, "time": "2015-01-12T06:19:43Z"}, {"text": "Created attachment 8547350\nPart 3: Add physical axis constants.", "author": "cam@mcc.id.au", "id": 9780128, "time": "2015-01-12T06:21:13Z"}, {"text": "Created attachment 8547351\nPart 4: Add functions to convert from logical to physical axes based on writing mode.", "author": "cam@mcc.id.au", "id": 9780129, "time": "2015-01-12T06:21:48Z"}, {"text": "Created attachment 8547352\nPart 5: Support logical axis properties.", "author": "cam@mcc.id.au", "id": 9780132, "time": "2015-01-12T06:22:23Z"}, {"text": "Comment on attachment 8547348\nPart 1: Define logical property groups more explicitly.\n\nForgot to update a comment in here...", "author": "cam@mcc.id.au", "id": 9780135, "time": "2015-01-12T06:22:52Z"}, {"text": "Created attachment 8547364\nPart 1: Define logical property groups more explicitly.", "author": "cam@mcc.id.au", "id": 9780158, "time": "2015-01-12T06:28:34Z"}, {"text": "Try run for my logical properties branch: https://treeherder.mozilla.org/ui/#/jobs?repo=try&revision=9bf2ce4d8c8c", "author": "cam@mcc.id.au", "id": 9780214, "time": "2015-01-12T06:52:05Z"}, {"text": "Comment on attachment 8547351\nPart 4: Add functions to convert from logical to physical axes based on writing mode.\n\nReview of attachment 8547351:\n-----------------------------------------------------------------\n\n::: layout/generic/WritingModes.h\n@@ +287,5 @@\n> +    // NS_STYLE_WRITING_MODE_VERTICAL_RL, and not the other two (real\n> +    // and hypothetical) values.  But this is fine; we only need to\n> +    // distinguish between vertical and horizontal in\n> +    // PhysicalAxisForLogicalAxis.\n> +    int wm = (mWritingMode & eBlockFlowMask) >> 1;\n\nWhy not just use\n\n  int wm = mWritingMode & eOrientationMask;\n\nhere? That's exactly the one bit of information you need.", "author": "jfkthame@gmail.com", "id": 9780841, "time": "2015-01-12T10:16:10Z"}, {"text": "(In reply to Jonathan Kew (:jfkthame) from comment #9)\n> Why not just use\n> \n>   int wm = mWritingMode & eOrientationMask;\n> \n> here? That's exactly the one bit of information you need.\n\nI must have made a mistake there; (mWritingMode & eOrientationMask) is indeed the value that will correspond to NS_STYLE_WRITING_MODE_HORIZONTAL_TB or NS_STYLE_WRITING_MODE_VERTICAL_RL that I mention in the comment.", "author": "cam@mcc.id.au", "id": 9780992, "time": "2015-01-12T10:50:36Z"}, {"text": "Comment on attachment 8547364\nPart 1: Define logical property groups more explicitly.\n\nCould you use logicalgroup_ instead of group_ as the CSS_PROP_* argument\nname, for clarity?\n\n\n(I'm waiting to see how you construct kLogicalGroupTable once you\nhave groups that don't correspond to shorthands...)\n\n>+      return &kLogicalGroupTable[gLogicalGroupMappingTable[i + 1]][0];\n\nCan you remove the & and the [0] ?\n\n\nr=dbaron with that", "author": "dbaron@dbaron.org", "id": 9796363, "time": "2015-01-14T23:58:16Z"}, {"text": "Comment on attachment 8547349\nPart 2: Support non-shorthand-related logical box property groups.\n\n>+//   CSS_PROP_LOGICAL_GROUP_BOX(name_)\n>+//     Defines a logical property group whose corresponding physical\n>+//     properties are a set of four box properties which are not\n>+//     already represented by an existing shorthand property.  For\n>+//     example, the logical property group for\n>+//     offset-{block,inline}-{start,end} contains the top, right,\n>+//     bottom and left physical properties, but there is no shorthand\n>+//     that sets those four properties.  The name_ argument must be\n>+//     capitalized LikeSo.  A table must be defined in nsCSSProps.cpp\n>+//     named g<name_>LogicalGroupTable containing the four physical\n>+//     properties in top/right/bottom/left order.\n\nI think you should also specify that name_ must not a be the DOM property name of a CSS property.", "author": "dbaron@dbaron.org", "id": 9796377, "time": "2015-01-15T00:00:29Z"}, {"text": "Comment on attachment 8547352\nPart 5: Support logical axis properties.\n\nSame comment about name_ as patch 2.\n\n>+#ifdef DEBUG\n>+  size_t len = isAxisProperty ? 2 : 4;\n>+  for (size_t i = 0; i < len; i++) {\n>+    MOZ_ASSERT(props[i] != eCSSProperty_UNKNOWN,\n>+               \"unexpected logical group length\");\n>+  }\n>+  MOZ_ASSERT(props[len] == eCSSProperty_UNKNOWN,\n>+             \"unexpected logical group length\");\n>+#endif\n\nPlease brace and indent the whole contents of the #ifdef, like so:\n\n#ifdef DEBUG\n  {\n    size_t len ...\n    ...\n    MOZ_ASSERT(...);\n  }\n#endif", "author": "dbaron@dbaron.org", "id": 9796407, "time": "2015-01-15T00:06:18Z"}, {"text": "Created attachment 8549526\nPart 4: Add functions to convert from logical to physical axes based on writing mode. (v2)", "author": "cam@mcc.id.au", "id": 9798158, "time": "2015-01-15T10:58:06Z"}, {"text": "Comment on attachment 8549526\nPart 4: Add functions to convert from logical to physical axes based on writing mode. (v2)\n\nReview of attachment 8549526:\n-----------------------------------------------------------------\n\n::: layout/generic/WritingModes.h\n@@ +270,5 @@\n> +  static mozilla::Axis PhysicalAxisForLogicalAxis(uint8_t aWritingModeValue,\n> +                                                  LogicalAxis aAxis)\n> +  {\n> +    // This relies on bit 0 of a writing-value mode indicating vertical\n> +    // orientation and bit 0 of a LogicalAxis value indicating the inline axis.\n\n// and on the actual values used by the mozilla::Axis enum.\n\n@@ +275,5 @@\n> +    static_assert(NS_STYLE_WRITING_MODE_HORIZONTAL_TB == 0 &&\n> +                  NS_STYLE_WRITING_MODE_VERTICAL_RL == 1 &&\n> +                  NS_STYLE_WRITING_MODE_VERTICAL_LR == 3 &&\n> +                  eLogicalAxisBlock == 0 &&\n> +                  eLogicalAxisInline == 1,\n\n...so perhaps the static_assert should check eAxisVertical and eAxisHorizontal, too.", "author": "jfkthame@gmail.com", "id": 9798240, "time": "2015-01-15T11:27:58Z"}, {"text": "Comment on attachment 8547350\nPart 3: Add physical axis constants.\n\nroc suggests not putting these under gfx/ since it's unlikely gfx will need to use them.", "author": "cam@mcc.id.au", "id": 9802789, "time": "2015-01-16T03:38:25Z"}, {"text": "Created attachment 8550077\nPart 3: Add physical axis constants. (v2)\n\nSo I think I'll move this into WritingModes.h.  roc also suggested that \"x-axis\" and \"y-axis\" were better names than \"horizontal axis\" and \"vertical axis\", and I was set to agree with him, but I think now that I like the symmetry with the LogicalAxis names.  So I'm going to stick with that.", "author": "cam@mcc.id.au", "id": 9802922, "time": "2015-01-16T04:26:18Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=eb39d2f17fc2", "author": "cam@mcc.id.au", "id": 9808160, "time": "2015-01-17T04:43:00Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/2c04677df85e\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/853c7f0ffd62\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/002730607596\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/810f46a5cd16\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/5e1ea6b6bed8", "author": "cam@mcc.id.au", "id": 9808163, "time": "2015-01-17T04:46:20Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/2c04677df85e\nhttps://hg.mozilla.org/mozilla-central/rev/853c7f0ffd62\nhttps://hg.mozilla.org/mozilla-central/rev/002730607596\nhttps://hg.mozilla.org/mozilla-central/rev/810f46a5cd16\nhttps://hg.mozilla.org/mozilla-central/rev/5e1ea6b6bed8", "author": "philringnalda@gmail.com", "id": 9809003, "time": "2015-01-17T20:59:32Z"}], "cf_last_resolved": "2015-01-17T20:59:32Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-12-16T08:10:17Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [145503, 1323940, 1117983, 1120283], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "CSS Parsing and Computation", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla38", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "cam@mcc.id.au", "id": 54040, "name": "cam@mcc.id.au", "real_name": "Cameron McCormack (:heycam) (away for the moment)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "bas@basschouten.com", "id": 272464, "name": "bas@basschouten.com", "real_name": "Bas Schouten (:bas.schouten)"}, {"email": "jfkthame@gmail.com", "id": 329583, "name": "jfkthame@gmail.com", "real_name": "Jonathan Kew (:jfkthame) [PTO, 5-16 Mar]"}, {"email": "siqinbilige@gmail.com", "id": 512533, "name": "siqinbilige@gmail.com", "real_name": ""}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "cam@mcc.id.au"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8547348, "added": "review?(dbaron@dbaron.org)"}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:19:10Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8547349, "added": "review?(dbaron@dbaron.org)"}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:19:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bas@basschouten.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8547350, "added": "review?(bas@basschouten.com)"}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:21:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jfkthame@gmail.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8547351, "added": "review?(jfkthame@gmail.com)"}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:21:48Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8547352, "added": "review?(dbaron@dbaron.org)"}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:22:23Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8547348, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(dbaron@dbaron.org)", "attachment_id": 8547348, "added": ""}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:22:52Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8547364, "added": "review?(dbaron@dbaron.org)"}], "who": "cam@mcc.id.au", "when": "2015-01-12T06:28:34Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "siqinbilige@gmail.com"}], "who": "siqinbilige@gmail.com", "when": "2015-01-12T09:11:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dbaron@dbaron.org)", "attachment_id": 8547364, "added": "review+"}], "who": "dbaron@dbaron.org", "when": "2015-01-14T23:58:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dbaron@dbaron.org)", "attachment_id": 8547349, "added": "review+"}], "who": "dbaron@dbaron.org", "when": "2015-01-15T00:00:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(dbaron@dbaron.org)", "attachment_id": 8547352, "added": "review+"}], "who": "dbaron@dbaron.org", "when": "2015-01-15T00:06:18Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8547351, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8547351, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8549526, "added": "review?(jfkthame@gmail.com)"}], "who": "cam@mcc.id.au", "when": "2015-01-15T10:58:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8549526, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2015-01-15T11:27:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bas@basschouten.com)", "attachment_id": 8547350, "added": ""}], "who": "cam@mcc.id.au", "when": "2015-01-16T03:38:25Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8547350, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8550077, "added": "review?(jfkthame@gmail.com)"}], "who": "cam@mcc.id.au", "when": "2015-01-16T04:26:18Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jfkthame@gmail.com)", "attachment_id": 8550077, "added": "review+"}], "who": "jfkthame@gmail.com", "when": "2015-01-16T09:47:48Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla38"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-01-17 12:59:32"}], "who": "philringnalda@gmail.com", "when": "2015-01-17T20:59:32Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1323940"}], "who": "dbaron@dbaron.org", "when": "2016-12-16T08:10:17Z"}], "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "cf_blocking_fennec": "---"}