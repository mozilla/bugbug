{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "lilydjwg@gmail.com", "mentors_detail": [], "depends_on": [], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["crash"], "cc_detail": [{"email": "cam@mcc.id.au", "id": 54040, "name": "cam@mcc.id.au", "real_name": "Cameron McCormack (:heycam)"}, {"email": "emilio@crisal.io", "id": 546716, "name": "emilio@crisal.io", "real_name": "Emilio Cobos \u00c1lvarez [:emilio]"}, {"email": "jorge@mozilla.com", "id": 189742, "name": "jorge@mozilla.com", "real_name": "Jorge Villalobos [:jorgev]"}, {"email": "kkumari@softvision.com", "id": 558218, "name": "kkumari@softvision.com", "real_name": "Kanchan Kumari QA"}, {"email": "kmaglione+bmo@mozilla.com", "id": 106098, "name": "kmaglione+bmo@mozilla.com", "real_name": "Kris Maglione [:kmag]"}], "cf_last_resolved": "2018-05-07T09:58:44Z", "attachments": [], "votes": 0, "classification": "Components", "is_confirmed": false, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 7, "comments": [{"text": "This bug was filed from the Socorro interface and is\nreport bp-123c99c2-c3a3-4b9d-88d3-7182f0180330.\n=============================================================\n\nTop 10 frames of crashing thread:\n\n0  @0x407a1a \n1  @0x4079e3 \n2  @0x7f9e107b5be8 \n3  @0x7f9e107b5577 \n4  @0x7f9e107b7435 \n5  @0x7f9e107b73c9 \n6  @0x7f9e107d0032 \n7  @0x7f9e107d0278 \n8  @0x7f9e1058122b \n9  @0x7f9e10313ad0 \n\n=============================================================\n\nI have the cliget addon installed, and it has recorded some items (in today's case: one). When I click the button of cliget, Firefox crashes. Reproduced once (100%) after the crash.", "author": "lilydjwg@gmail.com", "id": 13168586, "time": "2018-03-30T08:20:46Z"}, {"text": "This looks like a bug somewhere in stylo, but I doubt anyone will be able to do anything without a crash report with symbols.", "author": "kmaglione+bmo@mozilla.com", "id": 13180696, "time": "2018-04-04T18:30:26Z"}, {"text": "Why is there no symbols? I see most crash reports have symbols, but not this one.\nHow can I get them? I'm using the official nightly builds.", "author": "lilydjwg@gmail.com", "id": 13182196, "time": "2018-04-05T06:12:23Z"}, {"text": "Not actionable for now.", "author": "cam@mcc.id.au", "id": 13214219, "time": "2018-04-18T01:02:53Z"}, {"text": "I've got a backtrace using a debug build downloaded by mozregression (8e754a50cee5-debug--mozilla-inbound--target.tar.bz2):\n\nbt                                                                                                                            [118/2815]\n#0  0x000000000041bd6a in mozalloc_abort(char const*) ()                                                    \n#1  0x000000000041bd40 in mozalloc_abort(char const*) ()                     \n#2  0x00007fffe976d179 in panic_abort::__rust_start_panic::abort () at /home/lilydjwg/tmpfs/firefox/libxul.so                      \n#3  0x00007fffe976d169 in __rust_start_panic () at /home/lilydjwg/tmpfs/firefox/libxul.so        \n#4  0x00007fffe975a74d in rust_panic () at /home/lilydjwg/tmpfs/firefox/libxul.so        \n#5  0x00007fffe975a6b2 in std::panicking::rust_panic_with_hook () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#6  0x00007fffe975a4cf in std::panicking::begin_panic () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#7  0x00007fffe975a3ca in std::panicking::begin_panic_fmt () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#8  0x00007fffe975a353 in rust_begin_unwind () at /home/lilydjwg/tmpfs/firefox/libxul.so                                              \n#9  0x00007fffe977bee1 in core::panicking::panic_fmt () at /home/lilydjwg/tmpfs/firefox/libxul.so                            \n#10 0x00007fffe977bf59 in core::option::expect_failed () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#11 0x00007fffe96e1db2 in <style::stylesheet_set::DocumentStylesheetSet<S>>::insert_stylesheet_before ()\n    at /home/lilydjwg/tmpfs/firefox/libxul.so                                                    \n#12 0x00007fffe92fe853 in Servo_StyleSet_InsertStyleSheetBefore () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#13 0x00007fffe7910299 in mozilla::ServoStyleSet::AddDocStyleSheet(mozilla::ServoStyleSheet*, nsIDocument*) ()\n    at /home/lilydjwg/tmpfs/firefox/libxul.so                                 \n#14 0x00007fffe679ad08 in nsIDocument::AddStyleSheetToStyleSets(mozilla::StyleSheet*) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#15 0x00007fffe67b3f8f in nsIDocument::InsertStyleSheetAt(mozilla::StyleSheet*, unsigned long) ()\n    at /home/lilydjwg/tmpfs/firefox/libxul.so                      \n#16 0x00007fffe78e04fd in mozilla::css::Loader::InsertSheetInDoc(mozilla::StyleSheet*, nsIContent*, nsIDocument*) () \n    at /home/lilydjwg/tmpfs/firefox/libxul.so\n#17 0x00007fffe78f6d46 in mozilla::css::Loader::LoadStyleLink(nsIContent*, nsIURI*, nsIPrincipal*, nsTSubstring<char16_t> const&, nsTSub\nstring<char16_t> const&, bool, mozilla::CORSMode, mozilla::net::ReferrerPolicy, nsTSubstring<char16_t> const&, nsICSSLoaderObserver*, bo\nol*) () at /home/lilydjwg/tmpfs/firefox/libxul.so \n#18 0x00007fffe6802ea0 in nsStyleLinkElement::DoUpdateStyleSheet(nsIDocument*, mozilla::dom::ShadowRoot*, nsICSSLoaderObserver*, bool*,\nbool*, bool) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#19 0x00007fffe68030e4 in nsStyleLinkElement::UpdateStyleSheet(nsICSSLoaderObserver*, bool*, bool*, bool) ()\n    at /home/lilydjwg/tmpfs/firefox/libxul.so\n#20 0x00007fffe6360f35 in nsHtml5DocumentBuilder::UpdateStyleSheet(nsIContent*) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#21 0x00007fffe638bdf2 in nsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*) ()\n    at /home/lilydjwg/tmpfs/firefox/libxul.so\n#22 0x00007fffe638c9f1 in nsHtml5TreeOpExecutor::RunFlushLoop() () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#23 0x00007fffe638cbe7 in nsHtml5ExecutorFlusher::Run() () at /home/lilydjwg/tmpfs/firefox/libxul.so \n#24 0x00007fffe5b71abe in nsThread::ProcessNextEvent(bool, bool*) [clone .part.288] () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#25 0x00007fffe5b738d9 in NS_ProcessNextEvent(nsIThread*, bool) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n---Type <return> to continue, or q <return> to quit---\n#26 0x00007fffe5f4c78c in mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#27 0x00007fffe5f21ad7 in MessageLoop::RunInternal() () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#28 0x00007fffe5f21b03 in MessageLoop::Run() () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#29 0x00007fffe77d2589 in nsBaseAppShell::Run() () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#30 0x00007fffe85bc8b5 in nsAppStartup::Run() () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#31 0x00007fffe8650635 in XREMain::XRE_mainRun() () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#32 0x00007fffe8650e74 in XREMain::XRE_main(int, char**, mozilla::BootstrapConfig const&) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#33 0x00007fffe86511cc in XRE_main(int, char**, mozilla::BootstrapConfig const&) () at /home/lilydjwg/tmpfs/firefox/libxul.so\n#34 0x0000000000406b7d in do_main(int, char**, char**) ()\n#35 0x000000000040646e in main ()\n\nIt's a lot work to guess and tweak things to get so far, but at least gdb works now. I can try to send a core file after tidying things up if you are going to work on this and need it.", "author": "lilydjwg@gmail.com", "id": 13214593, "time": "2018-04-18T07:33:14Z"}, {"text": "It's really better to try to find some STR to reproduce in other machines. That stack tells me that we crash from HTML parsing, and the before_sheet thing just says that we failed to add a sheet before. But without seeing which operations happen on the page for that to happen it's really hard to diagnose where the problem lies.", "author": "emilio@crisal.io", "id": 13214635, "time": "2018-04-18T07:52:44Z"}, {"text": "It turned out that VimFx caused this. (I never thought a XUL extension with only JavaScript can crash Firefox.)", "author": "lilydjwg@gmail.com", "id": 13259186, "time": "2018-05-07T09:58:44Z"}], "id": 1450206, "priority": "P5", "cc": ["cam@mcc.id.au", "emilio@crisal.io", "jorge@mozilla.com", "kkumari@softvision.com", "kmaglione+bmo@mozilla.com"], "cf_crash_signature": "[@ @0x407a1a]", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [], "qa_contact": "", "creation_time": "2018-03-30T08:20:46Z", "cf_status_firefox_esr52": "---", "component": "CSS Parsing and Computation", "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "affected", "cf_status_firefox60": "---", "target_milestone": "---", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "critical", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "lilydjwg@gmail.com", "id": 343778, "name": "lilydjwg@gmail.com", "real_name": ""}, "whiteboard": "", "mentors": [], "summary": "crash with `before_sheet` stylesheet not found", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-07T09:58:44Z", "assigned_to": "nobody@mozilla.org", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "keywords", "added": "crash"}, {"removed": "", "field_name": "cc", "added": "kkumari@softvision.com"}, {"removed": "Untriaged", "field_name": "component", "added": "Extension Compatibility"}], "who": "kkumari@softvision.com", "when": "2018-04-04T17:15:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jorge@mozilla.com"}, {"removed": "Extension Compatibility", "field_name": "component", "added": "WebExtensions: Untriaged"}, {"removed": "Firefox", "field_name": "product", "added": "Toolkit"}], "who": "jorge@mozilla.com", "when": "2018-04-04T17:59:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kmaglione+bmo@mozilla.com"}, {"removed": "WebExtensions: Untriaged", "field_name": "component", "added": "CSS Parsing and Computation"}, {"removed": "Toolkit", "field_name": "product", "added": "Core"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-04-04T18:30:26Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P5"}, {"removed": "", "field_name": "cc", "added": "cam@mcc.id.au"}], "who": "cam@mcc.id.au", "when": "2018-04-18T01:02:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "emilio@crisal.io"}], "who": "emilio@crisal.io", "when": "2018-04-18T07:52:44Z"}, {"changes": [{"removed": "UNCONFIRMED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "INVALID"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-07 09:58:44"}], "who": "lilydjwg@gmail.com", "when": "2018-05-07T09:58:44Z"}], "resolution": "INVALID", "op_sys": "Linux", "cf_fx_points": "---", "cf_blocking_fennec": "---"}