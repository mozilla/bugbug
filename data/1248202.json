{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "nth10sd@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [], "content_type": "text/plain", "id": 8719223}, {"creator": "shu@rfrn.org", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-02-17T15:38:22Z", "type_id": 4, "creation_date": "2016-02-16T23:52:09Z", "id": 1343506, "setter": "jdemooij@mozilla.com"}, {"status": "+", "name": "feedback", "modification_date": "2016-02-16T23:27:47Z", "type_id": 607, "creation_date": "2016-02-16T22:06:35Z", "id": 1343415, "setter": "nth10sd@gmail.com"}], "content_type": "text/plain", "id": 8719965}], "classification": "Components", "creator": "nth10sd@gmail.com", "cc": ["choller@mozilla.com", "fuzzing@mozilla.com", "jcoppeard@mozilla.com", "jdemooij@mozilla.com", "jruderman@gmail.com", "nth10sd@gmail.com", "shu@rfrn.org"], "depends_on": [], "creation_time": "2016-02-14T01:59:45Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "x86", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["assertion", "regression", "testcase"], "summary": "Assertion failure: hasOptimizations(), at js/src/jit/CompileInfo.h:168", "id": 1248202, "assigned_to_detail": {"email": "nobody@mozilla.org", "id": 1, "name": "nobody@mozilla.org", "real_name": "Nobody; OK to take it and work on it"}, "severity": "critical", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "yes", "assigned_to": "nobody@mozilla.org", "comment_count": 10, "comments": [{"text": "The following testcase crashes on mozilla-central revision d719ac4bcbec (build with --enable-debug --enable-more-deterministic --32, run with --fuzzing-safe --no-threads --ion-eager):\n\n// jsfunfuzz-generated\nenableSPSProfilingWithSlowAssertions();\n// Adapted from randomly chosen test: js/src/jit-test/tests/modules/eval-module-oom.js\nlet x = {};\nsetModuleResolveHook(function(m, s) {\n    return x[s];\n})\nlet y = \"export default 0; export function f(){}\";\nlet z = \"import x from 'a'\";\noomTest(() => {\n    x['a'] = parseModule(y);\n    let b = x[''] = parseModule(z);\n    b.declarationInstantiation();\n    throw 42;\n})\n\nBacktrace:\n\n0   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0040531b js::jit::IonBuilder::startTrackingOptimizations() + 459 (CompileInfo.h:168)\n1   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x002b2ca1 js::jit::IonBuilder::jsop_getprop(js::PropertyName*) + 33 (IonBuilder.cpp:10982)\n2   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x002a51cd js::jit::IonBuilder::inspectOpcode(JSOp) + 1117 (IonBuilder.cpp:2016)\n3   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x002a269a js::jit::IonBuilder::traverseBytecode() + 634 (IonBuilder.cpp:1522)\n4   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0029d417 js::jit::IonBuilder::build() + 2039 (IonBuilder.cpp:918)\n5   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0027efa5 js::jit::Compile(JSContext*, JS::Handle<JSScript*>, js::jit::BaselineFrame*, unsigned char*, bool, bool) + 3141 (Ion.cpp:2195)\n6   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0027df63 js::jit::CanEnter(JSContext*, js::RunState&) + 387 (Ion.cpp:2526)\n7   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0081f5d2 js::RunScript(JSContext*, js::RunState&) + 274 (Interpreter.cpp:402)\n8   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x00837daf js::Invoke(JSContext*, JS::CallArgs const&, js::MaybeConstruct) + 687 (Interpreter.cpp:493)\n9   js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0083827d js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) + 381 (Interpreter.cpp:527)\n10  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x001d2e0f js::jit::DoCallFallback(JSContext*, js::jit::BaselineFrame*, js::jit::ICCall_Fallback*, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) + 2735 (BaselineIC.cpp:6136)\n11  ???                           \t0x01ddce2e 0 + 31313454\n12  ???                           \t0x0310f4a0 0 + 51442848\n13  ???                           \t0x01dd6c5c 0 + 31288412\n14  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x001e336b EnterBaseline(JSContext*, js::jit::EnterJitData&) + 683 (BaselineJIT.cpp:149)\n15  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x001e2ec9 js::jit::EnterBaselineMethod(JSContext*, js::RunState&) + 249 (BaselineJIT.cpp:185)\n16  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0081f60f js::RunScript(JSContext*, js::RunState&) + 335 (Interpreter.cpp:415)\n17  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x00837daf js::Invoke(JSContext*, JS::CallArgs const&, js::MaybeConstruct) + 687 (Interpreter.cpp:493)\n18  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0083827d js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) + 381 (Interpreter.cpp:527)\n19  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0058fb3c JS_CallFunction(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSFunction*>, JS::HandleValueArray const&, JS::MutableHandle<JS::Value>) + 540 (jsapi.cpp:2856)\n20  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x007fa2b9 OOMTest(JSContext*, unsigned int, JS::Value*) + 873 (TestingFunctions.cpp:1210)\n21  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x008534dd js::CallJSNative(JSContext*, bool (*)(JSContext*, unsigned int, JS::Value*), JS::CallArgs const&) + 221 (jscntxtinlines.h:236)\n22  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x00837dfc js::Invoke(JSContext*, JS::CallArgs const&, js::MaybeConstruct) + 764 (Interpreter.cpp:463)\n23  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x0083827d js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) + 381 (Interpreter.cpp:527)\n24  js-dbg-32-dm-clang-darwin-d719ac4bcbec\t0x001d2e0f js::jit::DoCallFallback(JSContext*, js::jit::BaselineFrame*, js::jit::ICCall_Fallback*, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) + 2735 (BaselineIC.cpp:6136)\n25  ???                           \t0x01ddce2e 0 + 31313454\n26  ???                           \t0x03198db8 0 + 52006328\n\nThis seems to only reproduce on 32-bit shells.", "author": "nth10sd@gmail.com", "id": 11163999, "time": "2016-02-14T01:59:45Z"}, {"text": "autoBisect shows this is probably related to the following changeset:\n\nThe first bad revision is:\nchangeset:   https://hg.mozilla.org/mozilla-central/rev/fd69e842ed49\nparent:      274349:6499724b05d0\nuser:        Jon Coppeard\ndate:        Thu Nov 26 11:49:54 2015 +0000\nsummary:     Bug 1227533 - Factor out dummy module resolve hook from tests r=shu\n\nJon, is bug 1227533 a likely regressor?", "author": "nth10sd@gmail.com", "id": 11164001, "time": "2016-02-14T02:01:35Z"}, {"text": "Created attachment 8719223\nOOM_VERBOSE=1 stack from m-c rev d719ac4bcbec", "author": "nth10sd@gmail.com", "id": 11164002, "time": "2016-02-14T02:02:12Z"}, {"text": "JSBugMon: The testcase found in this bug no longer reproduces (tried revision e355cacefc88).", "author": "fuzzing@mozilla.com", "id": 11164127, "time": "2016-02-14T04:31:23Z"}, {"text": "Not related to that bug, but thanks to the stack in comment 2 I can see what the problem is.  IonBuilder::trackOptimizationAttemptUnchecked() calls setOptimizations(nullptr) on the BytecodeSite if we hit OOM, but that will cause subsequent calls to optimizations() to assert.  Maybe we need to disable optimisation tracking if we hit OOM, or take account of the the possibility that this may be null.", "author": "jcoppeard@mozilla.com", "id": 11165696, "time": "2016-02-15T11:29:43Z"}, {"text": "Created attachment 8719965\nHandle an OOM case in optimization tracking.\n\nSo I can't reproduce the bug, but based on the stacks this looks like the\ncorrect fix. Can someone who was able to reproduce the bug try this patch to\nconfirm fix?", "author": "shu@rfrn.org", "id": 11169913, "time": "2016-02-16T22:06:35Z"}, {"text": "Comment on attachment 8719965\nHandle an OOM case in optimization tracking.\n\nYes, this fix works. Thanks!", "author": "nth10sd@gmail.com", "id": 11170266, "time": "2016-02-16T23:27:47Z"}, {"text": "Shu-yu, is this ready for landing?", "author": "nth10sd@gmail.com", "id": 11193391, "time": "2016-02-25T00:23:50Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/4b043b29bb04", "author": "pulsebot@bots.tld", "id": 11194060, "time": "2016-02-25T07:51:41Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/4b043b29bb04", "author": "kwierso@gmail.com", "id": 11196740, "time": "2016-02-25T22:27:01Z"}], "cf_last_resolved": "2016-02-25T22:27:01Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-02-25T22:27:01Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [349611, 1100132, 1227533], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "JavaScript Engine", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla47", "cf_status_firefox47": "fixed", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "nth10sd@gmail.com", "id": 132034, "name": "nth10sd@gmail.com", "real_name": "Gary Kwong [:gkw] [:nth10sd]"}, "whiteboard": "[jsbugmon:update,ignore]", "mentors": [], "cc_detail": [{"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, {"email": "fuzzing@mozilla.com", "id": 469204, "name": "fuzzing@mozilla.com", "real_name": "Fuzzing Team"}, {"email": "jcoppeard@mozilla.com", "id": 443194, "name": "jcoppeard@mozilla.com", "real_name": "Jon Coppeard (:jonco) (PTO until 13th March)"}, {"email": "jdemooij@mozilla.com", "id": 375297, "name": "jdemooij@mozilla.com", "real_name": "Jan de Mooij [:jandem] (PTO Mar 8)"}, {"email": "jruderman@gmail.com", "id": 11608, "name": "jruderman@gmail.com", "real_name": "Jesse Ruderman"}, {"email": "nth10sd@gmail.com", "id": 132034, "name": "nth10sd@gmail.com", "real_name": "Gary Kwong [:gkw] [:nth10sd]"}, {"email": "shu@rfrn.org", "id": 381259, "name": "shu@rfrn.org", "real_name": "Shu-yu Guo [:shu]"}], "cf_has_str": "yes", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "cf_qa_whiteboard": "", "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "jcoppeard@mozilla.com, shu@mozilla.com"}, {"removed": "", "field_name": "blocks", "added": "1227533"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jcoppeard@mozilla.com)"}], "who": "nth10sd@gmail.com", "when": "2016-02-14T02:01:35Z"}, {"changes": [{"removed": "[jsbugmon:update]", "field_name": "whiteboard", "added": "[jsbugmon:update,ignore]"}], "who": "fuzzing@mozilla.com", "when": "2016-02-14T04:31:22Z"}, {"changes": [{"removed": "needinfo?(jcoppeard@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jcoppeard@mozilla.com", "when": "2016-02-15T11:29:43Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(shu@mozilla.com)"}], "who": "jcoppeard@mozilla.com", "when": "2016-02-16T10:08:26Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8719965, "added": "feedback?(gary@rumblingedge.com)"}, {"removed": "", "field_name": "cc", "added": "gary@rumblingedge.com"}], "who": "shu@rfrn.org", "when": "2016-02-16T22:06:35Z"}, {"changes": [{"removed": "needinfo?(shu@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "shu@rfrn.org", "when": "2016-02-16T22:06:45Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(shu@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "feedback?(gary@rumblingedge.com)", "attachment_id": 8719965, "added": "feedback+"}], "who": "nth10sd@gmail.com", "when": "2016-02-16T23:27:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jdemooij@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8719965, "added": "review?(jdemooij@mozilla.com)"}], "who": "shu@rfrn.org", "when": "2016-02-16T23:52:09Z"}, {"changes": [{"removed": "needinfo?(shu@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "shu@rfrn.org", "when": "2016-02-16T23:52:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jdemooij@mozilla.com)", "attachment_id": 8719965, "added": "review+"}], "who": "jdemooij@mozilla.com", "when": "2016-02-17T15:38:22Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(shu@mozilla.com)"}], "who": "nth10sd@gmail.com", "when": "2016-02-25T00:23:50Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}, {"removed": "needinfo?(shu@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "shu@rfrn.org", "when": "2016-02-25T00:35:37Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2016-02-25T07:51:41Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla47"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-02-25 14:27:01"}, {"removed": "affected", "field_name": "cf_status_firefox47", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2016-02-25T22:27:01Z"}], "resolution": "FIXED", "op_sys": "Mac OS X", "cf_fx_points": "---", "cf_blocking_fennec": "---"}