{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "dholbert@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-05-23T15:37:45Z", "type_id": 4, "creation_date": "2016-05-23T15:37:45Z", "id": 1398621, "setter": "mats@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-05-30T13:11:50Z", "type_id": 720, "creation_date": "2016-05-24T12:31:00Z", "id": 1399106, "setter": "sledru@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8755037}, {"creator": "dholbert@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-05-23T15:37:17Z", "type_id": 4, "creation_date": "2016-05-20T22:18:53Z", "id": 1398008, "setter": "mats@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8755038}], "classification": "Components", "creator": "dholbert@mozilla.com", "cc": ["aethanyc@gmail.com", "bmo@upshifts.org", "jobs@adrienjarthon.com", "kdubost@mozilla.com", "mats@mozilla.com", "miket@mozilla.com", "rego@igalia.com", "sebastianzartner@gmail.com", "sledru@mozilla.com", "u459114@disabled.tld"], "depends_on": [], "creation_time": "2016-05-19T00:32:28Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["dev-doc-complete"], "summary": "Supporting \"display: -webkit-flex\" as an alias for \"display: flex\" (and associated properties)", "id": 1274096, "assigned_to_detail": {"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "dholbert@mozilla.com", "comment_count": 50, "comments": [{"text": "Filing this bug for a possible problem (not 100% sure whether or not it's bad enough that we need to address it).\n\nSO, I've run across two cases* recently where a site has CSS ordering like:\n>  .foo {\n>     /* Flexbox display values: */\n>     display:flex;\n>     display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */\n>     display: -webkit-flex;     /* NEW - Chrome */\n> \n>     /* Styles which are required for the page to render correctly, and\n>       which only work if this element is a modern flex container: */\n>     flex-direction: column;\n>     align-items: center;\n> }\n\nSites with CSS like that ^^ will experience rendering regressions when the layout.css.prefixes.webkit pref is enabled (i.e. when bug 1259345 hits release).\n\nIn particular: Firefox release only recognizes the first \"display\" value, Firefox Nightly (with layout.css.prefixes.webkit) recognizes the first and second, and Chrome recognizes all three. So Firefox release and Chrome end up with modern flexbox (display:flex/display:-webkit-flex), but Firefox Nightly ends up with emulated old-school flexbox (-webkit-box).  This means Firefox Nightly won't honor e.g. the \"flex-direction\" property specified further down.\n\nThis is only an issue because the site has two problems:\n (1) It's got its display values in the wrong order - best practice is to have the most-modern property listed last.\n (2) It's using \"display:-webkit-box\" without actually providing useful values for the \"-webkit-box\" associated properties.\n\nSo really, in cases like this, the site should just fix one or both of these issues. (1) in particular should be trivial for them to fix. But depending on how common this is, it might create an unsustainable Tech Evang burden.\n\nSo: we might just need to add support for \"display: -webkit-flex\" as an alias for \"display:flex\", so that we'll recognize all three \"display\" values just like Chrome does.\n\n* The two cases where I ran across this are:\n(1) https://github.com/webcompat/web-bugs/issues/2528#issuecomment-217563748\n(2) http://stackoverflow.com/questions/37306138/flexbox-not-working-properly-on-firefox-but-okay-on-chrome-safari  (Note that the actual question in that post is about a different issue -- `-moz-box` messing things up -- but the CSS quoted by the questioner there reveals that the site in question will be susceptible to this problem, too.)", "author": "dholbert@mozilla.com", "id": 11420655, "time": "2016-05-19T00:32:28Z"}, {"text": "Local testing indicates that Edge does support \"display:-webkit-flex\" as an alias for \"display:flex\", as well as webkit-prefixed versions of the associated properties listed here:\nhttps://drafts.csswg.org/css-flexbox-1/#property-index\n\nHere's the testcase I used for that:\n https://jsfiddle.net/yhsvzwt5/\n\nWe've deferred to Edge's research & final decisions on webkit-aliasing-worthiness before; we probably should in this case as well.\n\nAstley, does someone on your team have cycles for this?\n\nShould be pretty straightforward -- we need to do the following things:\n\nSUPPORTING THE NEW PROPERTY ALIASES:\n(1) Add webkit prefix macro invocations for each of these properties...\n https://drafts.csswg.org/css-flexbox-1/#property-index\n...to this file:\nhttp://mxr.mozilla.org/mozilla-central/source/layout/style/nsCSSPropAliasList.h?rev=c0a618d9fa6f#360\n...and also add blocks to this file so they get tested:\nhttp://mxr.mozilla.org/mozilla-central/source/layout/style/test/property_database.js?rev=cf57eb3d5080#7379\n\nSUPPORTING THE NEW VALUES FOR THE \"display\" PROPERTY:\n(2) We need to add \"-webkit-flex\" and \"-webkit-inline-flex\" as CSS Keywords, here:\n http://mxr.mozilla.org/mozilla-central/source/layout/style/nsCSSKeywordList.h?rev=0daf8488dbda#128\n\n(3) We need to add mappings from those keywords to our internal enum for the modern flexbox keywords (NS_STYLE_DISPLAY_FLEX / ...INLINE_FLEX) to kDisplayKTable, adjacent to the webkit-box stuff, here:\nhttp://mxr.mozilla.org/mozilla-central/source/layout/style/nsCSSProps.cpp?rev=0daf8488dbda#1287\n\n(4) We need to update \"WebkitPrefixEnabledPrefChangeCallback\" in nsLayoutUtils to stomp on these new kDisplayKTable entries when the pref changes (like we already do for -webkit-box/-webkit-inline-box).\n\n(5) We need to add a test to ensure that \"display:-webkit-flex\" and \"display: -webkit-inline-flex\" have an effect.", "author": "dholbert@mozilla.com", "id": 11423409, "time": "2016-05-19T18:59:21Z"}, {"text": "(I'm also happy to take this myself, too.)", "author": "dholbert@mozilla.com", "id": 11424043, "time": "2016-05-19T23:19:17Z"}, {"text": "Actually, I'm just going to take this myself, in the interests of getting it fixed ASAP, so that we can uplift it to 48 ASAP.\n\n(I want to do that so that we can enable webkit prefix support on beta48 for a trial period -- see bug 1259345 comment 16 for more details.  I anticipate that this bug here might be a source of pain / breakage for users & sites during that trial period, so I want to have this fixed before the beta48 trial.)", "author": "dholbert@mozilla.com", "id": 11426368, "time": "2016-05-20T18:47:11Z"}, {"text": "Created attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nReview commit: https://reviewboard.mozilla.org/r/54350/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/54350/", "author": "dholbert@mozilla.com", "id": 11426971, "time": "2016-05-20T22:18:53Z"}, {"text": "Created attachment 8755038\nMozReview Request: Bug 1274096 part 2: Add support for \"-webkit-flex\" & \"-webkit-inline-flex\" as spellings of modern flexbox \"display\" keywords, if webkit prefix support is enabled. r?mats\n\nReview commit: https://reviewboard.mozilla.org/r/54352/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/54352/", "author": "dholbert@mozilla.com", "id": 11426972, "time": "2016-05-20T22:18:53Z"}, {"text": "Comment on attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nhttps://reviewboard.mozilla.org/r/54350/#review51044\n\n::: layout/style/nsCSSPropAliasList.h:371\n(Diff revision 1)\n> +CSS_PROP_ALIAS(-webkit-flex-flow,\n> +               flex_flow,\n> +               WebkitFlexFlow,\n> +               WEBKIT_PREFIX_PREF)\n> +CSS_PROP_ALIAS(-webkit-order,\n> +               order,\n\nSo this would affect grid IIUC:\nselector {\n  display:grid;\n  -webkit-order: 99;\n}\n\nWhat does Chrome do (with grid enabled) in this case?\n\nSame question for the align/justify aliases.\n(The other ones looks flexbox-specific.)", "author": "mats@mozilla.com", "id": 11427020, "time": "2016-05-20T22:40:33Z"}, {"text": "I assume/expect they're literally just property aliases -- anything else seems like it'd be probably-crazy -- but I'll test to be sure...\n\n(Also: I'm writing a mochitest to assert that \"display:-webkit-flex\"/\"-webkit-inline-flex\" is accepted and produces a computed value of \"flex\"/\"inline-flex\". I'll attach that as \"part 3\".)", "author": "dholbert@mozilla.com", "id": 11427044, "time": "2016-05-20T22:49:25Z"}, {"text": "https://webkit.org/blog/6131/updating-our-prefixing-policy/\n\"We\u2019ll be evaluating existing features on a case-by-case basis. We expect to significantly reduce the number of prefixed properties supported over time but Web compatibility will require us to keep around prefixed versions of some features.\"\n\nCan we perhaps convince them to drop the prefix on -webkit-order and the align/justify properties NOW?", "author": "mats@mozilla.com", "id": 11427045, "time": "2016-05-20T22:50:32Z"}, {"text": "BTW, do we have any evidence that all these properties are needed for web compat?\nLooking at the example in comment 0, it is using 'align-items' unprefixed...", "author": "mats@mozilla.com", "id": 11427058, "time": "2016-05-20T22:53:30Z"}, {"text": "s/all these/the non-flexbox/ in the last comment.\nThe flexbox-specific ones are probably fine to add anyway.", "author": "mats@mozilla.com", "id": 11427088, "time": "2016-05-20T23:10:22Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #8)\n> https://webkit.org/blog/6131/updating-our-prefixing-policy/\n> \"We\u2019ll be evaluating existing features on a case-by-case basis. We expect to\n> significantly reduce the number of prefixed properties supported over time\n> but Web compatibility will require us to keep around prefixed versions of\n> some features.\"\n> \n> Can we perhaps convince them to drop the prefix on -webkit-order and the\n> align/justify properties NOW?\n\n-webkit-order usage is pretty high: https://www.chromestatus.com/metrics/css/timeline/popularity/495\n-webkit-justify-content is higher: https://www.chromestatus.com/metrics/css/timeline/popularity/493\n-webkit-align-content less high, but way higher than the typical removal threshhold: https://www.chromestatus.com/metrics/css/timeline/popularity/478", "author": "miket@mozilla.com", "id": 11427092, "time": "2016-05-20T23:14:18Z"}, {"text": "Addressing comment 6: Chrome does honor these prefixed alignment/order properties in grid, just as I was expecting (i.e. they're just aliases).\n\n(I opened grid-justify-content-001.html in Chrome, and adjusted a \"justify-content:center\" declaration to use \"-webkit-justify-content:center\" instead. That change did not affect the rendering.  But removing the declaration did affect the rendering.  So, -webkit-justify-content has the same effect as justify-content for grid.  And I did a similar experiment on \"order\" with \"grid-order-placement-auto-001.html\".)", "author": "dholbert@mozilla.com", "id": 11427098, "time": "2016-05-20T23:18:49Z"}, {"text": "(In reply to Mike Taylor [:miketaylr] from comment #11)\n> -webkit-order usage is pretty high:\n> https://www.chromestatus.com/metrics/css/timeline/popularity/495\n\nDo you know what the \"page loads that use this property\" actually means there?\nI find it hard to believe that ~8% of all page loads have a flexbox with\n-webkit-order applied.  Then again, if Facebook or some other big site\nuse it then it might explain it.", "author": "mats@mozilla.com", "id": 11427106, "time": "2016-05-20T23:24:53Z"}, {"text": "Does Chrome and/or Safari support order/align/justify unprefixed as well?", "author": "mats@mozilla.com", "id": 11427108, "time": "2016-05-20T23:25:14Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #9)\n> BTW, do we have any evidence that all these properties are needed for web\n> compat?\n> Looking at the example in comment 0, it is using 'align-items' unprefixed...\n\nMy CSS in comment 0 was just an example of how we could get into trouble (and regress our rendering) by supporting \"display:-webkit-box\" without *also* adding \"display:-webkit-flex\" support.\n\n\"Part 2\" is clearly sufficient to fix that CSS. HOWEVER: if we only take part 2, we're opening ourselves up to failing on sites from before Safari/Chrome unprefixed that have...\n\n   /* no-flexbox fallback CSS: */\n     ...set elements to be floats, or table cells, or something...\n\n   /* flexbox CSS */\n   display: -webkit-flex;\n   -webkit-flex-direction: \n   -webkit-align-items: center;\n   -webkit-justify-content: center;\n\nIn that sort of scenario, \"Part 2\" patch on its own (only supporting \"display: -webkit-flex\") could make us go the tested reliable currently-working fallback behavior, to some sort of weird untested behavior with an unstyled flexbox.\n\n(Or it could make it go from one broken layout to a different broken layout. There will surely be websites in each category.)\n\n(In reply to Mats Palmgren (:mats) from comment #13)\n> Do you know what the \"page loads that use this property\" actually means\n> there?\n\nIt means \"page loads that have this property in a stylesheet\". In most of those cases, the page probably also provides unprefixed \"order\" (so we'd be fine not supporting the prefixed version).  But there's no way to know how many are in the other category of only using \"-webkit-order\" (and relying on it, when display:-webkit-flex is supported).\n\n(In reply to Mats Palmgren (:mats) from comment #14)\n> Does Chrome and/or Safari support order/align/justify unprefixed as well?\n\nThey do currently. They didn't always, though.  So, there surely exists content from before they unprefixed which only has prefixed styles.  I don't know how much content like that there is, but I don't want to *regress* our rendering on that content (in scenarios like the one I laid out higher up in this comment).", "author": "dholbert@mozilla.com", "id": 11427143, "time": "2016-05-20T23:48:37Z"}, {"text": "(\"There's no way to know\" was maybe overstating it -- what I meant was \"chrome does not have metrics on how often people provide one without the other\".  We could try to collect those metrics, but to do so would delay shipping webkit prefix support, which would be unfortunate.  Also, Microsoft already did a bunch of research / metrics-collection when making their decisions about which prefixed aliases to support in Edge, and they came down on the side of supporting all these properties -- see Comment 1.)", "author": "dholbert@mozilla.com", "id": 11427154, "time": "2016-05-20T23:54:07Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #8)\n> Can we perhaps convince them to drop the prefix on -webkit-order and the\n> align/justify properties NOW?\n\nI doubt it, honestly.", "author": "dholbert@mozilla.com", "id": 11427155, "time": "2016-05-20T23:54:56Z"}, {"text": "> My CSS in comment 0 was just an example\n\nOh, ok, I thought it was a snippet from a site.  (He, I missed the .foo there)\n\n> in Edge, and they came down on the side of supporting all these properties\n\n... supporting all these properties *in flexbox* layout I presume?\n\n> I doubt it, honestly.\n\nYeah, I agree it's too late for flexbox.", "author": "mats@mozilla.com", "id": 11427197, "time": "2016-05-21T00:10:16Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #10)\n> s/all these/the non-flexbox/ in the last comment.\n> The flexbox-specific ones are probably fine to add anyway.\n\nOne thought on this - so, from the perspective of legacy & current content (which is the content I'm concerned with supporting & not-awkwardly-breaking-as-in-comment 15 here), *all* of these properties (including \"order\", \"align-items\", etc) are flexbox-specific. These properties all came into existence as part of the flexbox spec, and they all currently only apply in a flexbox context in currently-shipping browser releases.\n\nSome of them (e.g. the ones that were promoted into css-align) *will* end up having an effect on other rendering modes in the future (in Firefox as well as in Chrome/Safari/Edge).  But authors won't have a good reason to bother relying on the prefixed versions in those unprefixed future sites. (except maybe via muscle memory & bad habits)  (Though if they do use prefixed styles, they'll still end up with sites that work everywhere but Firefox, if we don't take part 1 here.)\n\n(And if they do, and the web grows to depend on these prefixed aliases, it's not the end of the world -- aliases are cheap and trivial to maintain, if we have to do so. And that Apple blog post [combined with Blink's prefixing/unsupporting policy] does mean we can rejoice that the set of these prefixed aliases *is bounded* and will hopefully shrink over time. But even if it does not shrink, it's at least bounded.)\n\n(In reply to Mats Palmgren (:mats) from comment #18)\n> > in Edge, and they came down on the side of supporting all these properties\n> \n> ... supporting all these properties *in flexbox* layout I presume?\n\nSupporting all these properties *as aliases for the unprefixed versions*. They only happen to do anything in flexbox, because that's the only place that Edge has support for the unprefixed versions, AFAIK.", "author": "dholbert@mozilla.com", "id": 11427203, "time": "2016-05-21T00:12:41Z"}, {"text": "It seems rather unfortunate to ship Grid with support for these\nprefixed properties when there currently are no web content that\ndepends on them.  :-(\n\nIf we restrict them to Flexbox then there is a greater chance we can\nremove them some day.", "author": "mats@mozilla.com", "id": 11427220, "time": "2016-05-21T00:26:02Z"}, {"text": "Rego, how hard hard would it be to *not* support the prefixed properties\n-webkit-order, -webkit-justify-* and -webkit-align-* for grid boxes in\nWebKit/Blink?  (i.e. to restrict the usage to Flexbox only)", "author": "mats@mozilla.com", "id": 11427222, "time": "2016-05-21T00:27:18Z"}, {"text": "It'd be hard to restrict them to flexbox while still having them be aliases, IMO.\n\ne.g. suppose we have:\n <div class=\"align-self: center;-webkit-align-self: space-around;\"></div>\n\nAre you promosing that getComputedStyle().alignSelf on that element should change based on the \"display\" value of its parent? That seems quite complex to implement, and needlessly-complex...", "author": "dholbert@mozilla.com", "id": 11427230, "time": "2016-05-21T00:33:20Z"}, {"text": "I don't think the possibility of Blink/WebKit unprefixing at some point in the future should influence us shipping this or not.(In reply to Mats Palmgren (:mats) from comment #13)\n> (In reply to Mike Taylor [:miketaylr] from comment #11)\n> > -webkit-order usage is pretty high:\n> > https://www.chromestatus.com/metrics/css/timeline/popularity/495\n> \n> Do you know what the \"page loads that use this property\" actually means\n> there?\n> I find it hard to believe that ~8% of all page loads have a flexbox with\n> -webkit-order applied.  Then again, if Facebook or some other big site\n> use it then it might explain it.\n\nYeah, it's tricky to tease this apart from rules that contain both prefixed and unprefixed. AFAICT, Chrome is measuring any -webkit-order property value that it parses (and treats as an alias as order).\n\nhttps://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/css/parser/CSSPropertyParser.cpp&sq=package:chromium&type=cs&l=100&rcl=1463771930\n\nhttps://code.google.com/p/chromium/codesearch#chromium/src/out/Debug/gen/blink/core/CSSPropertyNames.h&q=CSSPropertyAliasWebKitOrder&sq=package:chromium&type=cs&l=478\n\n(See https://chromium.googlesource.com/chromium/src/+/ef0bbaa58e53dc720970aec40a06f24ca66f7b0d%5E%21/, for a diff when morten unprefixed multicol and made prefixed multicol aliases of unprefixed in Blink)\n\nThat said, Chrome won't be dropping these prefixes any time soon. So we should add them until that glorious day in the distant future.", "author": "miket@mozilla.com", "id": 11427293, "time": "2016-05-21T01:25:11Z"}, {"text": "Comment on attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/54350/diff/1-2/", "author": "dholbert@mozilla.com", "id": 11427630, "time": "2016-05-21T15:19:20Z"}, {"text": "Comment on attachment 8755038\nMozReview Request: Bug 1274096 part 2: Add support for \"-webkit-flex\" & \"-webkit-inline-flex\" as spellings of modern flexbox \"display\" keywords, if webkit prefix support is enabled. r?mats\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/54352/diff/1-2/", "author": "dholbert@mozilla.com", "id": 11427631, "time": "2016-05-21T15:19:20Z"}, {"text": "Added a mochitest for \"display:-webkit-flex\" serializing/computing as \"display:flex\" (and similar for -webkit-inline-flex) to part 2 now, to test the code in that patch.", "author": "dholbert@mozilla.com", "id": 11427634, "time": "2016-05-21T15:22:07Z"}, {"text": "> AFAICT, Chrome is measuring any -webkit-order property value that it parses\n\nI would assume most web developers knows to put the unprefixed declaration last,\nand there are JS frameworks out there that automates generating such rules.\nSo it wouldn't surprise me if the number of page loads that actually depends\non parsing the prefixed version is 3 or 4 *orders of magnitudes* less than\nthe number of pages it is found on.\n\nSo, I think Googles data is pretty much useless for making a decision on\nwhether we must support these prefixed properties or not.\n\n> Chrome won't be dropping these prefixes any time soon\n\nGrid support is still disabled by default in all UAs (AFAIK) so this\ndiscussion is NOT about dropping something - it's about avoiding\n*to introduce* support for -webkit- properties for a feature that doesn't\nneed it for web compat: Grid.  It's only needed for Flexbox (if you\nbelieve the data is showing that it's needed in the first place).\n\nIMHO, we should try to avoid introducing -webkit- properties on Grid if\nit is at all technically feasible.  I believe strongly that it is our\nresponsibility as a UA vendor to not make the -webkit- situation worse\nthan it already is.  If we introduce it on Grid we have failed miserably\non that responsibility.\n\nThat said, it may indeed be too hard to limit the support to Flexbox only.\nI'm not a Style System guru so I don't know if it's technically feasible.", "author": "mats@mozilla.com", "id": 11429750, "time": "2016-05-23T11:14:27Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #21)\n> Rego, how hard hard would it be to *not* support the prefixed properties\n> -webkit-order, -webkit-justify-* and -webkit-align-* for grid boxes in\n> WebKit/Blink?  (i.e. to restrict the usage to Flexbox only)\n\nI'm not sure, but taking a quick look they're just aliases:\nhttps://chromium.googlesource.com/chromium/src.git/+/fa6d4cde7dda58b7a11486fd6324c0b78c5bf3e6/third_party/WebKit/Source/core/css/CSSProperties.in#565\n\nI agree with Daniel on comment #22, something like that does't seem easy to implement.", "author": "rego@igalia.com", "id": 11429975, "time": "2016-05-23T13:09:05Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #27)\n> So, I think Googles data is pretty much useless for making a decision on\n> whether we must support these prefixed properties or not.\n\nI agree. My justification here isn't the google data.\n\nMy position is simply that, if we support \"display: -webkit-flex\" (and we probably have to, per this bug), then it'd be weird for us *not to* support prefixed versions of the associated properties that were introduced *in the same spec*. Supporting one without the other means we'd get behavior that *no other browser has ever had*, when presented with content like comment 15.  That smells like possibility for unforseen breakage to me.\n\nAs you say, we don't have data here, but I expect that there is content that was created using only prefixed versions of those properties (like comment 15), targeting only mobile web or something. That content has a particular fallback on Firefox right now.  If we take \"display:-webkit-flex\" without supporting the other properties, that content will switch to some weird intermediate not-fallback-and-not-author's-intention rendering. I'd like to avoid that.\n\n> this discussion is NOT about dropping something - it's about avoiding\n> *to introduce* support for -webkit- properties for a feature that doesn't\n> need it for web compat: Grid.  It's only needed for Flexbox (if you\n> believe the data is showing that it's needed in the first place).\n\nWe *aren't introducing any grid-specific prefixed properties here.\n\n(And I agree we avoid doing that, if at all possible. I expect/hope we can hold Google and Apple to their commitments about new features & flags-not-prefixes there, with  \"grid-template-rows\" etc.)\n\nHowever, that doesn't mean we should prevent authors from applying general prefixed property-aliases to a grid. For example: \"box-sizing\" and \"transform\" apply to CSS grid (and many other elements), and we support prefixed versions of those properties. I don't see why we should view the alignment properties in this bug as being any different.\n\n> That said, it may indeed be too hard to limit the support to Flexbox only.\n> I'm not a Style System guru so I don't know if it's technically feasible.\n\nYeah, I think it'd be more trouble than it's worth, and it would be inconsistent with how we & other browsers treat other broadly-applicable prefixed aliases.", "author": "dholbert@mozilla.com", "id": 11430284, "time": "2016-05-23T15:00:30Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #27)\n> I would assume most web developers knows to put the unprefixed declaration\n> last\n\n(I used to think that too. But it takes just one trending site with a developer who didn't know that to make Firefox look busted https://github.com/webcompat/web-bugs/issues/2528#issuecomment-218016537)", "author": "miket@mozilla.com", "id": 11430315, "time": "2016-05-23T15:12:03Z"}, {"text": "> My position is simply that, if we support \"display: -webkit-flex\" (and we probably\n> have to, per this bug), then it'd be weird for us *not to* support prefixed versions\n> of the associated properties\n\nI agree they should be supported on Flexbox.\n\n> For example: \"box-sizing\" and \"transform\" apply to CSS grid\n\nFwiw, I'd rather not support -webkit- prefixed aliases for those either on Grid.", "author": "mats@mozilla.com", "id": 11430354, "time": "2016-05-23T15:26:15Z"}, {"text": "It might be possible to implement it cheaply like this:\nMaintain a bit for each property that says if a -webkit- alias was\nused to set the value.  Later when we're about to create a grid box,\ncheck if any of the bits are set.  If so, don't create a grid box,\ngive them an inline box instead!  This way it will be impossible to\ncreate a grid if you use -webkit- aliases *in the wrong way*.\n\nSince there are only a few aliases that we want to forbid for Grid\n(e.g. order, justify-*/align-*) we would only need to maintain\nbits for those.\n\nThis strategy is a bit like the one used for some new features that\nare only available over https.  If you use http, then you simply\ndon't get the goodies.  We could use the same here - if you use\n-webkit- prefixed aliases *wrongly*, then no Grid for you!\n\nGranted, other UA vendors needs to agree to implement that strategy\ntoo for it to be effective.", "author": "mats@mozilla.com", "id": 11430358, "time": "2016-05-23T15:27:08Z"}, {"text": "Comment on attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nhttps://reviewboard.mozilla.org/r/54350/#review51206\n\nNot happy about it leaking into Grid, but I guess it's hard to address\nthat without other UA vendors agreeing on some strategy to avoid it.\n\nThe code looks fine.  r=mats", "author": "mats@mozilla.com", "id": 11430385, "time": "2016-05-23T15:36:47Z"}, {"text": "Comment on attachment 8755038\nMozReview Request: Bug 1274096 part 2: Add support for \"-webkit-flex\" & \"-webkit-inline-flex\" as spellings of modern flexbox \"display\" keywords, if webkit prefix support is enabled. r?mats\n\nhttps://reviewboard.mozilla.org/r/54352/#review51208", "author": "mats@mozilla.com", "id": 11430386, "time": "2016-05-23T15:37:17Z"}, {"text": "Comment on attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nhttps://reviewboard.mozilla.org/r/54350/#review51210", "author": "mats@mozilla.com", "id": 11430388, "time": "2016-05-23T15:37:46Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #32)\n> It might be possible to implement it cheaply like this:\n> Maintain a bit [...]\n> Granted, other UA vendors needs to agree to implement that strategy\n> too for it to be effective.\n\nI agree this strategy *might* be workable (with some details / edge cases ironed out), but only if all UAs (Chrome in particular) operated this way, as you say. And I don't see a strong incentive for them to change to take on this complexity, so I think we'll have to settle for simple aliases with later data-driven removals on a case-by-case basis.\n\nIn any case: thanks for the reviews!", "author": "dholbert@mozilla.com", "id": 11430496, "time": "2016-05-23T16:22:14Z"}, {"text": "Note: I also had to tweak layout/inspector/tests/test_bug877690.html -- which includes its own hardcoded list of accepted \"display\" values -- to add \"-webkit-flex\"/\"-webkit-inline-flex\", or else that test fails. (I always forget we need to update that test when we add new display values.)\n\nI'm not bothering reposting patch, to avoid retriggering MozReview.  Try run here, though (with that change):\n https://treeherder.mozilla.org/#/jobs?repo=try&revision=1dab48edf915\n\n...and here's the link to the change in that test:\n  https://hg.mozilla.org/try/rev/75dd4935915e27a72aadeecae3c1a4eb5a115a58#l2.2", "author": "dholbert@mozilla.com", "id": 11430520, "time": "2016-05-23T16:33:07Z"}, {"text": "Looks like we've got a devtools test which has a hardcoded \"expected number of valid display values\", basically -- I filed bug 1275081 on getting that test improved, and in the meantime I'll bump its count when I land the patches here, to avoid causing test failures.", "author": "dholbert@mozilla.com", "id": 11431175, "time": "2016-05-24T03:03:43Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/bbd1d5a1fc25\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/483b17546c54", "author": "pulsebot@bots.tld", "id": 11432241, "time": "2016-05-24T11:43:11Z"}, {"text": "Comment on attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nRequesting backport approval for both patches here, to go to Aurora48, as part of an early-beta48 trial.  See bug 1259345 comment 16 and/or this mozilla.compatibility post for context: https://groups.google.com/forum/#!topic/mozilla.compatibility/velpLiTN44Y\n\nThe code here will be disabled partway through the beta48 cycle.  (Exact timing is flexible, but I'm thinking after ~2 weeks of beta.)  Discussion on that timing can happen on the mozilla.compatibility post linked above, or on bug 1259345.\n\nApproval Request Comment\n[Feature/regressing bug #]: webkit prefix support (for better web compatibility)\n\n[User impact if declined]: Possible layout regressions on sites that incorrectly order their prefixed/unprefixed fallback CSS (as described in comment 0), in Firefox builds with webkit prefix support enabled.\n\n[Describe test coverage new/current, TreeHerder]: Tests included.\n\n[Risks and why]:\n - From the perspective of Firefox 48 *release*, this is very low-risk, as this is behind a pref which we're intending to only enable for a short period during 48 beta and then disable. So, this code won't be active in Firefox 48 release.\n - From the perspective of Firefox 48 early-beta and Aurora, this is moderate to low risk.  (This can only affect pages where someone has included \"display:-webkit-flex\" and/or associated properties without unprefixed fallback [or they've mis-ordered their CSS such that the unprefixed fallback gets stomped on by something else, as in comment 0].  And on those pages, this bug is much more likely to change our rendering for the better than for the worse.)\n\n[String/UUID change made/needed]: None.", "author": "dholbert@mozilla.com", "id": 11432297, "time": "2016-05-24T12:31:00Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/bbd1d5a1fc25\nhttps://hg.mozilla.org/mozilla-central/rev/483b17546c54", "author": "cbook@mozilla.com", "id": 11433374, "time": "2016-05-24T20:06:43Z"}, {"text": "Comment on attachment 8755037\nMozReview Request: Bug 1274096 part 1: Add support for webkit-prefixed aliases of modern flexbox CSS properties. r?mats\n\nLow risk on the release, will improve our testing with our beta population, taking it", "author": "sledru@mozilla.com", "id": 11448407, "time": "2016-05-30T13:11:50Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/70f114d27c05", "author": "cbook@mozilla.com", "id": 11448698, "time": "2016-05-30T14:23:32Z"}, {"text": "*** Bug 1278059 has been marked as a duplicate of this bug. ***", "author": "dholbert@mozilla.com", "id": 11463879, "time": "2016-06-04T23:50:32Z"}, {"text": "Just noticed we only uplifted \"part 1\" here (without \"part 2\"). Uplift request was for both patches, as noted in comment 40.\n\nSo, this isn't fully fixed in DevEdition 48 right now (but it will be once we uplift part 2).\n\nI'll uplift part 2 now.", "author": "dholbert@mozilla.com", "id": 11463880, "time": "2016-06-04T23:52:21Z"}, {"text": "(Part 2's changes to browser_rules_completion-new-property_02.js [the devtools test mentioned in comment 38] don't uplift cleanly, because that test file is different between Aurora & Trunk.\n\nI suspect the Aurora version of that test doesn't need a tweak, since it doesn't look like it has the same hardcoded number-of-valid-display-values.  But I'll build locally & verify that it still passes, before landing the uplift for part 2.)", "author": "dholbert@mozilla.com", "id": 11463883, "time": "2016-06-04T23:58:08Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/dc972d877cd6", "author": "dholbert@mozilla.com", "id": 11463940, "time": "2016-06-05T02:06:49Z"}, {"text": "Added compatibility notes to the following pages:\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex-flow\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/order\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex-shrink\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-items\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-content\n\nAlso, added a description of the -webkit-flex and -webkit-inline-flex values to https://developer.mozilla.org/en-US/docs/Web/CSS/display#Values and listed the changes at https://developer.mozilla.org/en-US/Firefox/Releases/48.\n\nDanial, can you please verify if everything is correct?\n\nSebastian", "author": "sebastianzartner@gmail.com", "id": 11581459, "time": "2016-07-28T09:14:14Z"}, {"text": "Looks good! Thanks.", "author": "dholbert@mozilla.com", "id": 11584245, "time": "2016-07-29T05:53:25Z"}], "cf_last_resolved": "2016-05-24T20:06:43Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-07-29T07:49:37Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1259345], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "CSS Parsing and Computation", "votes": 0, "cf_status_firefox49": "fixed", "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla49", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "dholbert@mozilla.com", "id": 278074, "name": "dholbert@mozilla.com", "real_name": "Daniel Holbert [:dholbert]"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "aethanyc@gmail.com", "id": 503090, "name": "aethanyc@gmail.com", "real_name": "Ting-Yu Lin [:TYLin] (UTC+8) (Away, needinfo me if you need anything)"}, {"email": "bmo@upshifts.org", "id": 549002, "name": "bmo@upshifts.org", "real_name": "Astley Chen (inactive)"}, {"email": "jobs@adrienjarthon.com", "id": 572993, "name": "jobs@adrienjarthon.com", "real_name": ""}, {"email": "kdubost@mozilla.com", "id": 473918, "name": "kdubost@mozilla.com", "real_name": "Karl Dubost :karlcow"}, {"email": "mats@mozilla.com", "id": 5168, "name": "mats@mozilla.com", "real_name": "Mats Palmgren (:mats)"}, {"email": "miket@mozilla.com", "id": 389500, "name": "miket@mozilla.com", "real_name": "Mike Taylor [:miketaylr] (PTO March 9 - 14)"}, {"email": "rego@igalia.com", "id": 520386, "name": "rego@igalia.com", "real_name": "Manuel Rego Casasnovas"}, {"email": "sebastianzartner@gmail.com", "id": 446518, "name": "sebastianzartner@gmail.com", "real_name": "Sebastian Zartner [:sebo]"}, {"email": "sledru@mozilla.com", "id": 495955, "name": "sledru@mozilla.com", "real_name": "Sylvestre Ledru [:sylvestre]"}, {"email": "u459114@disabled.tld", "id": 459114, "name": "u459114@disabled.tld", "real_name": ""}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "miket@mozilla.com"}, {"removed": "Consider support \"display: -webkit-flex\" as an alias for \"display: flex\" (and associated properties)", "field_name": "summary", "added": "Consider supporting \"display: -webkit-flex\" as an alias for \"display: flex\" (and associated properties)"}], "who": "dholbert@mozilla.com", "when": "2016-05-19T00:32:46Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1259345"}], "who": "dholbert@mozilla.com", "when": "2016-05-19T00:37:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "aschen@mozilla.com, cku@mozilla.com, tlin@mozilla.com"}], "who": "bmo@upshifts.org", "when": "2016-05-19T07:43:59Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(aschen@mozilla.com)"}], "who": "dholbert@mozilla.com", "when": "2016-05-19T19:39:23Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "dholbert@mozilla.com"}, {"removed": "needinfo?(aschen@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dholbert@mozilla.com", "when": "2016-05-20T18:47:11Z"}, {"changes": [{"removed": "Consider supporting \"display: -webkit-flex\" as an alias for \"display: flex\" (and associated properties)", "field_name": "summary", "added": "Supporting \"display: -webkit-flex\" as an alias for \"display: flex\" (and associated properties)"}], "who": "dholbert@mozilla.com", "when": "2016-05-20T19:45:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8755037, "added": "review?(mats@mozilla.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8755038, "added": "review?(mats@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "mats@mozilla.com"}], "who": "dholbert@mozilla.com", "when": "2016-05-20T22:18:53Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mats@mozilla.com)", "attachment_id": 8755037, "added": ""}], "who": "mats@mozilla.com", "when": "2016-05-20T22:40:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rego@igalia.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(rego@igalia.com)"}], "who": "mats@mozilla.com", "when": "2016-05-21T00:27:18Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8755037, "added": "review?(mats@mozilla.com)"}], "who": "dholbert@mozilla.com", "when": "2016-05-21T15:19:20Z"}, {"changes": [{"removed": "needinfo?(rego@igalia.com)", "field_name": "flagtypes.name", "added": ""}], "who": "rego@igalia.com", "when": "2016-05-23T13:09:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mats@mozilla.com)", "attachment_id": 8755037, "added": ""}], "who": "mats@mozilla.com", "when": "2016-05-23T15:36:46Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mats@mozilla.com)", "attachment_id": 8755038, "added": "review+"}], "who": "mats@mozilla.com", "when": "2016-05-23T15:37:17Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8755037, "added": "review+"}], "who": "mats@mozilla.com", "when": "2016-05-23T15:37:45Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8755037, "added": "approval-mozilla-aurora?"}], "who": "dholbert@mozilla.com", "when": "2016-05-24T12:31:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sledru@mozilla.com"}, {"removed": "---", "field_name": "cf_status_firefox48", "added": "affected"}], "who": "sledru@mozilla.com", "when": "2016-05-24T19:05:50Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla49"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-05-24 13:06:43"}, {"removed": "affected", "field_name": "cf_status_firefox49", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-05-24T20:06:43Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kdubost@mozilla.com"}], "who": "kdubost@mozilla.com", "when": "2016-05-25T04:14:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8755037, "added": "approval-mozilla-aurora+"}], "who": "sledru@mozilla.com", "when": "2016-05-30T13:11:50Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox48", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-05-30T14:23:32Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jobs@adrienjarthon.com"}], "who": "dholbert@mozilla.com", "when": "2016-06-04T23:50:32Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed"}, {"removed": "", "field_name": "cc", "added": "sebastianzartner@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(dholbert@mozilla.com)"}], "who": "sebastianzartner@gmail.com", "when": "2016-07-28T09:14:14Z"}, {"changes": [{"removed": "needinfo?(dholbert@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "dholbert@mozilla.com", "when": "2016-07-29T05:53:25Z"}, {"changes": [{"removed": "dev-doc-needed", "field_name": "keywords", "added": "dev-doc-complete"}], "who": "sebastianzartner@gmail.com", "when": "2016-07-29T07:49:37Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}