{"status": "VERIFIED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "paul.silaghi@softvision.ro", "mentors_detail": [], "depends_on": [1422811], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "keywords": [], "summary": "Cert error page is not displayed properly in iframes (content.js assumes error page is toplevel)", "cf_last_resolved": "2018-03-17T21:53:56Z", "cf_status_firefox50": "wontfix", "cf_status_firefox51": "wontfix", "votes": 0, "classification": "Client Software", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 28, "comments": [{"text": "[Affected versions]:\n- FX 45, 48, 51.0a1 (2016-08-23)\n\n[Affected platforms]:\n- all\n\n[Steps to reproduce]:\n1. Open data:text/html,<iframe src=\"https://wrong.host.badssl.com/\" height=\"500\"></iframe>\n2. Click on the 'Advanced' button\n\n[Expected result]:\n- \"Add Exception\" button should be displayed\n- Clicking on the blue error code expands below the cert error details\n\n[Actual result]:\n- \"Add Exception\" button is not displayed\n- Clicking on the blue error code displays 2 buttons with \"copy text to clipboard\"\n\n[Regression range]:\n- not a regression", "author": "paul.silaghi@softvision.ro", "id": 11650568, "time": "2016-08-24T08:16:07Z"}, {"text": "Mark, was there some kind of deliberate decision to not make this work in iframes or was that just an oversight?", "author": "gijskruitbosch+bugs@gmail.com", "id": 11650844, "time": "2016-08-24T10:15:56Z"}, {"text": "The \"Add Exception\" button is deliberately not shown in iframes to prevent pages tricking the user into adding exceptions via clickjacking. I don't see any harm in making the error code/details functionality work like normal, though.", "author": "dkeeler@mozilla.com", "id": 11651963, "time": "2016-08-24T17:12:36Z"}, {"text": "I don't recall a deliberate decision (that's not to say one wasn't made).\n\nReports will be sent for these pages (even if the content.js part to enable / disable automatic reporting isn't working) if the user has previously enabled automatic reporting since there is now necko code that sends those reports (previously, we relied on the content.js stuff to send all of the reports).\n\nPersonally, I'm not too concerned if the reporting UI isn't displayed in iframes.", "author": "mgoodwin@mozilla.com", "id": 11654041, "time": "2016-08-25T08:11:43Z"}, {"text": "Sounds like it would be nice to fix, but I think it is too late to be concerned about beta at this point.", "author": "lhenry@mozilla.com", "id": 11656892, "time": "2016-08-25T23:59:58Z"}, {"text": "*** Bug 1416195 has been marked as a duplicate of this bug. ***", "author": "jhofmann@mozilla.com", "id": 12895152, "time": "2017-12-04T14:59:35Z"}, {"text": "The fixes to this problem are most likely happening in individual bugs, like bug 1422811, so we might want to use this bug to track that work.", "author": "jhofmann@mozilla.com", "id": 12895174, "time": "2017-12-04T15:02:16Z"}, {"text": "My bug!", "author": "jhofmann@mozilla.com", "id": 13130493, "time": "2018-03-15T11:52:06Z"}, {"text": "Created attachment 8959114\nBug 1297630 - Test certificate errors in iframes.\n\nThis amends the browser_aboutCertError test file to cover error pages\nin iframes in addition to top-level pages. I figured that instead of\nre-writing all assertions in a separate test it would be smarter to\ndo the same assertions we apply to the top-level error pages on frames\nas well.\n\nI did not update the checkWrongSystemTimeWarning test, which is currently disabled.\n\nReview commit: https://reviewboard.mozilla.org/r/227990/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/227990/", "author": "jhofmann@mozilla.com", "id": 13130584, "time": "2018-03-15T12:59:50Z"}, {"text": "Created attachment 8959115\nBug 1297630 - Make certificate error pages work properly in iframes.\n\nThis adds workarounds to ensure that messages passed from browser.js\nto content.js in the context of certerror pages always contain a frameId\nwhich can be used to identify the frame that is supposed to receive them.\n\nThis fix is really meant to be temporary until we come up with a good\nreplacement for chrome - content communication, which probably boils down\nto finding a middle ground between nsAboutCapabilities, RemotePageManager and WebChannel.\n\nI did not update communication for Captive Portal pages, since those require\none-way broadcasting from chrome to content, which is not supported in this model.\nWe can fix this in the future.\n\nI did also not change the behavior of the \"Go Back\" button, which still navigates\naway the top level page, because I consider changing that behavior out of scope\nfor this bug (and in my personal opinion we should not change the behavior).\n\nReview commit: https://reviewboard.mozilla.org/r/227992/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/227992/", "author": "jhofmann@mozilla.com", "id": 13130585, "time": "2018-03-15T12:59:50Z"}, {"text": "This is mostly done to unblock bug 1415279, which would end up breaking iframe cert errors even more. I hope Franziskus can just rebase on top of my changes to fix that. I know this isn't a very clean solution, but I'm not sure we want to wait until we have figured out which of the different chrome - content communication mechanisms is the thing we want to use (and have ported everything to use that)...", "author": "jhofmann@mozilla.com", "id": 13130595, "time": "2018-03-15T13:02:39Z"}, {"text": "Comment on attachment 8959114\nBug 1297630 - Test certificate errors in iframes.\n\nhttps://reviewboard.mozilla.org/r/227990/#review233862\n\nMostly just some nits, though a bit curious about the autofocus thing.\n\n::: browser/base/content/test/about/browser_aboutCertError.js:9\n(Diff revision 1)\n>  \"use strict\";\n>  \n>  // This is testing the aboutCertError page (Bug 1207107).\n>  \n>  const GOOD_PAGE = \"https://example.com/\";\n> +const GOOD_PAGE_2 = \"https://example.org/\";\n\nIf there's a dummy page we can use in this directory, I'd prefer that over loading the root of the mochitest server, which has oodles of contents and is therefore much slower to load, esp. on debug.\n\n::: browser/base/content/test/about/browser_aboutCertError.js:69\n(Diff revision 1)\n> -  let {entries} = JSON.parse(ss.getTabState(tab));\n> +    let {entries} = JSON.parse(ss.getTabState(tab));\n> -  is(entries.length, 1, \"there is one shistory entry\");\n> +    is(entries.length, 1, \"there is one shistory entry\");\n>  \n> -  info(\"Clicking the go back button on about:certerror\");\n> +    info(\"Clicking the go back button on about:certerror\");\n> -  await ContentTask.spawn(browser, null, async function() {\n> -    let doc = content.document;\n> +    await ContentTask.spawn(browser, {frame: useFrame}, async function({frame}) {\n> +      let doc = frame ? content.document.getElementById(\"frame\").contentDocument : content.document;\n\nSubtle duplication of the `frame` ID here - given that this is always an iframe, could just `querySelector(\"iframe\")` ? Don't mind much either way though if you have strong reasons to want to use an ID.\n\n::: browser/base/content/test/about/browser_aboutCertError.js:73\n(Diff revision 1)\n> -  await ContentTask.spawn(browser, null, async function() {\n> -    let doc = content.document;\n> +    await ContentTask.spawn(browser, {frame: useFrame}, async function({frame}) {\n> +      let doc = frame ? content.document.getElementById(\"frame\").contentDocument : content.document;\n> +\n> -    let returnButton = doc.getElementById(\"returnButton\");\n> +      let returnButton = doc.getElementById(\"returnButton\");\n> +      if (!frame) {\n> -    is(returnButton.getAttribute(\"autofocus\"), \"true\", \"returnButton has autofocus\");\n> +        is(returnButton.getAttribute(\"autofocus\"), \"true\", \"returnButton has autofocus\");\n\nHm, do we deliberately not want to focus this in frames?\n\n::: browser/base/content/test/about/browser_aboutCertError.js:293\n(Diff revision 1)\n> -     \"Correct error message found\");\n> +       \"Correct error message found\");\n> -  is(message.tagName, \"a\", \"Error message is a link\");\n> +    is(message.tagName, \"a\", \"Error message is a link\");\n>  \n> -  message = await ContentTask.spawn(browser, null, async function() {\n> -    let doc = content.document;\n> +    message = await ContentTask.spawn(browser, {frame: useFrame}, async function({frame}) {\n> +      let doc = frame ? content.document.getElementById(\"frame\").contentDocument : content.document;\n> +      let win = frame ? content.document.getElementById(\"frame\").contentWindow : content.window;\n\nYou won't need `win`, you can get the docshell off `doc.docShell`\n\n::: browser/base/content/test/about/browser_aboutCertError.js:302\n(Diff revision 1)\n> +      let docShell = win.QueryInterface(Ci.nsIInterfaceRequestor)\n> +                        .getInterface(Ci.nsIWebNavigation)\n> +                        .QueryInterface(Ci.nsIDocShell);\n\nNit: doc.docShell;\n\n::: browser/base/content/test/about/browser_aboutCertError.js:361\n(Diff revision 1)\n> -    let doc = content.document;\n> +      let doc = frame ? content.document.getElementById(\"frame\").contentDocument : content.document;\n> +      let win = frame ? content.document.getElementById(\"frame\").contentWindow : content.window;\n\nSame nits for only needing `doc`\n\n::: browser/base/content/test/about/browser_aboutCertError.js:371\n(Diff revision 1)\n> +      let docShell = win.QueryInterface(Ci.nsIInterfaceRequestor)\n> +                        .getInterface(Ci.nsIWebNavigation)\n> +                        .QueryInterface(Ci.nsIDocShell);\n\nNit: doc.docShell;", "author": "gijskruitbosch+bugs@gmail.com", "id": 13130634, "time": "2018-03-15T13:34:55Z"}, {"text": "Comment on attachment 8959115\nBug 1297630 - Make certificate error pages work properly in iframes.\n\nhttps://reviewboard.mozilla.org/r/227992/#review233866\n\nUgh, I'd forgotten how terrible this code was. Security checks in random places. I had 2 comments where I pointed out missing checks, only to realize that they happened elsewhere it's just REALLY NOT OBVIOUS when we check what where. And stuff. So the sooner we switch to *anything* more sane, the better. </rant>\n\nThank you for writing this!\n\n::: commit-message-ecb8c:11\n(Diff revision 1)\n> +I did not update communication for Captive Portal pages, since those require\n> +one-way broadcasting from chrome to content, which is not supported in this model.\n> +We can fix this in the future.\n\nDo we have a follow-up bug for this? If not, can you file one?\n\nThen can we include the follow-up bug ID in this commit message please.\n\n::: browser/base/content/content.js:247\n(Diff revision 1)\n> -    return content.document.documentURI.startsWith(\"about:certerror\");\n> +    return doc.documentURI.startsWith(\"about:certerror\");\n>    },\n>  \n>    receiveMessage(msg) {\n> -    if (!this.isAboutCertError) {\n> +    if (msg.name == \"CertErrorDetails\") {\n> +      let win = WebNavigationFrames.findDocShell(msg.data.frameId, docShell);\n\nIt's uh, pretty interesting that there's a method called `findDocShell` that returns a window rather than a docshell. But OK, that's not your problem here...\n\n::: browser/base/content/content.js:248\n(Diff revision 1)\n>    },\n>  \n>    receiveMessage(msg) {\n> -    if (!this.isAboutCertError) {\n> +    if (msg.name == \"CertErrorDetails\") {\n> +      let win = WebNavigationFrames.findDocShell(msg.data.frameId, docShell);\n> +      if (!this.isAboutCertError(win.document)) {\n\nIn any case, it can return null if the frame is gone. We should catch that here and also early return.\n\n::: browser/base/content/content.js:264\n(Diff revision 1)\n> +    let docShell = win.QueryInterface(Ci.nsIInterfaceRequestor)\n> +                      .getInterface(Ci.nsIWebNavigation)\n> +                      .QueryInterface(Ci.nsIDocShell);\n\nNit: `win.document.docShell`\n\n::: browser/base/content/content.js:285\n(Diff revision 1)\n>      notAfter /= 1000;\n>      return {notBefore, notAfter};\n>    },\n>  \n>    onCertErrorDetails(msg) {\n> -    let div = content.document.getElementById(\"certificateErrorText\");\n> +    let win = WebNavigationFrames.findDocShell(msg.data.frameId, docShell);\n\nWe just did this in the calling method. Can we just pass the window by ref?\n\n::: browser/base/content/content.js:331\n(Diff revision 1)\n> -          content.document.getElementById(\"errorShortDesc\")\n> +          doc.getElementById(\"errorShortDesc\")\n>              .style.display = \"none\";\n> -          content.document.getElementById(\"wrongSystemTimePanel\")\n> +          doc.getElementById(\"wrongSystemTimePanel\")\n>              .style.display = \"block\";\n\nNit: unwrap these too please.\n\n::: browser/base/content/content.js:362\n(Diff revision 1)\n> -            content.document.getElementById(\"errorShortDesc\")\n> +            doc.getElementById(\"errorShortDesc\")\n>                .style.display = \"none\";\n> -            content.document.getElementById(\"wrongSystemTimeWithoutReferencePanel\")\n> +            doc.getElementById(\"wrongSystemTimeWithoutReferencePanel\")\n>                .style.display = \"block\";\n\nAnd these.\n\n::: browser/base/content/content.js:584\n(Diff revision 1)\n> +    let docShell = win.QueryInterface(Ci.nsIInterfaceRequestor)\n> -                                       .getInterface(Ci.nsIWebNavigation)\n> +                      .getInterface(Ci.nsIWebNavigation)\n> -                                       .QueryInterface(Ci.nsIDocShell);\n> +                      .QueryInterface(Ci.nsIDocShell);\n\n`win.document.docShell`", "author": "gijskruitbosch+bugs@gmail.com", "id": 13130661, "time": "2018-03-15T13:49:55Z"}, {"text": "Comment on attachment 8959114\nBug 1297630 - Test certificate errors in iframes.\n\nhttps://reviewboard.mozilla.org/r/227990/#review233862\n\n> Hm, do we deliberately not want to focus this in frames?\n\nI would say not, in an iframe. Feel free to raise a bug if you feel strongly about this but I don't think we should change that behavior in this bug either.", "author": "jhofmann@mozilla.com", "id": 13133676, "time": "2018-03-16T14:40:44Z"}, {"text": "Comment on attachment 8959114\nBug 1297630 - Test certificate errors in iframes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/227990/diff/1-2/", "author": "jhofmann@mozilla.com", "id": 13133712, "time": "2018-03-16T14:52:42Z"}, {"text": "Comment on attachment 8959115\nBug 1297630 - Make certificate error pages work properly in iframes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/227992/diff/1-2/", "author": "jhofmann@mozilla.com", "id": 13133713, "time": "2018-03-16T14:52:42Z"}, {"text": "Comment on attachment 8959115\nBug 1297630 - Make certificate error pages work properly in iframes.\n\nhttps://reviewboard.mozilla.org/r/227992/#review233866\n\n> Do we have a follow-up bug for this? If not, can you file one?\n> \n> Then can we include the follow-up bug ID in this commit message please.\n\nDone, thanks\n\n> It's uh, pretty interesting that there's a method called `findDocShell` that returns a window rather than a docshell. But OK, that's not your problem here...\n\nTurns out I was confusing this and it does return a docShell, but docShells also have a document getter.", "author": "jhofmann@mozilla.com", "id": 13133720, "time": "2018-03-16T14:54:13Z"}, {"text": "Comment on attachment 8959115\nBug 1297630 - Make certificate error pages work properly in iframes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/227992/diff/2-3/", "author": "jhofmann@mozilla.com", "id": 13133733, "time": "2018-03-16T14:57:51Z"}, {"text": "Pushed by jhofmann@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1f9f56aeb495\nTest certificate errors in iframes. r=Gijs\nhttps://hg.mozilla.org/integration/autoland/rev/a09f27b6dceb\nMake certificate error pages work properly in iframes. r=Gijs", "author": "pulsebot@bots.tld", "id": 13133812, "time": "2018-03-16T15:21:25Z"}, {"text": "Backout by rgurzau@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/72f6a225e5e6\nBacked out changeset a09f27b6dceb for bc failures on content/test/about/browser_aboutNetError.js and en-us failures on functional/security/test_ssl_disabled_error_page.py on a CLOSED TREE\nhttps://hg.mozilla.org/integration/autoland/rev/1365d9214e5b\nBacked out changeset 1f9f56aeb495 for bc failures on content/test/about/browser_aboutNetError.js and en-us failures on functional/security/test_ssl_disabled_error_page.py on a CLOSED TREE", "author": "pulsebot@bots.tld", "id": 13134076, "time": "2018-03-16T16:39:46Z"}, {"text": "Backed out changeset 1f9f56aeb495 (bug 1297630) for bc failures on content/test/about/browser_aboutNetError.js and en-us failures on functional/security/test_ssl_disabled_error_page.py on a CLOSED TREE\n\nBackout link: https://hg.mozilla.org/integration/autoland/rev/1365d9214e5b2054a07e53d4597acf918ff647e1\n\nPush with failures: https://treeherder.mozilla.org/#/jobs?repo=autoland&revision=a09f27b6dceb0b3f8f43468489ee3eac2c4e5a86\n\nLog link:https://treeherder.mozilla.org/logviewer.html#?job_id=168535385&repo=autoland&lineNumber=2196\n\n[task 2018-03-16T15:38:44.053Z] 15:38:44     INFO - TEST-PASS | browser/base/content/test/about/browser_aboutNetError.js | Should be showing error page - true == true - \n[task 2018-03-16T15:38:44.054Z] 15:38:44     INFO - Buffered messages finished\n[task 2018-03-16T15:38:44.055Z] 15:38:44     INFO - TEST-UNEXPECTED-FAIL | browser/base/content/test/about/browser_aboutNetError.js | prefResetButton has autofocus - null == \"true\" - \n[task 2018-03-16T15:38:44.056Z] 15:38:44     INFO - Stack trace:\n[task 2018-03-16T15:38:44.057Z] 15:38:44     INFO - resource://testing-common/content-task.js line 50 > eval:null:11\n[task 2018-03-16T15:39:28.463Z] 15:39:28     INFO - Not taking screenshot here: see the one that was previously logged", "author": "rgurzau@mozilla.com", "id": 13134255, "time": "2018-03-16T17:39:55Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=135cd9abe570736b80587a018ba5caba59247e10", "author": "jhofmann@mozilla.com", "id": 13134799, "time": "2018-03-16T20:39:13Z"}, {"text": "Comment on attachment 8959115\nBug 1297630 - Make certificate error pages work properly in iframes.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/227992/diff/3-4/", "author": "jhofmann@mozilla.com", "id": 13134803, "time": "2018-03-16T20:39:53Z"}, {"text": "Pushed by jhofmann@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/36bfb71a88ea\nTest certificate errors in iframes. r=Gijs\nhttps://hg.mozilla.org/integration/autoland/rev/9c83861ca1a1\nMake certificate error pages work properly in iframes. r=Gijs", "author": "pulsebot@bots.tld", "id": 13135037, "time": "2018-03-16T22:20:12Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/36bfb71a88ea\nhttps://hg.mozilla.org/mozilla-central/rev/9c83861ca1a1", "author": "ebalazs@mozilla.com", "id": 13136004, "time": "2018-03-17T21:53:56Z"}, {"text": "I have reproduced this bug with Nightly 51.0a1 (2016-08-24) on Windows 10, 64 Bit!\n\nThis bug's fix is verified with latest Nightly!\n\nBuild ID   : 20180419224145\nUser Agent : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0", "author": "maruf.rahman.95@gmail.com", "id": 13221149, "time": "2018-04-20T12:12:24Z"}, {"text": "(In reply to David Keeler [:keeler] (use needinfo) from comment #2)\n> The \"Add Exception\" button is deliberately not shown in iframes to prevent\n> pages tricking the user into adding exceptions via clickjacking.\nSo, is this still expected?", "author": "paul.silaghi@softvision.ro", "id": 13221191, "time": "2018-04-20T12:29:03Z"}, {"text": "(In reply to Paul Silaghi, QA [:pauly] from comment #26)\n> (In reply to David Keeler [:keeler] (use needinfo) from comment #2)\n> > The \"Add Exception\" button is deliberately not shown in iframes to prevent\n> > pages tricking the user into adding exceptions via clickjacking.\n> So, is this still expected?\n\nYeah.", "author": "jhofmann@mozilla.com", "id": 13221792, "time": "2018-04-20T16:08:27Z"}], "id": 1297630, "priority": "P3", "platform": "All", "cf_crash_signature": "", "version": "Trunk", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "attachments": [{"creator": "jhofmann@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-15T13:34:55Z", "type_id": 748, "creation_date": "2018-03-15T12:59:50Z", "id": 1729949, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8959114}, {"creator": "jhofmann@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-03-15T13:49:55Z", "type_id": 748, "creation_date": "2018-03-15T12:59:50Z", "id": 1729950, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8959115}], "cf_platform_rel": "---", "product": "Firefox", "cf_fx_iteration": "---", "blocks": [1446319, 846489, 1415279], "qa_contact": "", "creation_time": "2016-08-24T08:16:07Z", "cf_status_firefox_esr52": "---", "component": "General", "assigned_to_detail": {"email": "jhofmann@mozilla.com", "id": 522029, "name": "jhofmann@mozilla.com", "real_name": "Johann Hofmann [:johannh]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox49": "wontfix", "cf_status_firefox48": "wontfix", "cf_status_firefox62": "---", "cf_status_firefox61": "verified", "cf_status_firefox60": "---", "target_milestone": "Firefox 61", "cf_rank": null, "cf_qa_whiteboard": "[bugday-20180418]", "severity": "normal", "groups": [], "cf_fx_points": "---", "url": "", "creator_detail": {"email": "paul.silaghi@softvision.ro", "id": 428011, "name": "paul.silaghi@softvision.ro", "real_name": "Paul Silaghi, QA [:pauly]"}, "whiteboard": "[fxprivacy]", "mentors": [], "cc_detail": [{"email": "dkeeler@mozilla.com", "id": 349244, "name": "dkeeler@mozilla.com", "real_name": "[:keeler] (use needinfo)"}, {"email": "elancaster@mozilla.com", "id": 423519, "name": "elancaster@mozilla.com", "real_name": "Erin Lancaster [:elan]"}, {"email": "felipc@gmail.com", "id": 208747, "name": "felipc@gmail.com", "real_name": ":Felipe Gomes (needinfo me!)"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (he/him)"}, {"email": "jhofmann@mozilla.com", "id": 522029, "name": "jhofmann@mozilla.com", "real_name": "Johann Hofmann [:johannh]"}, {"email": "maruf.rahman.95@gmail.com", "id": 559911, "name": "maruf.rahman.95@gmail.com", "real_name": "Mohammad Maruf Rahman"}, {"email": "mgoodwin@mozilla.com", "id": 421859, "name": "mgoodwin@mozilla.com", "real_name": "Mark Goodwin [:mgoodwin]"}, {"email": "past@mozilla.com", "id": 363318, "name": "past@mozilla.com", "real_name": "Panos Astithas [:past] (please ni?)"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-10T01:59:23Z", "assigned_to": "jhofmann@mozilla.com", "is_open": false, "resolution": "FIXED", "op_sys": "All", "cc": ["dkeeler@mozilla.com", "elancaster@mozilla.com", "felipc@gmail.com", "gijskruitbosch+bugs@gmail.com", "jhofmann@mozilla.com", "maruf.rahman.95@gmail.com", "mgoodwin@mozilla.com", "past@mozilla.com"], "history": [{"changes": [{"removed": "Security exception is not displayed properly in iframes", "field_name": "summary", "added": "Cert error page is not displayed properly in iframes"}], "who": "paul.silaghi@softvision.ro", "when": "2016-08-24T08:18:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dlee@mozilla.com, felipc@gmail.com, gijskruitbosch+bugs@gmail.com, mgoodwin@mozilla.com"}, {"removed": "DOM: Security", "field_name": "component", "added": "General"}, {"removed": "1207107", "field_name": "blocks", "added": "846489"}, {"removed": "Core", "field_name": "product", "added": "Firefox"}, {"removed": "Cert error page is not displayed properly in iframes", "field_name": "summary", "added": "Cert error page is not displayed properly in iframes (content.js assumes error page is toplevel)"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mgoodwin@mozilla.com)"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2016-08-24T10:15:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "dkeeler@mozilla.com"}], "who": "dkeeler@mozilla.com", "when": "2016-08-24T17:12:36Z"}, {"changes": [{"removed": "needinfo?(mgoodwin@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mgoodwin@mozilla.com", "when": "2016-08-25T08:11:43Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox48", "added": "wontfix"}, {"removed": "affected", "field_name": "cf_status_firefox49", "added": "wontfix"}, {"removed": "affected", "field_name": "cf_status_firefox50", "added": "fix-optional"}], "who": "lhenry@mozilla.com", "when": "2016-08-25T23:59:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "past@mozilla.com"}, {"removed": "", "field_name": "whiteboard", "added": "[fxprivacy][triage]"}], "who": "past@mozilla.com", "when": "2016-08-30T14:57:00Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P3"}, {"removed": "", "field_name": "cc", "added": "elancaster@mozilla.com"}, {"removed": "[fxprivacy][triage]", "field_name": "whiteboard", "added": "[fxprivacy]"}], "who": "elancaster@mozilla.com", "when": "2016-08-30T16:07:34Z"}, {"changes": [{"removed": "dlee@mozilla.com", "field_name": "cc", "added": ""}], "who": "dimidiana@gmail.com", "when": "2017-05-31T00:51:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jhofmann@mozilla.com"}], "who": "jhofmann@mozilla.com", "when": "2017-12-04T14:59:35Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1422811"}], "who": "jhofmann@mozilla.com", "when": "2017-12-04T15:02:16Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1415279"}], "who": "franziskuskiefer@gmail.com", "when": "2018-02-23T11:22:36Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "jhofmann@mozilla.com"}], "who": "jhofmann@mozilla.com", "when": "2018-03-15T11:52:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8959114, "added": "review?(gijskruitbosch+bugs@gmail.com)"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8959115, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "jhofmann@mozilla.com", "when": "2018-03-15T12:59:50Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8959114, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-15T13:34:55Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8959115, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2018-03-15T13:49:55Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1446319"}], "who": "jhofmann@mozilla.com", "when": "2018-03-16T10:38:42Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jhofmann@mozilla.com)"}], "who": "rgurzau@mozilla.com", "when": "2018-03-16T17:39:55Z"}, {"changes": [{"removed": "needinfo?(jhofmann@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jhofmann@mozilla.com", "when": "2018-03-17T07:31:14Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "Firefox 61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-03-17 21:53:56"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "ebalazs@mozilla.com", "when": "2018-03-17T21:53:56Z"}, {"changes": [{"removed": "", "field_name": "cf_qa_whiteboard", "added": "[bugday-20180418]"}, {"removed": "", "field_name": "cc", "added": "maruf.rahman.95@gmail.com"}], "who": "maruf.rahman.95@gmail.com", "when": "2018-04-20T12:12:24Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jhofmann@mozilla.com)"}], "who": "paul.silaghi@softvision.ro", "when": "2018-04-20T12:29:03Z"}, {"changes": [{"removed": "needinfo?(jhofmann@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jhofmann@mozilla.com", "when": "2018-04-20T16:08:27Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}], "who": "paul.silaghi@softvision.ro", "when": "2018-04-23T08:43:36Z"}, {"changes": [{"removed": "fix-optional", "field_name": "cf_status_firefox50", "added": "wontfix"}, {"removed": "affected", "field_name": "cf_status_firefox51", "added": "wontfix"}], "who": "ryanvm@gmail.com", "when": "2018-06-10T01:59:23Z"}]}