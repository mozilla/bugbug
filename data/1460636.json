{"cf_tracking_thunderbird_esr52": "---", "status": "VERIFIED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "+", "cf_tracking_firefox62": "+", "creator": "continuation@gmail.com", "mentors_detail": [], "depends_on": [], "cf_status_firefox_esr60": "wontfix", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["regression"], "cc_detail": [{"email": "adrian.wielgosik@gmail.com", "id": 597303, "name": "adrian.wielgosik@gmail.com", "real_name": "Adrian Wielgosik [:adrian17]"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "eoger@fastmail.com", "id": 521718, "name": "eoger@fastmail.com", "real_name": "Edouard Oger [:eoger]"}, {"email": "gandalf@aviary.pl", "id": 41270, "name": "gandalf@aviary.pl", "real_name": "Zibi Braniecki [:gandalf][:zibi]"}, {"email": "gyula.palko@softvision.ro", "id": 615400, "name": "gyula.palko@softvision.ro", "real_name": "Gyula Palko"}, {"email": "hpradhan@gmail.com", "id": 34707, "name": "hpradhan@gmail.com", "real_name": "Harshal Pradhan"}, {"email": "jcoppeard@mozilla.com", "id": 443194, "name": "jcoppeard@mozilla.com", "real_name": "Jon Coppeard (:jonco)"}, {"email": "jcristau@mozilla.com", "id": 580382, "name": "jcristau@mozilla.com", "real_name": "Julien Cristau [:jcristau]"}, {"email": "jdemooij@mozilla.com", "id": 375297, "name": "jdemooij@mozilla.com", "real_name": "Jan de Mooij [:jandem]"}, {"email": "jiri.pospisil@live.com", "id": 566642, "name": "jiri.pospisil@live.com", "real_name": ""}, {"email": "josh@joshmatthews.net", "id": 241497, "name": "josh@joshmatthews.net", "real_name": "Josh Matthews [:jdm]"}, {"email": "kmaglione+bmo@mozilla.com", "id": 106098, "name": "kmaglione+bmo@mozilla.com", "real_name": "Kris Maglione [:kmag]"}, {"email": "madperson@gmx.at", "id": 209011, "name": "madperson@gmx.at", "real_name": "[:philipp]"}, {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, {"email": "rtanglao@mozilla.com", "id": 352356, "name": "rtanglao@mozilla.com", "real_name": "Roland Tanglao needinfo please :rolandtanglao, :mohnkuchen, :adobo, :sinigang, :roland"}, {"email": "ryanvm@gmail.com", "id": 75935, "name": "ryanvm@gmail.com", "real_name": "Ryan VanderMeulen [:RyanVM]"}, {"email": "sphink@gmail.com", "id": 359004, "name": "sphink@gmail.com", "real_name": "Steve Fink [:sfink] [:s:] (PTO June 31)"}, {"email": "Tobias.Marty@gmx.de", "id": 572549, "name": "Tobias.Marty@gmx.de", "real_name": "TMart"}, {"email": "vseerror@lehigh.edu", "id": 29811, "name": "vseerror@lehigh.edu", "real_name": "Wayne Mery (:wsmwk)"}], "cf_last_resolved": "2018-05-12T10:00:11Z", "attachments": [{"creator": "continuation@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-05-11T21:31:31Z", "type_id": 4, "creation_date": "2018-05-11T20:07:16Z", "id": 1755901, "setter": "jcoppeard@mozilla.com"}, {"status": "+", "name": "review", "modification_date": "2018-05-11T21:50:45Z", "type_id": 4, "creation_date": "2018-05-11T21:50:45Z", "id": 1755948, "setter": "sphink@gmail.com"}, {"status": "+", "name": "approval-mozilla-beta", "modification_date": "2018-05-13T19:12:33Z", "type_id": 721, "creation_date": "2018-05-12T18:48:21Z", "id": 1756102, "setter": "ryanvm@gmail.com"}], "content_type": "text/x-review-board-request", "id": 8974845}], "votes": 2, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 39, "comments": [{"text": "Bug 1460385 fixed one source of these jsids causing slowness, but for some people, the tracing of group_property in js::ObjectGroup::traceChildren(JSTracer* trc) is the major source of slowness. Unfortunately this will be trickier to fix.", "author": "continuation@gmail.com", "id": 13268499, "time": "2018-05-10T15:51:54Z"}, {"text": "philipp linked to this Sumo report in bug 1460385:\n  https://support.mozilla.org/en-US/questions/1217102\n\nThe second profile here is interesting because it doesn't include any of the JIT stuff from the Google Inbox profile. I have no idea why we regressed this so badly. Certainly nothing has changed on the CC side.", "author": "continuation@gmail.com", "id": 13268591, "time": "2018-05-10T16:18:02Z"}, {"text": "There was a large unexplained spike in CC pause times on Jan 31 in telemetry, which I think was during the Fx60 period. It is possible that is when this regressed. We landed some ghost window regressions and fixes after that, but the 95th percentile of pause times never returned to what they were on Jan 30. https://mzl.la/2G1Xz93\n\nI'll try to see if anything obvious landed then that might have affected this.", "author": "continuation@gmail.com", "id": 13268641, "time": "2018-05-10T16:32:43Z"}, {"text": "This is what landed in the Jan 31 Nightlies: https://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=217fc14405e78d47fb60888b9f3d0527d0c2709a&tochange=3804441e575c9f46fcb03894de3c780eeae7197f\n\nI'm not 100% sure how to interpret the telemetry, but maybe something is in that range. There's nothing particularly obvious to me that could cause an issue like this.", "author": "continuation@gmail.com", "id": 13268700, "time": "2018-05-10T16:45:34Z"}, {"text": "The only JS engine changes I see in that range are bug 1425583, bug 1320353 and bug 1434030, but those are all related to either very low level code gen or WASM so I can't imagine they are related. Bug 767640 is in that range, which I guess could add a bunch more stuff to trace on chrome contexts, but that seems like a stretch. If we had some STR, I could try figuring out what in the world all of these shapes we're tracing are.", "author": "continuation@gmail.com", "id": 13268761, "time": "2018-05-10T16:53:02Z"}, {"text": "I noticed that if I install the Reddit Enhancement Suite addon and then open 3 or 4 Reddit tabs that the total time spent in the CC goes from around 8ms to around 250ms. I'm not sure if that's the same issue or not.", "author": "continuation@gmail.com", "id": 13269121, "time": "2018-05-10T19:18:49Z"}, {"text": "I was able to consistently reproduce something similar by: installing Reddit Enhancement Suite in a new profile, logging in to Reddit in that profile, then opening a dozen or so tabs. I confirmed using the profiler that the time is being spent in ObjectGroup traversal.\n\nAdding ObjectGroup as a CC kind seems to reduce the total time down again. Hopefully this is the same issue, though I wasn't seeing pauses nearly as bad as other people.", "author": "continuation@gmail.com", "id": 13269407, "time": "2018-05-10T21:25:06Z"}, {"text": "Another thing I was wondering is, why are we traversing so many ObjectGroups? There are almost 7000 of them in the CC graph in each content process. I ran find_roots on them all, and they were mostly being held alive like this, via PrecompiledScript:\n\n0x7fb12daeb150 [PrecompiledScript]\n    --[mScript]--> 0x7fb131ef3090 [JS Script]\n    --[objects[282]]--> 0x7fb12f059d80 [JS Object (Function)]\n    --[script]--> 0x7fb12d9ebe38 [JS Script]\n    --[objects[63]]--> 0x7fb12f064300 [JS Object (Function - fromSecondsToTime)]\n    --[script]--> 0x7fb12d80ca10 [JS Script]\n    --[objects[0]]--> 0x7fb12f066740 [JS Object (Function - fromSecondsToTime/<)]\n    --[group]--> 0x7fb12d80b7f0 [JS ObjectGroup]\n\nKris, do you know why we'd have so many of the scripts alive all of the time when RES was enabled? How are they being kept alive? If they are being held alive in some global data structure, then we should be able to mark them black so they wouldn't be in the CC graph.", "author": "continuation@gmail.com", "id": 13269469, "time": "2018-05-10T21:57:51Z"}, {"text": "Created attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nIf this isn't a CCKind, then the CC ends up traversing ObjectGroups\nover and over again, which causes us to traverse their group_property\nover and over again, which can cause long CC pauses with the Reddit\nEnhancement Suite installed.\n\nReview commit: https://reviewboard.mozilla.org/r/243216/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/243216/", "author": "continuation@gmail.com", "id": 13269541, "time": "2018-05-10T22:20:43Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #7)\n> Kris, do you know why we'd have so many of the scripts alive all of the time\n> when RES was enabled? How are they being kept alive? If they are being held\n> alive in some global data structure, then we should be able to mark them\n> black so they wouldn't be in the CC graph.\n\nNo idea. It's hard to tell from their minified source, but they don't seem to be doing any dynamic loading, which would be my first guess.\n\nMy best guess is that there's a cycle somewhere that isn't being detected, but I'm not sure how.\n\nThe only way we currently keep PrecompiledScripts alive is in a map of URLs to Promise<PrecompiledScript>. Since RES only loads one content script URL, it should only ever be able to hold one alive at a time.\n\nWe also remove entries from those maps if they haven't been used in 5 minutes, or any time there's a memory pressure event.", "author": "kmaglione+bmo@mozilla.com", "id": 13269547, "time": "2018-05-10T22:23:50Z"}, {"text": "These are the most common type of JS things in the CC graph:\n    8381 JS Scope\n    7950 JS Object (Function)\n    7316 JS Object (other)\n    6887 JS ObjectGroup\n    6684 JS Script\n\nSo, ObjectGroup does bloat up the graph a bit, but not by an immense amount.", "author": "continuation@gmail.com", "id": 13269659, "time": "2018-05-10T23:15:59Z"}, {"text": "Bug 1449033 has what looks like a regression range. I'm not sure what the cause and effect is there, but the timing matches the CC pause time regression we saw on Nightly.", "author": "continuation@gmail.com", "id": 13269975, "time": "2018-05-11T05:50:11Z"}, {"text": "Don't we want to also skip tracing the property ids when tracing an ObjectGroup for CC? That's the issue I noticed in bug 1460385 comment 9.", "author": "jdemooij@mozilla.com", "id": 13270375, "time": "2018-05-11T10:26:53Z"}, {"text": "(In reply to Jan de Mooij [:jandem] from comment #12)\n> Don't we want to also skip tracing the property ids when tracing an\n> ObjectGroup for CC? That's the issue I noticed in bug 1460385 comment 9.\n\nI wasn't sure how to do that without making an ugly copy of traceChildren, but looking at it again, I suppose I could just pass in a boolean flag to the method...", "author": "continuation@gmail.com", "id": 13270535, "time": "2018-05-11T12:03:00Z"}, {"text": "Comment on attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/243216/diff/1-2/", "author": "continuation@gmail.com", "id": 13271674, "time": "2018-05-11T20:07:16Z"}, {"text": "Steve suggested that I could add a flag to JSTracer and just check that in traceChildren, so I've done that.", "author": "continuation@gmail.com", "id": 13271689, "time": "2018-05-11T20:17:30Z"}, {"text": "juts to add the information to the mix: a number of affected sumo users seem to have the addon \"Honey 10.7.2a\" installed...", "author": "madperson@gmx.at", "id": 13271693, "time": "2018-05-11T20:18:32Z"}, {"text": "Needinfo me to figure out what's keeping these PrecompiledScripts alive.", "author": "kmaglione+bmo@mozilla.com", "id": 13271698, "time": "2018-05-11T20:23:24Z"}, {"text": "So, from what I can tell, we don't appear to be leaking PrecompiledScripts. They're being kept alive by the cache for the correct amount of time.\n\nWhen I run the CC with all traces, I get the expected root graphs:\n\nParsing cc-edges.13116-11.log. Done loading graph. \n\n0x14615995e4c0 [JS Object (PrecompiledScript)]\n    --[UnwrapDOMObject(obj)]--> 0x146154cea830 [PrecompiledScript]\n\n    Root 0x14615995e4c0 is a marked GC object.\n\nParsing gc-edges.13116-11.log. Done loading graph.\n\nvia persistent-Object :\n0x14615552fdf0 [NonSyntacticVariablesObject <no private>]\n    --[ExtensionManager]--> 0x14615552ff70 [Object <no private>]\n    --[extensions]--> 0x146148f654c0 [Map 0x146150614f10]\n    --[value]--> 0x14615d494380 [Object <no private>]\n    --[staticScripts]--> 0x146148f65300 [Map 0x1461515ab290]\n    --[value]--> 0x1461519c5180 [Promise <no private>]\n    --[**UNKNOWN SLOT 1**, script]--> 0x14615995e4c0 [PrecompiledScript <no private>]\n\nSo it should definitely be black.\n\n\nWhen I run without all traces, I get:\n\nParsing cc-edges.16620-9.log. Done loading graph. \n\n0x1541fd252fb0 [PrecompiledScript]\n\n    Root 0x1541fd252fb0 is a ref counted object with 1 unknown edge(s).\n\n\nIn either case, I only see one PrecompiledScript being kept alive for RES per process, and it goes away after I trigger a memory pressure notification.\n\n\nAndrew, are you seeing something amiss that I' not?", "author": "kmaglione+bmo@mozilla.com", "id": 13271796, "time": "2018-05-11T21:15:39Z"}, {"text": "(In reply to Kris Maglione [:kmag] (long backlog; ping on IRC if you're blocked) from comment #18)\n> Andrew, are you seeing something amiss that I' not?\n\nThat's certainly not what I was seeing. Are you logged in to Reddit? The performance was fine until I did that.", "author": "continuation@gmail.com", "id": 13271811, "time": "2018-05-11T21:20:41Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #19)\n> (In reply to Kris Maglione [:kmag] (long backlog; ping on IRC if you're\n> blocked) from comment #18)\n> > Andrew, are you seeing something amiss that I' not?\n> \n> That's certainly not what I was seeing. Are you logged in to Reddit? The\n> performance was fine until I did that.\n\nYes, I logged in, since that was in your STR. It didn't seem to make a difference.\n\nDo you still have the full CC logs that I can look at? Or or there any other steps I should try?", "author": "kmaglione+bmo@mozilla.com", "id": 13271819, "time": "2018-05-11T21:22:53Z"}, {"text": "Comment on attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nhttps://reviewboard.mozilla.org/r/243216/#review249384\n\n::: js/public/TracingAPI.h:261\n(Diff revision 2)\n>      void setTraceWeakEdges(bool value) {\n>          traceWeakEdges_ = value;\n>      }\n>  \n> +    // If this is set to false, then the tracer will skip some JSIDs\n> +    // to improve performance.\n\nIt would be good to reference the cycle collector explicitly here.  Also we call these \"jsids\" in lower case.", "author": "jcoppeard@mozilla.com", "id": 13271842, "time": "2018-05-11T21:31:31Z"}, {"text": "(In reply to Kris Maglione [:kmag] (long backlog; ping on IRC if you're blocked) from comment #20)\n> Do you still have the full CC logs that I can look at? Or or there any other\n> steps I should try?\n\nOh, right, I forgot that I had applied my obsoleted patch to make ObjectGroup a CC thing. Yeah, you are right, I didn't look very closely at the output: there is in fact only one PrecompiledScript per process. The wrapper for the precompiled script is not in the CC graph, but the PrecompiledScript is, which is consistent with what you are seeing. I didn't think to check that before.\n\nThe problem is that the JS Script of the PrecompiledScript is holding alive literally hundreds of functions. CC optimizations could in theory mark mScript black because the wrapper is black, but that is not done automatically (unless you are inheriting from a node). So that explains why the CC optimization is failing here.", "author": "continuation@gmail.com", "id": 13271896, "time": "2018-05-11T21:48:28Z"}, {"text": "Comment on attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nhttps://reviewboard.mozilla.org/r/243216/#review249362\n\n::: commit-message-17db3:9\n(Diff revision 2)\n> +ObjectGroups when an addon is installed. This patch avoids that by\n> +adding a mustTraceJSID flag to JSTracer, and using it in\n> +ObjectGroup::traceChildren. If this is false, then the tracer is free\n> +to not report every JSID. This flag is set to false for the two CC\n> +tracers.\n> +\n\nI looked through other callers. Shape::traceChildren has a jsid that could be skipped, though it's a single one so I don't know if skipping it would be any faster. js::jit::TraceCacheIRStub loops over a bunch of stuff but there's no good place to skip all ids or anything.\n\nOoh, here's an interesting one. Why does JsGcTracer::Trace(Heap<jsid>, ...) bother calling TraceEdge at all? Same for JSString, for that matter.\n\nNothing else seems to loop over jsids that I can see.\n\n::: js/public/TracingAPI.h:89\n(Diff revision 2)\n>      bool isWeakMarkingTracer() const { return tag_ == TracerKindTag::WeakMarking; }\n>      bool isTenuringTracer() const { return tag_ == TracerKindTag::Tenuring; }\n>      bool isCallbackTracer() const { return tag_ == TracerKindTag::Callback; }\n>      inline JS::CallbackTracer* asCallbackTracer();\n>      bool traceWeakEdges() const { return traceWeakEdges_; }\n> +    bool mustTraceJSID() const { return mustTraceJSID_; }\n\nI waffled on this, but I think I would prefer canSkipJsids_. \"must trace X\" implies to me that other things don't need to be traced, I guess.", "author": "sphink@gmail.com", "id": 13271900, "time": "2018-05-11T21:50:45Z"}, {"text": "(In reply to Steve Fink [:sfink] [:s:] (PTO June 31) from comment #23)\n> I looked through other callers. Shape::traceChildren has a jsid that could\n> be skipped, though it's a single one so I don't know if skipping it would be\n> any faster. js::jit::TraceCacheIRStub loops over a bunch of stuff but\n> there's no good place to skip all ids or anything.\n\nThanks for looking. I think we aren't going to end up calling Shape::traceChildren, so that shouldn't be an issue.\n\n> Ooh, here's an interesting one. Why does JsGcTracer::Trace(Heap<jsid>, ...)\n> bother calling TraceEdge at all? Same for JSString, for that matter.\n\nThat's a good point. It was probably written either by somebody who doesn't know the GC very well and thus wanted to just follow existing code as much as possible, or by somebody who doesn't know the CC very well and didn't realize it could be skipped. I'll file a bug on that. My impression was that this would not affect this specific issue, because the expensive code is elsewhere? Is that right?\n\n> I waffled on this, but I think I would prefer canSkipJsids_. \"must trace X\"\n> implies to me that other things don't need to be traced, I guess.\n\nI originally had it like you suggest (well, the name was bad, but in the same direction), but I flipped the boolean the wrong way at least twice while I was working on the patch so I decided this way was easier. Maybe my name for the field was just confusing. I can change it if you really want me to.", "author": "continuation@gmail.com", "id": 13271918, "time": "2018-05-11T22:00:33Z"}, {"text": "(In reply to Andrew McCreight [:mccr8] from comment #22)\n> CC optimizations could in theory mark mScript black because the wrapper is\n> black, but that is not done automatically (unless you are inheriting from a\n> node). So that explains why the CC optimization is failing here.\n\nDo you want to file a bug for that, or should I?", "author": "kmaglione+bmo@mozilla.com", "id": 13271935, "time": "2018-05-11T22:11:58Z"}, {"text": "(In reply to Kris Maglione [:kmag] (long backlog; ping on IRC if you're blocked) from comment #25)\n> Do you want to file a bug for that, or should I?\n\nI filed bug 1461012.", "author": "continuation@gmail.com", "id": 13271942, "time": "2018-05-11T22:16:42Z"}, {"text": "> > I waffled on this, but I think I would prefer canSkipJsids_. \"must trace X\"\n> > implies to me that other things don't need to be traced, I guess.\n> \n> I originally had it like you suggest (well, the name was bad, but in the\n> same direction), but I flipped the boolean the wrong way at least twice\n> while I was working on the patch so I decided this way was easier. Maybe my\n> name for the field was just confusing. I can change it if you really want me\n> to.\n\nI'm still voting for canSkipJsids_. I don't see how to word this any better than you did if it's going to be default-true. That's what the \"must\" is for; traceJsids_ wouldn't work because it would seem wrong to trace a jsid when traceJsids_ is false.  And yet, mustTraceJsids_ still seems weird to me because its name makes it sound like setting it to true would be the special behavior, when it's the other way around.\n\nI guess I'm not dead set on it if you think that canSkipJsids_ is itself confusing.", "author": "sphink@gmail.com", "id": 13271963, "time": "2018-05-11T22:28:38Z"}, {"text": "Comment on attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/243216/diff/2-3/", "author": "continuation@gmail.com", "id": 13272002, "time": "2018-05-11T22:51:22Z"}, {"text": "I've renamed the flag to canSkipJsids_.", "author": "continuation@gmail.com", "id": 13272004, "time": "2018-05-11T22:51:44Z"}, {"text": "Pushed by amccreight@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/39c076bf5d77\nDon't trace jsids on ObjectGroup in the cycle collector. r=jonco,sfink", "author": "pulsebot@bots.tld", "id": 13272081, "time": "2018-05-11T23:34:04Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/39c076bf5d77", "author": "aryx.bugmail@gmx-topmail.de", "id": 13272446, "time": "2018-05-12T10:00:11Z"}, {"text": "Comment on attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nApproval Request Comment\n[Feature/Bug causing the regression]: bug 1432794, for reasons not entirely understood\n[User impact if declined]: second-long browser hangs\n[Is this code covered by automated tests?]: yes, this code is run frequently\n[Has the fix been verified in Nightly?]: Yes, I verified it myself.\n[Needs manual test from QE? If yes, steps to reproduce]: That would be a good idea. See bug 1449033 comment 23.\n[List of other uplifts needed for the feature/fix]: There are some other patches that also help, but they're already on beta.\n[Is the change risky?]: No\n[Why is the change risky/not risky?]: All this patch does is skip some work we never actually need to do.\n[String changes made/needed]: None", "author": "continuation@gmail.com", "id": 13272715, "time": "2018-05-12T18:48:21Z"}, {"text": "Comment on attachment 8974845\nBug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector.\n\nHelps fix some of the recently-reported perf issues in Fx60. Approved for 61.0b5.", "author": "ryanvm@gmail.com", "id": 13273154, "time": "2018-05-13T19:12:33Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-beta/rev/7b8ada24da4d", "author": "ryanvm@gmail.com", "id": 13273192, "time": "2018-05-13T19:57:39Z"}, {"text": "Just FYI, this will need a bit of trivial rebasing for uplift to 60 (if approved).", "author": "ryanvm@gmail.com", "id": 13275709, "time": "2018-05-14T13:53:47Z"}, {"text": "The patch in bug 1449033 targets the regression more specifically, so I don't think it is necessary to also backport this patch to release.", "author": "continuation@gmail.com", "id": 13276570, "time": "2018-05-14T18:23:42Z"}, {"text": "Tested and reproduced the issue on Beta 61.0b4 following the steps from https://bugzilla.mozilla.org/show_bug.cgi?id=1449033#c23.\nVerified as fixed on Firefox Beta 61.0b5 and on Nightly 62.0a1(20180514100123) on Windows 10 x64, Mac OSX 10.12 and Ubuntu 16.04 x64.", "author": "gyula.palko@softvision.ro", "id": 13278028, "time": "2018-05-15T08:45:57Z"}, {"text": "From telemetry, it looks like the landing of this reduced the 95th percentile of cycle collector total time (CYCLE_COLLECTOR_FULL) from around 400ms to around 260ms. (The mean also went from around 95ms to 60ms.) Bug 1451985 had already dropped the telemetry down to about the level we were before the regression from bug 1432794 back in January, so we're even lower now. (Bug 1460385 may explain a small part of the improvement, but it was only on a Nightly or two, and the improvement is much smaller, so it is hard to tell precisely.)\n\nHere's a link to telemetry: https://mzl.la/2k0JaS0", "author": "continuation@gmail.com", "id": 13282046, "time": "2018-05-16T17:20:55Z"}], "id": 1460636, "priority": "--", "cc": ["adrian.wielgosik@gmail.com", "bugs@pettay.fi", "eoger@fastmail.com", "gandalf@aviary.pl", "gyula.palko@softvision.ro", "hpradhan@gmail.com", "jcoppeard@mozilla.com", "jcristau@mozilla.com", "jdemooij@mozilla.com", "jiri.pospisil@live.com", "josh@joshmatthews.net", "kmaglione+bmo@mozilla.com", "madperson@gmx.at", "mcastelluccio@mozilla.com", "rtanglao@mozilla.com", "ryanvm@gmail.com", "sphink@gmail.com", "Tobias.Marty@gmx.de", "vseerror@lehigh.edu"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1460385", "https://bugzilla.mozilla.org/show_bug.cgi?id=1460052"], "cf_tracking_thunderbird_esr60": "---", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1242861, 1462054, 1432794, 1449033], "qa_contact": "", "creation_time": "2018-05-10T15:51:54Z", "cf_status_firefox_esr52": "wontfix", "component": "JavaScript: GC", "assigned_to_detail": {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "verified", "cf_status_firefox61": "verified", "cf_status_firefox60": "wontfix", "target_milestone": "mozilla62", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, "whiteboard": "[qf]", "mentors": [], "summary": "Long CC pauses from tracing group_property in js::ObjectGroup::traceChildren(JSTracer* trc)", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-05-21T09:50:35Z", "assigned_to": "continuation@gmail.com", "is_open": false, "history": [{"changes": [{"removed": "---", "field_name": "cf_status_firefox_esr52", "added": "wontfix"}, {"removed": "---", "field_name": "cf_tracking_firefox_esr60", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox_esr60", "added": "affected"}, {"removed": "---", "field_name": "cf_tracking_firefox60", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox60", "added": "affected"}, {"removed": "---", "field_name": "cf_tracking_firefox61", "added": "+"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "affected"}, {"removed": "---", "field_name": "cf_tracking_firefox62", "added": "+"}, {"removed": "---", "field_name": "cf_status_firefox62", "added": "affected"}], "who": "ryanvm@gmail.com", "when": "2018-05-10T15:52:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gandalf@aviary.pl"}], "who": "gandalf@aviary.pl", "when": "2018-05-10T15:56:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "adrian.wielgosik@gmail.com"}], "who": "adrian.wielgosik@gmail.com", "when": "2018-05-10T18:40:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "vseerror@lehigh.edu"}], "who": "vseerror@lehigh.edu", "when": "2018-05-10T18:56:42Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugs@pettay.fi"}], "who": "continuation@gmail.com", "when": "2018-05-10T19:18:49Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1460052"}], "who": "continuation@gmail.com", "when": "2018-05-10T21:28:40Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1460052"}, {"removed": "1460052", "field_name": "blocks", "added": ""}], "who": "continuation@gmail.com", "when": "2018-05-10T21:29:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kmaglione+bmo@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kmaglione+bmo@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2018-05-10T21:57:51Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "geo.mih93@gmail.com"}], "who": "geo.mih93@gmail.com", "when": "2018-05-10T22:06:12Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974845, "added": "review?(sphink@gmail.com)"}], "who": "continuation@gmail.com", "when": "2018-05-10T22:20:43Z"}, {"changes": [{"removed": "needinfo?(kmaglione+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-05-10T22:24:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "eoger@fastmail.com"}], "who": "eoger@fastmail.com", "when": "2018-05-11T02:35:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "hpradhan@gmail.com"}], "who": "hpradhan@gmail.com", "when": "2018-05-11T03:08:21Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1449033"}], "who": "continuation@gmail.com", "when": "2018-05-11T05:48:57Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1432794"}], "who": "continuation@gmail.com", "when": "2018-05-11T05:50:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jiri.pospisil@live.com"}], "who": "jiri.pospisil@live.com", "when": "2018-05-11T07:24:33Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jcristau@mozilla.com"}], "who": "jcristau@mozilla.com", "when": "2018-05-11T08:13:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "grayshade@gmail.com"}], "who": "grayshade@gmail.com", "when": "2018-05-11T08:26:27Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "Tobias.Marty@gmx.de"}], "who": "Tobias.Marty@gmx.de", "when": "2018-05-11T08:32:20Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(continuation@gmail.com)"}], "who": "jdemooij@mozilla.com", "when": "2018-05-11T10:26:53Z"}, {"changes": [{"removed": "needinfo?(continuation@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "continuation@gmail.com", "when": "2018-05-11T12:03:00Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(sphink@gmail.com)", "attachment_id": 8974845, "added": ""}], "who": "continuation@gmail.com", "when": "2018-05-11T12:03:29Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "", "field_name": "cc", "added": "mcastelluccio@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-11T13:55:53Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rtanglao@mozilla.com"}], "who": "rtanglao@mozilla.com", "when": "2018-05-11T17:58:48Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Bug 1460636 - Make ObjectGroup into a browser CCKind.", "attachment_id": 8974845, "added": "Bug 1460636 - Don't trace JSIDs on ObjectGroup in the cycle collector."}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974845, "added": "review?(jcoppeard@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2018-05-11T20:07:16Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1449033"}, {"removed": "https://bugzilla.mozilla.org/show_bug.cgi?id=1449033", "field_name": "see_also", "added": ""}], "who": "continuation@gmail.com", "when": "2018-05-11T20:20:05Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(kmaglione+bmo@mozilla.com)"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-05-11T20:23:24Z"}, {"changes": [{"removed": "needinfo?(kmaglione+bmo@mozilla.com)", "field_name": "flagtypes.name", "added": "needinfo?(continuation@gmail.com)"}], "who": "kmaglione+bmo@mozilla.com", "when": "2018-05-11T21:15:39Z"}, {"changes": [{"removed": "needinfo?(continuation@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "continuation@gmail.com", "when": "2018-05-11T21:20:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jcoppeard@mozilla.com)", "attachment_id": 8974845, "added": "review+"}], "who": "jcoppeard@mozilla.com", "when": "2018-05-11T21:31:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974845, "added": "review+"}], "who": "sphink@gmail.com", "when": "2018-05-11T21:50:45Z"}, {"changes": [{"removed": "geo.mih93@gmail.com", "field_name": "cc", "added": ""}], "who": "geo.mih93@gmail.com", "when": "2018-05-11T22:23:41Z"}, {"changes": [{"field_name": "attachments.description", "removed": "Bug 1460636 - Don't trace JSIDs on ObjectGroup in the cycle collector.", "attachment_id": 8974845, "added": "Bug 1460636 - Don't trace jsids on ObjectGroup in the cycle collector."}], "who": "continuation@gmail.com", "when": "2018-05-11T22:51:22Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "continuation@gmail.com"}], "who": "continuation@gmail.com", "when": "2018-05-11T22:51:52Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla62"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-05-12 10:00:11"}, {"removed": "affected", "field_name": "cf_status_firefox62", "added": "fixed"}], "who": "aryx.bugmail@gmx-topmail.de", "when": "2018-05-12T10:00:11Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8974845, "added": "approval-mozilla-beta?"}], "who": "continuation@gmail.com", "when": "2018-05-12T18:48:21Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "qe-verify+"}], "who": "ryanvm@gmail.com", "when": "2018-05-13T19:11:51Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8974845, "added": "approval-mozilla-beta+"}], "who": "ryanvm@gmail.com", "when": "2018-05-13T19:12:33Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2018-05-13T19:57:39Z"}, {"changes": [{"removed": "?", "field_name": "cf_tracking_firefox_esr60", "added": "---"}, {"removed": "affected", "field_name": "cf_status_firefox_esr60", "added": "wontfix"}, {"removed": "?", "field_name": "cf_tracking_firefox60", "added": "---"}, {"removed": "affected", "field_name": "cf_status_firefox60", "added": "wontfix"}], "who": "continuation@gmail.com", "when": "2018-05-14T18:23:42Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "", "field_name": "cc", "added": "gyula.palko@softvision.ro"}, {"removed": "fixed", "field_name": "cf_status_firefox61", "added": "verified"}, {"removed": "fixed", "field_name": "cf_status_firefox62", "added": "verified"}], "who": "gyula.palko@softvision.ro", "when": "2018-05-15T08:45:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "josh@joshmatthews.net"}], "who": "josh@joshmatthews.net", "when": "2018-05-16T13:59:25Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1462054"}], "who": "continuation@gmail.com", "when": "2018-05-16T17:32:50Z"}, {"changes": [{"removed": "qe-verify+", "field_name": "flagtypes.name", "added": ""}], "who": "gyula.palko@softvision.ro", "when": "2018-05-17T07:34:48Z"}, {"changes": [{"removed": "grayshade@gmail.com", "field_name": "cc", "added": ""}], "who": "grayshade@gmail.com", "when": "2018-05-21T09:50:35Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}