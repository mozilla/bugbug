{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Components", "creator": "bobbyholley@gmail.com", "cc": ["acrichton@mozilla.com", "bugmail@mozilla.staktrace.com", "cam@mcc.id.au", "cpeterson@mozilla.com", "emilio@crisal.io", "giles@thaumas.net", "gps@mozilla.com", "jmuizelaar@mozilla.com", "josh@joshmatthews.net", "jryans@gmail.com", "jseward@acm.org", "jwatt@jwatt.org", "kinetik@flim.org", "larsberg@mozilla.com", "manishearth@gmail.com", "mstange@themasta.com", "MTest31@outlook.com", "myk@mykzilla.org", "nfroyd@mozilla.com", "simon.sapin@exyr.org", "ted@mielczarek.org", "wycats@gmail.com", "xidorn+moz@upsuper.org"], "depends_on": [], "creation_time": "2016-12-14T21:41:48Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "summary": "Need a way to easily modify vendored crates for local testing and try pushes", "cf_last_resolved": "2018-04-26T04:57:40Z", "attachments": [{"creator": "myk@mykzilla.org", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-24T13:35:39Z", "type_id": 4, "creation_date": "2018-04-20T18:57:32Z", "id": 1747100, "setter": "ted@mielczarek.org"}], "content_type": "text/x-review-board-request", "id": 8969762}], "assigned_to_detail": {"email": "myk@mykzilla.org", "id": 27300, "name": "myk@mykzilla.org", "real_name": "Myk Melez [:myk] [@mykmelez]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "comments": [{"text": "We've discussed this before, but I just hit it in practice.\n\nSometimes we need code changes in an upstream crate. Upstreaming is time-consuming, and so we want to make sure everything works before doing that. This includes local testing, code review, and try pushes.\n\nWe already have a copy of the sources in-tree, so it would be super nice to just edit those and keep hacking. Right now that doesn't work because it messes up the checksums, so my preferred solution is some simple way to just disable the cargo checksum verification. We'd obviously have a commit hook to prevent this from getting checked into m-c.\n\nYehuda and Alex have pushed back on this in the past, and suggested that we should just make it really easy to check in local overrides. I'm trying that now, and hitting a few speed bumps:\n(1) .cargo/config.in is a pre-processed file, which the build system turns into OBJDIR/.cargo.config. I was worried that this would take a lot of time and require lots of stuff to be rebuilt, but thankfully it doesn't seem to.\n(2) I need to manually cp -r the vendored sources somewhere, and add them as a separate git commit so that I can see what I actually changed.\n(3) I get inexplicable versioning warnings: https://pastebin.mozilla.org/8952223", "author": "bobbyholley@gmail.com", "id": 11919625, "time": "2016-12-14T21:41:48Z"}, {"text": "Needinfo Alex on the feasibility of disabling checksums, or alternate ideas.", "author": "bobbyholley@gmail.com", "id": 11919626, "time": "2016-12-14T21:42:21Z"}, {"text": "The workflow I'd currently recommend is:\n\n1. Determine which crate needs changes.\n2. Copy vendor/$crate somewhere else in tree\n3. Modify Cargo.toml with:\n\n    [replace]\n    '$crate:$version' = { path = \"path/to/copy\" }\n\n4. Modify the copied sources\n5. Eventually upstream those changes\n6. Eventually update vendor dir and delete copy\n\nDoes that make sense?\n\nAs an aside I wouldn't recommend `paths` as it doesn't handle changes in the dependency graph or feature set, which often happens from what I've seen.", "author": "acrichton@mozilla.com", "id": 11919872, "time": "2016-12-14T23:17:37Z"}, {"text": "I explicitly tested this when we were hashing out vendoring, and it seems to work fine in this test crate:\nhttps://github.com/luser/vendor-test/commit/1e146ca6be23e7585473c8a9febcb2a6310911d9\n\nYou should be able to just use [replace], but put the path to the already-vendored copy there, and then edit the vendored sources without issues.", "author": "ted@mielczarek.org", "id": 11921006, "time": "2016-12-15T11:32:40Z"}, {"text": "That workflow seems a bit heavyweight. I would if we could make it more turnkey via `mach`.", "author": "gps@mozilla.com", "id": 11922063, "time": "2016-12-15T19:41:58Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #3)\n> I explicitly tested this when we were hashing out vendoring, and it seems to\n> work fine in this test crate:\n> https://github.com/luser/vendor-test/commit/\n> 1e146ca6be23e7585473c8a9febcb2a6310911d9\n> \n> You should be able to just use [replace], but put the path to the\n> already-vendored copy there, and then edit the vendored sources without\n> issues.\n\nOh neat! Yeah that seems like a great compromise.\n\n(In reply to Gregory Szorc [:gps] from comment #4)\n> That workflow seems a bit heavyweight. I would if we could make it more\n> turnkey via `mach`.\n\nTurnkey is great. I think the only decision is whether it belongs in cargo or mach. Alex, does Ted's workflow from comment 3 (pointing to the same vendored sources as a [replace]) seem like something cargo could do?", "author": "bobbyholley@gmail.com", "id": 11922327, "time": "2016-12-15T21:16:35Z"}, {"text": "Oh I think a workflow like this definitely belongs in Cargo in one way shape or form. For example Servo really wants a push-button \"fork this and let me edit it\" as well. If Gecko wants to start out with some logic in mach though I wouldn't mind getting experience there (which is faster than landing in Cargo) and then using those lessons to inform an implementation in Cargo.", "author": "acrichton@mozilla.com", "id": 11922583, "time": "2016-12-15T22:50:47Z"}, {"text": "I think as a first cut it'd be useful to add a mach command. I don't know what you'd want to call it, `mach fork-crate <foo>`? It would have to figure out what Cargo.toml files reference crate `foo` and add the [replace] there, and maybe just print a message like \"You can now make changes in 'third_party/rust/foo'\".\n\nIs this something we'd want to allow to land in-tree anywhere but try? Would we want to have a hook to forbid this sort of [replace] in our Cargo.toml files, assuming that if you really need to patch a dependency you'd fork it and point at our fork?", "author": "ted@mielczarek.org", "id": 11973809, "time": "2017-01-11T12:58:57Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #7)\n> Is this something we'd want to allow to land in-tree anywhere but try?\n\nI think it is not.\n\n> Would\n> we want to have a hook to forbid this sort of [replace] in our Cargo.toml\n> files, assuming that if you really need to patch a dependency you'd fork it\n> and point at our fork?\n\nAgreed.", "author": "bobbyholley@gmail.com", "id": 11974887, "time": "2017-01-11T18:29:29Z"}, {"text": "Note that we may still need to use [replace] if we need to fork something down the dependency chain, but we should be replacing it with something that has its own repo, rather than just our own code in m-c.", "author": "bobbyholley@gmail.com", "id": 11974895, "time": "2017-01-11T18:31:03Z"}, {"text": "*** Bug 1373609 has been marked as a duplicate of this bug. ***", "author": "mh+mozilla@glandium.org", "id": 12404277, "time": "2017-06-16T11:12:35Z"}, {"text": "*** Bug 1365666 has been marked as a duplicate of this bug. ***", "author": "mh+mozilla@glandium.org", "id": 12404282, "time": "2017-06-16T11:14:47Z"}, {"text": "*** Bug 1342815 has been marked as a duplicate of this bug. ***", "author": "xidorn+moz@upsuper.org", "id": 12475113, "time": "2017-07-14T23:55:34Z"}, {"text": "What are the necessary next steps to making this better?", "author": "jmuizelaar@mozilla.com", "id": 13167879, "time": "2018-03-29T21:28:29Z"}, {"text": "The instructions in this bug and its duplicates don't seem to work anymore. What worked for me was:\n\n 1. Copy the /third_party/rust/yourcrate/ directory to a directory *outside* of the mozilla source directory and apply your modifications there.\n 2. In /Cargo.toml (the one in the root directory), add the following line to the [patch.crates-io] section:\n\nyourcrate = { path = \"path/to/your/fork/of/yourcrate\" }", "author": "mstange@themasta.com", "id": 13177526, "time": "2018-04-03T19:20:22Z"}, {"text": "Random idea: `mach try` could detect when vendored sources are modified and perform any necessary actions to appease Cargo. We already create temporary commits during `mach try`. So continued hacking up of the versioned code should be acceptable as long as it doesn't materially change functionality.", "author": "gps@mozilla.com", "id": 13195211, "time": "2018-04-10T15:48:54Z"}, {"text": "(In reply to Gregory Szorc [:gps] from comment #15)\n> Random idea: `mach try` could detect when vendored sources are modified and\n> perform any necessary actions to appease Cargo. We already create temporary\n> commits during `mach try`. So continued hacking up of the versioned code\n> should be acceptable as long as it doesn't materially change functionality.\n\nI don't think it makes sense for this to be in mach try, because generally we encourage people to build their code before pushing to try, and code won't build until cargo is satisfied. So it needs to be a standalone workflow/", "author": "bobbyholley@gmail.com", "id": 13195543, "time": "2018-04-10T17:29:21Z"}, {"text": "Nowadays we should have enough support in Cargo that all you need to do is to add [patch.crates-io] pointing directly at the sources in third_party, but if that doesn't work please feel free to file a bug on Cargo!", "author": "acrichton@mozilla.com", "id": 13195670, "time": "2018-04-10T18:14:56Z"}, {"text": "Created attachment 8969762\nBug 1323557 - preserve vendored crates when re-vendoring; .mielczarek\n\n`mach vendor rust` currently removes third_party/rust before `cargo update`,\nwhich prevents modifying vendored crates for local testing and try pushes.\nIt's also unnecessary.  So this patch removes the code that removes the dir.\n\nReview commit: https://reviewboard.mozilla.org/r/238572/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/238572/", "author": "myk@mykzilla.org", "id": 13222247, "time": "2018-04-20T18:57:32Z"}, {"text": "(In reply to Alex Crichton [:acrichto] from comment #17)\n> Nowadays we should have enough support in Cargo that all you need to do is\n> to add [patch.crates-io] pointing directly at the sources in third_party,\n> but if that doesn't work please feel free to file a bug on Cargo!\n\nIt doesn't work, but the problem isn't Cargo.  Mozbuild deletes third_party/rust before calling `cargo update`:\n\nhttps://searchfox.org/mozilla-central/source/python/mozbuild/mozbuild/vendor_rust.py#290-297\n\nAnd then `cargo update` fails because it can't find the patched source directory in third_party:\n\n> > ./mach vendor rust\n>  0:01.42 rm -rf /Users/myk/Projects/gecko/third_party/rust\n> error: failed to resolve patches for `https://github.com/rust-lang/crates.io-index`\n> \n> Caused by:\n>   failed to load source for a dependency on `test`\n> \n> Caused by:\n>   Unable to update file:///Users/myk/Projects/gecko/third_party/rust/test\n> \n> Caused by:\n>   failed to read `/Users/myk/Projects/gecko/third_party/rust/test/Cargo.toml`\n> \n> Caused by:\n>   No such file or directory (os error 2)\n\nLeaving third_party/rust in place before calling `cargo update` resolves the problem:\n\n> > ./mach vendor rust\n>       Adding test v0.1.0 (file:///Users/myk/Projects/gecko/third_party/rust/test)\n>     Removing test v0.1.0\n\nAnd it doesn't seem to cause other problems (on my machine, anyway).  However, we're presumably deleting that directory for a reason.\n\nTed: it looks like you did that over in bug 1294565, describing the process in bug 1294565, comment 14.  Is it necessary in all cases, or can we stop doing it, at least when vendoring locally?\n\n(I've pushed a prospective patch that stops doing it unconditionally, but I can alter that to do so conditionally, perhaps when a flag is specified.)", "author": "myk@mykzilla.org", "id": 13222254, "time": "2018-04-20T18:59:13Z"}, {"text": "(In reply to Myk Melez [:myk] [@mykmelez] from comment #19)\n> Leaving third_party/rust in place before calling `cargo update` resolves the\n> problem:\n> \n> > > ./mach vendor rust\n> >       Adding test v0.1.0 (file:///Users/myk/Projects/gecko/third_party/rust/test)\n> >     Removing test v0.1.0\n> \n> And it doesn't seem to cause other problems (on my machine, anyway). \n> However, we're presumably deleting that directory for a reason.\n> \n> Ted: it looks like you did that over in bug 1294565, describing the process\n> in bug 1294565, comment 14.  Is it necessary in all cases, or can we stop\n> doing it, at least when vendoring locally?\n\nLet's say crate C version Y contains file F.  Crate C version Z deletes F.\n\nWe have version Y vendored as third_party/rust/$C.  Does vendoring version Z into third_party/rust/$C correctly delete F if we don't blow away the directory beforehand?  (I don't think `cargo vendor` concerns itself with this scenario, nor should it.)\n\nAlternate, related scenario: we depend on crate C version Y and version Z, so we have:\n\nthird_party/rust/$C-$Y\nthird_party/rust/$C (implicitly version Z)\n\nWe remove all dependencies on version Y.  When we re-vendor packages, how do we automatically get rid of third_party/rust/$C-$Y ?\n\nStarting from a clean slate solves lots of issues.", "author": "nfroyd@mozilla.com", "id": 13222475, "time": "2018-04-20T20:40:00Z"}, {"text": "(In reply to Nathan Froyd [:froydnj] from comment #20)\n> Let's say crate C version Y contains file F.  Crate C version Z deletes F.\n> \n> We have version Y vendored as third_party/rust/$C.  Does vendoring version Z\n> into third_party/rust/$C correctly delete F if we don't blow away the\n> directory beforehand?\n\nYes.  On my branch that preserves third_party/rust, if I vendor a test crate C, version Y, which contains file F:\n\nhttps://github.com/mykmelez/gecko/commit/da6f5524e9cd91f8289a20506549e42153b6e6a4\n\nAnd then I update the vendoring to version Z, which deletes file F:\n\nhttps://github.com/mykmelez/gecko/commit/7e39a7e4500de40a7fe2d52f46046f5996ef22ae\n\nThen file F gets removed from the tree.\n\n\n> Alternate, related scenario: we depend on crate C version Y and version Z,\n> so we have:\n> \n> third_party/rust/$C-$Y\n> third_party/rust/$C (implicitly version Z)\n> \n> We remove all dependencies on version Y.  When we re-vendor packages, how do\n> we automatically get rid of third_party/rust/$C-$Y ?\n\nWith no further changes, vendoring both versions of package C:\n\nhttps://github.com/mykmelez/gecko/commit/19c153ce570097353af52a93b5521efcc14fef8f\n\nAnd then un-vendoring version Y:\n\nhttps://github.com/mykmelez/gecko/commit/740cc03de1b3123ab32150c50b9adca47df4cc34\n\nResults in version Y's directory (third_party/rust/C-0.1.0 in this example) remaining in the tree.\n\nHowever, if I remove the --no-delete flag from the `cargo vendor` invocation:\n\nhttps://github.com/mykmelez/gecko/commit/b54f9f4eccc6d5982dba795ae152f4adda9167cb\n\nAnd then re-vendor:\n\nhttps://github.com/mykmelez/gecko/commit/09c17f6675a2285c35c63211a5fccd0d3a8658b8\n\nThen version Y's directory gets removed from the tree.\n\n\n> Starting from a clean slate solves lots of issues.\n\nI can certainly imagine this.  It's why I `mach clobber` when in doubt!  Nevertheless, I haven't been able to find any issues so far in this case.  Are there other scenarios you're concerned about?  Perhaps --no-delete is itself necessary for other reasons?", "author": "myk@mykzilla.org", "id": 13227356, "time": "2018-04-23T18:38:11Z"}, {"text": "Comment on attachment 8969762\nBug 1323557 - preserve vendored crates when re-vendoring; .mielczarek\n\nhttps://reviewboard.mozilla.org/r/238572/#review244984\n\nI was curious, and as it turns out cargo-vendor did not used to delete unused crates from the vendored directory, but that changed last year:\nhttps://github.com/alexcrichton/cargo-vendor/commit/4e7e56a38fb6bb810816122e577b377d1f186f05#diff-639fbc4ef05b315af92b4d836c31b023\n\nSo this should be fine.", "author": "ted@mielczarek.org", "id": 13229469, "time": "2018-04-24T13:35:39Z"}, {"text": "(In reply to Ted Mielczarek [:ted.mielczarek] from comment #22)\n> Comment on attachment 8969762\n> Bug 1323557 - preserve vendored crates when re-vendoring; .mielczarek\n> \n> https://reviewboard.mozilla.org/r/238572/#review244984\n> \n> I was curious, and as it turns out cargo-vendor did not used to delete\n> unused crates from the vendored directory, but that changed last year:\n> https://github.com/alexcrichton/cargo-vendor/commit/\n> 4e7e56a38fb6bb810816122e577b377d1f186f05#diff-\n> 639fbc4ef05b315af92b4d836c31b023\n> \n> So this should be fine.\n\nIt looks like Kats added --no-delete to the cargo-vendor invocation in response to that change.  In bug 1369156, comment 23 (and 24), he says: \"So I did this locally. Turns out the next step in this yak-shaving adventure is to figure out why cargo-vendor is suddenly deleting a whole pile of crates that we still need\u2026 This is (unsurprisingly) a result of https://github.com/alexcrichton/cargo-vendor/commit/4e7e56a38fb6bb810816122e577b377d1f186f05. We'll need to add --no-delete to our invocation of cargo vendor.\"\n\nI don't see that in my local testing, however.", "author": "myk@mykzilla.org", "id": 13230244, "time": "2018-04-24T17:27:01Z"}, {"text": "(In reply to Myk Melez [:myk] [@mykmelez] from comment #23)\n> It looks like Kats added --no-delete to the cargo-vendor invocation in\n> response to that change.\n\nIIRC I had to do this because at that time, we were running cargo-vendor for each of the top-level crates in m-c (toolkit/library/rust, toolkit/library/gtest/rust, js/whatever, etc.) and so running it for the second crate would delete the deps of the first crate, and so on. Since then, we've combined all the top-level crates into a workspace and just run cargo-vendor once on the workspace so this problem has gone away.", "author": "bugmail@mozilla.staktrace.com", "id": 13230266, "time": "2018-04-24T17:32:21Z"}, {"text": "Yeah, the way we invoke cargo-vendor has changed since we fixed bug 1381576 so that should no longer be necessary. We run it just once, so it can have full control over the vendoring directory.", "author": "ted@mielczarek.org", "id": 13232162, "time": "2018-04-25T10:53:42Z"}, {"text": "Comment on attachment 8969762\nBug 1323557 - preserve vendored crates when re-vendoring; .mielczarek\n\nhttps://reviewboard.mozilla.org/r/238572/#review245300\n\n::: python/mozbuild/mozbuild/vendor_rust.py:297\n(Diff revision 1)\n>  \n>          # We use check_call instead of mozprocess to ensure errors are displayed.\n>          # We do an |update -p| here to regenerate the Cargo.lock file with minimal changes. See bug 1324462\n>          subprocess.check_call([cargo, 'update', '-p', 'gkrust'], cwd=self.topsrcdir)\n>  \n>          subprocess.check_call([cargo, 'vendor', '--quiet', '--no-delete', '--sync', 'Cargo.lock'] + [vendor_dir], cwd=self.topsrcdir)\n\nOops, I missed this, but you will need to remove the `--no-delete` here as well. cargo-vendor should only delete crates that are no longer necessary.", "author": "ted@mielczarek.org", "id": 13232165, "time": "2018-04-25T10:54:33Z"}, {"text": "Comment on attachment 8969762\nBug 1323557 - preserve vendored crates when re-vendoring; .mielczarek\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/238572/diff/1-2/", "author": "myk@mykzilla.org", "id": 13232778, "time": "2018-04-25T15:32:52Z"}, {"text": "Pushed by myk@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1374936db018\npreserve vendored crates when re-vendoring; r=ted.mielczarek", "author": "pulsebot@bots.tld", "id": 13232837, "time": "2018-04-25T15:48:14Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/1374936db018", "author": "dluca@mozilla.com", "id": 13234344, "time": "2018-04-26T04:57:40Z"}, {"text": "After landing this, I realized that a fix was needed in cargo-vendor for dependencies vendored from crates.io (i.e. most vendored crates).  (My tests didn't catch the issue because they were vendoring crates from a GitHub repo.)\n\nThat fix landed in https://github.com/alexcrichton/cargo-vendor/pull/71, and acrichto has published an updated version of cargo-vendor.  Before using the fix in this bug, install the new version of cargo vendor:\n\ncargo install --force cargo-vendor\n\nThen you can patch a vendored crate:\n\n[patch.crates-io]\nzip = { path = \"third_party/rust/zip\" }\n\nAnd re-vendor to update Cargo.lock:\n\n$ mach vendor rust\n      Adding zip v0.3.1 (file:///path/to/workdir/third_party/rust/zip)\n    Removing zip v0.3.1", "author": "myk@mykzilla.org", "id": 13277100, "time": "2018-05-14T21:09:02Z"}], "id": 1323557, "priority": "--", "mentors_detail": [], "comment_count": 31, "cf_status_thunderbird_esr52": "---", "cf_qa_whiteboard": "", "version": "unspecified", "cf_tracking_firefox62": "---", "cf_platform_rel": "---", "product": "Firefox Build System", "cf_fx_iteration": "---", "blocks": [1380210, 1469248, 1135640, 1459661], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1423236"], "cf_status_firefox_esr52": "---", "component": "General", "votes": 0, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "fixed", "cf_status_firefox60": "---", "target_milestone": "mozilla61", "is_cc_accessible": true, "cf_tracking_thunderbird_esr60": "---", "groups": [], "cf_tracking_firefox_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "bobbyholley@gmail.com", "id": 313730, "name": "bobbyholley@gmail.com", "real_name": "Bobby Holley (On Leave Until June 11th)"}, "whiteboard": "", "mentors": [], "cc_detail": [{"email": "acrichton@mozilla.com", "id": 481703, "name": "acrichton@mozilla.com", "real_name": "Alex Crichton [:acrichto]"}, {"email": "bugmail@mozilla.staktrace.com", "id": 426788, "name": "bugmail@mozilla.staktrace.com", "real_name": "Kartikaya Gupta (email:kats@mozilla.com)"}, {"email": "cam@mcc.id.au", "id": 54040, "name": "cam@mcc.id.au", "real_name": "Cameron McCormack (:heycam)"}, {"email": "cpeterson@mozilla.com", "id": 430528, "name": "cpeterson@mozilla.com", "real_name": "Chris Peterson [:cpeterson]"}, {"email": "emilio@crisal.io", "id": 546716, "name": "emilio@crisal.io", "real_name": "Emilio Cobos \u00c1lvarez [:emilio]"}, {"email": "giles@thaumas.net", "id": 170965, "name": "giles@thaumas.net", "real_name": "Ralph Giles (:rillian) | needinfo me"}, {"email": "gps@mozilla.com", "id": 420446, "name": "gps@mozilla.com", "real_name": "Gregory Szorc [:gps]"}, {"email": "jmuizelaar@mozilla.com", "id": 309398, "name": "jmuizelaar@mozilla.com", "real_name": "Jeff Muizelaar [:jrmuizel] on parental leave until at least June 25"}, {"email": "josh@joshmatthews.net", "id": 241497, "name": "josh@joshmatthews.net", "real_name": "Josh Matthews [:jdm]"}, {"email": "jryans@gmail.com", "id": 282978, "name": "jryans@gmail.com", "real_name": "J. Ryan Stinnett [:jryans] (use ni?)"}, {"email": "jseward@acm.org", "id": 346453, "name": "jseward@acm.org", "real_name": "Julian Seward [:jseward]"}, {"email": "jwatt@jwatt.org", "id": 32767, "name": "jwatt@jwatt.org", "real_name": "Jonathan Watt [:jwatt]"}, {"email": "kinetik@flim.org", "id": 274575, "name": "kinetik@flim.org", "real_name": "Matthew Gregan [:kinetik]"}, {"email": "larsberg@mozilla.com", "id": 478660, "name": "larsberg@mozilla.com", "real_name": "Lars Bergstrom (:larsberg)"}, {"email": "manishearth@gmail.com", "id": 479296, "name": "manishearth@gmail.com", "real_name": "Manish Goregaokar [:manishearth]"}, {"email": "mstange@themasta.com", "id": 293943, "name": "mstange@themasta.com", "real_name": "Markus Stange [:mstange]"}, {"email": "MTest31@outlook.com", "id": 549467, "name": "MTest31@outlook.com", "real_name": "est31"}, {"email": "myk@mykzilla.org", "id": 27300, "name": "myk@mykzilla.org", "real_name": "Myk Melez [:myk] [@mykmelez]"}, {"email": "nfroyd@mozilla.com", "id": 417288, "name": "nfroyd@mozilla.com", "real_name": "Nathan Froyd [:froydnj]"}, {"email": "simon.sapin@exyr.org", "id": 465026, "name": "simon.sapin@exyr.org", "real_name": "Simon Sapin (:SimonSapin)"}, {"email": "ted@mielczarek.org", "id": 39022, "name": "ted@mielczarek.org", "real_name": "Ted Mielczarek [:ted.mielczarek]"}, {"email": "wycats@gmail.com", "id": 228802, "name": "wycats@gmail.com", "real_name": "Yehuda Katz"}, {"email": "xidorn+moz@upsuper.org", "id": 373403, "name": "xidorn+moz@upsuper.org", "real_name": "Xidorn Quan [:xidorn] UTC+10"}], "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-18T10:03:34Z", "cf_status_firefox_esr60": "---", "assigned_to": "myk@mykzilla.org", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(acrichton@mozilla.com)"}], "who": "bobbyholley@gmail.com", "when": "2016-12-14T21:42:21Z"}, {"changes": [{"removed": "needinfo?(acrichton@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "acrichton@mozilla.com", "when": "2016-12-14T23:17:37Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bugmail@mozilla.staktrace.com"}], "who": "bugmail@mozilla.staktrace.com", "when": "2016-12-15T18:08:40Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(acrichton@mozilla.com)"}], "who": "bobbyholley@gmail.com", "when": "2016-12-15T21:16:35Z"}, {"changes": [{"removed": "needinfo?(acrichton@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "acrichton@mozilla.com", "when": "2016-12-15T22:50:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bruant.d@gmail.com"}], "who": "bruant.d@gmail.com", "when": "2017-03-20T10:57:02Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jseward@acm.org"}], "who": "mh+mozilla@glandium.org", "when": "2017-06-16T11:14:47Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "josh@joshmatthews.net"}], "who": "josh@joshmatthews.net", "when": "2017-06-16T13:44:33Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1380210"}], "who": "xidorn+moz@upsuper.org", "when": "2017-07-14T23:54:17Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jryans@gmail.com"}], "who": "jryans@gmail.com", "when": "2017-07-14T23:59:22Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1423236"}], "who": "bugmail@mozilla.staktrace.com", "when": "2017-12-05T15:36:40Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jwatt@jwatt.org"}], "who": "jwatt@jwatt.org", "when": "2018-01-25T08:52:20Z"}, {"changes": [{"removed": "Core", "field_name": "product", "added": "Firefox Build System"}], "who": "automation@bmo.tld", "when": "2018-03-02T20:12:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mstange@themasta.com"}], "who": "mstange@themasta.com", "when": "2018-03-29T21:24:04Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jmuizelaar@mozilla.com"}], "who": "jmuizelaar@mozilla.com", "when": "2018-03-29T21:28:29Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "kinetik@flim.org"}], "who": "kinetik@flim.org", "when": "2018-04-04T01:25:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8969762, "added": "review?(ted@mielczarek.org)"}], "who": "myk@mykzilla.org", "when": "2018-04-20T18:57:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(ted@mielczarek.org)", "attachment_id": 8969762, "added": "review+"}], "who": "ted@mielczarek.org", "when": "2018-04-24T13:35:39Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "", "field_name": "cc", "added": "myk@mykzilla.org"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "myk@mykzilla.org"}], "who": "myk@mykzilla.org", "when": "2018-04-25T15:51:30Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-04-26 04:57:40"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "dluca@mozilla.com", "when": "2018-04-26T04:57:40Z"}, {"changes": [{"removed": "bruant.d@gmail.com", "field_name": "cc", "added": ""}], "who": "bruant.d@gmail.com", "when": "2018-04-30T17:22:01Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1459661"}], "who": "myk@mykzilla.org", "when": "2018-05-07T16:28:17Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1469248"}], "who": "ted@mielczarek.org", "when": "2018-06-18T10:03:34Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}