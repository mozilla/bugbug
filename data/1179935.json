{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "vladimir@pobox.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-07-09T15:53:58Z", "type_id": 4, "creation_date": "2015-07-02T19:54:47Z", "id": 1201106, "setter": "mstange@themasta.com"}], "content_type": "text/plain", "id": 8629031}], "classification": "Components", "creator": "vladimir@pobox.com", "cc": ["mmucci@mozilla.com", "mstange@themasta.com"], "depends_on": [], "creation_time": "2015-07-02T19:54:47Z", "cf_user_story": "", "assigned_to": "vladimir@pobox.com", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": [], "summary": "replace Compositor::PrepareViewport with projection info stored on render targets", "id": 1179935, "assigned_to_detail": {"email": "vladimir@pobox.com", "id": 24534, "name": "vladimir@pobox.com", "real_name": "Vladimir Vukicevic [:vlad] [:vladv] (needinfo me, slow to respond)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "qa_contact_detail": {"email": "vladimir@pobox.com", "id": 24534, "name": "vladimir@pobox.com", "real_name": "Vladimir Vukicevic [:vlad] [:vladv] (needinfo me, slow to respond)"}, "comment_count": 5, "comments": [{"text": "Created attachment 8629031\nCompositor complex projections, v0\n\nWith VR (and possibly other things in the future), we may need to specify a complex viewport and projection.  Instead of extending PrepareViewport and needing to carry this data around, this introduces projection information directly on CompositingRenderTarget which is applied when SetRenderTarget is called.\n\nThe default projection is a simple one, like what PrepareViewport normally sets up.  Calling ClearProjection() on a rendertarget returns to this projection.  Calling SetProjection() allows the caller to specify a full projection matrix, znear/zfar, and whether depth buffering should be enabled.", "author": "vladimir@pobox.com", "id": 10447493, "time": "2015-07-02T19:54:47Z"}, {"text": "Comment on attachment 8629031\nCompositor complex projections, v0\n\nReview of attachment 8629031:\n-----------------------------------------------------------------\n\n::: gfx/layers/composite/TextureHost.h\n@@ +760,5 @@\n>    gfx::IntPoint mOrigin;\n> +\n> +  bool mHasComplexProjection;\n> +  gfx::Matrix4x4 mProjectionMatrix;\n> +  bool mEnableDepthBuffer;\n\nMight want to move the bools to the end, for better packing.\n\n::: gfx/layers/opengl/CompositingRenderTargetOGL.cpp\n@@ +38,4 @@\n>    if (mInitParams.mStatus != InitParams::INITIALIZED) {\n>      InitializeImpl();\n> +    if (mInitParams.mInit == INIT_MODE_CLEAR) {\n> +      needsClear = true;\n\nWhat required this change? Does it fix an existing bug?\n\n::: gfx/layers/opengl/CompositorOGL.cpp\n@@ +545,4 @@\n>      = static_cast<CompositingRenderTargetOGL*>(aSurface);\n>    if (mCurrentRenderTarget != surface) {\n>      mCurrentRenderTarget = surface;\n> +    if (mCurrentRenderTarget) {\n\nWhat prompted this change?", "author": "mstange@themasta.com", "id": 10475104, "time": "2015-07-09T15:53:58Z"}, {"text": "(In reply to Markus Stange [:mstange] from comment #1)\n> Comment on attachment 8629031\n> Compositor complex projections, v0\n> \n> Review of attachment 8629031:\n> -----------------------------------------------------------------\n> \n> ::: gfx/layers/composite/TextureHost.h\n> @@ +760,5 @@\n> >    gfx::IntPoint mOrigin;\n> > +\n> > +  bool mHasComplexProjection;\n> > +  gfx::Matrix4x4 mProjectionMatrix;\n> > +  bool mEnableDepthBuffer;\n> \n> Might want to move the bools to the end, for better packing.\n> \n> ::: gfx/layers/opengl/CompositingRenderTargetOGL.cpp\n> @@ +38,4 @@\n> >    if (mInitParams.mStatus != InitParams::INITIALIZED) {\n> >      InitializeImpl();\n> > +    if (mInitParams.mInit == INIT_MODE_CLEAR) {\n> > +      needsClear = true;\n> \n> What required this change? Does it fix an existing bug?\n\nNo -- the code that did this was previously in InitializeImpl, and was removed from there to consolidate it in one place (see the chunk below), to avoid duplicating additional code.\n\n> ::: gfx/layers/opengl/CompositorOGL.cpp\n> @@ +545,4 @@\n> >      = static_cast<CompositingRenderTargetOGL*>(aSurface);\n> >    if (mCurrentRenderTarget != surface) {\n> >      mCurrentRenderTarget = surface;\n> > +    if (mCurrentRenderTarget) {\n> \n> What prompted this change?\n\nThe mContextStateTracker.PushOGLSection(gl(), \"Frame\"); was removed just below (from BeginFrame), again to consolidate code so that SetRenderTarget() could do extra work without needing to duplicate it twice in BeginFrame. A compositor frame starts with mCurrentRenderTarget == nullptr, so this would cause a mismatched Pop() otherwise.", "author": "vladimir@pobox.com", "id": 10476573, "time": "2015-07-09T19:37:10Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/fa2405094adb", "author": "pulsebot@bots.tld", "id": 10552518, "time": "2015-07-29T18:41:18Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/fa2405094adb", "author": "kwierso@gmail.com", "id": 10554317, "time": "2015-07-30T01:14:38Z"}], "cf_last_resolved": "2015-07-30T01:14:38Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2015-07-30T01:14:38Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [], "qa_contact": "vladimir@pobox.com", "see_also": [], "cf_fx_iteration": "---", "component": "Graphics: Layers", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox42": "fixed", "target_milestone": "mozilla42", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "vladimir@pobox.com", "id": 24534, "name": "vladimir@pobox.com", "real_name": "Vladimir Vukicevic [:vlad] [:vladv] (needinfo me, slow to respond)"}, "whiteboard": "[gfx-noted][vrm2]", "mentors": [], "cc_detail": [{"email": "mmucci@mozilla.com", "id": 458208, "name": "mmucci@mozilla.com", "real_name": "Marco Mucci [:MarcoM]"}, {"email": "mstange@themasta.com", "id": 293943, "name": "mstange@themasta.com", "real_name": "Markus Stange [:mstange]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8629031, "added": "review?(mstange@themasta.com)"}, {"removed": "", "field_name": "cc", "added": "mstange@themasta.com"}], "who": "vladimir@pobox.com", "when": "2015-07-02T19:54:47Z"}, {"changes": [{"removed": "", "field_name": "qa_contact", "added": "vladimir@pobox.com"}], "who": "vladimir@pobox.com", "when": "2015-07-02T19:55:54Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "vladimir@pobox.com"}, {"removed": "", "field_name": "whiteboard", "added": "[gfx-noted]"}], "who": "dglastonbury@mozilla.com", "when": "2015-07-06T00:47:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mstange@themasta.com)", "attachment_id": 8629031, "added": "review+"}], "who": "mstange@themasta.com", "when": "2015-07-09T15:53:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mmucci@mozilla.com"}, {"removed": "[gfx-noted]", "field_name": "whiteboard", "added": "[gfx-noted][vrm2]"}], "who": "mmucci@mozilla.com", "when": "2015-07-22T20:25:54Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla42"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-07-29 18:14:38"}, {"removed": "affected", "field_name": "cf_status_firefox42", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2015-07-30T01:14:38Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}