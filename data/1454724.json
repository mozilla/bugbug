{"cf_tracking_thunderbird_esr52": "---", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "cf_tracking_firefox62": "---", "creator": "continuation@gmail.com", "mentors_detail": [], "depends_on": [], "cf_status_firefox_esr60": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": [], "cc_detail": [{"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "chutten@mozilla.com", "id": 553004, "name": "chutten@mozilla.com", "real_name": "Chris H-C :chutten"}, {"email": "erahm@mozilla.com", "id": 496127, "name": "erahm@mozilla.com", "real_name": "Eric Rahm [:erahm] (please no mozreview requests)"}], "cf_last_resolved": "2018-04-19T22:32:45Z", "attachments": [{"creator": "continuation@gmail.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2018-04-19T17:43:06Z", "type_id": 4, "creation_date": "2018-04-18T19:50:03Z", "id": 1745837, "setter": "chutten@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8969044}], "votes": 0, "classification": "Components", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 14, "comments": [{"text": "The existing ghost windows telemetry records the number of ghost windows every few minutes. The problem with this is that if a user has a session open for a few hours (recording hundreds of instances of no ghost windows), then they get some ghost windows, they're still reporting < 1% ghost windows. This means that many ghost window regressions only show up in the 95th percentile bucket, which telemetry alerting does not deal with well.\n\nThis is made worse because if somebody has a lot of ghost windows, their browser performance may suffer, so they may restart, which I guess is a kind of sampling bias.\n\nInstead, for such a user I think it would make more sense to record a single \"yes!\" for the entire session if the user ever experiences a ghost window. I don't know if recording a high water mark is better than a single bool. Getting 5 ghost windows is not as bad as getting 100, but they are still bad if your system is not powerful. I guess I can start with a bool and see how that goes.\n\nI'd like to have this alongside the existing GHOST_WINDOWS telemetry, to see how they look relative to each other. GHOST_WINDOWS has been around a while, and I'm familiar with its behavior.", "author": "continuation@gmail.com", "id": 13213212, "time": "2018-04-17T18:11:19Z"}, {"text": "It sounds like a scalar value is what I want.", "author": "continuation@gmail.com", "id": 13213612, "time": "2018-04-17T20:35:29Z"}, {"text": "1. What questions will you answer with this data?\n\nHow often are users experiencing leaking windows?\n\n2. Why does Mozilla need to answer these questions? Are there benefits for users? Do we need this information to address product or business requirements?\n\nThe main goal is to catch regressions like bug 1447871. Leaking windows cause severe performance problems for users (for instance, 1 second hangs, and high memory usage), and we cause regressions in this behavior a few times a year. With telemetry, we can hopefully catch these sooner.\n\n3. What alternative methods did you consider to answer these questions? Why were they not sufficient?\n\nWe have automated leak testing on TreeHerder, which catches some of these leaks, but our tests don't catch every thing a user can do. For instance, we had one of these leaks that would only happen if you closed a tab with a pending geolocation permission prompt. Another leak was caused by some kind of interaction with AdblockPlus. Another thing we've considered in some kind of \"leaking site\" reporter (like the crash reporter), where Firefox would ask the user if they want to submit a URL to Mozilla if the browser notices a leak, but that is a lot more involved and invasive than a telemetry measure like this.\n\n4. Can current instrumentation answer these questions?\n\nThis is actually the same as the existing GHOST_WINDOW telemetry, except that instead of recording the value many times during a session, the highest value is taken. My hope is that this will make it easier to get automated alerts when we regress this value. Right now, the regressions are clearest in the 95th percentile, and apparently whatever algorithm is used for alerts doesn't deal with that. I filed bug 1305142 on that. (I have no idea why that was graveyarded...) If this new measurement works better, I'll remove GHOST_WINDOW and make this one permanent (GHOST_WINDOW is permanent).\n\n5. List all proposed measurements and indicate the category of data collection for each measurement, using the Firefox data collection categories on the Mozilla wiki.\n\nThis measures the maximum number of leaked windows. It falls under Technical Data. I have this as opt-out because GHOST_WINDOWS is also opt out, and my new measurement is strictly weaker, and intended as a replacement.\n\n6. How long will this data be collected? Choose one of the following:\n    I want this data to be collected for 6 months initially (potentially renewable).\nIf this works well, I'll want to make it permanent instead of GHOST_WINDOWS, but I'll deal with that in a later bug. We only have these bad regressions a few times a year, so I may need to wait a while to see what the telemetry looks like in that case.\n\n7. What populations will you measure?\n\nAll Firefox users.\n\n8. If this data collection is default on, what is the opt-out mechanism for users?\n\nI have no idea. I assume that Services.telemetry.scalarSetMaximum() will do the right thing, but maybe it doesn't.\n\n9. Please provide a general description of how you will analyze this data.\n\nFirst, I need to get some indication that something has gone wrong with ghost windows. If telemetry alerts were working, I'd see an email from that. Otherwise, somebody ends up filing a bug about getting leaks. Then I can look back through telemetry evolution and see if there was a particular day where the numbers got worse. GHOST_WINDOWS has been a good indicator of the major leaks we've added in the past, and I'm hoping the new more focused thing will be more useful.\n\n10. Where do you intend to share the results of your analysis?\n\nI file bugs about the leaks, or post in existing bugs about the leaks. For instance, bug 1447871 comment 45.", "author": "continuation@gmail.com", "id": 13213978, "time": "2018-04-17T23:15:42Z"}, {"text": "You didn't set ni? for a data steward, but I was reading my bugmail and happened across this so I'll take a look. :)\n\nBefore we begin, allow me to mention that I'd love to be involved in the review of the patch to add the collection. Adding it as a scalar is an excellent idea (and I'm not just saying that because I had the same idea a year ago: bug 1364502 comment#5 ), but I might have comments about how it will be defined.\n\nAlso, I've revived bug 1305142 and rehomed it under the current alerting bugtree. Thank you for filing it. It was graveyarded as part of a component shuffle a while back.\n\nAlso Also, The opt-out mechanism for users is the usual \"Send technical data to Mozilla to improve Firefox\" checkmark in about:preferences#privacy\n\nNow, on to the review\n\nDATA COLLECTION REVIEW RESPONSE:\n\n    Is there or will there be documentation that describes the schema for the ultimate data set available publicly, complete and accurate? \n\nYes, standard Telemetry considerations apply.\n\n    Is there a control mechanism that allows the user to turn the data collection on and off?\n\nYes, standard Telemetry considerations apply.\n\n    If the request is for permanent data collection, is there someone who will monitor the data over time?**\n\nNot for permanent collection, though it may be in future.\n\n    Using the category system of data types on the Mozilla wiki, what collection type of data do the requested measurements fall under?\n\nCategory 1, Technical data\n\n    Is the data collection request for default-on or default-off?\n\ndefault-on\n\n    Does the instrumentation include the addition of any new identifiers (whether anonymous or otherwise; e.g., username, random IDs, etc. See the appendix for more details)?\n\nNo.\n\n    Is the data collection covered by the existing Firefox privacy notice?\n\nYes.\n\n    Does there need to be a check-in in the future to determine whether to renew the data?\n\nYes. :mccr8, when you file the follow-up please mention it in this bug.\n\n---\nResult: datareview+", "author": "chutten@mozilla.com", "id": 13215698, "time": "2018-04-18T15:19:35Z"}, {"text": "(In reply to Chris H-C :chutten from comment #3)\n> You didn't set ni? for a data steward, but I was reading my bugmail and\n> happened across this so I'll take a look. :)\n\nYeah, I was waiting to flag you for review and data review until after a try run came back. Thanks for looking at it.\n\nTry run was green except for an eslint issue that I've fixed:\n  https://treeherder.mozilla.org/#/jobs?repo=try&revision=53d0dd415f3c43219211655b9ea2b42e6364441c", "author": "continuation@gmail.com", "id": 13216504, "time": "2018-04-18T19:49:21Z"}, {"text": "Created attachment 8969044\nBug 1454724 - Add scalar telemetry for max ghost windows.\n\nRather than recording how many leaked (ghost) windows we see at\nvarious times, I think it will be more useful over all to record what\nthe maximum number of ghost windows we see during a single\nping. Hopefully this will show up in a way that generates automated\nalerts better than GHOST_WINDOWS.\n\nIf this works out, I'll make this telemetry measure permanent and\nremove GHOST_WINDOWS.\n\nReview commit: https://reviewboard.mozilla.org/r/237728/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/237728/", "author": "continuation@gmail.com", "id": 13216506, "time": "2018-04-18T19:50:03Z"}, {"text": "Comment on attachment 8969044\nBug 1454724 - Add scalar telemetry for max ghost windows.\n\nhttps://reviewboard.mozilla.org/r/237728/#review243508\n\nLooks good! I have two... questions? comments? ...two \"things\" I want to bring up (possibly just to sate my curiosity), but the code would do exactly what it ought to do so I'm okay if it's pushed as-is.\n\n::: toolkit/components/telemetry/Scalars.yaml:1638\n(Diff revision 1)\n> +    kind: uint\n> +    notification_emails:\n> +      - memshrink-telemetry-alerts@mozilla.com\n> +    release_channel_collection: opt-out\n> +    record_in_processes:\n> +      - 'content'\n\nYou don't want to record ghost windows in the 'main' process as well? They sometimes creep in: https://mzl.la/2qH2aIn\n\n::: toolkit/components/telemetry/TelemetrySession.jsm:1085\n(Diff revision 1)\n>  \n>      // GHOST_WINDOWS is opt-out as of Firefox 55\n>      c(\"GHOST_WINDOWS\", \"ghostWindows\");\n>  \n> +    // MAX_GHOST_WINDOWS_SCALAR_NAME is opt-out because it is derived from GHOST_WINDOWS.\n> +    Services.telemetry.scalarSetMaximum(MAX_GHOST_WINDOWS_SCALAR_NAME, mgr.ghostWindows);\n\nHuh, I kinda figured you'd record it directly inside the memory manager (like, say, here: https://searchfox.org/mozilla-central/rev/f65d7528e34ef1a7665b4a1a7b7cdb1388fcd3aa/dom/base/nsWindowMemoryReporter.cpp#896 )\n\nThat's not to say this is wrong. This is fine! Nothing wrong with this. But I've never been happy with the whole `gatherMemory` mechanism for occasionally, at poorly-defined times, recording values. Especially when we already know when they change.", "author": "chutten@mozilla.com", "id": 13216616, "time": "2018-04-18T20:24:29Z"}, {"text": "(In reply to Chris H-C :chutten from comment #6)\n> You don't want to record ghost windows in the 'main' process as well? They\n> sometimes creep in: https://mzl.la/2qH2aIn\n\nI'm not sure what a ghost window in the main process actually is. The only ghost windows I've come across are webpages, so I just set it to record them only in the content process to avoid adding a bunch of zeroes. That is strange that they do exist, though!\n\n> That's not to say this is wrong. This is fine! Nothing wrong with this. But\n> I've never been happy with the whole `gatherMemory` mechanism for\n> occasionally, at poorly-defined times, recording values. Especially when we\n> already know when they change.\n\nYeah, that makes more sense. I was just following the existing code. I guess for this, where there's only a single value we're recording, reporting it more often is okay.", "author": "continuation@gmail.com", "id": 13216661, "time": "2018-04-18T20:33:16Z"}, {"text": "Comment on attachment 8969044\nBug 1454724 - Add scalar telemetry for max ghost windows.\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/237728/diff/1-2/", "author": "continuation@gmail.com", "id": 13216861, "time": "2018-04-18T21:47:27Z"}, {"text": "Scalars.yaml is the same as before.", "author": "continuation@gmail.com", "id": 13216863, "time": "2018-04-18T21:47:49Z"}, {"text": "Comment on attachment 8969044\nBug 1454724 - Add scalar telemetry for max ghost windows.\n\nI guess you should look at this, though it is pretty trivial.", "author": "continuation@gmail.com", "id": 13216870, "time": "2018-04-18T21:48:16Z"}, {"text": "Comment on attachment 8969044\nBug 1454724 - Add scalar telemetry for max ghost windows.\n\nhttps://reviewboard.mozilla.org/r/237728/#review243812\n\nThanks for bringing me back to review the change. LGTM.", "author": "chutten@mozilla.com", "id": 13219200, "time": "2018-04-19T17:43:06Z"}, {"text": "Pushed by amccreight@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/7b01ccfbcc6e\nAdd scalar telemetry for max ghost windows. r=chutten", "author": "pulsebot@bots.tld", "id": 13219234, "time": "2018-04-19T17:57:14Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/7b01ccfbcc6e", "author": "csabou@mozilla.com", "id": 13220006, "time": "2018-04-19T22:32:45Z"}], "id": 1454724, "priority": "--", "cc": ["bugs@pettay.fi", "chutten@mozilla.com", "erahm@mozilla.com"], "cf_crash_signature": "", "version": "unspecified", "is_cc_accessible": true, "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_thunderbird_esr60": "---", "status": "RESOLVED", "product": "Toolkit", "cf_fx_iteration": "---", "blocks": [1181677], "qa_contact": "", "creation_time": "2018-04-17T18:11:19Z", "cf_status_firefox_esr52": "---", "component": "Telemetry", "assigned_to_detail": {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "---", "cf_status_firefox61": "fixed", "cf_status_firefox60": "---", "target_milestone": "mozilla61", "cf_rank": null, "cf_qa_whiteboard": "", "severity": "normal", "groups": [], "cf_status_thunderbird_esr52": "---", "url": "", "cf_status_thunderbird_esr60": "---", "creator_detail": {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, "whiteboard": "", "mentors": [], "summary": "Add a telemetry measure for ghost windows on a per-session basis", "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-04-19T22:32:45Z", "assigned_to": "continuation@gmail.com", "is_open": false, "history": [{"changes": [{"removed": "DOM", "field_name": "component", "added": "Telemetry"}, {"removed": "Core", "field_name": "product", "added": "Toolkit"}], "who": "continuation@gmail.com", "when": "2018-04-17T22:40:11Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "chutten@mozilla.com"}], "who": "chutten@mozilla.com", "when": "2018-04-18T15:19:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8969044, "added": "review?(chutten@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2018-04-18T19:50:03Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(chutten@mozilla.com)", "attachment_id": 8969044, "added": "review+"}], "who": "chutten@mozilla.com", "when": "2018-04-18T20:24:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review+", "attachment_id": 8969044, "added": "review?(chutten@mozilla.com)"}], "who": "continuation@gmail.com", "when": "2018-04-18T21:48:16Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(chutten@mozilla.com)", "attachment_id": 8969044, "added": "review+"}], "who": "chutten@mozilla.com", "when": "2018-04-19T17:43:06Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla61"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2018-04-19 22:32:45"}, {"removed": "---", "field_name": "cf_status_firefox61", "added": "fixed"}], "who": "csabou@mozilla.com", "when": "2018-04-19T22:32:45Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}