{"status": "VERIFIED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "florian@queze.net", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "feedback", "modification_date": "2015-09-09T15:52:45Z", "type_id": 607, "creation_date": "2015-09-09T12:49:05Z", "id": 1248734, "setter": "jib@mozilla.com"}], "content_type": "text/plain", "id": 8658688}, {"creator": "florian@queze.net", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8659254}, {"creator": "florian@queze.net", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-09-10T18:09:00Z", "type_id": 748, "creation_date": "2015-09-10T16:03:22Z", "id": 1249816, "setter": "gijskruitbosch+bugs@gmail.com"}], "content_type": "text/plain", "id": 8659322}], "classification": "Client Software", "creator": "jib@mozilla.com", "cc": ["abillings@mozilla.com", "andrei.vaida@softvision.ro", "florian@queze.net", "florin.mezei@softvisioninc.eu", "gijskruitbosch+bugs@gmail.com", "jib@mozilla.com", "kwierso@gmail.com", "mihai.boldan@softvision.ro", "mreavy@mozilla.com", "mwobensmith@mozilla.com"], "depends_on": [], "creation_time": "2015-09-04T18:47:40Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "All", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["csectype-spoof", "privacy", "sec-low"], "summary": "\"Stop Sharing\" in gUM in-use doorhanger doesn't revoke persistent permissions in different-domain iframe", "cf_last_resolved": "2015-09-15T23:47:18Z", "assigned_to_detail": {"email": "florian@queze.net", "id": 149052, "name": "florian@queze.net", "real_name": "Florian Qu\u00e8ze [:florian]"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "florian@queze.net", "comment_count": 18, "comments": [{"text": "\"Stop sharing\" must revoke persistent permissions, or it has not teeth. Try this (marking sec initially to not immediately publicize this trick, though it is fairly obvious. Please try it before removing):\n\nSTR:\n\n1. Go to https://jsfiddle.net/jib1/g7atw687/\n2. Don't hit \"Share\", instead choose \"Always Share\" in the list (trust me).\n3. Try to turn off the camera using \"Stop Sharing\" from the in-use doorhanger.\n\nExpected result:\n- Camera stops, and (because the script is importunate) the gUM doorhanger re-appears.\n\nActual result:\n- camera keeps rolling (after brief iframe refresh flicker).\n\nWhat makes this bug extra foul is how hard it is to revoke permissions in Firefox (you shouldn't have trusted me):\n\nNon-working workaround #1:\n\n- Reset camera permission under \"More Information...\" in the URL page-info\n  dropdown and then open the \"Permissions\" tab.\n  Doesn't work because jsfiddle.net uses an iframe from a different domain.\n\nNon-working workaround #2:\n\n- Right-click on the frame and choose \"View Page Info\", then \"Permissions\" tab.\n  Still takes you to the top Page info, not the frame's (Bug 1201972).\n\nNon-working workaround #3:\n\n- Open Preferences. There is no centralized UX for Permission Management (Bug 1201961).\n\nWorking workaround:\n\n- Type in \"about:permissions\", and locate NOT jsfiddle.net but the domain from the iframe.\n  You wrote it down from the doorhanger you can no longer access, didn't you? Then reset\n  camera permission.\n\n  (It's \"fiddle.jshell.net\")", "author": "jib@mozilla.com", "id": 10698015, "time": "2015-09-04T18:47:40Z"}, {"text": "We have code in place that's supposed to handle this (http://mxr.mozilla.org/mozilla-central/source/browser/modules/webrtcUI.jsm?rev=47a89d8276cb#865) and I'm pretty sure it's covered by unit tests, so this bug has surprised me.\n\nPossible ideas:\n- the issue could be e10s-only (our gUM UI tests don't run with e10s: bug 1071623).\n- if it's a recent regression, bug 1173523 could be the cause.", "author": "florian@queze.net", "id": 10702071, "time": "2015-09-07T10:30:18Z"}, {"text": "(In reply to Jan-Ivar Bruaroey [:jib] from comment #0)\n> \"Stop sharing\" must revoke persistent permissions, or it has not teeth.\n\nSo, stop sharing does revoke persistent permissions.\n\nIf you load https://fiddle.jshell.net/jib1/g7atw687/show/ (the relevant frame) directly, grant persistent permissions, then stop sharing, you'll get a permission prompt again when the page reloads.\n\nSo the bug here is that when the user clicks \"stop sharing,\" we revoke persistent permissions for the hostname of the top-level page, rather than the domain of the frame actually using devices.", "author": "florian@queze.net", "id": 10709884, "time": "2015-09-09T11:42:25Z"}, {"text": "Created attachment 8658688\nFix / hack\n\nI think a real fix here would require bug 1066082.\n\nThe attached patch is a hack that we could probably take if we want to fix this bug sooner than later.", "author": "florian@queze.net", "id": 10710161, "time": "2015-09-09T12:49:05Z"}, {"text": "Comment on attachment 8658688\nFix / hack\n\nReview of attachment 8658688:\n-----------------------------------------------------------------\n\nWorked. About the _devicePermissions, I have a high tolerance for hacks, so you may want to run that by someone else (I don't know if there are are any side-effects). Also one question below:\n\n::: browser/modules/webrtcUI.jsm\n@@ +871,5 @@\n>      label: stringBundle.getString(\"getUserMedia.stopSharing.label\"),\n>      accessKey: stringBundle.getString(\"getUserMedia.stopSharing.accesskey\"),\n>      callback: function () {\n> +      let uris = aBrowser._devicePermissionURIs || [];\n> +      uris.push(Services.io.newURI(aState.documentURI, null, null));\n\nI don't know this code well enough, but isn't aBrowser global? Will this do the right thing if I have cameras running in two unrelated tabs, and revoke one of them?\n\n@@ +876,5 @@\n> +      for (let uri of uris) {\n> +        let perms = Services.perms;\n> +        if (aState.camera &&\n> +            perms.testExactPermission(uri, \"camera\") == perms.ALLOW_ACTION)\n> +          perms.remove(uri, \"camera\");\n\nNit: the for loops could go inside the tests, not that it matters much in practice.\n\n@@ +918,5 @@\n>    }\n>  \n>    // Now handle the screen sharing indicator.\n>    if (!aState.screen) {\n> +    removeBrowserNotification(aBrowser, \"webRTC-sharingScreen\");\n\nDo we need to do a similar thing for screen sharing? (again I could be reading the code wrong)", "author": "jib@mozilla.com", "id": 10710825, "time": "2015-09-09T14:54:52Z"}, {"text": "Note to self: once we fix this we should perhaps see if there are similar issues in Android and B2G.", "author": "jib@mozilla.com", "id": 10710837, "time": "2015-09-09T14:56:28Z"}, {"text": "(In reply to Jan-Ivar Bruaroey [:jib] from comment #4)\n\n> I don't know this code well enough, but isn't aBrowser global?\n\nNo, the 'a' prefix (which we tend to no longer use these days) means 'argument'. Global variables have a 'g' prefix.\n\n> Will this do\n> the right thing if I have cameras running in two unrelated tabs, and revoke\n> one of them?\n\nYes.\n\n> @@ +876,5 @@\n> > +      for (let uri of uris) {\n> > +        let perms = Services.perms;\n> > +        if (aState.camera &&\n> > +            perms.testExactPermission(uri, \"camera\") == perms.ALLOW_ACTION)\n> > +          perms.remove(uri, \"camera\");\n> \n> Nit: the for loops could go inside the tests, not that it matters much in\n> practice.\n\nLooks like the 'let perms = Services.perms;' line should move outside of the loop. But yeah, in most cases there will be only one url.\n\n> @@ +918,5 @@\n> >    }\n> >  \n> >    // Now handle the screen sharing indicator.\n> >    if (!aState.screen) {\n> > +    removeBrowserNotification(aBrowser, \"webRTC-sharingScreen\");\n> \n> Do we need to do a similar thing for screen sharing? (again I could be\n> reading the code wrong)\n\nAFAIK we don't support persistent permissions for screensharing.", "author": "florian@queze.net", "id": 10710881, "time": "2015-09-09T15:04:38Z"}, {"text": "Created attachment 8659254\nPatch v2\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=d6f556a538b2", "author": "florian@queze.net", "id": 10715219, "time": "2015-09-10T13:35:20Z"}, {"text": "Comment on attachment 8659254\nPatch v2\n\nReview of attachment 8659254:\n-----------------------------------------------------------------\n\nin summary: s/persistant/persistent/, except that for sec-sensitive bugs, I didn't think we should have a summary at all - but by now this has been pushed to try already, so...\n\n::: browser/modules/webrtcUI.jsm\n@@ +396,5 @@\n> +\n> +          // Remember on which URIs we set persistent permissions so that we\n> +          // can remove them if the user clicks 'Stop Sharing'. There's no\n> +          // other way for the stop sharing code to know the hostnames of frames\n> +          // using devices until bug 1066082 is fixed.\n\nThis sounds like this won't work anymore once the tab is closed. That seems broken.\n\n\nReading more context than this patch (ugh at no reviewboard for security bugs), it seems this is in a block that runs when the permissions are already set, which means this comment is misleading (\"we set persistent permissions\" -- no, we already have them!). Please fix the comment.\n\n@@ +399,5 @@\n> +          // other way for the stop sharing code to know the hostnames of frames\n> +          // using devices until bug 1066082 is fixed.\n> +          let browser = this.browser;\n> +          browser._devicePermissionURIs = browser._devicePermissionURIs || [];\n> +          browser._devicePermissionURIs.push(uri);\n\nSeems like a Set would be a more correct datatype here, except that you're storing uri objects and so they are never actually going to be equal. Could we use a Set and just pass in uri.spec , constructing the nsIURI when we remove items using the Set ?\n\n@@ +878,5 @@\n>      label: stringBundle.getString(\"getUserMedia.stopSharing.label\"),\n>      accessKey: stringBundle.getString(\"getUserMedia.stopSharing.accesskey\"),\n>      callback: function () {\n> +      let uris = aBrowser._devicePermissionURIs || [];\n> +      uris.push(Services.io.newURI(aState.documentURI, null, null));\n\nThis is confusing though. Why do we need to add an additional URI when people click \"stop sharing\" ? Won't this already be in the list?", "author": "gijskruitbosch+bugs@gmail.com", "id": 10715349, "time": "2015-09-10T14:17:29Z"}, {"text": "(In reply to :Gijs Kruitbosch from comment #8)\n\n> in summary: s/persistant/persistent/, except that for sec-sensitive bugs, I\n> didn't think we should have a summary at all - but by now this has been\n> pushed to try already, so...\n\nI don't think this is actually a sensitive bug. comment 0 said it was marked sensitive 'initially'.\nThe risk of users being abused due to this bug exists, but it seems low, as the user needs to be convinced to click \"Always share\" rather than \"Share\". And the indicators aren't broken, so someone in this situation should notice that something is not working correctly.\n\n> ::: browser/modules/webrtcUI.jsm\n> @@ +396,5 @@\n> > +\n> > +          // Remember on which URIs we set persistent permissions so that we\n> > +          // can remove them if the user clicks 'Stop Sharing'. There's no\n> > +          // other way for the stop sharing code to know the hostnames of frames\n> > +          // using devices until bug 1066082 is fixed.\n> \n> This sounds like this won't work anymore once the tab is closed. That seems\n> broken.\n\nIf the tab is closed, the frame no longer exists, so there's no need to remember its url anymore.\n\n> Reading more context than this patch (ugh at no reviewboard for security\n> bugs), it seems this is in a block that runs when the permissions are\n> already set, which means this comment is misleading (\"we set persistent\n> permissions\" -- no, we already have them!). Please fix the comment.\n\nI have a comment saying \"Remember on which URIs we *set* persistent permissions\" in the block where we saved the permissions, and a second comment in the block where we used existing permissions where it says \"Remember on which URIs we *had* persistent permissions\".\n\n> @@ +399,5 @@\n> > +          // other way for the stop sharing code to know the hostnames of frames\n> > +          // using devices until bug 1066082 is fixed.\n> > +          let browser = this.browser;\n> > +          browser._devicePermissionURIs = browser._devicePermissionURIs || [];\n> > +          browser._devicePermissionURIs.push(uri);\n> \n> Seems like a Set would be a more correct datatype here, except that you're\n> storing uri objects and so they are never actually going to be equal. Could\n> we use a Set and just pass in uri.spec , constructing the nsIURI when we\n> remove items using the Set ?\n\nWe could, but I'm not sure it would be a simplification (and it doesn't matter too much if we store a duplicate).\n\n> @@ +878,5 @@\n> >      label: stringBundle.getString(\"getUserMedia.stopSharing.label\"),\n> >      accessKey: stringBundle.getString(\"getUserMedia.stopSharing.accesskey\"),\n> >      callback: function () {\n> > +      let uris = aBrowser._devicePermissionURIs || [];\n> > +      uris.push(Services.io.newURI(aState.documentURI, null, null));\n> \n> This is confusing though. Why do we need to add an additional URI when\n> people click \"stop sharing\" ? Won't this already be in the list?\n\nHmm... this code isn't well written indeed. Adding the uri to _devicePermissionURIs is unintended, I should have used .concat to duplicate the array.\n\nAnd no, this URI isn't guaranteed to be in the list. Eg. you could have started sharing your camera in this tab, then shared it again with 'always share' in a second tab, and when you click 'stop sharing' in the first tab, we do need to revoke the persistent permission that has been saved by the second tab.\n\n\nAn alternative approach that may be more reliable (and less confusing in the code) could be to just remove persistent permissions for the domains of all the frames that are part of the current tab. Even frames that have never tried to use a device. Would you prefer that?", "author": "florian@queze.net", "id": 10715736, "time": "2015-09-10T14:50:48Z"}, {"text": "(In reply to Florian Qu\u00e8ze [:florian] [:flo] from comment #9)\n> (In reply to :Gijs Kruitbosch from comment #8)\n> \n> > in summary: s/persistant/persistent/, except that for sec-sensitive bugs, I\n> > didn't think we should have a summary at all - but by now this has been\n> > pushed to try already, so...\n> \n> I don't think this is actually a sensitive bug. comment 0 said it was marked\n> sensitive 'initially'.\n> The risk of users being abused due to this bug exists, but it seems low, as\n> the user needs to be convinced to click \"Always share\" rather than \"Share\".\n> And the indicators aren't broken, so someone in this situation should notice\n> that something is not working correctly.\n> \n> > ::: browser/modules/webrtcUI.jsm\n> > @@ +396,5 @@\n> > > +\n> > > +          // Remember on which URIs we set persistent permissions so that we\n> > > +          // can remove them if the user clicks 'Stop Sharing'. There's no\n> > > +          // other way for the stop sharing code to know the hostnames of frames\n> > > +          // using devices until bug 1066082 is fixed.\n> > \n> > This sounds like this won't work anymore once the tab is closed. That seems\n> > broken.\n> \n> If the tab is closed, the frame no longer exists, so there's no need to\n> remember its url anymore.\n\nMy point is, I expect \"stop sharing\" to revoke the persistent permission even if it was granted in a different session. The comment made it seem that this code is adding a URI to an array when the permission is granted, and the array is killed off when the tab is killed off, ergo the data will not be there the next time you open this website.\n\n> > Reading more context than this patch (ugh at no reviewboard for security\n> > bugs), it seems this is in a block that runs when the permissions are\n> > already set, which means this comment is misleading (\"we set persistent\n> > permissions\" -- no, we already have them!). Please fix the comment.\n> \n> I have a comment saying \"Remember on which URIs we *set* persistent\n> permissions\" in the block where we saved the permissions, and a second\n> comment in the block where we used existing permissions where it says\n> \"Remember on which URIs we *had* persistent permissions\".\n\nWe seem to be talking past each other. The comment here says \"on which URIs we set persistent permissions\", which implied to me that this is code that is setting the permissions *now*, not code that runs whenever the permissions *are already set*. The comments here just need to be clearer.\n\n> > @@ +399,5 @@\n> > > +          // other way for the stop sharing code to know the hostnames of frames\n> > > +          // using devices until bug 1066082 is fixed.\n> > > +          let browser = this.browser;\n> > > +          browser._devicePermissionURIs = browser._devicePermissionURIs || [];\n> > > +          browser._devicePermissionURIs.push(uri);\n> > \n> > Seems like a Set would be a more correct datatype here, except that you're\n> > storing uri objects and so they are never actually going to be equal. Could\n> > we use a Set and just pass in uri.spec , constructing the nsIURI when we\n> > remove items using the Set ?\n> \n> We could, but I'm not sure it would be a simplification (and it doesn't\n> matter too much if we store a duplicate).\n> \n> > @@ +878,5 @@\n> > >      label: stringBundle.getString(\"getUserMedia.stopSharing.label\"),\n> > >      accessKey: stringBundle.getString(\"getUserMedia.stopSharing.accesskey\"),\n> > >      callback: function () {\n> > > +      let uris = aBrowser._devicePermissionURIs || [];\n> > > +      uris.push(Services.io.newURI(aState.documentURI, null, null));\n> > \n> > This is confusing though. Why do we need to add an additional URI when\n> > people click \"stop sharing\" ? Won't this already be in the list?\n> \n> Hmm... this code isn't well written indeed. Adding the uri to\n> _devicePermissionURIs is unintended, I should have used .concat to duplicate\n> the array.\n> \n> And no, this URI isn't guaranteed to be in the list. Eg. you could have\n> started sharing your camera in this tab, then shared it again with 'always\n> share' in a second tab, and when you click 'stop sharing' in the first tab,\n> we do need to revoke the persistent permission that has been saved by the\n> second tab.\n> \n> \n> An alternative approach that may be more reliable (and less confusing in the\n> code) could be to just remove persistent permissions for the domains of all\n> the frames that are part of the current tab. Even frames that have never\n> tried to use a device. Would you prefer that?\n\nI don't know how slow the permissions manager is, but I do know that we used to have issues with FB using a gazillion iframes for other reasons. It seems silly to iterate over everything when we can just iterate only over some things. If anything, we should fix the bug referenced in the comment so we can actually ask the media code \"give me all the places that are sharing stuff in this doctree\", where it should be doing something better than an exhaustive depth-first docshell-tree search. :-)\n\nI think the patch isn't bad per se, but I *would* like to see the comments improved (and the by-ref-accidental-addition-to-stored-urls thing fixed).", "author": "gijskruitbosch+bugs@gmail.com", "id": 10715808, "time": "2015-09-10T15:05:03Z"}, {"text": "Created attachment 8659322\nPatch v3\n\nThe 2 comments were reversed compared to what I thought I had done. Sorry for the confusion. I also changed \"we had persistent permissions\" to \"we found persistent permissions\" to be slightly more explicit.\n\nAlso changed the .push call to a .concat.\n\nThere's an edge case that isn't covered by the patch: the case I mentioned in comment 9 (\"you could have started sharing your camera in this tab, then shared it again with 'always share' in a second tab, and when you click 'stop sharing' in the first tab, we do need to revoke the persistent permission that has been saved by the second tab.\") isn't addressed if in the first tab the device was used from a frame.\nI don't think it matters much, as it's really a tiny edge case, and if the frame attempts to reload itself to abuse the persistent permission after the user stopped sharing, clicking 'stop sharing' again will this time actually revoke the persistent permission.", "author": "florian@queze.net", "id": 10716031, "time": "2015-09-10T16:03:22Z"}, {"text": "https://hg.mozilla.org/integration/fx-team/rev/215df49b91e7", "author": "florian@queze.net", "id": 10720234, "time": "2015-09-11T12:23:43Z"}, {"text": "Backing out Bug 1184220 wasn't enough to fix the bustage, apparently, so I'm backing out everything else from that push to hopefully get back to a clean slate.\n\nhttps://hg.mozilla.org/integration/fx-team/rev/6dbfe6719621", "author": "kwierso@gmail.com", "id": 10721800, "time": "2015-09-11T18:11:17Z"}, {"text": "This relanded in https://hg.mozilla.org/integration/fx-team/rev/2524d0d7a041\nMerged to m-c in https://hg.mozilla.org/mozilla-central/rev/2524d0d7a041", "author": "kwierso@gmail.com", "id": 10735601, "time": "2015-09-15T23:47:18Z"}, {"text": "(In reply to Jan-Ivar Bruaroey [:jib] from comment #0)\n> Working workaround:\n> \n> - Type in \"about:permissions\", and locate NOT jsfiddle.net but the domain\n> from the iframe.\n>   You wrote it down from the doorhanger you can no longer access, didn't\n> you? Then reset camera permission.\n\nMove this to the \"Non-working workaround\" category -- we've killed about:permissions\n\nWhat might have worked:\n * if you can find the iframe (which could hide itself) right-click in it\n   and open the frame by itself from the \"This Frame\" sub-menu (show only,\n   new tab, new window, etc).\n * from there the door hanger or Page Info will let you control the correct domain", "author": "dveditz@mozilla.com", "id": 10996592, "time": "2015-12-09T13:54:32Z"}, {"text": "(In reply to Daniel Veditz [:dveditz] from comment #15)\n> (In reply to Jan-Ivar Bruaroey [:jib] from comment #0)\n> > Working workaround:\n> > \n> > - Type in \"about:permissions\", and locate NOT jsfiddle.net but the domain\n> > from the iframe.\n> >   You wrote it down from the doorhanger you can no longer access, didn't\n> > you? Then reset camera permission.\n> \n> Move this to the \"Non-working workaround\" category -- we've killed\n> about:permissions\n\nJust to be clear, this bug was fixed for 43, and about:permissions was removed in 45.", "author": "gijskruitbosch+bugs@gmail.com", "id": 10996931, "time": "2015-12-09T15:53:03Z"}, {"text": "Managed to reproduce this issue on Windows 10 x 86 using Firefox 42.0 (20151029151421) and STR from Comment 0.\nI confirm that the 'Stop Sharing' option from the in-use doorhanger revokes the \"Always Share\" persistent permission. \nThe issue was verified across platforms [1] and using Firefox 43.0 (20151208100201).\n\n[1]Mac OS X 10.11.1, Ubuntu 14.04 x86 and Windows 10 x86.", "author": "mihai.boldan@softvision.ro", "id": 11007233, "time": "2015-12-15T15:07:52Z"}], "id": 1201973, "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "40 Branch", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-07-02T18:18:38Z", "cf_platform_rel": "---", "product": "Firefox", "cf_status_firefox_esr52": "---", "blocks": [], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "Device Permissions", "votes": 0, "groups": [], "cf_status_firefox60": "---", "cf_status_firefox43": "verified", "target_milestone": "Firefox 43", "is_cc_accessible": true, "url": "", "creator_detail": {"email": "jib@mozilla.com", "id": 456498, "name": "jib@mozilla.com", "real_name": "Jan-Ivar Bruaroey [:jib] (needinfo? me)"}, "whiteboard": "[post-critsmash-triage][adv-main43-]", "mentors": [], "cc_detail": [{"email": "abillings@mozilla.com", "id": 280903, "name": "abillings@mozilla.com", "real_name": "Al Billings [:abillings]"}, {"email": "andrei.vaida@softvision.ro", "id": 488993, "name": "andrei.vaida@softvision.ro", "real_name": "Andrei Vaida [:avaida] \u2013 please ni? me"}, {"email": "florian@queze.net", "id": 149052, "name": "florian@queze.net", "real_name": "Florian Qu\u00e8ze [:florian]"}, {"email": "florin.mezei@softvisioninc.eu", "id": 500713, "name": "florin.mezei@softvisioninc.eu", "real_name": "Florin Mezei, QA (:FlorinMezei)"}, {"email": "gijskruitbosch+bugs@gmail.com", "id": 159069, "name": "gijskruitbosch+bugs@gmail.com", "real_name": ":Gijs (under the weather; responses will be slow)"}, {"email": "jib@mozilla.com", "id": 456498, "name": "jib@mozilla.com", "real_name": "Jan-Ivar Bruaroey [:jib] (needinfo? me)"}, {"email": "kwierso@gmail.com", "id": 308534, "name": "kwierso@gmail.com", "real_name": "Wes Kocher (:KWierso)"}, {"email": "mihai.boldan@softvision.ro", "id": 551058, "name": "mihai.boldan@softvision.ro", "real_name": "Mihai Boldan, QA [:mboldan]"}, {"email": "mreavy@mozilla.com", "id": 74434, "name": "mreavy@mozilla.com", "real_name": "Maire Reavy [:mreavy] Plz needinfo?"}, {"email": "mwobensmith@mozilla.com", "id": 452604, "name": "mwobensmith@mozilla.com", "real_name": "Matt Wobensmith [:mwobensmith][:matt:]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "resolution": "FIXED", "op_sys": "All", "cf_fx_points": "---", "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "gijskruitbosch+bugs@gmail.com"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-09-07T13:20:18Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "csectype-spoof, privacy, sec-low"}], "who": "dveditz@mozilla.com", "when": "2015-09-08T17:50:22Z"}, {"changes": [{"removed": "firefox-core-security", "field_name": "groups", "added": "core-security-release"}], "who": "dveditz@mozilla.com", "when": "2015-09-08T17:50:34Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8658688, "added": "feedback?(jib@mozilla.com)"}, {"removed": "", "field_name": "cc", "added": "jib@mozilla.com"}], "who": "florian@queze.net", "when": "2015-09-09T12:49:05Z"}, {"changes": [{"removed": "\"Stop Sharing\" in getUserMedia in-use doorhanger doesn't revoke persistent permissions", "field_name": "summary", "added": "\"Stop Sharing\" in gUM in-use doorhanger doesn't revoke persistent permissions in different-domain iframe"}], "who": "jib@mozilla.com", "when": "2015-09-09T14:56:28Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "feedback?(jib@mozilla.com)", "attachment_id": 8658688, "added": "feedback+"}], "who": "jib@mozilla.com", "when": "2015-09-09T15:52:45Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8658688, "added": "1"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "florian@queze.net"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8659254, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "florian@queze.net", "when": "2015-09-10T13:35:20Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8659254, "added": ""}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-09-10T14:17:29Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8659254, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8659322, "added": "review?(gijskruitbosch+bugs@gmail.com)"}], "who": "florian@queze.net", "when": "2015-09-10T16:03:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(gijskruitbosch+bugs@gmail.com)", "attachment_id": 8659322, "added": "review+"}], "who": "gijskruitbosch+bugs@gmail.com", "when": "2015-09-10T18:09:00Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "wkocher@mozilla.com"}], "who": "kwierso@gmail.com", "when": "2015-09-11T18:11:17Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "Firefox 43"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(florian@queze.net)"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-09-15 16:47:18"}, {"removed": "---", "field_name": "cf_status_firefox43", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2015-09-15T23:47:18Z"}, {"changes": [{"removed": "needinfo?(florian@queze.net)", "field_name": "flagtypes.name", "added": "qe-verify+"}], "who": "florian@queze.net", "when": "2015-09-16T10:30:50Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mwobensmith@mozilla.com"}, {"removed": "", "field_name": "whiteboard", "added": "[post-critsmash-triage]"}], "who": "mwobensmith@mozilla.com", "when": "2015-12-03T18:26:28Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "abillings@mozilla.com"}, {"removed": "[post-critsmash-triage]", "field_name": "whiteboard", "added": "[post-critsmash-triage][adv-main43+]"}], "who": "abillings@mozilla.com", "when": "2015-12-08T00:56:00Z"}, {"changes": [{"removed": "", "field_name": "alias", "added": "CVE-2015-7220"}], "who": "abillings@mozilla.com", "when": "2015-12-08T19:22:46Z"}, {"changes": [{"removed": "[post-critsmash-triage][adv-main43+]", "field_name": "whiteboard", "added": "[post-critsmash-triage][adv-main43-]"}, {"removed": "CVE-2015-7220", "field_name": "alias", "added": ""}], "who": "abillings@mozilla.com", "when": "2015-12-09T17:58:06Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "andrei.vaida@softvision.ro, florin.mezei@softvisioninc.eu"}], "who": "florin.mezei@softvisioninc.eu", "when": "2015-12-15T12:16:35Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mihai.boldan@softvision.ro"}], "who": "andrei.vaida@softvision.ro", "when": "2015-12-15T13:11:17Z"}, {"changes": [{"removed": "RESOLVED", "field_name": "status", "added": "VERIFIED"}, {"removed": "qe-verify+", "field_name": "flagtypes.name", "added": ""}, {"removed": "fixed", "field_name": "cf_status_firefox43", "added": "verified"}], "who": "mihai.boldan@softvision.ro", "when": "2015-12-15T15:07:52Z"}, {"changes": [{"removed": "core-security-release", "field_name": "groups", "added": ""}], "who": "dveditz@mozilla.com", "when": "2016-07-02T18:18:38Z"}]}