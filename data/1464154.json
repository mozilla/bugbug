{"status": "ASSIGNED", "cf_tracking_firefox60": "---", "cf_tracking_firefox61": "---", "classification": "Client Software", "creator": "mcastelluccio@mozilla.com", "cc": ["adw@mozilla.com", "echosa@echosa.net", "gsquelart@mozilla.com", "jcristau@mozilla.com", "mak77@bonardo.net", "sledru@mozilla.com"], "depends_on": [1467627, 1463132], "creation_time": "2018-05-24T18:16:32Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "keywords": ["regression"], "summary": "Most of origins I use very often are not being autofilled", "cf_last_resolved": null, "attachments": [], "assigned_to_detail": {"email": "adw@mozilla.com", "id": 334927, "name": "adw@mozilla.com", "real_name": "Drew Willcoxon :adw"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 44, "comments": [{"text": "E.g. wordreference.com, web.telegram.org (I use this one multiple times per day), corrieredelmezzogiorno.corriere.it.", "author": "mcastelluccio@mozilla.com", "id": 13359039, "time": "2018-05-24T18:16:32Z"}, {"text": "Thanks for the report, we'll check and ask further questions (we may have to ask you to run a few queries in scratchpad)\n\nYou are on the latest Nightly, I suppose.", "author": "mak77@bonardo.net", "id": 13369581, "time": "2018-05-28T18:54:00Z"}, {"text": "one initial question, could you please check if you have a pref named places.database.migrateV48Frecencies?", "author": "mak77@bonardo.net", "id": 13369586, "time": "2018-05-28T18:56:30Z"}, {"text": "Also, do you reuse this profile across different channels of Firefox?", "author": "mak77@bonardo.net", "id": 13369588, "time": "2018-05-28T18:57:25Z"}, {"text": "I'm on the latest Nightly, I don't have a pref named \"places.database.migrateV48Frecencies\", and I only use this profile for Nightly.", "author": "mcastelluccio@mozilla.com", "id": 13369863, "time": "2018-05-28T22:43:19Z"}, {"text": "I think I'm seeing the same, in the last few weeks typing stuff in the awesomebar defaults to \"search with google\" instead of picking things up from browsing history.", "author": "jcristau@mozilla.com", "id": 13370462, "time": "2018-05-29T08:45:16Z"}, {"text": "So far, the provided urls seem to fall into bug 1463132, we'll check again once that is gone.", "author": "mak77@bonardo.net", "id": 13371644, "time": "2018-05-29T16:23:43Z"}, {"text": "It doesn't look like web.telegram.org or corrieredelmezzogiorno.corriere.it (comment 0) redirect, though.  web.telegram.org may do some pushState() thing since you end up at web.telegram.org/#/login, but not an HTTP redirect.  So maybe something else in addition to bug 14631320 is going on.", "author": "adw@mozilla.com", "id": 13372401, "time": "2018-05-29T20:45:36Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #7)\n> It doesn't look like web.telegram.org or corrieredelmezzogiorno.corriere.it\n> (comment 0) redirect, though. \n\nhttp => https?", "author": "mak77@bonardo.net", "id": 13372481, "time": "2018-05-29T21:15:25Z"}, {"text": "Other examples are \"ilmanifesto.it\" or \"mozilla.slack.com\". Not sure if they fall in the same bucket (maybe http -> https as well).", "author": "mcastelluccio@mozilla.com", "id": 13372997, "time": "2018-05-30T00:01:40Z"}, {"text": "I had an idea some time ago, but then I forgot to write it down. Adaptive history (moz_inputhistory) has data that could be used to autofill. For example\nSELECT input, url\nFROM moz_inputhistory i\nJOIN moz_places h ON h.id = i.place_id\nJOIN moz_origins o ON o.id = h.origin_id\nWHERE host BETWEEN input AND input || X'FFFF'", "author": "mak77@bonardo.net", "id": 13373886, "time": "2018-05-30T10:19:33Z"}, {"text": "Some of the cases I mentioned are fixed in the latest Nightly (maybe by bug 1463132?).\n\"wordreference.com\", \"web.telegram.org\", \"mozilla.slack.com\" are still broken.", "author": "mcastelluccio@mozilla.com", "id": 13376258, "time": "2018-05-31T01:04:50Z"}, {"text": "Thanks, Marco.  If you don't mind, could you please try the following in your browser console and report the output?  It will print some frecency stats and the origins in your places database that match those three domains you mentioned.\n\n(async function () {\n  let db = await PlacesUtils.promiseDBConnection();\n  let rows = await db.execute(`\n    WITH s(count, sum, squares) AS (\n      SELECT\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_count\") AS REAL),\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_sum\") AS REAL),\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_sum_of_squares\") AS REAL)\n    )\n    SELECT count, sum, squares, CASE count\n    WHEN 0 THEN 0.0\n    WHEN 1 THEN sum\n    ELSE (sum / count) + sqrt((squares - ((sum * sum) / count)) / count)\n    END\n    FROM s\n  `);\n  for (let i = 0; i < 4; i++) {\n    console.log(rows[0].getResultByIndex(i));\n  }\n  rows = await db.execute(`\n    SELECT frecency, prefix, host\n    FROM moz_origins\n    WHERE like(\"%wordreference.com%\", host)\n          OR like(\"%telegram.org%\", host)\n          OR like(\"%slack.com%\", host)\n  `);\n  for (let row of rows) {\n    console.log(row.getResultByIndex(0),\n                row.getResultByIndex(1),\n                row.getResultByIndex(2));\n  }\n})();", "author": "adw@mozilla.com", "id": 13376313, "time": "2018-05-31T01:47:49Z"}, {"text": "(In reply to Marco Bonardo [::mak] from comment #8)\n> (In reply to Drew Willcoxon :adw from comment #7)\n> > It doesn't look like web.telegram.org or corrieredelmezzogiorno.corriere.it\n> > (comment 0) redirect, though. \n> \n> http => https?\n\nThat's not the HTTP redirection recognized by the frecency calculation code though right (301, 308)?  It's HTTPS upgrade or whatever.  If you visit those sites and check the network panel in devtools, there's no redirection going on.", "author": "adw@mozilla.com", "id": 13376318, "time": "2018-05-31T01:51:06Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #13)\n> though right (301, 308)?\n\nEr, those are only permanent redirects and we detect temp too, but my point still stands (I think)", "author": "adw@mozilla.com", "id": 13376323, "time": "2018-05-31T01:52:31Z"}, {"text": "In my case it happens with bugzilla.mozilla.org.  I used to be able to type \"bu\" or \"bug\" and have that autocompleted to \"bugzilla.mozilla.org/\".  That works in beta, but in nightly it only does the \"search with google\" thing which is horribly annoying.", "author": "jcristau@mozilla.com", "id": 13376669, "time": "2018-05-31T07:36:03Z"}, {"text": "132609\n49676152\n142541933430916\n33158.193338713514\n8280000 https:// web.telegram.org\n4317 http:// www.wordreference.com\n553 http:// wordreference.com\n64296 https:// uplift-bugs.slack.com\n126 https:// coveralls.slack.com\n54 https:// forum.wordreference.com\n11161 https:// mozilla.slack.com\n20 https:// slack.com\n20 https:// telegram.org\n20 https:// instantview.telegram.org\n20 https:// join.slack.com\n466 https:// dev-productivity.slack.com\n20 http:// dev-productivity.slack.com\n20 https:// developersitalia.slack.com\n20 http:// developersitalia.slack.com\n26208 https:// zest-uzh.slack.com", "author": "mcastelluccio@mozilla.com", "id": 13376895, "time": "2018-05-31T09:31:43Z"}, {"text": "(In reply to Julien Cristau [:jcristau] from comment #15)\n> In my case it happens with bugzilla.mozilla.org.  I used to be able to type\n> \"bu\" or \"bug\" and have that autocompleted to \"bugzilla.mozilla.org/\".  That\n> works in beta, but in nightly it only does the \"search with google\" thing\n> which is horribly annoying.\n\nPlease adapt the script in comment 12 and post the results.", "author": "mak77@bonardo.net", "id": 13377090, "time": "2018-05-31T11:00:57Z"}, {"text": "Drew, what if due to bug 1463512 (or bug 1463017) we didn't actually update frecency for some origins? We could have submitted the transaction and flipped the pref, but then merging the wal failed.\nAlso, could we calculate the threshold out of moz_origins instead of moz_places? that would probably be more efficient and reliable, since we select from that table.", "author": "mak77@bonardo.net", "id": 13377119, "time": "2018-05-31T11:20:48Z"}, {"text": "Though, we seem to do a full recalculation of the origin frecency when a frecency in moz_places changes (we could probably be more efficient by keeping the new frecency if > currently stored one, recalculate otherwise). That would override any non-calculated value. So, it looks like the only thing that may be wrong long term (until the first maintenance) is stats.", "author": "mak77@bonardo.net", "id": 13377140, "time": "2018-05-31T11:37:30Z"}, {"text": "44495\n8113574\n18394036735570\n20513.66222311852\n21294 https:// bugzilla.mozilla.org\n4904 http:// bugzilla.mozilla.org", "author": "jcristau@mozilla.com", "id": 13377152, "time": "2018-05-31T11:48:27Z"}, {"text": "missed the %s the first time around (doesn't seem to make much difference, though).\n\n44495\n8113674\n18394036865570\n20513.66452225664\n21294 https:// bugzilla.mozilla.org\n4904 http:// bugzilla.mozilla.org\n20 https:// bug623317.bugzilla.mozilla.org", "author": "jcristau@mozilla.com", "id": 13377159, "time": "2018-05-31T11:50:48Z"}, {"text": "Marco, could you please run this one?\n\n(async function () {\n  let hosts = [\n    \"wordreference.com\",\n    \"web.telegram.org\",\n    \"mozilla.slack.com\",\n  ];\n  let sqlFrags = [];\n  for (let host of hosts) {\n    for (let prefix of [\"http://\", \"https://\"]) {\n      sqlFrags.push(`\n        SELECT \"${prefix}\", \"${host}\" AS host,\n        (\n          SELECT MAX(frecency)\n          FROM moz_places\n          WHERE like(\"${prefix}${host}%\", url)\n        ),\n        (\n          SELECT frecency\n          FROM moz_origins\n          WHERE prefix = \"${prefix}\" AND host = \"${host}\"\n        )\n      `);\n    }\n  }\n  let db = await PlacesUtils.promiseDBConnection();\n  let rows = await db.execute(\n    sqlFrags.join(\" UNION \") + \" ORDER BY host ASC\"\n  );\n  for (let row of rows) {\n    console.log(row.getResultByIndex(0),\n                row.getResultByIndex(1),\n                row.getResultByIndex(2),\n                row.getResultByIndex(3));\n  }\n})();", "author": "adw@mozilla.com", "id": 13378187, "time": "2018-05-31T17:33:01Z"}, {"text": "http:// mozilla.slack.com null null\nhttps:// mozilla.slack.com 10882 10882\nhttp:// web.telegram.org null null\nhttps:// web.telegram.org 8298000 8298000\nhttp:// wordreference.com 539 539\nhttps:// wordreference.com null null", "author": "mcastelluccio@mozilla.com", "id": 13378196, "time": "2018-05-31T17:36:37Z"}, {"text": "(In reply to Marco Castelluccio [:marco] from comment #16)\n> 33158.193338713514\n> 8280000 https:// web.telegram.org\n\n(In reply to Julien Cristau [:jcristau] from comment #21)\n> 20513.66452225664\n> 21294 https:// bugzilla.mozilla.org\n\nAccording to this, web.telegram.org and bugzilla.mozilla.org should be autofilling for each of you respectively.  They both clear your respective frecency thresholds.\n\nIf you start typing \"web.telegram.org\" or \"bugzilla.mozilla.org\" character by character, is it really not autofilling at some point?  There may be a similar origin that shares some prefix with it that has a higher frecency, and if that's the case, that other origin will win and be autofilled first, up to the shared prefix.\n\nIf these really aren't autofilling, we have some problem unrelated to frecencies.  I'll ruminate on this.\n\n(In reply to Marco Castelluccio [:marco] from comment #23)\n\nThanks for the quick reply!  All the frecency data here looks in order.  According to this, web.telegram.org should be autofilling as I mentioned (but I understand it's not), but mozilla.slack.com and wordreference.com don't meet the autofill threshold, so it's \"expected\" that they don't autofill.\n\nWe may need to tweak what \"expected\" means.  If you do actually visit mozilla.slack.com and wordreference.com often/recently, their frecencies should naturally increase enough to meet the threshold at some point.  We may need to take a closer look at how frecencies are boosted, or exclude frecency outliers when calculating the autofill threshold (web.telegram.org has a much larger frecency than mozilla.slack.com and wordreference.com for example), or something else...", "author": "adw@mozilla.com", "id": 13378222, "time": "2018-05-31T17:47:41Z"}, {"text": "Could you please report the values of these prefs?\n\nbrowser.urlbar.suggest.history\nbrowser.urlbar.suggest.history.onlyTyped\nbrowser.urlbar.suggest.bookmark", "author": "adw@mozilla.com", "id": 13378284, "time": "2018-05-31T18:11:55Z"}, {"text": "It may also be interesting to know how you actually visit those pages, because for example session-restore and app-tabs may register visits differently from typing in the urlbar or clicking a bookmark. As well as maybe you often access wordreference through a keyword, rather than from its homepage?\nThe more we know about the way you access those pages, the better we can tweak things.", "author": "mak77@bonardo.net", "id": 13378330, "time": "2018-05-31T18:21:39Z"}, {"text": "One more snippet to please try.  It prints all the origins that meet the autofill frecency threshold.  These are all the origins that should autofill when you start typing them.\n\nYou don't need to paste the whole output here, but please do paste the last line, which is a count of the origins that meet the threshold.\n\nMarco, are there domains in the list other than web.telegram.org that don't autofill?\n\nJulien, are there domains other than bugzilla.mozilla.org that don't autofill?\n\n(async function () {\n  let db = await PlacesUtils.promiseDBConnection();\n  let rows = await db.execute(`\n    WITH\n    frecency_stats(count, sum, squares) AS (\n      SELECT\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_count\") AS REAL),\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_sum\") AS REAL),\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_sum_of_squares\") AS REAL)\n    ),\n    autofill_frecency_threshold(value) AS (\n      SELECT MAX(1,\n        CASE count\n        WHEN 0 THEN 0.0\n        WHEN 1 THEN sum\n        ELSE (sum / count) + sqrt((squares - ((sum * sum) / count)) / count)\n        END\n      ) FROM frecency_stats\n    )\n    SELECT frecency, prefix, host\n    FROM moz_origins\n    WHERE frecency >= (SELECT value FROM autofill_frecency_threshold)\n    ORDER BY frecency DESC\n  `);\n  for (let row of rows) {\n    console.log(row.getResultByIndex(0),\n                row.getResultByIndex(1),\n                row.getResultByIndex(2));\n  }\n  let meetThresholdCount = rows.length;\n  rows = await db.execute(`\n    SELECT count(*) FROM moz_origins\n  `);\n  let allCount = rows[0].getResultByIndex(0);\n  console.log(meetThresholdCount,\n              allCount,\n              (meetThresholdCount / allCount * 100) + \"%\");\n})();", "author": "adw@mozilla.com", "id": 13378837, "time": "2018-05-31T21:24:54Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #24)\n> (In reply to Marco Castelluccio [:marco] from comment #16)\n> > 33158.193338713514\n> > 8280000 https:// web.telegram.org\n> \n> (In reply to Julien Cristau [:jcristau] from comment #21)\n> > 20513.66452225664\n> > 21294 https:// bugzilla.mozilla.org\n> \n> According to this, web.telegram.org and bugzilla.mozilla.org should be\n> autofilling for each of you respectively.  They both clear your respective\n> frecency thresholds.\n> \n> If you start typing \"web.telegram.org\" or \"bugzilla.mozilla.org\" character\n> by character, is it really not autofilling at some point?  There may be a\n> similar origin that shares some prefix with it that has a higher frecency,\n> and if that's the case, that other origin will win and be autofilled first,\n> up to the shared prefix.\n> \n> If these really aren't autofilling, we have some problem unrelated to\n> frecencies.  I'll ruminate on this.\n\n\"web.telegram.org\" is the one with the highest frecency value.\nWhen I typed \"we\", nothing was being autofilled.\n\n> (In reply to Marco Castelluccio [:marco] from comment #23)\n> \n> Thanks for the quick reply!  All the frecency data here looks in order. \n> According to this, web.telegram.org should be autofilling as I mentioned\n> (but I understand it's not), but mozilla.slack.com and wordreference.com\n> don't meet the autofill threshold, so it's \"expected\" that they don't\n> autofill.\n> \n> We may need to tweak what \"expected\" means.  If you do actually visit\n> mozilla.slack.com and wordreference.com often/recently, their frecencies\n> should naturally increase enough to meet the threshold at some point.  We\n> may need to take a closer look at how frecencies are boosted, or exclude\n> frecency outliers when calculating the autofill threshold (web.telegram.org\n> has a much larger frecency than mozilla.slack.com and wordreference.com for\n> example), or something else...\n\nweb.telegram.org is now being autofilled in the latest Nightly (it wasn't working earlier today).\nwordreference.com still doesn't work.\n\nI don't visit mozilla.slack.com often, but I do visit wordreference.com often.\n\n(In reply to Drew Willcoxon :adw from comment #25)\n> Could you please report the values of these prefs?\n> \n> browser.urlbar.suggest.history\n> browser.urlbar.suggest.history.onlyTyped\n> browser.urlbar.suggest.bookmark\n\nbrowser.urlbar.suggest.history -> true\nbrowser.urlbar.suggest.history.onlyTyped -> false\nbrowser.urlbar.suggest.bookmark -> true\n\n(In reply to Marco Bonardo [::mak] from comment #26)\n> It may also be interesting to know how you actually visit those pages,\n> because for example session-restore and app-tabs may register visits\n> differently from typing in the urlbar or clicking a bookmark. As well as\n> maybe you often access wordreference through a keyword, rather than from its\n> homepage?\n> The more we know about the way you access those pages, the better we can\n> tweak things.\n\nFor \"wordreference.com\" (which is now the last one not working for me which definitely regressed), I have a weird way to use it.\nI type \"wo\" in the address bar, then select one of the entries (e.g. \"http://www.wordreference.com/iten/denunciato\") then remove the word (e.g. \"denunciato\") and replace it with the word I want to lookup.\nGiven the way I use it, I don't really care if this particular case is fixed, but it is a regression.\n\n(In reply to Drew Willcoxon :adw from comment #27)\n> One more snippet to please try.  It prints all the origins that meet the\n> autofill frecency threshold.  These are all the origins that should autofill\n> when you start typing them.\n> \n> You don't need to paste the whole output here, but please do paste the last\n> line, which is a count of the origins that meet the threshold.\n\n44 7687 0.5723949525172369%\n\n> Marco, are there domains in the list other than web.telegram.org that don't\n> autofill?\n\nNot anymore, as far as I can see.", "author": "mcastelluccio@mozilla.com", "id": 13379131, "time": "2018-05-31T23:26:25Z"}, {"text": "(In reply to Marco Castelluccio [:marco] from comment #28)\n> web.telegram.org is now being autofilled in the latest Nightly (it wasn't\n> working earlier today).\n\nI'm not sure what to make of that.  It's possible that the update was coincidental with the frecency stats recalculation that happens on idle, and the recalculation fixed the threshold, which fixed the autofill.  But that doesn't really make sense because the stats you pasted in comment 16 already indicated that web.telegram.org should have been autofilled.", "author": "adw@mozilla.com", "id": 13379238, "time": "2018-06-01T00:46:56Z"}, {"text": "(In reply to Marco Castelluccio [:marco] from comment #28)\n> For \"wordreference.com\" (which is now the last one not working for me which\n> definitely regressed), I have a weird way to use it.\n> I type \"wo\" in the address bar, then select one of the entries (e.g.\n> \"http://www.wordreference.com/iten/denunciato\") then remove the word (e.g.\n> \"denunciato\") and replace it with the word I want to lookup.\n> Given the way I use it, I don't really care if this particular case is\n> fixed, but it is a regression.\n\nI see, so you have a lot of _different_ typed urls that point to this origin. IIRC the frecency we pick for the origins is the max among urls, it may not be the best choice for this case.", "author": "mak77@bonardo.net", "id": 13379565, "time": "2018-06-01T07:34:50Z"}, {"text": "(In reply to Drew Willcoxon :adw from comment #25)\n> Could you please report the values of these prefs?\n> \nbrowser.urlbar.suggest.history=true\nbrowser.urlbar.suggest.history.onlyTyped=false\nbrowser.urlbar.suggest.bookmark=true", "author": "jcristau@mozilla.com", "id": 13379618, "time": "2018-06-01T08:22:59Z"}, {"text": "I'm seeing bugzilla.mozilla.org get autofilled after updating today (just typing \"b\" is enough).", "author": "jcristau@mozilla.com", "id": 13379622, "time": "2018-06-01T08:26:06Z"}, {"text": "So, we may investigate a new way to calculate origins frecency, rather than just picking the max, and then calculate a threshold out of moz_origins, rather than moz_places. If we'd land this in nightly, nightly users would get another migration, while other channels would just use the latest algorithm. Thus, this is something to figure out soon.", "author": "mak77@bonardo.net", "id": 13379813, "time": "2018-06-01T10:05:41Z"}, {"text": "(In reply to Marco Bonardo [::mak] from comment #33)\n> So, we may investigate a new way to calculate origins frecency, rather than\n> just picking the max, and then calculate a threshold out of moz_origins,\n> rather than moz_places. If we'd land this in nightly, nightly users would\n> get another migration, while other channels would just use the latest\n> algorithm. Thus, this is something to figure out soon.\n\nThinking about it, I actually do the same with bugzilla.mozilla.org, but this one is being autofilled.", "author": "mcastelluccio@mozilla.com", "id": 13380701, "time": "2018-06-01T16:26:44Z"}, {"text": "Autofill should take adaptive history into account.\n\n(In reply to Marco Bonardo [::mak] from comment #10)\n> I had an idea some time ago, but then I forgot to write it down. Adaptive\n> history (moz_inputhistory) has data that could be used to autofill.\n\nI filed bug 1466233.  See also bug 1464270.", "author": "adw@mozilla.com", "id": 13381385, "time": "2018-06-01T20:53:19Z"}, {"text": "*** Bug 1464857 has been marked as a duplicate of this bug. ***", "author": "mak77@bonardo.net", "id": 13384665, "time": "2018-06-04T08:27:09Z"}, {"text": "Looks like something changed over the weekend and bugzilla stopped being autocompleted for me yesterday.", "author": "jcristau@mozilla.com", "id": 13387182, "time": "2018-06-05T06:13:22Z"}, {"text": "Do you have one or more bookmark keywords on bugzilla? For example if you have a \"bug\" keyword and you type \"bug\", it's NOT supposed to autofill, since it's a keyword.", "author": "mak77@bonardo.net", "id": 13387378, "time": "2018-06-05T08:48:19Z"}, {"text": "I do not.", "author": "jcristau@mozilla.com", "id": 13387383, "time": "2018-06-05T08:54:19Z"}, {"text": "Julien, could you please re-run the script in comment 12, replacing wordreference.com with bugzilla.mozilla.org as you did before?  Right before you do that, please verify again that bugzilla still does not autofill.\n\nAnd then please run the following.  Thanks so much for helping us with this.\n\n(async function () {\n  const SQL_AUTOFILL_WITH = `\n    WITH\n    frecency_stats(count, sum, squares) AS (\n      SELECT\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_count\") AS REAL),\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_sum\") AS REAL),\n        CAST((SELECT IFNULL(value, 0.0) FROM moz_meta WHERE key = \"frecency_sum_of_squares\") AS REAL)\n    ),\n    autofill_frecency_threshold(value) AS (\n      SELECT MAX(1,\n        CASE count\n        WHEN 0 THEN 0.0\n        WHEN 1 THEN sum\n        ELSE (sum / count) + sqrt((squares - ((sum * sum) / count)) / count)\n        END\n      ) FROM frecency_stats\n    )\n  `;\n  const SQL_AUTOFILL_FRECENCY_THRESHOLD = `(\n    SELECT value FROM autofill_frecency_threshold\n  )`;\n  function originQuery(conditions = \"\", bookmarkedFragment = \"NULL\") {\n    return `${SQL_AUTOFILL_WITH}\n            SELECT :query_type,\n                   host || '/',\n                   prefix || host || '/',\n                   frecency,\n                   ${bookmarkedFragment} AS bookmarked,\n                   id\n            FROM moz_origins\n            WHERE host BETWEEN :searchString AND :searchString || X'FFFF'\n                  AND frecency >= ${SQL_AUTOFILL_FRECENCY_THRESHOLD}\n                  ${conditions}\n            UNION ALL\n            SELECT :query_type,\n                   fixup_url(host) || '/',\n                   prefix || host || '/',\n                   frecency,\n                   ${bookmarkedFragment} AS bookmarked,\n                   id\n            FROM moz_origins\n            WHERE host BETWEEN 'www.' || :searchString AND 'www.' || :searchString || X'FFFF'\n                  AND frecency >= ${SQL_AUTOFILL_FRECENCY_THRESHOLD}\n                  ${conditions}\n            ORDER BY frecency DESC, id DESC\n            LIMIT 1 `;\n  }\n  let db = await PlacesUtils.promiseDBConnection();\n  let rows = await db.execute(originQuery(), {\n    query_type: 1,\n    searchString: \"bug\",\n  });\n  console.log(\"Row count:\", rows.length);\n  for (let row of rows) {\n    console.log(row.getResultByIndex(1),\n                row.getResultByIndex(2),\n                row.getResultByIndex(3));\n  }\n})();", "author": "adw@mozilla.com", "id": 13389082, "time": "2018-06-05T19:59:13Z"}, {"text": "On nightly 20180606220131\n\nFrom the script in comment 12:\n\n45235\n8977829\n22581355232563\n22540.394785785466\n19244 https:// bugzilla.mozilla.org\n4319 http:// bugzilla.mozilla.org\n20 https:// bug623317.bugzilla.mozilla.org\n\nFrom the script in comment 40:\n\nRow count: 0", "author": "jcristau@mozilla.com", "id": 13395735, "time": "2018-06-08T09:10:18Z"}, {"text": "This output makes more sense than the earlier one.  The frecency threshold is 22540, but bugzilla falls below that at 19244, so it's not being autofilled.  It's working as expected right now (but of course that doesn't mean it's optimal). Bug 1467631 may improve the situation for you so that if you're often reaching bugzilla by typing it into the urlbar, or by starting to type it and then selecting a result, its frecency will get boosted enough to clear the threshold.\n\nWhat I'm really interested in seeing is when bugzilla is above the threshold yet not being autofilled, as your earlier comments indicated.  If you happen to see that happening -- and running that first script is the only way you'd see that, so I don't really expect that you'll see it -- then running the second script and letting me know the output would be helpful.\n\nOne interesting thing about that ouput though is that bugzilla does clear the threshold when you sum the frecencies of its http and https entries.  Maybe we should consider http + https as a single entry when comparing against the threshold, but then take the higher entry when actually autofilling, in this case https.", "author": "adw@mozilla.com", "id": 13397092, "time": "2018-06-08T19:57:50Z"}, {"text": "I'm curious why bugzilla would ever fall below the threshold, given it's probably by far the origin I visit most (though maybe not type, these days, due to this bug).", "author": "jcristau@mozilla.com", "id": 13410482, "time": "2018-06-18T14:02:06Z"}], "id": 1464154, "priority": "P1", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox62": "+", "cf_platform_rel": "---", "product": "Firefox", "cf_status_firefox_esr52": "---", "blocks": [1239708], "qa_contact": "", "see_also": ["https://bugzilla.mozilla.org/show_bug.cgi?id=1464270"], "cf_fx_iteration": "---", "component": "Address Bar", "votes": 0, "cf_tracking_firefox_esr60": "---", "cf_status_firefox62": "affected", "cf_status_firefox61": "---", "cf_status_firefox60": "---", "target_milestone": "---", "is_cc_accessible": true, "cf_rank": null, "groups": [], "url": "", "creator_detail": {"email": "mcastelluccio@mozilla.com", "id": 420453, "name": "mcastelluccio@mozilla.com", "real_name": "Marco Castelluccio [:marco]"}, "whiteboard": "[fxsearch]", "mentors": [], "cc_detail": [{"email": "adw@mozilla.com", "id": 334927, "name": "adw@mozilla.com", "real_name": "Drew Willcoxon :adw"}, {"email": "echosa@echosa.net", "id": 599150, "name": "echosa@echosa.net", "real_name": ""}, {"email": "gsquelart@mozilla.com", "id": 515575, "name": "gsquelart@mozilla.com", "real_name": "Gerald Squelart [:gerald]"}, {"email": "jcristau@mozilla.com", "id": 580382, "name": "jcristau@mozilla.com", "real_name": "Julien Cristau [:jcristau]"}, {"email": "mak77@bonardo.net", "id": 240353, "name": "mak77@bonardo.net", "real_name": "Marco Bonardo [::mak]"}, {"email": "sledru@mozilla.com", "id": 495955, "name": "sledru@mozilla.com", "real_name": "Sylvestre Ledru [:sylvestre]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "last_change_time": "2018-06-18T14:02:06Z", "cf_status_firefox_esr60": "---", "assigned_to": "adw@mozilla.com", "is_open": true, "resolution": "", "op_sys": "Unspecified", "cf_fx_points": "---", "history": [{"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "---", "field_name": "cf_tracking_firefox62", "added": "?"}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-28T18:29:56Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jcristau@mozilla.com"}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-28T18:30:18Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mak77@bonardo.net"}, {"removed": "", "field_name": "blocks", "added": "1239708"}], "who": "mak77@bonardo.net", "when": "2018-05-28T18:54:00Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com)"}], "who": "mak77@bonardo.net", "when": "2018-05-28T18:56:30Z"}, {"changes": [{"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-28T22:43:19Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P1"}, {"removed": "", "field_name": "whiteboard", "added": "[fxsearch]"}], "who": "mak77@bonardo.net", "when": "2018-05-29T08:23:16Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1463132"}], "who": "mak77@bonardo.net", "when": "2018-05-29T16:22:46Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "adw@mozilla.com"}], "who": "adw@mozilla.com", "when": "2018-05-29T20:45:36Z"}, {"changes": [{"removed": "?", "field_name": "cf_tracking_firefox62", "added": "+"}], "who": "lhenry@mozilla.com", "when": "2018-05-30T15:36:00Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com)"}], "who": "adw@mozilla.com", "when": "2018-05-31T01:47:49Z"}, {"changes": [{"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-31T09:31:43Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jcristau@mozilla.com)"}], "who": "mak77@bonardo.net", "when": "2018-05-31T11:00:57Z"}, {"changes": [{"removed": "needinfo?(jcristau@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jcristau@mozilla.com", "when": "2018-05-31T11:48:27Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com)"}], "who": "adw@mozilla.com", "when": "2018-05-31T17:33:01Z"}, {"changes": [{"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-31T17:36:37Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(mcastelluccio@mozilla.com), needinfo?(jcristau@mozilla.com)"}], "who": "adw@mozilla.com", "when": "2018-05-31T18:11:55Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "adw@mozilla.com"}], "who": "adw@mozilla.com", "when": "2018-05-31T21:25:06Z"}, {"changes": [{"removed": "needinfo?(mcastelluccio@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "mcastelluccio@mozilla.com", "when": "2018-05-31T23:26:25Z"}, {"changes": [{"removed": "needinfo?(jcristau@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jcristau@mozilla.com", "when": "2018-06-01T08:26:06Z"}, {"changes": [{"removed": "", "field_name": "see_also", "added": "https://bugzilla.mozilla.org/show_bug.cgi?id=1464270"}], "who": "adw@mozilla.com", "when": "2018-06-01T20:46:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "echosa@echosa.net"}], "who": "mak77@bonardo.net", "when": "2018-06-04T08:27:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "gsquelart@mozilla.com"}], "who": "gsquelart@mozilla.com", "when": "2018-06-04T23:16:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sledru@mozilla.com"}], "who": "sledru@mozilla.com", "when": "2018-06-05T08:59:07Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jcristau@mozilla.com)"}], "who": "adw@mozilla.com", "when": "2018-06-05T19:59:13Z"}, {"changes": [{"removed": "", "field_name": "depends_on", "added": "1467627"}], "who": "mak77@bonardo.net", "when": "2018-06-08T08:10:31Z"}, {"changes": [{"removed": "needinfo?(jcristau@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jcristau@mozilla.com", "when": "2018-06-08T09:10:18Z"}]}