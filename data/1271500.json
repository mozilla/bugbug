{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bevistseng@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-15T08:41:04Z", "type_id": 4, "creation_date": "2016-08-15T07:22:31Z", "id": 1438924, "setter": "jvarga@mozilla.com"}], "content_type": "text/plain", "id": 8781015}, {"creator": "bevistseng@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-08-16T02:39:55Z", "type_id": 4, "creation_date": "2016-08-16T02:39:55Z", "id": 1439573, "setter": "bevistseng@gmail.com"}], "content_type": "text/plain", "id": 8781342}], "classification": "Components", "creator": "bevistseng@gmail.com", "cc": ["jvarga@mozilla.com", "jypenator@gmail.com", "soqu71@gmail.com"], "depends_on": [], "creation_time": "2016-05-10T02:38:13Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["dev-doc-complete"], "summary": "Binary Key Support", "id": 1271500, "cf_status_firefox51": "fixed", "assigned_to_detail": {"email": "bevistseng@gmail.com", "id": 483302, "name": "bevistseng@gmail.com", "real_name": "Bevis Tseng[:bevis][:btseng](Exited)"}, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "bevistseng@gmail.com", "comment_count": 15, "comments": [{"text": "Binary Key support is specified in [1]:\n\"\nA key has an associated type which is one of: number, date, string, *binary*, or array.\n\"\n\n[1] https://w3c.github.io/IndexedDB/#key-construct", "author": "bevistseng@gmail.com", "id": 11395213, "time": "2016-05-10T02:38:13Z"}, {"text": "More detailed discussion of this feature can be found at:\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=23332", "author": "bevistseng@gmail.com", "id": 11395225, "time": "2016-05-10T02:45:55Z"}, {"text": "Mapping fixlater to P2", "author": "soqu71@gmail.com", "id": 11594897, "time": "2016-08-03T10:48:57Z"}, {"text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=cfd5b4677bd8", "author": "bevistseng@gmail.com", "id": 11620258, "time": "2016-08-12T09:38:39Z"}, {"text": "Created attachment 8781015\n(v1) Patch: Binary Key Support\n\nThis is the last brick of IDB v2 features:\n1. The input type could be either ArrayBuffer or the view of ArrayBuffer(TypedArray or DataView)[1].\n2. The output type should always be ArrayBuffer according to [2], the discussion in [3] and the implementation in Chromium[4].\n3. The String key encoding is adopted with new tag named *eBinary* to support the variable length of the binary data and to ensure that these binary keys are comparable/sortable in the same type and among different types.\n\nHi Jan,\n\nMay I have your review for this approach?\n\nThanks!\n\n[1] http://w3c.github.io/IndexedDB/#convert-value-to-key\n[2] http://w3c.github.io/IndexedDB/#convert-key-to-value\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=23332#c11\n[4] https://codereview.chromium.org/1087923003", "author": "bevistseng@gmail.com", "id": 11624700, "time": "2016-08-15T07:22:31Z"}, {"text": "Comment on attachment 8781015\n(v1) Patch: Binary Key Support\n\nReview of attachment 8781015:\n-----------------------------------------------------------------\n\nLooks very good to me, but please update the big comment in Key.cpp to mention how we treat binary keys (just in case someone dares to touch this code in future :)\n\n::: dom/indexedDB/Key.cpp\n@@ +296,5 @@\n> +\n> +    if (JS_IsArrayBufferObject(obj)) {\n> +      uint8_t* bufferData = nullptr;\n> +      uint32_t bufferLength = 0;\n> +      bool unused = false;\n\nThese three don't have to be initialized here.\n\n@@ +307,5 @@\n> +\n> +    if (JS_IsArrayBufferViewObject(obj)) {\n> +      uint8_t* bufferData = nullptr;\n> +      uint32_t bufferLength = 0;\n> +      bool unused = false;\n\ndtto\n\n@@ +313,5 @@\n> +      js::GetArrayBufferViewLengthAndData(obj, &bufferLength, &unused, &bufferData);\n> +      EncodeBinary(bufferData, bufferLength, aTypeOffset);\n> +\n> +      return NS_OK;\n> +    }\n\nConsider to create a C++ template for this and use it here if it looks better to you.\n\n@@ +668,5 @@\n> +Key::DecodeBinary(const unsigned char*& aPos,\n> +                  const unsigned char* aEnd,\n> +                  JSContext* aCx)\n> +{\n> +  NS_ASSERTION(*aPos % eMaxType == eBinary, \"Don't call me!\");\n\nMOZ_ASSERT() for new code\n\n@@ +671,5 @@\n> +{\n> +  NS_ASSERTION(*aPos % eMaxType == eBinary, \"Don't call me!\");\n> +\n> +  ++aPos;\n> +  const unsigned char* buffer = aPos;\n\nNit: const unsigned char* buffer = aPos++;\n\n@@ +688,5 @@\n> +    return JS_NewArrayBuffer(aCx, 0);\n> +  }\n> +\n> +  uint8_t* out = static_cast<uint8_t*>(JS_malloc(aCx, size));\n> +  if (!out) {\n\nNit: if (NS_WARN_IF(!out)) {\n\n@@ +718,5 @@\n> +\n> +  aPos = iter + 1;\n> +\n> +  NS_ASSERTION(static_cast<size_t>(pos - out) == size,\n> +               \"Should have written the whole buffer\");\n\nMOZ_ASSERT()\n\n::: dom/indexedDB/Key.h\n@@ +36,4 @@\n>      eDate = 0x20,\n>      eString = 0x30,\n>      eArray = 0x50,\n> +    eBinary = 0x40,\n\nmove after eString", "author": "jvarga@mozilla.com", "id": 11624838, "time": "2016-08-15T08:41:04Z"}, {"text": "Comment on attachment 8781015\n(v1) Patch: Binary Key Support\n\nReview of attachment 8781015:\n-----------------------------------------------------------------\n\n::: dom/indexedDB/Key.cpp\n@@ +313,5 @@\n> +      js::GetArrayBufferViewLengthAndData(obj, &bufferLength, &unused, &bufferData);\n> +      EncodeBinary(bufferData, bufferLength, aTypeOffset);\n> +\n> +      return NS_OK;\n> +    }\n\nThanks for reminding me to keep codes as compact as possible in mind.\n\nAfter further comparision, I think the following one will be better than creating a template:\nIn Key.h:\n  void\n  EncodeBinary(JSObject* aObject, bool aIsViewObject, uint8_t aTypeOffset);\n\nIn Key::EncodeJSValInternal():\n    if (JS_IsArrayBufferObject(obj)) {\n      EncodeBinary(obj, /* aIsViewObject */ false, aTypeOffset);\n      return NS_OK;\n    }\n\n    if (JS_IsArrayBufferViewObject(obj)) {\n      EncodeBinary(obj, /* aIsViewObject */ true, aTypeOffset);\n      return NS_OK;\n    }", "author": "bevistseng@gmail.com", "id": 11625119, "time": "2016-08-15T11:00:17Z"}, {"text": "Created attachment 8781342\n(v2) Patch: Binary Key Support. r=janv\n\nAddress suggestions in comment 5.", "author": "bevistseng@gmail.com", "id": 11627586, "time": "2016-08-16T02:39:55Z"}, {"text": "The test result of the patch in comment 7 looks good:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=88319a5aea9c", "author": "bevistseng@gmail.com", "id": 11627590, "time": "2016-08-16T02:42:08Z"}, {"text": "Comment on attachment 8781342\n(v2) Patch: Binary Key Support. r=janv\n\nReview of attachment 8781342:\n-----------------------------------------------------------------\n\n::: dom/indexedDB/Key.cpp\n@@ +671,5 @@\n> +                  JSContext* aCx)\n> +{\n> +  MOZ_ASSERT(*aPos % eMaxType == eBinary, \"Don't call me!\");\n> +\n> +  const unsigned char* buffer = ++aPos;\n\n\"++aPos\" or \"aPos++\" ?", "author": "jvarga@mozilla.com", "id": 11627614, "time": "2016-08-16T02:59:35Z"}, {"text": "(In reply to Jan Varga [:janv] from comment #9)\n> \"++aPos\" or \"aPos++\" ?\n\"++aPos\" is the right one to match the same logic of\n> ++aPos;\n> +  const unsigned char* buffer = aPos;\nSorry for not mentioning this when replying review. :)", "author": "bevistseng@gmail.com", "id": 11627622, "time": "2016-08-16T03:02:32Z"}, {"text": "(In reply to Bevis Tseng[:bevistseng][:btseng] from comment #10)\n> (In reply to Jan Varga [:janv] from comment #9)\n> > \"++aPos\" or \"aPos++\" ?\n> \"++aPos\" is the right one to match the same logic of\n> > ++aPos;\n> > +  const unsigned char* buffer = aPos;\n> Sorry for not mentioning this when replying review. :)\n\nof course, my bad :)", "author": "jvarga@mozilla.com", "id": 11627640, "time": "2016-08-16T03:07:56Z"}, {"text": "Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/23ba2c37b8ef\nBinary Key Support. r=janv", "author": "pulsebot@bots.tld", "id": 11628766, "time": "2016-08-16T13:32:33Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/23ba2c37b8ef", "author": "kwierso@gmail.com", "id": 11630822, "time": "2016-08-17T00:09:50Z"}, {"text": "Docs updated:\nhttps://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB\nhttps://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/key\nand\nhttps://developer.mozilla.org/en-US/Firefox/Releases/51#IndexedDB", "author": "jypenator@gmail.com", "id": 11847166, "time": "2016-11-09T12:01:26Z"}], "cf_last_resolved": "2016-08-17T00:09:50Z", "priority": "P2", "mentors_detail": [], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-11-09T12:01:26Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [1271497], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "DOM: IndexedDB", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla51", "is_cc_accessible": true, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "bevistseng@gmail.com", "id": 483302, "name": "bevistseng@gmail.com", "real_name": "Bevis Tseng[:bevis][:btseng](Exited)"}, "whiteboard": "[tw-dom] ", "mentors": [], "cc_detail": [{"email": "jvarga@mozilla.com", "id": 8340, "name": "jvarga@mozilla.com", "real_name": "Jan Varga [:janv]"}, {"email": "jypenator@gmail.com", "id": 248150, "name": "jypenator@gmail.com", "real_name": "Jean-Yves Perrier [:teoli]"}, {"email": "soqu71@gmail.com", "id": 434964, "name": "soqu71@gmail.com", "real_name": "Hsin-Yi Tsai [:hsinyi]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "whiteboard", "added": "[tw-dom] btpp-fixlater"}], "who": "bevistseng@gmail.com", "when": "2016-05-10T02:47:42Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}], "who": "bevistseng@gmail.com", "when": "2016-05-10T02:48:02Z"}, {"changes": [{"removed": "--", "field_name": "priority", "added": "P2"}, {"removed": "", "field_name": "cc", "added": "htsai@mozilla.com"}, {"removed": "[tw-dom] btpp-fixlater", "field_name": "whiteboard", "added": "[tw-dom] "}], "who": "soqu71@gmail.com", "when": "2016-08-03T10:48:57Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jvarga@mozilla.com"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8781015, "added": "review?(jvarga@mozilla.com)"}], "who": "bevistseng@gmail.com", "when": "2016-08-15T07:22:31Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jvarga@mozilla.com)", "attachment_id": 8781015, "added": "review+"}], "who": "jvarga@mozilla.com", "when": "2016-08-15T08:41:04Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8781015, "added": "1"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8781342, "added": "review+"}], "who": "bevistseng@gmail.com", "when": "2016-08-16T02:39:55Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "bevistseng@gmail.com", "when": "2016-08-16T02:42:08Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}], "who": "pulsebot@bots.tld", "when": "2016-08-16T13:32:33Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla51"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-08-17 00:09:50"}, {"removed": "---", "field_name": "cf_status_firefox51", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2016-08-17T00:09:50Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "dev-doc-needed"}, {"removed": "", "field_name": "cc", "added": "jypenator@gmail.com"}], "who": "jypenator@gmail.com", "when": "2016-11-04T14:36:13Z"}, {"changes": [{"removed": "dev-doc-needed", "field_name": "keywords", "added": "dev-doc-complete"}], "who": "jypenator@gmail.com", "when": "2016-11-09T12:01:26Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}