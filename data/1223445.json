{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bugs@pettay.fi", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2015-11-16T00:23:11Z", "type_id": 4, "creation_date": "2015-11-12T23:18:07Z", "id": 1291671, "setter": "bbirtles@mozilla.com"}], "content_type": "text/plain", "id": 8686839}, {"creator": "bugs@pettay.fi", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2015-11-20T19:54:10Z", "type_id": 720, "creation_date": "2015-11-18T00:45:15Z", "id": 1294476, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8688008}], "classification": "Components", "creator": "wlachance@mozilla.com", "mentors_detail": [], "depends_on": [], "cf_has_str": "---", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["memory-leak"], "summary": "KeyframeEffectReadOnly objects end up keeping lots of other objects alive too long", "cf_last_resolved": "2015-11-17T01:24:58Z", "votes": 0, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_status_firefox45": "fixed", "cf_has_regression_range": "---", "comment_count": 34, "comments": [{"text": "So I'd noticed that over the past while, Nightly would be pretty janky after a day of usage. I called :mconley over (:vladan also joined) and we pinned it down to the fact that I had multiple treeherder tabs opened consuming over 3G of memory, thus causing the cycle collector to aggressively collect memory and cause periodic pauses to the browser. Here's a profile:\n\nhttp://people.mozilla.org/~bgirard/cleopatra/#report=ddbcb94237c91cc0ff36766775b6d15f299a9ee6\n\nI know there's a bug in treeherder somewhere (which I'll try and investigate seperately) and there's only so much we can do about badly performing websites, but perhaps we should at least warn about this sort of case somehow, similar to how we warn about other types of things that make the browser perform slowly?\n\nCC'ing various people I'm told would have insight into this (and/or the ability to fix it)", "author": "wlachance@mozilla.com", "id": 10919933, "time": "2015-11-10T17:20:44Z"}, {"text": "There's a few things here:\n\n- the treeherder web page likely keeps references to DOM elements longer than it should\n- could CC somehow do its walks in smaller increments?\n- about:performance should be extended to cover GC & CC (but there's no time for this in Perf-team in Q4 or Q1)\n- once that is done, the Slow Addon Watcher should be extended to cover web pages (Page Watcher), but again, no time in Q4/Q1\n- I don't think BHR captured all the janks\n- it would be neat to have about:telemetry smart enough to point out performance problems using the collected histogram data (e.g. in this case CYCLE_COLLECTOR_MAX_PAUSE)", "author": "vladan.bugzilla@gmail.com", "id": 10919959, "time": "2015-11-10T17:26:12Z"}, {"text": "So the STR for this is \"keep treeherder open in several tabs\"?", "author": "bugs@pettay.fi", "id": 10919963, "time": "2015-11-10T17:27:00Z"}, {"text": "CC is incremental (default slice is 5ms) and we do try to optimize out certainly-alive objects from the graph.\n\nLooking the profile now...", "author": "bugs@pettay.fi", "id": 10919969, "time": "2015-11-10T17:28:18Z"}, {"text": "Hmm, looks like the profile is missing most of the symbols.", "author": "bugs@pettay.fi", "id": 10919973, "time": "2015-11-10T17:29:13Z"}, {"text": "(In reply to Vladan Djeric (:vladan) -- please needinfo! from comment #1)\n> - could CC somehow do its walks in smaller increments?\n\nThe cycle collector is already mostly incremental. I'll have to try to reproduce this to see what exactly is taking a long time. Unfortunately unlike the GC we don't have detailed profiling for the CC. I guess the cleopatra profile might indicate that, but I find the UI incomprehensible.\n\nThe big CC optimization we do is marking objects as being definitely alive. This may be failing here in a way that could be improved. To figure that out, I'd need a CC log (about:memory -> save concise) to see what all is in the log.", "author": "continuation@gmail.com", "id": 10919983, "time": "2015-11-10T17:30:52Z"}, {"text": "Oh, maybe JS: GC is right after all, since the long pause times are GC, not CC.", "author": "bugs@pettay.fi", "id": 10920028, "time": "2015-11-10T17:39:01Z"}, {"text": "(maybe. That profile is hard to interpret)", "author": "bugs@pettay.fi", "id": 10920051, "time": "2015-11-10T17:42:35Z"}, {"text": "Something is keeping lots of \n\"root FragmentOrElement (xhtml) button class='btn  group-btn btn-xs job-group-count btn-dkgray-count filter-shown' (orphan)\" elements alive. They are not in any document (they are orphan), and most\nof them are the root objects of a cycle of 384 objects.", "author": "bugs@pettay.fi", "id": 10920127, "time": "2015-11-10T18:01:20Z"}, {"text": "Ok, this was a bit painful to debug since treeherder is so heavy page that using debug build was hopeless.\nanyhow, those html:button elements have 5 references of which cycle collector normally knows about 4:\n- JS wrapper owns the native object\n- element's parent owns its child node\n- elements child owns its parent node\n- nsDOMTokenList (classList) owns its element (and element owns its classList)\n\nThe missing 5th reference is coming from KeyframeEffectReadOnly.\nEither the page is keeping KeyframeEffectReadOnly objects alive too long, or we have a runtime leak.\nSince the page doesn't seem to create any JS wrappers for KeyframeEffectReadOnly objects, I'd say this is a\nleak somewhere in AnimationManager.", "author": "bugs@pettay.fi", "id": 10921738, "time": "2015-11-11T01:40:45Z"}, {"text": "AnimationCollection looks very suspicious here.", "author": "bugs@pettay.fi", "id": 10921776, "time": "2015-11-11T02:00:27Z"}, {"text": "Possibly introduced by bug 1208385? Specifically: https://hg.mozilla.org/mozilla-central/rev/8770acc7fd9c", "author": "bbirtles@mozilla.com", "id": 10921875, "time": "2015-11-11T02:50:30Z"}, {"text": "So, if I'm reading the code right, elements have a \"property\" (SetProperty) which points to AnimationCollection, that collection has array of \nRefPtr<dom::Animation> objects which then have strong refs to KeyframeEffectReadOnly objects which have\nnsCOMPtr<Element> mTarget. So, nice little cycle there.\nIt is broken manually when CommonAnimationManager::RemoveAllElementCollections() is called, since\nthat goes through all the collections and calls Destroy on them.\nThat happens when null PresShell is passed to nsPresContext::SetShell.", "author": "bugs@pettay.fi", "id": 10924598, "time": "2015-11-11T20:40:04Z"}, {"text": "I guess we could just traverse/unlink those properties. a patch coming.", "author": "bugs@pettay.fi", "id": 10924918, "time": "2015-11-11T22:03:39Z"}, {"text": "Hmm, no, that isn't enough.\nI noticed that at some point also animation timeline seemed to keep objects alive too long.", "author": "bugs@pettay.fi", "id": 10925095, "time": "2015-11-11T22:47:57Z"}, {"text": "Looks like DocumentTimeline removes animations from its hashtable only when refresh driver is about to tick. And on background tabs that may not ever happen.", "author": "bugs@pettay.fi", "id": 10925155, "time": "2015-11-11T23:06:14Z"}, {"text": "Thanks for looking into this.\n\nWith regards to the timeline, current AnimationTimeline never removes animations from its list. The DocumentTimeline subclass, however, will check on each tick which animations it needs to keep and drop the rest. So perhaps if we're not getting ticks I guess that will never happen. (Perhaps NotifyRefreshDriverDestroying could take care of that.)", "author": "bbirtles@mozilla.com", "id": 10925159, "time": "2015-11-11T23:06:48Z"}, {"text": "[Tracking Requested - why for this release]:\nRather bad runtime leak causing a lot higher cc and gc times than normally - in other words causing jank.\n\n\n(Not yet sure if this is happening also in 43.)", "author": "bugs@pettay.fi", "id": 10925224, "time": "2015-11-11T23:27:47Z"}, {"text": "(In reply to Brian Birtles (:birtles, busy 6-17 Nov) from comment #16)\n> With regards to the timeline, current AnimationTimeline never removes\n> animations from its list. The DocumentTimeline subclass, however, will check\n> on each tick which animations it needs to keep and drop the rest. So perhaps\n> if we're not getting ticks I guess that will never happen. (Perhaps\n> NotifyRefreshDriverDestroying could take care of that.)\n\nIt looks like NotifyRefreshDriverDestroying is only called when a presshell is destroyed. But this seems to be about background tabs that have a presshell (and a refresh driver), but aren't getting ticks. Or am I missing something?", "author": "tnikkel@gmail.com", "id": 10925547, "time": "2015-11-12T01:10:45Z"}, {"text": "(In reply to Timothy Nikkel (:tn) from comment #18)\n> (In reply to Brian Birtles (:birtles, busy 6-17 Nov) from comment #16)\n> > With regards to the timeline, current AnimationTimeline never removes\n> > animations from its list. The DocumentTimeline subclass, however, will check\n> > on each tick which animations it needs to keep and drop the rest. So perhaps\n> > if we're not getting ticks I guess that will never happen. (Perhaps\n> > NotifyRefreshDriverDestroying could take care of that.)\n> \n> It looks like NotifyRefreshDriverDestroying is only called when a presshell\n> is destroyed. But this seems to be about background tabs that have a\n> presshell (and a refresh driver), but aren't getting ticks. Or am I missing\n> something?\n\nSorry, I posted that comment at the same time as Olli so I didn't realise this was about background tabs.\n\nWe discussed this on IRC and I think we need to eagerly remove Animations from their AnimationTimeline in Animation::Cancel()--and that probably requires making AnimationTimelines store a linked-list of Animations instead of an array.", "author": "bbirtles@mozilla.com", "id": 10925552, "time": "2015-11-12T01:13:38Z"}, {"text": "That ::DoCancel change still isn't enough, since there is after all the strong ref from timeline to animation, so nothing ends up calling cancel (even though I would assume styling code to call CancelFromStyle).", "author": "bugs@pettay.fi", "id": 10925566, "time": "2015-11-12T01:24:41Z"}, {"text": "We should be calling CancelFromStyle when we run UnbindFromTree here:\n\n  https://dxr.mozilla.org/mozilla-central/rev/84a7cf29f4f14c9b359db2f7f19c0abd6a8e178e/dom/base/Element.cpp#1801\n\nSince calling DeleteProperty should trigger AnimationCommon::PropertyDtor.", "author": "bbirtles@mozilla.com", "id": 10925620, "time": "2015-11-12T01:43:49Z"}, {"text": "Created attachment 8686839\nv2\n\nSo there is yet another leak. We never remove Animations in background tabs \nfrom PendingAnimationTracker (unless the page is closed or becomes foreground).\nThe reason is that when we try to remove animation from tracker,\nGetComposedDoc already returns null. So Element::UnbindFromTree needs to remove properties earlier.\n\nThe other leak fix is the mTimeline->RemoveAnimation(this); call in Animation::DoCancel()\n\nLinkedList handling is a bit ugly, but I blame our LinkedList API.\nIn order to still keep a strong reference to the relevant Animation objects, AnimationSet is now \nnsTHashtable<nsRefPtrHashKey<dom::Animation>>\n\n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=453433462a2b\n\n\n\nI realized we don't need to traverse the properties atm after all, since the remove them anyway\nwhen closing the relevant page or unbinding element.\nBut it is not clear to me why Element::UnbindFromTree handling is actually right, and why we shouldn't just\nrely on cycle collector. But that is about some other bug.", "author": "bugs@pettay.fi", "id": 10928684, "time": "2015-11-12T23:18:07Z"}, {"text": "Comment on attachment 8686839\nv2\n\nSorry for the delay on this one (we had a big Firefox DevCon here over the weekend), and thanks for doing this.\n\n>diff --git a/dom/animation/AnimationTimeline.h b/dom/animation/AnimationTimeline.h\n>--- a/dom/animation/AnimationTimeline.h\n>+++ b/dom/animation/AnimationTimeline.h\n>@@ -86,29 +89,30 @@ public:\n>   /**\n>    * Inform this timeline that |aAnimation| which is or was observing the\n>    * timeline, has been updated. This serves as both the means to associate\n>    * AND disassociate animations with a timeline. The timeline itself will\n>    * determine if it needs to begin, continue or stop tracking this animation.\n>    */\n>   virtual void NotifyAnimationUpdated(Animation& aAnimation);\n> \n>+  void RemoveAnimation(Animation* aAnimation);\n>+\n\nPerhaps we should add a comment explaining why this isn't called more often. e.g. \"Typically animations that don't currently require time updates (e.g. because they have finished or are paused) are automatically removed from the timeline on each tick. However, we eagerly remove animations that have been cancelled since the next tick might never come if we are in a background tab, but that shouldn't prevent us from freeing up references to these animations.\"\n\nActually, I've now noticed we use this method in a few other places so perhaps this comment isn't necessary. I'll leave it up to you.\n\n>   // Animations observing this timeline\n>   //\n>   // We store them in (a) a hashset for quick lookup, and (b) an array\n>   // to maintain a fixed sampling order.\n>   //\n>   // The array keeps a strong reference to each animation in order\n>   // to save some addref/release traffic and because we never dereference\n>   // the pointers in the hashset.\n>-  typedef nsTHashtable<nsPtrHashKey<dom::Animation>> AnimationSet;\n>-  typedef nsTArray<RefPtr<dom::Animation>>         AnimationArray;\n>-  AnimationSet   mAnimations;\n>-  AnimationArray mAnimationOrder;\n>+  typedef nsTHashtable<nsRefPtrHashKey<dom::Animation>> AnimationSet;\n>+  AnimationSet mAnimations;\n>+  LinkedList<dom::Animation> mAnimationOrder;\n\nThis comment needs to be updated to say that it's the hashset that keeps the strong ref. (The original comment seems to be missing some words in the middle saying that we store raw pointers in the array \"... to save some addref/release traffic ...\" so feel free to completely rewrite that comment!)\n\nThanks again.", "author": "bbirtles@mozilla.com", "id": 10934088, "time": "2015-11-16T00:23:11Z"}, {"text": "Created attachment 8688008\ncomment tweaked", "author": "bugs@pettay.fi", "id": 10936396, "time": "2015-11-16T18:14:15Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/61455317cc85", "author": "pulsebot@bots.tld", "id": 10936405, "time": "2015-11-16T18:15:44Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/61455317cc85", "author": "kwierso@gmail.com", "id": 10937965, "time": "2015-11-17T01:24:58Z"}, {"text": "Comment on attachment 8688008\ncomment tweaked\n\nApproval Request Comment\n[Feature/regressing bug #]: I don't know yet. The Element::UnbindFromTree part is really old \n[User impact if declined]: runtime leak until background tabs are closed\n[Describe test coverage new/current, TreeHerder]: NA, this is quite hard to test\nand needs one to create/analyze cycle collector logs\n[Risks and why]: low risk, releasing to-be-deleted objects earlier\n[String/UUID change made/needed]: NA\n\nI need to check if we have the bug also in beta.", "author": "bugs@pettay.fi", "id": 10941783, "time": "2015-11-18T00:45:15Z"}, {"text": "(this could be a regression from bug 1208385, which is nightly/aurora only)", "author": "bugs@pettay.fi", "id": 10941790, "time": "2015-11-18T00:50:09Z"}, {"text": "Haven't managed to reproduce on beta.", "author": "bugs@pettay.fi", "id": 10943771, "time": "2015-11-18T16:43:03Z"}, {"text": "Comment on attachment 8688008\ncomment tweaked\n\nThis code has been in Nightly for a few days so should we be safe to uplift to Aurora44.", "author": "rkothari@mozilla.com", "id": 10952327, "time": "2015-11-20T19:54:10Z"}, {"text": "Memory leaks are bad, tracked for FF44.", "author": "rkothari@mozilla.com", "id": 10952329, "time": "2015-11-20T19:55:42Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/6b11e7539edc", "author": "cbook@mozilla.com", "id": 10955828, "time": "2015-11-23T11:37:52Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-b2g44_v2_5/rev/6b11e7539edc", "author": "cbook@mozilla.com", "id": 10959632, "time": "2015-11-24T10:39:12Z"}], "id": 1223445, "priority": "--", "cc": ["bbirtles@mozilla.com", "bugs@pettay.fi", "cam@mcc.id.au", "continuation@gmail.com", "dteller@mozilla.com", "emorley@mozilla.com", "jcoppeard@mozilla.com", "mconley@mozilla.com", "nfitzgerald@mozilla.com", "rkothari@mozilla.com", "ryanvm@gmail.com", "sledru@mozilla.com", "tnikkel@gmail.com", "vladan.bugzilla@gmail.com"], "cf_crash_signature": "", "version": "unspecified", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "see_also": [], "cf_tracking_firefox59": "---", "cf_tracking_firefox44": "+", "cf_tracking_firefox45": "+", "last_change_time": "2015-12-22T18:39:51Z", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1112352], "qa_contact": "", "creation_time": "2015-11-10T17:20:44Z", "cf_status_firefox_esr52": "---", "component": "DOM: Animation", "assigned_to_detail": {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, "alias": null, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla45", "cf_status_firefox44": "fixed", "is_cc_accessible": true, "cf_rank": null, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "wlachance@mozilla.com", "id": 420096, "name": "wlachance@mozilla.com", "real_name": "William Lachance (:wlach) (use needinfo!)"}, "whiteboard": "[MemShrink]", "mentors": [], "cc_detail": [{"email": "bbirtles@mozilla.com", "id": 165012, "name": "bbirtles@mozilla.com", "real_name": "Brian Birtles (:birtles)"}, {"email": "bugs@pettay.fi", "id": 39966, "name": "bugs@pettay.fi", "real_name": "Olli Pettay [:smaug]"}, {"email": "cam@mcc.id.au", "id": 54040, "name": "cam@mcc.id.au", "real_name": "Cameron McCormack (:heycam) (away for the moment)"}, {"email": "continuation@gmail.com", "id": 406194, "name": "continuation@gmail.com", "real_name": "Andrew McCreight [:mccr8]"}, {"email": "dteller@mozilla.com", "id": 181388, "name": "dteller@mozilla.com", "real_name": "David Teller [:Yoric] (please use \"needinfo\")"}, {"email": "emorley@mozilla.com", "id": 373476, "name": "emorley@mozilla.com", "real_name": "Ed Morley [:emorley]"}, {"email": "jcoppeard@mozilla.com", "id": 443194, "name": "jcoppeard@mozilla.com", "real_name": "Jon Coppeard (:jonco) (PTO until 13th March)"}, {"email": "mconley@mozilla.com", "id": 403756, "name": "mconley@mozilla.com", "real_name": "Mike Conley (:mconley) (:\u2699\ufe0f) (Totally backlogged on reviews and needinfos)"}, {"email": "nfitzgerald@mozilla.com", "id": 417695, "name": "nfitzgerald@mozilla.com", "real_name": "Nick Fitzgerald [:fitzgen] [\u23f0PST; UTC-8]"}, {"email": "rkothari@mozilla.com", "id": 538805, "name": "rkothari@mozilla.com", "real_name": "Ritu Kothari (:ritu)"}, {"email": "ryanvm@gmail.com", "id": 75935, "name": "ryanvm@gmail.com", "real_name": "Ryan VanderMeulen [:RyanVM]"}, {"email": "sledru@mozilla.com", "id": 495955, "name": "sledru@mozilla.com", "real_name": "Sylvestre Ledru [:sylvestre]"}, {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, {"email": "vladan.bugzilla@gmail.com", "id": 423812, "name": "vladan.bugzilla@gmail.com", "real_name": "Vladan Djeric (:vladan)"}], "cf_status_b2g_2_5": "fixed", "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "assigned_to": "bugs@pettay.fi", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "ryanvm@gmail.com"}, {"removed": "", "field_name": "blocks", "added": "1112352"}], "who": "ryanvm@gmail.com", "when": "2015-11-10T17:24:25Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "emorley@mozilla.com"}], "who": "emorley@mozilla.com", "when": "2015-11-10T17:28:08Z"}, {"changes": [{"removed": "JavaScript: GC", "field_name": "component", "added": "XPCOM"}], "who": "bugs@pettay.fi", "when": "2015-11-10T17:33:18Z"}, {"changes": [{"removed": "XPCOM", "field_name": "component", "added": "JavaScript: GC"}], "who": "bugs@pettay.fi", "when": "2015-11-10T17:39:01Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "nfitzgerald@mozilla.com"}], "who": "nfitzgerald@mozilla.com", "when": "2015-11-10T18:49:13Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "bbirtles@mozilla.com, cam@mcc.id.au"}, {"removed": "JavaScript: GC", "field_name": "component", "added": "DOM: Animation"}], "who": "bugs@pettay.fi", "when": "2015-11-11T01:42:58Z"}, {"changes": [{"removed": "Badly performing web pages can cause cycle collector pauses that are hard to diagnose", "field_name": "summary", "added": "KeyframeEffectReadOnly objects end up keeping lots of other objects alive too long"}], "who": "bugs@pettay.fi", "when": "2015-11-11T02:01:54Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jcoppeard@mozilla.com"}], "who": "jcoppeard@mozilla.com", "when": "2015-11-11T09:53:12Z"}, {"changes": [{"removed": "---", "field_name": "cf_tracking_firefox44", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox44", "added": "affected"}, {"removed": "---", "field_name": "cf_tracking_firefox45", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox45", "added": "affected"}], "who": "bugs@pettay.fi", "when": "2015-11-11T23:27:47Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "mlk"}, {"removed": "", "field_name": "whiteboard", "added": "[MemShrink]"}], "who": "continuation@gmail.com", "when": "2015-11-12T00:08:20Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tnikkel@gmail.com"}], "who": "tnikkel@gmail.com", "when": "2015-11-12T00:52:09Z"}, {"changes": [{"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bugs@pettay.fi"}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8686839, "added": "review?(bbirtles@mozilla.com)"}], "who": "bugs@pettay.fi", "when": "2015-11-12T23:18:07Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(bbirtles@mozilla.com)", "attachment_id": 8686839, "added": "review+"}], "who": "bbirtles@mozilla.com", "when": "2015-11-16T00:23:11Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla45"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2015-11-16 17:24:58"}, {"removed": "affected", "field_name": "cf_status_firefox45", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2015-11-17T01:24:58Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8688008, "added": "approval-mozilla-aurora?"}], "who": "bugs@pettay.fi", "when": "2015-11-18T00:45:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8688008, "added": "approval-mozilla-aurora+"}], "who": "rkothari@mozilla.com", "when": "2015-11-20T19:54:10Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rkothari@mozilla.com"}, {"removed": "?", "field_name": "cf_tracking_firefox44", "added": "+"}], "who": "rkothari@mozilla.com", "when": "2015-11-20T19:55:42Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox44", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-11-23T11:37:52Z"}, {"changes": [{"removed": "---", "field_name": "cf_status_b2g_2_5", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2015-11-24T10:39:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "sledru@mozilla.com"}, {"removed": "?", "field_name": "cf_tracking_firefox45", "added": "+"}], "who": "sledru@mozilla.com", "when": "2015-12-22T18:39:51Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}