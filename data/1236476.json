{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "bbouvier@mozilla.com", "is_obsolete": 0, "is_patch": 0, "flags": [{"status": "+", "name": "review", "modification_date": "2016-01-09T16:11:26Z", "type_id": 4, "creation_date": "2016-01-06T10:10:14Z", "id": 1317695, "setter": "jdemooij@mozilla.com"}], "content_type": "text/x-review-board-request", "id": 8704103}], "classification": "Components", "creator": "choller@mozilla.com", "cc": ["bbouvier@mozilla.com", "choller@mozilla.com", "fuzzing@mozilla.com", "jcoppeard@mozilla.com", "jdemooij@mozilla.com", "jruderman@gmail.com", "luke@mozilla.com", "nth10sd@gmail.com"], "depends_on": [], "creation_time": "2016-01-04T12:49:11Z", "cf_user_story": "", "cf_tracking_firefox_relnote": "---", "platform": "x86_64", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["assertion", "regression", "testcase"], "summary": "Assertion failure: message, at js/src/jscntxt.cpp:818 with OOM", "id": 1236476, "assigned_to_detail": {"email": "bbouvier@mozilla.com", "id": 468907, "name": "bbouvier@mozilla.com", "real_name": "Benjamin Bouvier [:bbouvier]"}, "severity": "critical", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "assigned_to": "bbouvier@mozilla.com", "comment_count": 18, "comments": [{"text": "The following testcase crashes on mozilla-central revision d7a0ad85d9fb (build with --enable-optimize --enable-posix-nspr-emulation --enable-valgrind --enable-gczeal --disable-tests --enable-debug, run with --fuzzing-safe):\n\noomTest(() => {\n    offThreadCompileScript(`\n      \"use asm\";\n      return assertEq;\n    `);\n    runOffThreadScript();\n});\n\n\n\nBacktrace:\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000008c3e01 in js::CallErrorReporter (cx=<optimized out>, message=<optimized out>, reportp=<optimized out>) at js/src/jscntxt.cpp:818\n#0  0x00000000008c3e01 in js::CallErrorReporter (cx=<optimized out>, message=<optimized out>, reportp=<optimized out>) at js/src/jscntxt.cpp:818\n#1  0x0000000000bdae63 in js::frontend::CompileError::throwError (this=<optimized out>, cx=<optimized out>) at js/src/frontend/TokenStream.cpp:583\n#2  0x0000000000a36a84 in js::GlobalHelperThreadState::finishParseTask (this=<optimized out>, maybecx=maybecx@entry=0x7ffff6907800, rt=rt@entry=0x7ffff695d000, token=token@entry=0x7ffff31d5ac0) at js/src/vm/HelperThreads.cpp:1064\n#3  0x00000000008c4cde in JS::FinishOffThreadScript (maybecx=maybecx@entry=0x7ffff6907800, rt=rt@entry=0x7ffff695d000, token=token@entry=0x7ffff31d5ac0) at js/src/jsapi.cpp:4111\n#4  0x0000000000488773 in runOffThreadScript (cx=0x7ffff6907800, argc=<optimized out>, vp=0x7fffffffc338) at js/src/shell/js.cpp:3670\n#5  0x00007ffff7ff7d28 in ?? ()\n#6  0x0000000000000000 in ?? ()\nrax\t0x0\t0\nrbx\t0x7ffff6907800\t140737330051072\nrcx\t0x7ffff6ca53cd\t140737333842893\nrdx\t0x0\t0\nrsi\t0x7ffff6f7a9d0\t140737336814032\nrdi\t0x7ffff6f791c0\t140737336807872\nrbp\t0x7fffffffc150\t140737488339280\nrsp\t0x7fffffffc150\t140737488339280\nr8\t0x7ffff7fe0780\t140737354008448\nr9\t0x6372732f736a2f6c\t7165916604736876396\nr10\t0x7fffffffbf10\t140737488338704\nr11\t0x7ffff6c27960\t140737333328224\nr12\t0x1\t1\nr13\t0x7fffffffc1b0\t140737488339376\nr14\t0x7fffffffc1d0\t140737488339408\nr15\t0x7ffff6907808\t140737330051080\nrip\t0x8c3e01 <js::CallErrorReporter(JSContext*, char const*, JSErrorReport*)+97>\n=> 0x8c3e01 <js::CallErrorReporter(JSContext*, char const*, JSErrorReport*)+97>:\tmovl   $0x332,0x0\n   0x8c3e0c <js::CallErrorReporter(JSContext*, char const*, JSErrorReport*)+108>:\tcallq  0x4a4a90 <abort()>", "author": "choller@mozilla.com", "id": 11042690, "time": "2016-01-04T12:49:11Z"}, {"text": "Not specific to asm.js, I think? \n\n- when encountering an error while parsing off main thread, we call cx->addPendingException, which is allocating a new CompileError https://dxr.mozilla.org/mozilla-central/source/js/src/frontend/TokenStream.cpp#620\n- then we expand the error message in this call to ExpandErrorArgumentsVA https://dxr.mozilla.org/mozilla-central/source/js/src/frontend/TokenStream.cpp#650\n- at the end of ExpandErrorArgumentsVA, if there's a memory allocation failure, we explicitly free the error \"message\" variable, which is what's happening here\n- later, when calling CallErrorReporter with this CompileError's message, it asserts because the message is empty\n\nShould the ParseTask have a flag outOfMemory (there is overRecursed already)? Or should we just ReportOutOfMemory if there's no message allocated? The former sounds more general...", "author": "bbouvier@mozilla.com", "id": 11042899, "time": "2016-01-04T14:25:09Z"}, {"text": "cc'ing people who might know what to do here (see comment 1 for analysis)", "author": "bbouvier@mozilla.com", "id": 11042927, "time": "2016-01-04T14:39:17Z"}, {"text": "Agreed this seems unrelated to asm.js.  This looks related to bug 1232676 where the AUtoEnterOOMUnsafeRegion was added to ExclusiveContext::addPendingCompileError().  Jan: do you know why we have to crash here instead of simply making addPendingCompileError() fallible as bbouvier suggested?  Also, ideally I think we'd only add finished CompileErrors to the cx instead of adding them before they are initialized.", "author": "luke@mozilla.com", "id": 11044097, "time": "2016-01-04T19:15:07Z"}, {"text": "(In reply to Luke Wagner [:luke] from comment #3)\n> This looks related to bug 1232676\n> where the AUtoEnterOOMUnsafeRegion was added to\n> ExclusiveContext::addPendingCompileError().  Jan: do you know why we have to\n> crash here instead of simply making addPendingCompileError() fallible as\n> bbouvier suggested?\n\nThere used to be a MOZ_CRASH there, I just replaced it with AutoEnterOOMUnsafeRegion because the fuzzers know how to handle those. Making addPendingCompileError fallible is fine, I think.", "author": "jdemooij@mozilla.com", "id": 11044122, "time": "2016-01-04T19:22:32Z"}, {"text": "The issue is actually not in addPendingCompileError: it is that ExpandErrorArgumentsVA fails with oom but never reports it, so the crafted error is malformed. Patch incoming.", "author": "bbouvier@mozilla.com", "id": 11046086, "time": "2016-01-05T09:17:24Z"}, {"text": "Created attachment 8704103\nMozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r=jandem\n\nReview commit: https://reviewboard.mozilla.org/r/29569/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/29569/", "author": "bbouvier@mozilla.com", "id": 11046586, "time": "2016-01-05T12:19:49Z"}, {"text": "Previous patch adds an outOfMemory flag to the parse task, that is set the same way that the overrecursed flag.\n\nI've tried in another patch to make ExpandErrorArgumentsVA less of a mess by using UniquePtrs, but it's a mess as in one case, you'd have to have a vector of UniquePtrs...", "author": "bbouvier@mozilla.com", "id": 11046589, "time": "2016-01-05T12:21:55Z"}, {"text": "JSBugMon: Bisection requested, result:\nautoBisect shows this is probably related to the following changeset:\n\nThe first bad revision is:\nchangeset:   https://hg.mozilla.org/mozilla-central/rev/de72e2291ae8\nuser:        Jan de Mooij\ndate:        Wed Dec 09 22:55:50 2015 -0500\nsummary:     Bug 1225396 part 3 - Make %GeneratorPrototype% inherit from %IteratorPrototype%. r=jorendorff\n\nThis iteration took 0.459 seconds to run.", "author": "fuzzing@mozilla.com", "id": 11047117, "time": "2016-01-05T15:23:56Z"}, {"text": "Comment on attachment 8704103\nMozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r=jandem\n\nhttps://reviewboard.mozilla.org/r/29569/#review26373\n\nThanks for fixing this! I've one question below, let me know what you think.\n\n::: js/src/jscntxt.cpp:602\n(Diff revision 1)\n> +                    ReportOutOfMemory(cx);\n\nThe cx->pod_malloc call is supposed to report OOM on the context when it fails. That's not happening here because ExclusiveContext::onOutOfMemory does:\n\n    if (!isJSContext())\n        return nullptr;\n    return runtime_->onOutOfMemory(allocFunc, nbytes, reallocPtr, asJSContext());\n\nJSRuntime::onOutOfMemory will call ReportOutOfMemory, if we have a JSContext. It seems wrong to call ReportOutOfMemory here as well.\n\nShould we, instead of reporting OOM here, change ExclusiveContext::onOutOfMemory to do addPendingOutOfMemory()?", "author": "jdemooij@mozilla.com", "id": 11047260, "time": "2016-01-05T16:02:31Z"}, {"text": "(In reply to Jan de Mooij [:jandem] from comment #9)\n> Should we, instead of reporting OOM here, change\n> ExclusiveContext::onOutOfMemory to do addPendingOutOfMemory()?\n\nIt's a bit tricky because some callers of ExclusiveContext::pod_malloc and friends may call recoverFromOutOfMemory, or rely on these calls not reporting anything if it's an ExclusiveContext and handle the nullptr case.\n\nI think it makes sense to do this though, and to also handle the ExclusiveContext case in ExclusiveContext::recoverFromOutOfMemory...", "author": "jdemooij@mozilla.com", "id": 11047267, "time": "2016-01-05T16:06:10Z"}, {"text": "Assuming related to bug 1225396 as per comment 8.", "author": "nth10sd@gmail.com", "id": 11048183, "time": "2016-01-05T19:38:22Z"}, {"text": "Comment on attachment 8704103\nMozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r=jandem\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/29569/diff/1-2/", "author": "bbouvier@mozilla.com", "id": 11050319, "time": "2016-01-06T10:10:15Z"}, {"text": "(In reply to Jan de Mooij [:jandem] from comment #10)\n> (In reply to Jan de Mooij [:jandem] from comment #9)\n> > Should we, instead of reporting OOM here, change\n> > ExclusiveContext::onOutOfMemory to do addPendingOutOfMemory()?\n> \n> It's a bit tricky because some callers of ExclusiveContext::pod_malloc and\n> friends may call recoverFromOutOfMemory, or rely on these calls not\n> reporting anything if it's an ExclusiveContext and handle the nullptr case.\n> \n> I think it makes sense to do this though, and to also handle the\n> ExclusiveContext case in ExclusiveContext::recoverFromOutOfMemory...\n\nAgreed: updated the patch to do so. I will send the patch to try to make sure we don't have something strange showing up.", "author": "bbouvier@mozilla.com", "id": 11050328, "time": "2016-01-06T10:12:20Z"}, {"text": "Comment on attachment 8704103\nMozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r=jandem\n\nhttps://reviewboard.mozilla.org/r/29569/#review26941\n\nThanks!\n\n::: js/src/jscntxt.cpp:949\n(Diff revision 2)\n> +            task->outOfMemory = false;\n\nCan we do `task->outOfMemory = false` unconditionally?\n\n::: js/src/vm/HelperThreads.cpp:1355\n(Diff revision 2)\n> -    if (!error || !helperThread()->parseTask()->errors.append(error))\n> +           helperThread()->parseTask()->errors.append(*error);\n\nI think this will leak the CompileError if the append() fails.\n\nAlso, can we use cx->new_ (to make sure the OOM is reported!) and return a pointer?\n\n```\nfrontend::CompileError* addPendingCompileError() {\n    frontend::CompileError* error = new_<frontend::CompileError>();\n    if (!error)\n        return nullptr;\n    if (!errors.append(*error)) {\n        js_delete(error);\n        return nullptr;\n    }\n    return error;\n}\n```\n\nBonus points for using UniquePtr :)", "author": "jdemooij@mozilla.com", "id": 11061184, "time": "2016-01-09T16:11:26Z"}, {"text": "Comment on attachment 8704103\nMozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r=jandem\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/29569/diff/2-3/", "author": "bbouvier@mozilla.com", "id": 11064217, "time": "2016-01-11T15:30:18Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/115da8bc01ad", "author": "pulsebot@bots.tld", "id": 11064227, "time": "2016-01-11T15:32:40Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/115da8bc01ad", "author": "cbook@mozilla.com", "id": 11067800, "time": "2016-01-12T11:01:23Z"}], "cf_last_resolved": "2016-01-12T11:01:23Z", "priority": "--", "mentors_detail": [], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox59": "---", "last_change_time": "2016-01-12T11:01:23Z", "cf_platform_rel": "---", "product": "Core", "cf_status_firefox_esr52": "---", "blocks": [676763, 912928, 1225396], "qa_contact": "", "see_also": [], "cf_fx_iteration": "---", "component": "JavaScript Engine", "votes": 0, "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla46", "is_cc_accessible": true, "cf_status_firefox46": "fixed", "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, "whiteboard": "[jsbugmon:update]", "mentors": [], "cc_detail": [{"email": "bbouvier@mozilla.com", "id": 468907, "name": "bbouvier@mozilla.com", "real_name": "Benjamin Bouvier [:bbouvier]"}, {"email": "choller@mozilla.com", "id": 395101, "name": "choller@mozilla.com", "real_name": "Christian Holler (:decoder)"}, {"email": "fuzzing@mozilla.com", "id": 469204, "name": "fuzzing@mozilla.com", "real_name": "Fuzzing Team"}, {"email": "jcoppeard@mozilla.com", "id": 443194, "name": "jcoppeard@mozilla.com", "real_name": "Jon Coppeard (:jonco) (PTO until 13th March)"}, {"email": "jdemooij@mozilla.com", "id": 375297, "name": "jdemooij@mozilla.com", "real_name": "Jan de Mooij [:jandem] (PTO Mar 8)"}, {"email": "jruderman@gmail.com", "id": 11608, "name": "jruderman@gmail.com", "real_name": "Jesse Ruderman"}, {"email": "luke@mozilla.com", "id": 347312, "name": "luke@mozilla.com", "real_name": "Luke Wagner [:luke]"}, {"email": "nth10sd@gmail.com", "id": 132034, "name": "nth10sd@gmail.com", "real_name": "Gary Kwong [:gkw] [:nth10sd]"}], "cf_has_str": "---", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "cf_rank": null, "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "cc", "added": "bbouvier@mozilla.com"}], "who": "bbouvier@mozilla.com", "when": "2016-01-04T14:25:09Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jcoppeard@mozilla.com, jdemooij@mozilla.com, luke@mozilla.com"}], "who": "bbouvier@mozilla.com", "when": "2016-01-04T14:39:17Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(jdemooij@mozilla.com)"}], "who": "luke@mozilla.com", "when": "2016-01-04T19:15:07Z"}, {"changes": [{"removed": "needinfo?(jdemooij@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "jdemooij@mozilla.com", "when": "2016-01-04T19:22:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8704103, "added": "review?(jdemooij@mozilla.com)"}], "who": "bbouvier@mozilla.com", "when": "2016-01-05T12:19:49Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "ASSIGNED"}, {"removed": "nobody@mozilla.org", "field_name": "assigned_to", "added": "bbouvier@mozilla.com"}], "who": "bbouvier@mozilla.com", "when": "2016-01-05T12:21:55Z"}, {"changes": [{"removed": "[jsbugmon:update,bisect]", "field_name": "whiteboard", "added": "[jsbugmon:update]"}], "who": "fuzzing@mozilla.com", "when": "2016-01-05T15:23:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jdemooij@mozilla.com)", "attachment_id": 8704103, "added": ""}], "who": "jdemooij@mozilla.com", "when": "2016-01-05T16:02:31Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1225396"}], "who": "nth10sd@gmail.com", "when": "2016-01-05T19:38:22Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8704103, "added": "review?(jdemooij@mozilla.com)"}], "who": "bbouvier@mozilla.com", "when": "2016-01-06T10:10:14Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(jdemooij@mozilla.com)", "attachment_id": 8704103, "added": "review+"}], "who": "jdemooij@mozilla.com", "when": "2016-01-09T16:11:26Z"}, {"changes": [{"field_name": "attachments.description", "removed": "MozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r?jandem", "attachment_id": 8704103, "added": "MozReview Request: Bug 1236476: Report out of memory in ExpandErrorArgumentsVA; r=jandem"}], "who": "bbouvier@mozilla.com", "when": "2016-01-11T15:30:17Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla46"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-01-12 03:01:23"}, {"removed": "affected", "field_name": "cf_status_firefox46", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-01-12T11:01:23Z"}], "resolution": "FIXED", "op_sys": "Linux", "cf_fx_points": "---", "cf_blocking_fennec": "---"}