{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "masayuki@d-toybox.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8505532}, {"creator": "masayuki@d-toybox.com", "is_obsolete": 1, "is_patch": 1, "flags": [], "content_type": "text/plain", "id": 8505537}, {"creator": "masayuki@d-toybox.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2014-10-23T06:17:54Z", "type_id": 4, "creation_date": "2014-10-15T16:16:53Z", "id": 1005633, "setter": "karlt@mozbugz.karlt.net"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2014-10-30T22:45:03Z", "type_id": 720, "creation_date": "2014-10-30T15:20:23Z", "id": 1020295, "setter": "lukasblakk+bugs@gmail.com"}], "content_type": "text/plain", "id": 8505544}], "classification": "Components", "creator": "masayuki@d-toybox.com", "mentors_detail": [], "depends_on": [], "cf_has_str": "---", "cf_status_firefox35": "fixed", "cf_status_firefox36": "fixed", "cf_user_story": "", "creation_time": "2014-10-15T09:51:52Z", "cf_tracking_firefox_relnote": "---", "platform": "x86_64", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["inputmethod", "regression"], "cc_detail": [{"email": "alice0775@yahoo.co.jp", "id": 293623, "name": "alice0775@yahoo.co.jp", "real_name": "Alice0775 White"}, {"email": "karlt@mozbugz.karlt.net", "id": 274246, "name": "karlt@mozbugz.karlt.net", "real_name": "Karl Tomlinson (:karlt)"}, {"email": "masayuki@d-toybox.com", "id": 34283, "name": "masayuki@d-toybox.com", "real_name": "Masayuki Nakano [:masayuki] (JST, +0900)"}], "cf_last_resolved": "2014-10-24T00:55:29Z", "votes": 0, "severity": "major", "is_confirmed": true, "is_creator_accessible": true, "cf_has_regression_range": "---", "comment_count": 16, "comments": [{"text": "1. Load data:text/html,<input>\n2. Type a character with IME (don't commit it)\n3. Click outside of the <input>\n4. Click the <input>\n5. Type a character with IME\n\nActual result:\nNew composition string doesn't appear.\n\nExpected result:\nNew composition string should appear.\n\nI guess that this is a regression of bug 1065835, but I've not confirmed it yet because I cannot use IME with mozregression on Ubuntu.\n\nMy environment:\nUbuntu 14.04 (64bit), iBus.", "author": "masayuki@d-toybox.com", "id": 9448901, "time": "2014-10-15T09:51:52Z"}, {"text": "Okay, I cannot reproduce this bug with SCIM. That means that we have a bug at asynchronous commit.", "author": "masayuki@d-toybox.com", "id": 9448923, "time": "2014-10-15T09:58:21Z"}, {"text": "Created attachment 8505532\nPatch\n\nFor a hack for bug 472635, we're checking a given IM context is same as ours when our native IME signal handlers are called. This causes this bug.\n\nIf IME is iBus, a call of gtk_im_context_reset() causes asynchronous commit of composition. Therefore, if it's called at moving focus from an <input> element to another element or its document whose IME enable state isn't \"enabled\", signals to commit composition come after moving focus. Then, GetContext() returns one of different context from its result before moving focus. This causes our signal handlers ignoring the commit events because we believe that the signals are buggy. Then, nsGtkIMModule loses a chance to end storing composition. So, it will be confused by following composing signals because it already has a composition.\n\nSo, we shouldn't ignore the delayed signals and end composition normally.\n\nFor solving this, we should check if a giving IM context matches *one* of our own IM context. If it matches one, we nsGtkIMModule should handle the signals and dispatch composition events. Then, in XP part, TextComposition instance handles/consumes the event and kills itself.", "author": "masayuki@d-toybox.com", "id": 9450307, "time": "2014-10-15T15:54:59Z"}, {"text": "Comment on attachment 8505532\nPatch\n\nOops, sorry, this patch includes obsoleted approach.", "author": "masayuki@d-toybox.com", "id": 9450311, "time": "2014-10-15T15:56:02Z"}, {"text": "Created attachment 8505537\nPatch\n\nThis is the right patch.\n\nAnd I should've note that this patch is not good for maintenance because each method of nsGtkIMModule expects GetContext() always returns an expected IM context for current IM enable state. However, this is wrong at least for handling composition change and composition end in this case. Therefore, I think that each method should take GtkIMContext as its first argument even if it currently doesn't use it.\n\nHowever, I guess that this patch should be uplift to Aurora. Therefore, I want to keep this patch small and simple as far as possible. So, my plan is, I'll create the refactoring patch only for m-c in another bug.", "author": "masayuki@d-toybox.com", "id": 9450661, "time": "2014-10-15T16:06:56Z"}, {"text": "Created attachment 8505544\nPatch\n\nUgh. I'm very sorry for the spam. This is the right patch!", "author": "masayuki@d-toybox.com", "id": 9450730, "time": "2014-10-15T16:16:53Z"}, {"text": "[Tracking Requested - why for this release]:\n\nI confirmed that this is a regression of bug 1065835. The fix is simple and backing out the patches is not safer than fixing this.", "author": "masayuki@d-toybox.com", "id": 9460951, "time": "2014-10-17T09:23:58Z"}, {"text": "karlt: ping", "author": "masayuki@d-toybox.com", "id": 9467777, "time": "2014-10-20T01:23:08Z"}, {"text": "I won't have time to review this today, but I should be able to try harder to understand sometime this week.\n\nWhich patch in bug 1065835 caused the change in behavior, and how did it cause the change in behavior?", "author": "karlt@mozbugz.karlt.net", "id": 9467784, "time": "2014-10-20T01:39:13Z"}, {"text": "(In reply to Karl Tomlinson (:karlt) from comment #8)\n> Which patch in bug 1065835 caused the change in behavior, and how did it\n> cause the change in behavior?\n\nBy the part.1 (attachment 8492119), it makes synchronous commit or cancel composition for a request guaranteed in XP level. At the old behavior, it was guaranteed by nsGtkIMModule for Linux but this was removed by part.5 (attachment 8492125).\n\nIt was not problem nsGtkIMModule not to handle _delayed_ native commit or cancel events because ShouldIgnoreNativeCompositionEvent() ignores the delayed events *after* synchronous commit was performed.\n\nHowever, now, nsGtkIMModule does *not* perform synchronous commit at a request to commit or cancel composition. Therefore, even after handling a request, nsGtkIMModule keeps having _composing_ state. Therefore, it now needs to receive all delayed events for resetting its state. I.e., it should *not* ignore the delayed events, instead, it *needs* to handle them.\n\nFYI: the delayed events should cause composition events. The events will be handled only by TextComposition. Then, TextComposition will kill itself. So, it's not okay to reset composition state at nsGtkIMModule handling a request.\n\nThe problem of this bug is that the delayed events may be fired *after* focus in Gecko is moved. I.e., nsGtkIMModule::GetContext() may return different content if the focus move causes different IME enabled state (e.g., \"enabled\" -> \"disabled\", \"enabled\" -> \"password\").\n\nIn the STR of comment 0, this is what occurs:\n\n1. When <input> has focus, the IME state is \"enabled\" and GetContext() returns mContext\n2. Before moving focus, nsGtkIMContext receives a request to commit composition and notifies native IME of it.\n3. Gecko moves focus actually. Then, the IME state becomes \"disabled\". This makes GetContext() returns mDummyContext.\n4. iBus sends some signals to _cancel_ composition. At this time, iBus passes a context which is mContext because the composition is handled on it.\n5. Our signal receivers compares given context (same as mContext) and the result of GetContext() (mDummyContext). Then, this mismatch makes our handlers to ignore the signals.\n6. nsGtkIMModule keeps having composition which is already finished in iBus already (at #4-5)\n\nFYI: This is what occurred in old build:\n\n1. When <input> has focus, the IME state is \"enabled\" and GetContext() returns mContext\n2. Before moving focus, nsGtkIMContext receives a request to commit composition and notifies native IME of it _and commit composition internally_.\n3. Gecko moves focus actually. Then, the IME state becomes \"disabled\". This makes GetContext() returns mDummyContext.\n4. iBus sends some signals to _cancel_ composition. At this time, iBus passes a context which is mContext because the composition is handled on it.\n5. Our signal receivers compares given context (same as mContext) and the result of GetContext() (mDummyContext). Then, this mismatch makes our handlers to ignore the signals but this is okay since the signals will be ignored by ShouldIgnoreNativeCompositionEvent().\n6. nsGtkIMModule _has not_ kept having composition because at #2, it's been reset.", "author": "masayuki@d-toybox.com", "id": 9467925, "time": "2014-10-20T03:11:52Z"}, {"text": "Comment on attachment 8505544\nPatch\n\nThanks for the explanations.  The details on the series of events are helpful.\nAll the changes here seem good, and I don't know what was happening in bug 472635, so I wonder whether we still even need that workaround.\n\nHowever, there are still some things that I don't understand, so I wonder whether this is really the fix that is needed.\n\nIf an IME chooses to commit on reset, then what prevents an already internally committed string being committed again?\n\n(In reply to Masayuki Nakano (:masayuki) (Mozilla Japan) from comment #9)\n> FYI: the delayed events should cause composition events. The events will be\n> handled only by TextComposition. Then, TextComposition will kill itself. So,\n> it's not okay to reset composition state at nsGtkIMModule handling a request.\n\nHasn't the composition already been committed at XP level?\nWhy is another composition event now necessary?\n\n> 5. Our signal receivers compares given context (same as mContext) and the\n> result of GetContext() (mDummyContext). Then, this mismatch makes our\n> handlers to ignore the signals but this is okay since the signals will be\n> ignored by ShouldIgnoreNativeCompositionEvent().\n\nIgnoring some signals made it OK to ignore some other signals, but I don't know which signals or why.", "author": "karlt@mozbugz.karlt.net", "id": 9489243, "time": "2014-10-23T06:17:54Z"}, {"text": "(In reply to Karl Tomlinson (:karlt) from comment #10)\n> Comment on attachment 8505544\n> Patch\n> \n> Thanks for the explanations.\n\nThank you for your review too ;-)\n\n> If an IME chooses to commit on reset, then what prevents an already\n> internally committed string being committed again?\n> \n> (In reply to Masayuki Nakano (:masayuki) (Mozilla Japan) from comment #9)\n> > FYI: the delayed events should cause composition events. The events will be\n> > handled only by TextComposition. Then, TextComposition will kill itself. So,\n> > it's not okay to reset composition state at nsGtkIMModule handling a request.\n> \n> Hasn't the composition already been committed at XP level?\n> Why is another composition event now necessary?\n\nNow, in XP level, TextComposition class handles WidgetCompositionEvent before dispatching the event into a DOM tree. If TextComposition emulates to commit composition itself, it waits async commit events coming from widget. When it receives delayed compositionend event, it kills its instance itself and doesn't dispatch the delayed events into the tree.\nhttp://mxr.mozilla.org/mozilla-central/source/dom/events/TextComposition.cpp?rev=52273860a2cd#245\nhttps://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide#Requests_to_IME\n\nIn other words, if widget doesn't send NS_COMPOSITION_END properly, a TextComposition instance is not destroyed nor released until following native composition causes NS_COMPOSITION_END event.\n\n> > 5. Our signal receivers compares given context (same as mContext) and the\n> > result of GetContext() (mDummyContext). Then, this mismatch makes our\n> > handlers to ignore the signals but this is okay since the signals will be\n> > ignored by ShouldIgnoreNativeCompositionEvent().\n> \n> Ignoring some signals made it OK to ignore some other signals, but I don't\n> know which signals or why.\n\nWe can ignore signals only when a signal gives strange context. Otherwise, we shouldn't do it.\n\nThe reason why I don't make the other signal handlers use IsValidContext() is that I have no idea of such cases. Because the cause of this bug is the over between commit signals and a call of SetInputContext(). So, when we receive the other signals, aContext should match with mContext always.", "author": "masayuki@d-toybox.com", "id": 9489362, "time": "2014-10-23T06:54:55Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/d783563ff4c3", "author": "masayuki@d-toybox.com", "id": 9492202, "time": "2014-10-23T17:19:27Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/d783563ff4c3", "author": "kwierso@gmail.com", "id": 9494593, "time": "2014-10-24T00:55:29Z"}, {"text": "Comment on attachment 8505544\nPatch\n\nApproval Request Comment\n[Feature/regressing bug #]: bug 1065835\n[User impact if declined]: If user moves focus by a click during IME composition to a non-editable element (e.g., <body>), user cannot use IME until user commits or cancels next composition. I.e., if this bug occurs, there is a hidden composition string which will be never inputted actually.\n[Describe test coverage new/current, TBPL]: This cannot be tested with automated tests. I tested this manually.\n[Risks and why]: This touches the if conditions which were added by bug 472635. It's a hack for ignoring strange IME signals which are fired on another IME context (we're not sure the owner) and come from RDP application or something. We cannot test it because nobody of us reproduced it. This patch makes nsGtkIMModule handle all signals which are fired on *our* owning IME contexts. So, I believe this is right approach.\n[String/UUID change made/needed]: Nothing.", "author": "masayuki@d-toybox.com", "id": 9524069, "time": "2014-10-30T15:20:23Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/6459604b7ccc", "author": "ryanvm@gmail.com", "id": 9529735, "time": "2014-10-31T16:03:13Z"}], "id": 1083098, "priority": "--", "cc": ["alice0775@yahoo.co.jp", "karlt@mozbugz.karlt.net", "masayuki@d-toybox.com"], "cf_crash_signature": "", "version": "Trunk", "cf_qa_whiteboard": "", "cf_tracking_firefox_esr52": "---", "cf_tracking_firefox36": "+", "cf_tracking_firefox59": "---", "last_change_time": "2014-10-31T16:03:13Z", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [1065835, 1083067], "qa_contact": "", "see_also": [], "cf_tracking_firefox35": "+", "cf_status_firefox_esr52": "---", "component": "Widget: Gtk", "assigned_to_detail": {"email": "masayuki@d-toybox.com", "id": 34283, "name": "masayuki@d-toybox.com", "real_name": "Masayuki Nakano [:masayuki] (JST, +0900)"}, "cf_status_firefox34": "unaffected", "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla36", "is_cc_accessible": true, "cf_rank": null, "cf_status_thunderbird_esr52": "---", "url": "", "creator_detail": {"email": "masayuki@d-toybox.com", "id": 34283, "name": "masayuki@d-toybox.com", "real_name": "Masayuki Nakano [:masayuki] (JST, +0900)"}, "whiteboard": "", "mentors": [], "summary": "Composition string doesn't appear after forcibly commit composition by moving focus on Linux", "alias": null, "dupe_of": null, "flags": [], "cf_tracking_firefox58": "---", "assigned_to": "masayuki@d-toybox.com", "is_open": false, "history": [{"changes": [{"removed": "", "field_name": "keywords", "added": "regressionwindow-wanted"}], "who": "masayuki@d-toybox.com", "when": "2014-10-15T10:54:37Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8505532, "added": "review?(karlt@mozbugz.karlt.net)"}, {"removed": "", "field_name": "cc", "added": "karlt@mozbugz.karlt.net"}], "who": "masayuki@d-toybox.com", "when": "2014-10-15T15:54:59Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8505532, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(karlt@mozbugz.karlt.net)", "attachment_id": 8505532, "added": ""}], "who": "masayuki@d-toybox.com", "when": "2014-10-15T15:56:02Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8505537, "added": "review?(karlt@mozbugz.karlt.net)"}], "who": "masayuki@d-toybox.com", "when": "2014-10-15T16:06:56Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8505537, "added": "1"}, {"field_name": "flagtypes.name", "removed": "review?(karlt@mozbugz.karlt.net)", "attachment_id": 8505537, "added": ""}, {"field_name": "flagtypes.name", "removed": "", "attachment_id": 8505544, "added": "review?(karlt@mozbugz.karlt.net)"}], "who": "masayuki@d-toybox.com", "when": "2014-10-15T16:16:53Z"}, {"changes": [{"removed": "regressionwindow-wanted", "field_name": "keywords", "added": ""}, {"removed": "", "field_name": "blocks", "added": "1065835"}, {"removed": "---", "field_name": "cf_status_firefox34", "added": "unaffected"}, {"removed": "---", "field_name": "cf_tracking_firefox35", "added": "?"}, {"removed": "---", "field_name": "cf_status_firefox35", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox36", "added": "affected"}], "who": "masayuki@d-toybox.com", "when": "2014-10-17T09:23:58Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(karlt@mozbugz.karlt.net)"}], "who": "masayuki@d-toybox.com", "when": "2014-10-20T01:23:08Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "masayuki@d-toybox.com"}, {"removed": "needinfo?(karlt@mozbugz.karlt.net)", "field_name": "flagtypes.name", "added": "needinfo?(masayuki@d-toybox.com)"}], "who": "karlt@mozbugz.karlt.net", "when": "2014-10-20T01:39:13Z"}, {"changes": [{"removed": "needinfo?(masayuki@d-toybox.com)", "field_name": "flagtypes.name", "added": ""}], "who": "masayuki@d-toybox.com", "when": "2014-10-20T03:11:52Z"}, {"changes": [{"removed": "?", "field_name": "cf_tracking_firefox35", "added": "+"}, {"removed": "---", "field_name": "cf_tracking_firefox36", "added": "+"}], "who": "lukasblakk+bugs@gmail.com", "when": "2014-10-21T17:43:27Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(karlt@mozbugz.karlt.net)", "attachment_id": 8505544, "added": "review+"}], "who": "karlt@mozbugz.karlt.net", "when": "2014-10-23T06:17:54Z"}, {"changes": [{"removed": "ASSIGNED", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla36"}, {"removed": "", "field_name": "cf_last_resolved", "added": "2014-10-23 17:55:29"}, {"removed": "affected", "field_name": "cf_status_firefox36", "added": "fixed"}], "who": "kwierso@gmail.com", "when": "2014-10-24T00:55:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8505544, "added": "approval-mozilla-aurora?"}], "who": "masayuki@d-toybox.com", "when": "2014-10-30T15:20:23Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8505544, "added": "approval-mozilla-aurora+"}], "who": "lukasblakk+bugs@gmail.com", "when": "2014-10-30T22:45:03Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox35", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2014-10-31T16:03:13Z"}], "resolution": "FIXED", "op_sys": "Linux", "cf_fx_points": "---", "cf_blocking_fennec": "---"}