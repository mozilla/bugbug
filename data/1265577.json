{"cf_tracking_thunderbird_esr52": "---", "status": "RESOLVED", "cf_tracking_firefox60": "---", "attachments": [{"creator": "tnikkel@gmail.com", "is_obsolete": 1, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-04-20T16:49:45Z", "type_id": 4, "creation_date": "2016-04-18T23:28:31Z", "id": 1378802, "setter": "mats@mozilla.com"}], "content_type": "text/plain", "id": 8742549}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-04-20T22:54:54Z", "type_id": 4, "creation_date": "2016-04-20T22:54:54Z", "id": 1380376, "setter": "mats@mozilla.com"}, {"status": "+", "name": "approval-mozilla-aurora", "modification_date": "2016-05-11T20:21:05Z", "type_id": 720, "creation_date": "2016-05-11T00:35:41Z", "id": 1391848, "setter": "rkothari@mozilla.com"}, {"status": "+", "name": "sec-approval", "modification_date": "2016-04-22T18:10:47Z", "type_id": 799, "creation_date": "2016-04-20T23:04:58Z", "id": 1380383, "setter": "abillings@mozilla.com"}], "content_type": "text/plain", "id": 8743558}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "review", "modification_date": "2016-04-20T22:55:24Z", "type_id": 4, "creation_date": "2016-04-20T22:12:06Z", "id": 1380354, "setter": "mats@mozilla.com"}], "content_type": "text/plain", "id": 8743559}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "approval-mozilla-beta", "modification_date": "2016-05-11T20:21:28Z", "type_id": 721, "creation_date": "2016-05-11T00:36:32Z", "id": 1391849, "setter": "rkothari@mozilla.com"}], "content_type": "text/plain", "id": 8751039}, {"creator": "tnikkel@gmail.com", "is_obsolete": 0, "is_patch": 1, "flags": [{"status": "+", "name": "approval-mozilla-esr45", "modification_date": "2016-05-26T22:12:09Z", "type_id": 905, "creation_date": "2016-05-11T00:37:30Z", "id": 1391850, "setter": "lhenry@mozilla.com"}], "content_type": "text/plain", "id": 8751040}], "classification": "Components", "creator": "tnikkel@gmail.com", "mentors_detail": [], "depends_on": [], "cf_has_str": "---", "cf_user_story": "", "cf_status_firefox_esr45": "fixed", "cf_tracking_firefox_relnote": "---", "platform": "Unspecified", "cf_status_firefox58": "---", "cf_status_firefox59": "---", "keywords": ["crash", "csectype-uaf", "regression", "sec-critical"], "component": "Layout: View Rendering", "cc_detail": [{"email": "abillings@mozilla.com", "id": 280903, "name": "abillings@mozilla.com", "real_name": "Al Billings [:abillings]"}, {"email": "cbook@mozilla.com", "id": 277293, "name": "cbook@mozilla.com", "real_name": "Carsten Book [:Tomcat]"}, {"email": "jmathies@mozilla.com", "id": 279663, "name": "jmathies@mozilla.com", "real_name": "Jim Mathies [:jimm]"}, {"email": "mark@wolfbeast.com", "id": 364942, "name": "mark@wolfbeast.com", "real_name": "Mark Straver"}, {"email": "mats@mozilla.com", "id": 5168, "name": "mats@mozilla.com", "real_name": "Mats Palmgren (:mats)"}, {"email": "mwobensmith@mozilla.com", "id": 452604, "name": "mwobensmith@mozilla.com", "real_name": "Matt Wobensmith [:mwobensmith][:matt:]"}, {"email": "rkothari@mozilla.com", "id": 538805, "name": "rkothari@mozilla.com", "real_name": "Ritu Kothari (:ritu)"}, {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, {"email": "twsmith@mozilla.com", "id": 486634, "name": "twsmith@mozilla.com", "real_name": "Tyson Smith [:tsmith]"}], "cf_last_resolved": "2016-05-05T19:07:19Z", "votes": 0, "severity": "normal", "is_confirmed": true, "is_creator_accessible": true, "cf_status_firefox45": "wontfix", "cf_has_regression_range": "---", "comment_count": 38, "comments": [{"text": "Nothing forces them to stick around. The only thing that makes it true most of the time is we clear the stashed views on a script runner, limiting the total changes that can happen while we have them stored. But nothing prevents those changes from including destroying the stored views.", "author": "tnikkel@gmail.com", "id": 11335995, "time": "2016-04-18T23:22:41Z"}, {"text": "Created attachment 8742549\npatch\n\nI wasn't sure if it was better to call frameloader->Hide() in nsSubDocumentFrame::DestroyFrom in the case that we aren't trying to stash the previous root frame, or to leave it to nsHideViewer to do that.", "author": "tnikkel@gmail.com", "id": 11336009, "time": "2016-04-18T23:28:31Z"}, {"text": "This could cause us to use a deleted view. We poison views when we delete them, but I don't think we hold that memory in an arena like frames, so it could be re-used right away.", "author": "tnikkel@gmail.com", "id": 11338602, "time": "2016-04-19T18:37:29Z"}, {"text": "After a chat with :tnikkel it sounds like this patch could fix bug 1261175 and bug 1259572", "author": "twsmith@mozilla.com", "id": 11339153, "time": "2016-04-19T21:23:16Z"}, {"text": "Marking sec-critical assuming this fixes bug 1259572 and because of the number of crash stats in bug 1259572 (it is likely reproducible).", "author": "twsmith@mozilla.com", "id": 11339285, "time": "2016-04-19T22:06:16Z"}, {"text": "Comment on attachment 8742549\npatch\n\n>layout/generic/nsSubDocumentFrame.cpp\n>+    if (oldContainerDoc) {\n\nThe old code doesn't have this check, so it falls through to\n\"frameloader->Hide()\" AFAICT (since OwnerDoc() is never null).\nThe new code does nothing in this case.\nWhy change the behavior for the null oldContainerDoc case?\nAre you assuming 'detachedFrame' must be null in this case anyway?\nCan we add an else-branch that MOZ_ASSERTs if so?\n(I think it should hold)\n\n>     nsView* detachedViews = ::BeginSwapDocShellsForViews(mInnerView->GetFirstChild());\n>-    frameloader->SetDetachedSubdocView(detachedViews, mContent->OwnerDoc());\n>+    bool tryToStashSubDoc =\n>+      detachedViews && detachedViews->GetFrame() && !detachedViews->GetNextSibling();\n\nThe \"!detachedViews->GetNextSibling()\" condition is new here.\nWhy do we check that exactly?\nIs the sibling view associated with the mPreviousViewer perhaps?\nIf so, could we simply destroy that viewer instead, so that we\ncan stash the frame here?\n\nAlso, in the !detachedViews->GetFrame() case, isn't there a perf loss\nbecause we will recreate the sub doc pres shell/context when we reframe\nan iframe that has no root frame yet (and this seems to happen more than\nI thought - during startup for example).\nPerhaps it's negligible though.", "author": "mats@mozilla.com", "id": 11339760, "time": "2016-04-20T01:55:22Z"}, {"text": "Thanks for your careful review of this hairy code!\n\n(In reply to Mats Palmgren (:mats) from comment #5)\n> >layout/generic/nsSubDocumentFrame.cpp\n> >+    if (oldContainerDoc) {\n> \n> The old code doesn't have this check, so it falls through to\n> \"frameloader->Hide()\" AFAICT (since OwnerDoc() is never null).\n> The new code does nothing in this case.\n> Why change the behavior for the null oldContainerDoc case?\n\nThe old code used the stored views being null as a sentinel as to weather we try to use those stashed views, or call Hide on the frameloader. The new code uses a weak frame instead of a view. So there are two cases where we get a null frame: 1) we never stored a frame 2) we stored a frame but it was destroyed. In 1) we do not want to call Hide. For 2) we want to call Hide. So we can't use the presence or not of the stored frame to decide anymore. So instead I use the stored container doc check.\n\n> Are you assuming 'detachedFrame' must be null in this case anyway?\n> Can we add an else-branch that MOZ_ASSERTs if so?\n> (I think it should hold)\n\nYes, I believe OwnerDoc can never return null. I can assert.\n\n> >     nsView* detachedViews = ::BeginSwapDocShellsForViews(mInnerView->GetFirstChild());\n> >-    frameloader->SetDetachedSubdocView(detachedViews, mContent->OwnerDoc());\n> >+    bool tryToStashSubDoc =\n> >+      detachedViews && detachedViews->GetFrame() && !detachedViews->GetNextSibling();\n> \n> The \"!detachedViews->GetNextSibling()\" condition is new here.\n> Why do we check that exactly?\n> Is the sibling view associated with the mPreviousViewer perhaps?\n> If so, could we simply destroy that viewer instead, so that we\n> can stash the frame here?\n\nYes, good catch. I wanted to make this change in a separate patch but it turned out to require more work.\n\nWe have more than one view/frame here during document navigation; where there is a non-zero time with two \"active\" documents. This seemed like a bad time to do these kinds of acrobatics. The bad things that could happen though seem like they would be solved by storing weak frames. So I could create a patch that stores multiple weak frames and tries to restore them. It creates some more \"interesting\" questions though like what to do if one of two weak frames are destroyed? Call Hide? Just restore the one frame?\n\nIt seems more risky to introduce destroying the previous viewer, so I'd like to avoid that if possible (or proven to be the less risky option :) ).\n\n> Also, in the !detachedViews->GetFrame() case, isn't there a perf loss\n> because we will recreate the sub doc pres shell/context when we reframe\n> an iframe that has no root frame yet (and this seems to happen more than\n> I thought - during startup for example).\n> Perhaps it's negligible though.\n\nOnly way I can think of to avoid that is to re-introduce weak views and store weak views. Worth it?", "author": "tnikkel@gmail.com", "id": 11339785, "time": "2016-04-20T02:21:15Z"}, {"text": "(In reply to Timothy Nikkel (:tnikkel) from comment #6)\n> > The \"!detachedViews->GetNextSibling()\" condition is new here.\n> [...]\n> It creates some more \"interesting\" questions though like what to do if one\n> of two weak frames are destroyed? Call Hide? Just restore the one frame?\n\nWhy can't we just drop that \"!detachedViews->GetNextSibling()\" check?\nIf one of these old navigations is destroyed it will destroy its frame\ntree and its root view will be unhooked from the detachedFrame's view,\njust like it's currently unhooked (as a sibling) from it.\nThe bug here is just that the (leading) stored detached view might\nbecome stale, right?\n\nPassing detachedFrame->GetView() to InsertViewsInReverseOrder should work\nthe same as it currently does if that view happens to have siblings.\n\nOr do you have reason to believe the view sibling list is screwed up too?\n\n> > Also, in the !detachedViews->GetFrame() case, isn't there a perf loss\n> [...]\n> Only way I can think of to avoid that is to re-introduce weak views and\n> store weak views. Worth it?\n\nProbably not.  Let's not worry about it for now.", "author": "mats@mozilla.com", "id": 11341337, "time": "2016-04-20T15:30:59Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #7)\n> (In reply to Timothy Nikkel (:tnikkel) from comment #6)\n> > > The \"!detachedViews->GetNextSibling()\" condition is new here.\n> > [...]\n> > It creates some more \"interesting\" questions though like what to do if one\n> > of two weak frames are destroyed? Call Hide? Just restore the one frame?\n> \n> Why can't we just drop that \"!detachedViews->GetNextSibling()\" check?\n> If one of these old navigations is destroyed it will destroy its frame\n> tree and its root view will be unhooked from the detachedFrame's view,\n> just like it's currently unhooked (as a sibling) from it.\n> The bug here is just that the (leading) stored detached view might\n> become stale, right?\n> \n> Passing detachedFrame->GetView() to InsertViewsInReverseOrder should work\n> the same as it currently does if that view happens to have siblings.\n\nOh, I see what you are saying now. You are saying to just store the (weak) frame of the leading view, and use that to insert the leading view and any trailing siblings. The problem I see with that is that the leading weak frame can die, but one of the trailing views can still be alive, and we won't have any way to get a pointer to the trailing view to insert back into the tree.\n\nThe way I was thinking of allowing more than one view was to store multiple weak frames on the frame loader (in an array or similar). That would avoid that problem.", "author": "tnikkel@gmail.com", "id": 11341423, "time": "2016-04-20T15:52:35Z"}, {"text": "(In reply to Timothy Nikkel (:tnikkel) from comment #8)\n> but one of the trailing views can still be alive\n\nCan that actually happen?  Don't we always destroy the mPreviousViewer\nchain in that case?  So if the leading view goes away so does all\nits siblings.\n\n> and we\n> won't have any way to get a pointer to the trailing view to insert back into\n> the tree.\n\nIf so, is that a bad thing?  Sooner or later these DocumentViewers will be\ndestroyed and associated frames/views destroyed, no?\n\n> The way I was thinking of allowing more than one view was to store multiple\n> weak frames on the frame loader (in an array or similar). That would avoid\n> that problem.\n\nSure, an array of weak frames sounds fine in the long run to make this\nindependent of the view tree.  I think it's probably fine to just ignore\nany null pointers in that case because that's how we currently handle it\n(i.e. removed views have unhooked themselves so we won't even notice).", "author": "mats@mozilla.com", "id": 11341561, "time": "2016-04-20T16:26:53Z"}, {"text": "(In reply to Mats Palmgren (:mats) from comment #9)\n> > and we\n> > won't have any way to get a pointer to the trailing view to insert back into\n> > the tree.\n> \n> If so, is that a bad thing?  Sooner or later these DocumentViewers will be\n> destroyed and associated frames/views destroyed, no?\n\nThe trailing view might be the view we actually want to display though. Actually, I think this will work fine. If the first weak frame is destroyed we'll call Hide and then Show will recreate any trailing views that should be there.\n\n\nI think this is the approach I will take then.", "author": "tnikkel@gmail.com", "id": 11341608, "time": "2016-04-20T16:42:57Z"}, {"text": "Comment on attachment 8742549\npatch\n\nOk, thanks for the explanations.  r=mats with an added MOZ_ASSERT about\nthe frame being null when oldContainerDoc is, as suggested above.", "author": "mats@mozilla.com", "id": 11341643, "time": "2016-04-20T16:49:45Z"}, {"text": "Created attachment 8743558\npatch v2", "author": "tnikkel@gmail.com", "id": 11342790, "time": "2016-04-20T22:11:29Z"}, {"text": "Created attachment 8743559\ninterdiff\n\ninterdiff from v1 to make sure we are on the same page.", "author": "tnikkel@gmail.com", "id": 11342791, "time": "2016-04-20T22:12:06Z"}, {"text": "Comment on attachment 8743558\npatch v2\n\nEither one is fine, but I think I slightly prefer this version since it's close\nto what we're currently doing for sibling views so it seems less risky.", "author": "mats@mozilla.com", "id": 11342907, "time": "2016-04-20T22:54:54Z"}, {"text": "Comment on attachment 8743558\npatch v2\n\n[Security approval request comment]\nHow easily could an exploit be constructed based on the patch?\nthis isn't the easiest code to understand, but if an attacker groks the code they would know what general area to look in. I tried to reproduce this problem and I failed. But who knows what a determined attacker with lots of time and a fuzzer could do.\n\nDo comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?\nI'll remove the checkin comment before landing. So the answer is no.\n\nWhich older supported branches are affected by this flaw?\nall\n\nIf not all supported branches, which bug introduced the flaw?\nbug 775965 (it's on all supported branches)\n\nDo you have backports for the affected branches? If not, how different, hard to create, and risky will they be?\neasy to make\n\nHow likely is this patch to cause regressions; how much testing does it need?\nI think it's low risk", "author": "tnikkel@gmail.com", "id": 11342935, "time": "2016-04-20T23:04:58Z"}, {"text": "This has sec-approval to go in on May 10, two weeks into the release cycle (We're shipping Firefox 46 next week).\n\nWe'll want to get Aurora, Beta, and ESR45 patches, I expect. You may wish to prepare and nominate them now in order for them to go in following this landing on trunk.", "author": "abillings@mozilla.com", "id": 11349009, "time": "2016-04-22T18:10:35Z"}, {"text": "Can we allow some bake time for this before uplifting? That would make me more comfortable.", "author": "tnikkel@gmail.com", "id": 11349087, "time": "2016-04-22T18:38:23Z"}, {"text": "Sure, we can do that normally. How long were you thinking? I can see a week easily. If you want more, maybe we should move up the checkin (with its associated risks) to May 3.", "author": "abillings@mozilla.com", "id": 11349817, "time": "2016-04-22T23:08:02Z"}, {"text": "I think that would be a good idea.", "author": "tnikkel@gmail.com", "id": 11354555, "time": "2016-04-25T23:47:05Z"}, {"text": "Tracking so that we remember to land this around May 10th and uplift it.", "author": "lhenry@mozilla.com", "id": 11361739, "time": "2016-04-27T17:06:26Z"}, {"text": "May 3 hopefully!", "author": "tnikkel@gmail.com", "id": 11362824, "time": "2016-04-27T21:28:02Z"}, {"text": "Can I land this?", "author": "tnikkel@gmail.com", "id": 11379490, "time": "2016-05-03T22:25:47Z"}, {"text": "Yes, land it.", "author": "abillings@mozilla.com", "id": 11379895, "time": "2016-05-04T01:30:31Z"}, {"text": "the v2 patch has conflicts:\napplying 1265577.patch\npatching file layout/generic/nsSubDocumentFrame.cpp\nHunk #4 FAILED at 982\n1 out of 4 hunks FAILED -- saving rejects to file layout/generic/nsSubDocumentFrame.cpp.rej\npatch failed, unable to continue (try -v)\npatch failed, rejects left in working directory\nerrors during apply, please fix and qrefresh 1265577.patch\n\ndoes this need to be checkedin with the interdiff ?", "author": "cbook@mozilla.com", "id": 11380438, "time": "2016-05-04T08:16:01Z"}, {"text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/6eb3ce095a70f5a450dc321df946e0054be2bb79", "author": "tnikkel@gmail.com", "id": 11383033, "time": "2016-05-04T21:13:56Z"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/6eb3ce095a70", "author": "ryanvm@gmail.com", "id": 11386132, "time": "2016-05-05T19:07:19Z"}, {"text": "Hi Tim, could you please nominate patches for uplift to Beta47, Aurora48, ESR45? Thanks!", "author": "rkothari@mozilla.com", "id": 11398317, "time": "2016-05-10T22:08:03Z"}, {"text": "Created attachment 8751039\npatch for beta\n\nAurora should be able to the patch from central. Beta had some conflicts.", "author": "tnikkel@gmail.com", "id": 11398721, "time": "2016-05-11T00:29:25Z"}, {"text": "Created attachment 8751040\npatch for esr45\n\nThis touches a lot of the same lines as bug 1261230. Rather than re-write the patch we should just uplift bug 1261230, I think that is the least risky option. I will nominate bug 1261230 for uplift.", "author": "tnikkel@gmail.com", "id": 11398724, "time": "2016-05-11T00:31:48Z"}, {"text": "Comment on attachment 8743558\npatch v2\n\nApproval Request Comment\n[Feature/regressing bug #]: bug 775965\n[User impact if declined]: potentially security crashes\n[Describe test coverage new/current, TreeHerder]: not specifically for this problem because I haven't been successful reproducing it.\n[Risks and why]: this is the least risky way of fixing this problem.\n[String/UUID change made/needed]: none", "author": "tnikkel@gmail.com", "id": 11398737, "time": "2016-05-11T00:35:41Z"}, {"text": "Comment on attachment 8751039\npatch for beta\n\nApproval Request Comment\n[Feature/regressing bug #]: bug 775965\n[User impact if declined]: potentially security crashes\n[Describe test coverage new/current, TreeHerder]: not specifically for this problem because I haven't been successful reproducing it.\n[Risks and why]: this is the least risky way of fixing this problem.\n[String/UUID change made/needed]: none", "author": "tnikkel@gmail.com", "id": 11398738, "time": "2016-05-11T00:36:32Z"}, {"text": "Comment on attachment 8751040\npatch for esr45\n\n[Approval Request Comment]\nIf this is not a sec:{high,crit} bug, please state case for ESR consideration:\nUser impact if declined: sec-crit\nFix Landed on Version: 49\nRisk to taking this patch (and alternatives if risky): this is the least risky way of fixing this problem.\nString or UUID changes made by this patch: none\n\nSee https://wiki.mozilla.org/Release_Management/ESR_Landing_Process for more info.", "author": "tnikkel@gmail.com", "id": 11398745, "time": "2016-05-11T00:37:30Z"}, {"text": "Comment on attachment 8743558\npatch v2\n\nSec-crit, Aurora48+", "author": "rkothari@mozilla.com", "id": 11401455, "time": "2016-05-11T20:21:05Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-aurora/rev/efacf499e4b5", "author": "cbook@mozilla.com", "id": 11402518, "time": "2016-05-12T05:29:09Z"}, {"text": "https://hg.mozilla.org/releases/mozilla-beta/rev/5d7bbfed978a2e0aceff2bbdd8c8d72f5137081d", "author": "cbook@mozilla.com", "id": 11402728, "time": "2016-05-12T07:42:01Z"}, {"text": "Comment on attachment 8751040\npatch for esr45\n\nSec-critical, it will ship with 47, let's get this into esr45.", "author": "lhenry@mozilla.com", "id": 11442513, "time": "2016-05-26T22:12:09Z"}, {"text": "  https://hg.mozilla.org/releases/mozilla-esr45/rev/ee870911fabb", "author": "cbook@mozilla.com", "id": 11443391, "time": "2016-05-27T06:58:49Z"}], "id": 1265577, "priority": "--", "cc": ["abillings@mozilla.com", "cbook@mozilla.com", "jmathies@mozilla.com", "mark@wolfbeast.com", "mats@mozilla.com", "mwobensmith@mozilla.com", "rkothari@mozilla.com", "tnikkel@gmail.com", "twsmith@mozilla.com"], "cf_crash_signature": "", "cf_status_thunderbird_esr52": "---", "is_cc_accessible": true, "version": "17 Branch", "cf_tracking_firefox49": "+", "cf_tracking_firefox47": "+", "see_also": [], "last_change_time": "2016-09-23T00:22:28Z", "cf_platform_rel": "---", "product": "Core", "cf_fx_iteration": "---", "blocks": [775965, 1259572, 1261175], "qa_contact": "", "cf_tracking_firefox48": "+", "creation_time": "2016-04-18T23:22:41Z", "cf_status_firefox_esr52": "---", "cf_tracking_firefox_esr45": "47+", "assigned_to_detail": {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, "cf_status_firefox49": "fixed", "cf_status_firefox48": "fixed", "groups": [], "cf_status_firefox60": "---", "target_milestone": "mozilla49", "cf_status_firefox47": "fixed", "cf_status_firefox46": "wontfix", "cf_rank": null, "cf_tracking_firefox_esr52": "---", "url": "", "cf_tracking_firefox59": "---", "creator_detail": {"email": "tnikkel@gmail.com", "id": 255010, "name": "tnikkel@gmail.com", "real_name": "Timothy Nikkel (:tnikkel)"}, "whiteboard": "[post-critsmash-triage][adv-main47+][adv-esr45.2+]", "mentors": [], "summary": "don't rely on the views we stash when we destroy a subdocument frame to stick around", "alias": null, "dupe_of": null, "flags": [{"status": "-", "name": "qe-verify", "modification_date": "2016-05-27T18:16:29Z", "type_id": 864, "creation_date": "2016-05-27T18:16:29Z", "id": 1401939, "setter": "mwobensmith@mozilla.com"}], "cf_tracking_firefox58": "---", "assigned_to": "tnikkel@gmail.com", "is_open": false, "cf_qa_whiteboard": "", "history": [{"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8742549, "added": "review?(mats@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2016-04-18T23:28:31Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "crash, csectype-uaf"}, {"removed": "", "field_name": "cc", "added": "twsmith@mozilla.com"}], "who": "twsmith@mozilla.com", "when": "2016-04-19T21:23:16Z"}, {"changes": [{"removed": "core-security", "field_name": "groups", "added": "gfx-core-security"}], "who": "twsmith@mozilla.com", "when": "2016-04-19T21:24:38Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "sec-critical"}], "who": "twsmith@mozilla.com", "when": "2016-04-19T22:06:16Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "tnikkel@gmail.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(tnikkel@gmail.com)"}], "who": "mats@mozilla.com", "when": "2016-04-20T01:55:22Z"}, {"changes": [{"removed": "needinfo?(tnikkel@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "tnikkel@gmail.com", "when": "2016-04-20T02:21:15Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mats@mozilla.com)", "attachment_id": 8742549, "added": "review+"}], "who": "mats@mozilla.com", "when": "2016-04-20T16:49:45Z"}, {"changes": [{"field_name": "attachments.isobsolete", "removed": "0", "attachment_id": 8742549, "added": "1"}], "who": "tnikkel@gmail.com", "when": "2016-04-20T22:11:29Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8743559, "added": "review?(mats@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2016-04-20T22:12:06Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8743558, "added": "review+"}], "who": "mats@mozilla.com", "when": "2016-04-20T22:54:54Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "review?(mats@mozilla.com)", "attachment_id": 8743559, "added": "review+"}], "who": "mats@mozilla.com", "when": "2016-04-20T22:55:24Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8743558, "added": "sec-approval?"}], "who": "tnikkel@gmail.com", "when": "2016-04-20T23:04:58Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "abillings@mozilla.com"}, {"removed": "", "field_name": "whiteboard", "added": "[checkin on 5/10]"}, {"removed": "---", "field_name": "cf_status_firefox45", "added": "wontfix"}, {"removed": "---", "field_name": "cf_status_firefox46", "added": "wontfix"}, {"removed": "---", "field_name": "cf_status_firefox47", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox48", "added": "affected"}, {"removed": "---", "field_name": "cf_status_firefox_esr45", "added": "affected"}], "who": "abillings@mozilla.com", "when": "2016-04-22T18:10:35Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "sec-approval?", "attachment_id": 8743558, "added": "sec-approval+"}], "who": "abillings@mozilla.com", "when": "2016-04-22T18:10:47Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1259572"}], "who": "tnikkel@gmail.com", "when": "2016-04-25T23:47:51Z"}, {"changes": [{"removed": "", "field_name": "blocks", "added": "1261175"}], "who": "tnikkel@gmail.com", "when": "2016-04-25T23:48:10Z"}, {"changes": [{"removed": "---", "field_name": "cf_tracking_firefox47", "added": "+"}, {"removed": "---", "field_name": "cf_tracking_firefox48", "added": "+"}, {"removed": "---", "field_name": "cf_tracking_firefox49", "added": "+"}, {"removed": "---", "field_name": "cf_status_firefox49", "added": "affected"}], "who": "lhenry@mozilla.com", "when": "2016-04-27T17:06:26Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "jmathies@mozilla.com"}], "who": "tnikkel@gmail.com", "when": "2016-05-02T18:14:11Z"}, {"changes": [{"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(abillings@mozilla.com)"}], "who": "tnikkel@gmail.com", "when": "2016-05-03T22:25:47Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}, {"removed": "[checkin on 5/10]", "field_name": "whiteboard", "added": "[checkin on 5/3]"}, {"removed": "needinfo?(abillings@mozilla.com)", "field_name": "flagtypes.name", "added": ""}], "who": "abillings@mozilla.com", "when": "2016-05-04T01:30:31Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}, {"removed": "", "field_name": "cc", "added": "cbook@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(tnikkel@gmail.com)"}], "who": "cbook@mozilla.com", "when": "2016-05-04T08:16:01Z"}, {"changes": [{"removed": "needinfo?(tnikkel@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "tnikkel@gmail.com", "when": "2016-05-04T21:13:56Z"}, {"changes": [{"removed": "NEW", "field_name": "status", "added": "RESOLVED"}, {"removed": "", "field_name": "resolution", "added": "FIXED"}, {"removed": "---", "field_name": "target_milestone", "added": "mozilla49"}, {"removed": "[checkin on 5/3]", "field_name": "whiteboard", "added": ""}, {"removed": "", "field_name": "cf_last_resolved", "added": "2016-05-05 12:07:19"}, {"removed": "affected", "field_name": "cf_status_firefox49", "added": "fixed"}], "who": "ryanvm@gmail.com", "when": "2016-05-05T19:07:19Z"}, {"changes": [{"removed": "gfx-core-security", "field_name": "groups", "added": "core-security-release"}], "who": "dveditz@mozilla.com", "when": "2016-05-10T18:07:12Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "rkothari@mozilla.com"}, {"removed": "", "field_name": "flagtypes.name", "added": "needinfo?(tnikkel@gmail.com)"}], "who": "rkothari@mozilla.com", "when": "2016-05-10T22:08:03Z"}, {"changes": [{"removed": "needinfo?(tnikkel@gmail.com)", "field_name": "flagtypes.name", "added": ""}], "who": "tnikkel@gmail.com", "when": "2016-05-11T00:29:25Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8743558, "added": "approval-mozilla-aurora?"}], "who": "tnikkel@gmail.com", "when": "2016-05-11T00:35:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8751039, "added": "approval-mozilla-beta?"}], "who": "tnikkel@gmail.com", "when": "2016-05-11T00:36:32Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "", "attachment_id": 8751040, "added": "approval-mozilla-esr45?"}], "who": "tnikkel@gmail.com", "when": "2016-05-11T00:37:30Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-aurora?", "attachment_id": 8743558, "added": "approval-mozilla-aurora+"}], "who": "rkothari@mozilla.com", "when": "2016-05-11T20:21:05Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-beta?", "attachment_id": 8751039, "added": "approval-mozilla-beta+"}], "who": "rkothari@mozilla.com", "when": "2016-05-11T20:21:28Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox48", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-05-12T05:29:09Z"}, {"changes": [{"removed": "affected", "field_name": "cf_status_firefox47", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-05-12T07:42:01Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "regression"}, {"removed": "", "field_name": "blocks", "added": "775965"}, {"removed": "---", "field_name": "cf_tracking_firefox_esr45", "added": "47+"}], "who": "dveditz@mozilla.com", "when": "2016-05-20T22:23:41Z"}, {"changes": [{"field_name": "flagtypes.name", "removed": "approval-mozilla-esr45?", "attachment_id": 8751040, "added": "approval-mozilla-esr45+"}], "who": "lhenry@mozilla.com", "when": "2016-05-26T22:12:09Z"}, {"changes": [{"removed": "", "field_name": "keywords", "added": "checkin-needed"}], "who": "abillings@mozilla.com", "when": "2016-05-27T03:32:18Z"}, {"changes": [{"removed": "checkin-needed", "field_name": "keywords", "added": ""}, {"removed": "affected", "field_name": "cf_status_firefox_esr45", "added": "fixed"}], "who": "cbook@mozilla.com", "when": "2016-05-27T06:58:49Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mwobensmith@mozilla.com"}, {"removed": "", "field_name": "whiteboard", "added": "[post-critsmash-triage]"}, {"removed": "", "field_name": "flagtypes.name", "added": "qe-verify-"}], "who": "mwobensmith@mozilla.com", "when": "2016-05-27T18:16:29Z"}, {"changes": [{"removed": "[post-critsmash-triage]", "field_name": "whiteboard", "added": "[post-critsmash-triage][adv-main47+][adv-esr45.2+]"}], "who": "abillings@mozilla.com", "when": "2016-05-27T20:27:22Z"}, {"changes": [{"removed": "", "field_name": "cc", "added": "mark@wolfbeast.com"}], "who": "dveditz@mozilla.com", "when": "2016-06-13T22:44:07Z"}, {"changes": [{"removed": "unspecified", "field_name": "version", "added": "17 Branch"}], "who": "ryanvm@gmail.com", "when": "2016-07-08T21:53:55Z"}, {"changes": [{"removed": "core-security-release", "field_name": "groups", "added": ""}], "who": "dveditz@mozilla.com", "when": "2016-09-23T00:22:28Z"}], "resolution": "FIXED", "op_sys": "Unspecified", "cf_fx_points": "---", "cf_blocking_fennec": "---"}